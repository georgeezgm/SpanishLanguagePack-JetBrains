clang.tidy.update.notification.title=Actualización de Clang-Tidy realizada
clang.tidy.update.notification.message={0} nuevo {1,choice,1\#inspection|2\#inspection} agregado{1,choice,1\#was|2\#inspect}
clang.tidy.update.review.new.checks.link=Revisar
clang.tidy.update.new.checks.dialog.title=Insertar cheques
clang.tidy.update.check.enabled.column.title=Habilitado
clang.tidy.update.check.name.column.title=Nombre de inspección
clang.tidy.update.go.to.help.page=Ver la página de ayuda
clang.tidy.update.settings.override=El archivo .clang-tidy puede sobrescribir la configuración de escaneo predeterminada del IDE
configurable.naming.convention.header.guard.style=Estilo de protección de encabezado\:
configurable.naming.convention.several.rules.hint=Si hay varias reglas para un tipo de entidad, se usa la última regla de la lista.
configurable.clangTidy.executable=Especificar ejecutable Clang-Tidy
configurable.clangTidy.checks.hint=Lista de verificación de habilitado/deshabilitado separado por comas
configurable.clangTidy.prefer.files.over.ide.settings=Prefiero los archivos .clang-tidy sobre la configuración IDE
configurable.clangTidy.checks.options.button=Configurar las opciones de verificación de Clang-Tidy...
configurable.clangTidy.use.external.binary.checkbox=Usar Clang-Tidy externo en lugar de la herramienta predeterminada\:
configurable.clangTidy.use.external.binary.path=Ruta Clang-Tidy
configurable.clangTidy.checks.options.dialog.title=Configurar las opciones de verificación de Clang-Tidy
configurable.clangTidy.checks.options.example.hint=Yes\: Options - modernize-use-nullptr.NullMacros, Value - NULL_MACRO
configurable.clangTidy.checks.options.learnMore.button=Más información
configurable.clangTidy.checks.options.option.column=Opciones
configurable.clangTidy.checks.options.value.column=Valor
configurable.clangTidy.min.supported.clangTidy.version=Nota\: Se admiten Clang-Tidy 7.0.0 y versiones posteriores.
configurable.clangTool.version.task.title=Comprobando versión {0}
configurable.clangTool.version.checking=Versión {0} predeterminada\: Comprobando...
configurable.clangTool.version={0} versión\: {1} predeterminada
configurable.clangTool.revision.internal=Revisión\: {0}
configurable.clangTool.revision=Revisión de LLVM\: {0}
configurable.clangTool.version.unable.check=La versión {0}\:no se puede comprobar
configurable.clangTidy.example.link=Sí
configurable.clangTidyMisra.c.checks=Comprobaciones C
configurable.clangTidyMisra.c.format=formato\: ''clion-misra-c2012-X-Y''
configurable.clangTidyMisra.cpp.checks=Comprobaciones de C++
configurable.clangTidyMisra.cpp.format=formato\: ''clion-misra-cpp2008-X-Y-Z''
configurable.clangTidyMisra.confluence.link=Comprobaciones admitidas
clang.tidy.check.for.update.task=Comprobando la actualización de Clang-Tidy
inspection.argument.selection.defects.display.name=Defecto de selección de argumento
inspection.argument.selection.defects.checkbox=Comprobar parámetros/argumentos con nombres cortos (menos de 3 símbolos)
inspection.argument.selection.defects.quick.fix=Convertir argumentos
inspection.empty.decl.or.stmt.display.name=Declaración o sintaxis vacía
inspection.clangTidy.name=Clang-Tidy
inspection.clangTidy.message=Clang-Tidy\: {0}
inspection.clangTidy.open.settings.action=Configuración abierta
inspection.clangTidy.suppress.check.for.line=Suprimir {0} para la línea
inspection.clangTidy.suppress.for.line=Suprimir línea
inspection.clangTidy.not.found=No se pudo encontrar Clang-Tidy o no se pudo ejecutar.
inspection.clangTidy.failed=No se pudo ejecutar Clang-Tidy. {0}
inspection.disable.clangTidy.check=Desactivar {0} inspección
inspection.disable.all.clangTidy.checks=Desactivar todas las {0} inspecciones
inspection.naming.convention.edit.settings.link=Editar configuración de estilo de código
inspection.naming.convention.rename.fix=Se renombró como {0}
inspection.naming.convention.rename.header.guard.fix=Cambiar el nombre de la protección del encabezado a {0}
inspection.context.sensitive.analysis=Análisis basado en contexto
inspection.global.unused.analysis=Análisis global no utilizado
inspection.inconsistent.naming=Nomenclatura inconsistente
inspection.preprocessor.comment.display.name=Comentarios de directiva de preprocesador
inspection.preprocessor.comment.quick.fix=Editar comentarios
inspection.general=Normal
inspection.modern.syntax=Puede usar la última sintaxis.
inspection.loop.condition.is.not.updated=La condición del bucle no se actualiza dentro del bucle.
inspection.arc.issues=Problemas de ARC
inspection.sending.dealloc=Enviar ''dealloc''
inspection.assign.in.condition.with.self=''\='' en expresión condicional con "sí mismo"
inspection.usage.of.api.unavailable=La ubicación de uso de API disponible no está disponible en el destino de implementación
inspection.deprecated.api=Uso de API obsoleta
inspection.assign.in.condición=''\='' en expresión condicional
inspection.kr.unspecified.parameters=Pasar argumentos a una función con sintaxis de parámetro no especificada con K y R
inspection.hiding.non.virtual.function=Ocultar funciones no virtuales
inspection.constant.conditions=Condiciones constantes
inspection.unused.code=Código no utilizado
inspection.non.localized.string=Cadena no localizada
inspection.simplifiable.statement=Sintaxis simplificable
inspection.simplify=Simplificar {0}
inspection.replace.enable_if.with.require=Reemplace enable_if con requerido
inspection.simplify.condition=Simplifique la "condición \=\= verdadera"
inspection.simplify.ternary=Simplifique "condición1? verdadero\: condición2"
inspection.not.released.var=Un comunicado debe estar en dealloc o uno de sus destinatarios.
inspection.works.only.when.clangd.disabled.hint=Solo puede ajustar las inspecciones cuando Clangd está apagado.
unused.inspection.run.in.headers=Ejecutar inspección en archivos de encabezado
clang.based.inspection.arc.and.properties=ARC y @properties
clang.based.inspection.lexical.or.preprocessor.issue=Problema de vocabulario o preprocesador
clang.based.inspection.api.notes.issue=Problema de notas de API
clang.based.inspection.openmp.issue=Problema de OpenMP
clang.based.inspection.vtable.issue=Problema de ABI de VTable
clang.based.inspection.coroutines.issue=Problema de corrutinas
clang.based.inspection.concepts.issue=Problemas de concepto
clang.based.inspection.dependency.directive.source.minimization.issue=Un problema de minimización de fuente de directiva de dependencia
open.clangd.settings.link=Abrir configuración de Clangd
inspection.message.modern.syntax.can.be.used=Puede usar la última sintaxis
inspection.message.non.localized.string=Cadena no localizada\: {0}
inspection.message.not.released.in.dealloc.method={0} no se publicó con el método ''dealloc''
inspection.message.misses.call.to.super.dealloc.at.last.statement=Falta la llamada de [super dealloc] en la última declaración de la {0}
intention.family.name.add.call.to.super.dealloc=Agregar llamada a [super dealloc]
intention.family.name.delete.method=Eliminar método
inspection.message.never.used={0} es {1,choice, 0\# asignado pero no se accede en absoluto|1\# no se utiliza en absoluto}
inspection.display.name.simplifiable.statement=Sintaxis simplificada
checkbox.simplify.if.true.while.false=Simplificar "if (true)", "while (false)"
checkbox.simplify.condition.true=Simplificar "condition \=\= true"
checkbox.simplify.condition1.true.condition2=Simplificar "condition1 ? true\: condition2"
checkbox.simplify.if.condition1.return.true.return.condition2="si (condición1) devuelve verdadero; devuelve condición2;" 단순화
intention.family.name.simplify={0} Simplificar
intention.family.name.simplify.expression=Simplificar expresiones
intention.name.simplify=Simplificar {0}
inspection.name.unconstrained.variable.type=Tipo de variable sin restricciones
inspection.display.name.virtual.call.from.constructor.or.destructor=Llamada virtual desde constructor o destructor
inspection.name.misra.checks=Comprobaciones MISRA
inspection.clazy.name=Clazy
inspection.clazy.message=Clazy\: {0}
configurable.clazy.checks.link=prueba clara
inspection.clazy.not.found=clazy-standalone no se puede encontrar ni ejecutar
quick.fix.place.parentheses.around=Coloca paréntesis alrededor
quick.fix.send.release.message.instead.dealloc=Envíe el mensaje "release" en lugar de "dealloc"
quick.fix.append.nil.argument=Agregue el argumento "nil"
quick.fix.remove.extra.declarators=Eliminar declaradores adicionales
quick.fix.remove.statement=Eliminar declaración
quick.fix.remove.pure.specifier=Eliminar especificador puro
quick.fix.change.pure.specifier=Cambiar el especificador puro a ''\=0''
quick.fix.remove.from.base.classes.list=Eliminar ''{0}'' de la lista de clases base
quick.fix.remove.redundant.cast=Eliminar conversiones duplicadas
quick.fix.remove.initializer=Eliminar inicializador
quick.fix.insert.keyword=''{0}'' insertar
quick.fix.remove.property=Eliminar propiedad
quick.fix.remove.declaration=Eliminar declaración
inspection.message.unterminated.string.literal=Literal de cadena sin terminar
inspection.message.invalid.suffix.on.raw.string=Sufijo no válido de cadena sin formato
quick.fix.remove.attribute=Eliminar atributo
quick.fix.remove.useless.import=Eliminar declaraciones de importación innecesarias
quick.fix.remove.useless.include=Eliminar la inclusión innecesaria
quick.fix.optimize.imports=Optimizar declaraciones de importación
quick.fix.optimize.includes=Optimizar Incluir
quick.fix.change.format.specifier=Cambiar especificador de formato
quick.fix.remove.arguments=Eliminar argumentos
quick.fix.copy.superclass.from.interface=Copiar superclase de la interfaz
quick.fix.copy.superclass.to.interface=Copiar superclase a la interfaz
quick.fix.remove.superclass=Eliminar superclase
quick.fix.remove.user.defined.getter.method=Eliminar el método getter definido por el usuario
quick.fix.remove.user.defined.setter.method=Eliminar el método de establecimiento definido por el usuario
quick.fix.remove.superclass.reference=Eliminar referencia de superclase
quick.fix.remove.instance.variable.list=Eliminar lista de variables de instancia
quick.fix.remove.protocols.list=Eliminar lista de protocolos
quick.fix.remove.method.body=Eliminar el cuerpo del método
quick.fix.remove.synthesize.dynamic.statement=''@synthesize''/''@dynamic'' Eliminar sintaxis
quick.fix.remove.synthesize.statement=''@synthesize'' Eliminar la sintaxis
quick.fix.remove.accessor=Eliminar Accesor
inspection.message.error.after.macro.substitution=Error después de la sustitución de macro\:
inspection.message.was.not.declared.in={0} no está declarado en {1}
inspection.message.hides.non.virtual.function={0} oculta la función no virtual de {1}
intention.name.make.function.const=establecer {0} en {1, choice, 0\# constante|1\# no constante}
quick.fix.make_default=Establecer {0} como predeterminado
quick.fix.add_return_statement=agregar declaración de devolución
intentions.add.constructor.initializer.for.field=Agregar inicializador de constructor para el campo
intentions.add.initializer=Agregar inicializador
intentions.add.parameters.to.constructor=Agregue {0} como parámetro al constructor
intentions.add.parameter.initWith=Agregar a ''initWith...'' como parámetro...
intentions.check.raw.string=Verificar cadena sin procesar
intentions.add.super.constructor.call=Agregar llamada de constructor predeterminada faltante
intentions.add.super.protocol.by.class=Adoptar el protocolo por clase
intentions.add.super.protocol.by.private.category=Adoptar el protocolo por categoría privada
intentions.add.mofifier='{0}'
intentions.change.arc.attribute=Cambiar atributo ARC
intentions.change.function.signature=Cambiar la firma de la función
intentions.change.type.capitalized=Tipo de cambio
intentions.change.type=Tipo de cambio
intentions.change.visibility=Cambiar visibilidad
intentions.convert.id.to.instance=Reemplazar el tipo de retorno ''id'' con ''instancetype''
intentions.replace.if.else.with.ternary=Reemplazar ''if else'' por ''?\: ''
intentions.replace.ternary.with.if.else=Reemplazar ''?\: '' con '' si más ''
intentions.convert.objc.literal=Convertir a literal Objective-C
intentions.convert.to.instance.variable=Convertir a variable de instancia
intentions.convert.to.property=Convertir en propiedad
intentions.convert.type=tipo de conversión
intentions.create.matching.constructor=Crear constructor que coincida con la clase base
intentions.create.matching.constructor.in=Crear constructor predeterminado a partir de {0}
intentions.create.new.matching.constructor=Crear un nuevo constructor a partir de {0} clases base coincidentes
intentions.create.new.constructor=Crear nuevo constructor ''{0}()''
intentions.predeclare.function={0} predeclare
intentions.create.interface=crear interfaz para {0}
intentions.create.missing.default.switch.case=Crear caso predeterminado faltante
intentions.create.missing.switch.cases=Crear casos de interruptores faltantes
intentions.declare.method.in.interface=Método de declaración en la interfaz
intentions.declare.method.in.private.category=Declarar método en categoría privada
intentions.declare.method.in={0} Declare mi método
intentions.declare.property.as.readwrite=Declarar propiedad en categoría privada como ''readwrite''
intentions.replace.and.with.or=Reemplazar ''\\&\\&'' con ''||''
intentions.replace.or.with.and=Reemplazar ''||'' con ''\\&\\&''
intentions.deMorgan.law=Ley de De Morgan
intentions.declare.member.in=Declarar desde\:
intentions.remove.private.category.message=¿Está seguro de que desea eliminar la categoría privada vacía?
intentions.remove.private.category.title=Eliminar categoría privada
intentions.extract.category=Categoría de extracción para esta clase
intentions.extract.if=''if'' Extraer
intentions.extract.if.with.text=''if ({0})'' Extraer
intentions.extract.private.category=Extraer categoría privada para esta clase
intentions.extract.protocol=Protocolo de extracción para esta clase
intentions.extract.super.class=Extraer clase padre
intentions.extract.super.protocol=Extraer protocolo superior
intentions.flip.operator=Invertir {0}
intentions.flip.operator.to=Invertir {0} a {1}
intentions.flip.binary.operation=Invertir operaciones binarias
intentions.generate.property=Generar propiedad
intentions.implement.required.methods=Implementar métodos requeridos de la interfaz ''{0}''
intentions.create.implementation=Crear implementación de {0}
intentions.implement.method={0} implementación
intentions.implement.accessor.methods=implementación de métodos de acceso
intentions.implement.accessor.methods.for=Implementar el método de acceso para {0}
intentions.cast.expression=expresión de conversión
intentions.introduce.typedef=Insertar typedef
intentions.introduce.typedef.for.type=Inyectar typedef para el tipo {0}
intentions.invert.if.condition=''if'' condición invertida
intentions.merge.if.else=Si más se fusiona
intentions.merge.nested.ifs=Fusionar declaraciones if anidadas
intentions.add.braces.statement=Agregue llaves a la declaración ''{0}''
intentions.remove.braces.statement=Eliminar llaves de la declaración ''{0}''
intentions.migrate.to.arc=Migrar a ARC
intentions.move.instance.variables=Mover las variables de instancia a la implementación
intentions.move.to.interface=Mover a la interfaz
intentions.move.to.private.category=Mover a categoría privada
intentions.import.predeclare.symbol=Importar/predeclare símbolo
intentions.release.variables=Variables de lanzamiento
intentions.remove.suppression=Eliminar supresión
intentions.remove.subj=''{0}'' Eliminar
intentions.remove.unnecessary.parentheses=Eliminar paréntesis innecesarios
intentions.rename.reference=Cambiar el nombre de la referencia
intentions.rename.symbol=Cambiar el nombre del símbolo
intentions.replace.type.with.auto=Reemplazar tipo con ''auto''
intentions.reuse.declaration=Declaración de reutilización
intentions.change.superclass=Cambiar superclase
intentions.split.declaration=Dividir por declaración y asignación
intentions.split.function=Dividir la función en declaración y definición
intentions.split.into.separate.declarations=Dividir en declaraciones separadas
intentions.suppress.for=Suprimir para {0}
intentions.suppress.option.for=Suprima "{0}" para {1}
intentions.suppress.for.statement=suprimir la sintaxis
intentions.suppress.for.method=suprimir para método/función
intentions.suppress.for.file=suprimir para archivo
intentions.surround.with.if.responds=Envolviendo "if ([respondsToSelector\:])"
intentions.switch.property.dot.method=''.'' y notación de método de alternancia
intentions.switch.to.getter.notation=cambiar a la notación del método getter
intentions.switch.to.setter.notation=cambiar a la notación del método del establecedor
intentions.switch.to.dot.notation=cambiar a notación ''. ''
intentions.synthesize.property=Integrar propiedad
intentions.wrap.with.stringFormat=Envuelva con stringWithFormat
intentions.insert.cast.use.modern=Usar el operador de conversión de C++
intentions.split.function.progress.text=Ubicación de las definiciones...
intentions.change.function.const.action=cambio de modificador constante
intentions.change.function.volatile.action=cambio de modificador volátil
intentions.change.gcc.attribute.action=Cambiar atributo ''{0}''
intentions.change.method.signature.add.parameters=Agregar parámetro
intentions.change.method.staticness.action=Crear instancia/clase de método
intentions.change.property.attribute.action=Cambiar atributo de propiedad
intention.name.make.function.volatile=Establezca {0} en {1,choice, 0\# volátil|1\# no volátil}
intention.name.change.type=Cambie el tipo {0,choice, 0\#return |1\#} de {1} a ''{2}''{3}
intention.name.initialize={0} inicialización
intention.name.remove.type.modifier=establecer {0} en no {1}
intention.name.add.constructor.initializer=Agregar inicializador de constructor para {0}
intention.name.change.superclass=Cambiar la superclase de {0} de ''{1}'' a ''{2}''
intention.name.add.last.parameter=Agregar el último parámetro ''{0}'' a {1}
intention.name.remove.last.parameter=Eliminar el último parámetro ''{0}'' de {1}
intention.name.change.signature=Cambiar la firma de {0} a ''{1}''
intention.dialog.message.existing.default.values.removed=Se eliminarán los valores predeterminados existentes para el parámetro en {0}. ¿Te gustaria continuar?
intention.family.name.remove.declaration=Eliminar {1, choice, 0\#{0}|1\#declaration after}
intention.name.safe.delete={0} Eliminación segura
intention.family.name.safe.delete=Eliminación segura
intention.name.remove=Eliminar {0}
intention.family.name.remove=Eliminar {0}
intention.name.leave.initializer=Deje el inicializador después de {0}
intention.family.name.leave.initializer=Deje el inicializador después de la {0}
intention.name.add.type.modifier={0} establecido en {1}
intention.name.reuse.previous.declaration=reutilizar la declaración anterior de {0}
intention.name.rename={0} renombrar
intention.name.rename.reference=Cambiar el nombre de la referencia
intention.name.predeclare.protocol.class=pre-declaración {0, choice, 0\#protocol ''|1\#class ''|2\#struct ''}{1}''
intention.name.change.visibility=Establecer {0} en {1}
intention.name.cast.expression.to=convertir expresión a ''{0}''
intention.family.name.extract.assignment=Extraer asignación
intention.name.class=Clase
intention.name.static=Estático
intention.name.cpp.class=Clase C++
intention.name.create.new.category=Cree una nueva categoría en {0} con {1}
intention.name.create.new=Crear nuevo {0}
intention.name.add.suffix=Agregar sufijo
intention.name.add.call.to.base.constructor=Agregar llamada de constructor predeterminada de ''{0}''
intention.name.make=Establecer {0} en {1}
intention.name.choice.enable.disable=''{1}{0, choice, 0\#'' habilitar |1\#'' inhabilitar} para {2}
intention.name.add.parameters=Agregar parámetro a {0}
intention.name.make.class.method.instance.method=Establezca ''{0}{1,choice, 0\#'' como método de clase|1\#'' como método de instancia}
intention.dialog.message.change.type.as.well=¿Le gustaría cambiar el tipo de ''{0}'' también?
intention.family.name.convert.literal.type=Convertir tipo literal\: add '' @ ''
intention.name.call=Llamar a {0}
intention.name.import.which={0, choice, 0\#which|1\#symbol} ''{1}''
intention.name.import=Importar {0}
intention.name.import.from=Desde {0}
intention.import.popup.title=Símbolos para importar
intention.import.command.name=Importar {0}
intention.name.make.function.virtual={0}\:\:{1} establecido en {2, choice, 0\# pure virtual|1\# virtual}
intention.name.move.declaration=pasar a la declaración de {0}{1}
intention.family.name.remove.extra.initializers=Eliminar inicializadores adicionales
intention.family.name.remove.initializer=Eliminar inicializador
intention.family.name.send.message=Enviar mensaje ''{0}''
intention.family.name.add.return.statement=Agregue la declaración de declaración de return
intention.family.name.simplify.condition=Simplificar la condición para la ''{0}''
intention.name.change.format.specifier=Cambiar el especificador de formato a ''{0}''
intention.family.name.remove.statement=Eliminar declaración
intention.family.name.remove.directive=Eliminar directiva
intention.family.name.simplify.choice=Simplificar {1, choice, 0\#expression|1\#{0}}
intention.family.name.change.type.to.auto=Cambiar tipo ''{0}'' a ''auto''
intention.family.name.change.to.nil='nil'
intention.name.use.constant=Usar constante ''{0}''
intention.family.name.use.enum.constant=Usar constante enum
intention.name.add=Agregar "{0}"
intention.family.name.add.bridge.cast=Agregar puente cast
intention.family.name.make.default=Establezca {0} en el valor predeterminado
inspection.message.condition.always.true=La condición siempre es verdadera
inspection.message.condition.always.false=La condición es siempre falsa
inspection.message.condition.always.true.when.reached=Siempre verdadero cuando se alcanza la condición
inspection.message.condition.always.false.when.reached=Siempre falso cuando se alcanza la condición
inspection.message.reference.may.be.choice.null=La referencia puede ser {0, choice, 0\#nil|1\#null}
inspection.message.infinite.recursion=Recursion infinita
inspection.message.value.never.used=El valor nunca se usa
inspection.message.address.local.variable.may.escape.function=La dirección de la variable local puede escapar de la función
inspection.message.file.too.complex.to.perform.context.sensitive.data.flow.analysis=El archivo es demasiado complejo para realizar un análisis de flujo de datos específico del contexto.
inspection.message.file.too.complex.to.perform.data.flow.analysis=El archivo es demasiado complejo para realizar un análisis de flujo de datos
inspection.message.unreachable.code=Código inalcanzable
inspection.message.endless.loop=Bucle infinito
inspection.group.name.general=General
objective.c=Objective-C
c.cpp=C/C++
progress.text.evaluating.unused.symbols=Evaluación de símbolos no utilizados
intention.name.delete=Eliminar {0}
intention.name.choice.superclass={1, choice, 0\#{0}|1\#} superclase de {2}
intention.name.set.superclass=''{0}'' establecido en {1}
inspection.message.if.statement.has.identical.branches=La declaración ''if'' tiene la misma rama
inspection.message.statement.can.be.simplified=Puede simplificar la sintaxis
inspection.message.expression.can.be.simplified.to=La expresión se puede simplificar a ''{0}''
inspection.option.unused.variable.initializers=Advertir sobre inicializadores de variables obsoletos
intention.family.name.inline.parameter=Parámetros en línea
intention.name.inline={0} en línea
inspection.message.not.updated.in.loop={0} usado en una condición de bucle no se actualizará dentro del bucle
inspection.message.may.point.to.deallocated.memory={0} puede indicar memoria liberada
inspection.message.is.never.used={0} no se utiliza en absoluto
inspection.message.only.assigned.but.never.accessed={0} solo está asignado y nunca se accede a él
inspection.message.calls.unreachable=Todas las llamadas a {0} son inalcanzables
