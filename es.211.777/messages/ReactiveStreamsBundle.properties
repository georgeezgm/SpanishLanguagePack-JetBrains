inspections.nullchecking.null.in.lambda.name=변환 메서드에서 람다로부터 null 또는 null 가능 항목을 반환
inspections.nullchecking.null.in.lambda.description=변환 메서드에서 람다로부터 null 또는 null 가능 항목을 반환합니다.
inspections.publisher.implementation.name=클래스가 Publisher를 구현
inspections.publisher.problem.description=클래스가 Publisher를 구현합니다.
inspections.subscriber.implementation.name=클래스가 Subscriber를 구현
inspections.subscriber.problem.description=클래스가 Subscriber를 구현합니다.
inspections.group.name=공통
inspections.group.name.reactor=Reactor
inspections.unassigned.flux.mono.name=[사용 중단] 대입되지 않은 Flux/Mono 인스턴스
inspections.unfinished.step.verifier.name=완료되지 않은 StepVerifier
inspections.blocking.operator.in.non.blocking.scope.name=블록되지 않은 범위에 있는 블록 연산자 호출
inspections.subscribe.in.non.blocking.scope.name=블록되지 않은 범위에 있는 ''subscribe'' 호출
inspections.blocking.in.non.blocking.quickfix.name=원인 찾기
inspections.blocking.in.non.blocking.quickfix.text={0}에서의 스케줄링으로 인해 블록되지 않은 범위
inspections.blocking.in.non.blocking.quickfix.alternative.text={0}이(가) {1}을(를) 사용하기 때문에 블록되지 않은 범위
inspections.too.long.map.chain.name=너무 긴 동일 메서드 체인
inspections.too.long.map.chain.description={0} 체인이 너무 깁니다. 이로 인해 성능 오버헤드가 발생할 수 있습니다.
inspections.too.long.map.chain.settings.field=허용되는 가장 긴 동일 메서드 체인 길이
inspections.throw.in.operator.name=Reactive 연산자 내 Throw 문
inspections.throw.in.operator.description={0} {1} {2} 내 Throw 문
inspections.unused.publisher.name=사용되지 않는 publisher
inspections.unused.publisher.description=값이 Publisher로 전혀 사용되지 않습니다.
inspections.debug.initialization.name=불필요한 디버그 초기화
intention.collapse.filter.with.previous.name=이전 필터로 축소 표시
intention.collapse.map.with.previous.name=이전 맵으로 축소 표시
intention.collapse.category.key=Reactor/동일 연산자의 호출을 하나의 호출로 축소 표시
settings.is.stack.frame.customization.enabled.field=Reactor 디버그 모드를 활성화합니다. 이 모드는 스택 프레임 사용자 지정을 제공합니다.
settings.debugger.panel.title=디버거
setting.display.name=Transmisión Reactiva
setting.inspections.configuration.title=검사 구성
setting.advanced.non.blocking.analysis=고급 분석을 사용하여 비차단 범위 탐지
setting.advanced.non.blocking.analysis.description=고급 분석을 사용해 subscribeOn 및 publishOn 연산자를 검색하고 처리하여 블록되지 않은 범위를 탐지합니다.
settings.initialization.method.label=애플리케이션 시작 시 실행되는 초기화 메서드\:
settings.initialization.method.hooks=Hooks.onOperatorDebug()
settings.initialization.method.agent=ReactorDebugAgent.init()
settings.initialization.method.details=자세히 알아보기
settings.initialization.method.hooks.link=https\://projectreactor.io/docs/core/release/reference/\#debug-activate
settings.initialization.method.agent.link=https\://projectreactor.io/docs/core/release/reference/\#reactor-tools-debug
settings.initialization.method.agent.comment=io.projectreactor\:reactor-tools가 클래스 경로에 있고 Reactor 버전이 3.3.0 이상인 경우에만 작동합니다.
settings.initialization.method.none=Ninguno
settings.initialization.method.agent.problem.notification=ReactorDebugAgent.init() 호출이 불가능한 경우 알림
intention.replace.all.throw.statements.quickfix.name=람다의 모든 throw를 {0}(으)로 대체
intention.replace.throw.statement.quickfix.name=throw를 {0}(으)로 바꾸기
notifications.agent.impossible.message.pattern={1} 때문에 <b>{0}</b> 구성을 가진 ReactorDebugAgent를 사용할 수 없습니다. <br><a href\="OpenSettings">설정 열기</a><br><a href\="DoNotShowAgain">No mostrar otra vez</a>
notifications.first.debug.message=현재 디버그 구성이 클래스 경로에서 Reactor로 실행 중입니다. Reactor 디버그 모드를 구성하시겠어요?<br><table width\="100%"><tr><td><a href\="OpenSettings">설정 열기</a></td><td><a href\="DoNotShowAgain">No mostrar otra vez</a></td></tr></table>
notifications.first.debug.action.text=Configurar...
notifications.first.debug.title=Reactor 디버그 모드가 활성화됨
notifications.title=Reactor 디버그 모드
notifications.version.error=Reactor 버전이 3.3.0보다 오래되었습니다.
notifications.classpath.error=ReactorDebugAgent가 클래스 경로가 아닙니다.
postfix.template.condition.non.void.name=Reactor
