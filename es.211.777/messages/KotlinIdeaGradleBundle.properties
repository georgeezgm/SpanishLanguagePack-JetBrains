gradle.script.configurations.importing.feature=Gradle 프로젝트를 가져오는 동안 Gradle Kotlin 스크립트 구성 로드
notification.gradle.legacy.firstLoad=Gradle 빌드 구성을 피하기 위해 코드 분석 기능이 비활성화되었습니다.
notification.gradle.legacy.firstLoad.info=<div width\=400><p>스크립트 구성을 가져오려면 Gradle 구성 단계를 실행해야 합니다. 대규모 Gradle 프로젝트의 경우 리소스를 많이 사용할 수 있으므로 기본적으로 비활성화되어 있습니다.</p><p>Gradle Kotlin DSL 스크립트를 평가하려면 ''구성 로드''를 클릭하세요.</p><p>또는 스크립트를 처음 열 때 구성을 자동으로 로드하고 빌드 스크립트 구성 블록이 변경될 때마다 구성을 다시 로드하려면 모든 스크립트에 대해 "자동 다시 로드"를 활성화하세요. 이 옵션은 구성 시간이 긴 대규모 Gradle 프로젝트에는 권장하지 않습니다.</p></div>
notification.gradle.legacy.outsideProject=코드 분석을 사용할 수 없습니다(관련 Gradle 프로젝트가 연결되어 있지 않음).
notification.gradle.legacy.outsideProject.addToStandaloneHelp=<div width\=400><p>IDE에서 이 스크립트를 분석하려면 이 스크립트를 평가하는 Gradle 프로젝트를 가져와야 합니다. 연결된 Gradle 프로젝트를 다시 가져오거나 이 스크립트를 평가하는 새로운 Gradle 프로젝트를 연결하세요.</p><p>또는 이 스크립트를 독립실행형 스크립트에 추가하면 해당 구성이 자동으로 로드됩니다.</p><p><b>참고\:</b> 각 독립실행형 스크립트는 업데이트 시 별도의 Gradle 구성 단계가 실행되어야 합니다. 이는 대규모 Gradle 프로젝트의 경우 리소스가 많이 사용될 수 있습니다.</p></div>
notification.gradle.legacy.standalone.info=<div width\=400><p>이 스크립트를 평가하는 Gradle 프로젝트를 IDE에 가져오지 않았습니다. <br/><p><b>참고\:</b> 각 독립실행형 스크립트는 업데이트 시 별도의 Gradle 구성 단계가 실행되어야 합니다. 이는 대규모 Gradle 프로젝트의 경우 리소스가 많이 사용될 수 있습니다.</p></div>
notification.outsideAnything.text=코드 분석을 사용할 수 없습니다(관련 Gradle 프로젝트가 연결되어 있지 않음).
notification.outsideAnything.linkAction=Gradle 프로젝트 연결
notification.wasNotImportedAfterCreation.193.text=코드 분석을 사용할 수 없습니다(Gradle 프로젝트를 가져오지 않음).
notification.wasNotImportedAfterCreation.text=코드 분석을 사용할 수 없습니다(스크립트 구성이 로드되지 않음).
notification.wasNotImportedAfterCreation.help=<div width\=400><p>Gradle Kotlin DSL 스크립트 구성이 누락되었습니다. 스크립트 코드 분석을 얻으려면 외부 Gradle 프로젝트를 가져오거나 구성을 로드하세요.</p></div>
action.label.import.project=프로젝트 가져오기
action.text.load.script.configurations=스크립트 구성 로드
action.description.load.script.configurations=Gradle Kotlin DSL 스크립트 구성이 변경되었습니다. 외부 Gradle 프로젝트를 가져오지 않고 코드 분석을 얻으려면 변경 내용을 로드하세요.
action.label.enable.auto.import=자동 가져오기 활성화
notification.notEvaluatedInLastImport.193.text=코드 분석을 사용할 수 없습니다(지난 Gradle 프로젝트 가져오기에서 스크립트 구성을 받지 못함).
notification.notEvaluatedInLastImport.text=코드 분석을 사용할 수 없습니다(스크립트 구성을 받지 못함).
notification.notEvaluatedInLastImport.addAsStandaloneAction=독립실행형 스크립트에 추가
notification.notEvaluatedInLastImport.info=<div width\=400><p>IDE에서 이 스크립트를 분석하려면 이 스크립트를 평가하는 Gradle 프로젝트를 가져와야 합니다. 연결된 Gradle 프로젝트를 다시 가져오거나 이 스크립트를 평가하는 새로운 Gradle 프로젝트를 연결하세요.</p><p>또는 이 스크립트를 독립실행형 스크립트에 추가하면 해당 구성이 별도로 로드됩니다.</p><p><b>참고\:</b> 각 독립실행형 스크립트는 업데이트 시 별도의 Gradle 구성 단계가 실행되어야 합니다. 이는 대규모 Gradle 프로젝트의 경우 리소스가 많이 사용될 수 있습니다.</p></div>
notification.standalone.text=독립실행형 스크립트
notification.standalone.disableScriptAction=독립실행형 스크립트에서 제거
notification.standalone.info=<div width\=400><p>이 스크립트의 구성은 Gradle 프로젝트 동기화와 별도로 로드됩니다. <br/><p><b>참고\:</b> 각 독립실행형 스크립트는 업데이트 시 별도의 Gradle 구성 단계가 실행되어야 합니다. 이는 대규모 Gradle 프로젝트의 경우 리소스가 많이 사용될 수 있습니다.</p></div>
notification.invalid.gradle.jvm.configuration.title=잘못된 Gradle JVM 구성 발견
notification.jdk.0.points.to.invalid.jdk=SDK ''{0}''을(를) 수정하세요. Gradle JVM이 잘못된 JDK를 가리킵니다
notification.gradle.jvm.undefined=Gradle JVM 옵션을 설정하세요.
notification.gradle.jvm.0.incorrect=Gradle JVM 옵션이 잘못되었습니다.\n경로\:{0}
action.text.install=Instalar
action.text.show.kotlin.gradle.dsl.logs.in={0}에서 Kotlin Gradle DSL 로그 표시
build.0.project={0} 빌드
change.build.gradle.configuration=build.gradle 구성 변경
standalone.scripts.settings.title=독립실행형 스크립트 관리
standalone.scripts.settings.column.name=경로
gradle.scripts.settings.title=Gradle Kotlin DSL 스크립트
description.text.a.single.platform.kotlin.library.or.application.targeting.javascript=JavaScript를 대상으로 하는 단일 플랫폼 Kotlin 라이브러리 또는 애플리케이션
description.text.a.single.platform.kotlin.library.or.application.targeting.js.for.browser=브라우저용 JavaScript를 대상으로 하는 단일 플랫폼 Kotlin 라이브러리 또는 애플리케이션
description.text.a.single.platform.kotlin.library.or.application.targeting.js.for.node.js=Node.js용 JavaScript를 대상으로 하는 단일 플랫폼 Kotlin 라이브러리 또는 애플리케이션
description.text.a.single.platform.kotlin.library.or.application.targeting.the.jvm=JVM을 대상으로 하는 단일 플랫폼 Kotlin 라이브러리 또는 애플리케이션
description.text.adds.support.for.building.kotlin.projects=Kotlin 프로젝트 빌드 지원을 추가합니다.
description.text.multi.targeted.jvm.js.ios.etc.project.with.shared.code.in.common.modules=공통 모듈에서 공유 코드를 가진 여러 대상(JVM, JS, iOS 등) 프로젝트. 대상은 프로젝트의 빌드 스크립트에서 구성할 수 있습니다.
description.text.multiplatform.gradle.project.allowing.reuse.of.the.same.kotlin.code.between.android.and.ios.mobile.platforms=Android와 iOS 모바일 플랫폼 간에 동일한 Kotlin 코드를 재사용할 수 있는 멀티플랫폼 Gradle 프로젝트
description.text.multiplatform.gradle.project.allowing.reuse.of.the.same.kotlin.code.between.js.client.and.jvm.server=JS 클라이언트와 JVM 서버 간에 동일한 Kotlin 코드를 재사용할 수 있는 멀티플랫폼 Gradle 프로젝트
description.text.multiplatform.gradle.project.allowing.reuse.of.the.same.kotlin.code.between.two.mobile.platforms.jvm.android.and.native=두 가지 모바일 플랫폼(JVM/Android 및 Native) 간에 동일한 Kotlin 코드를 재사용할 수 있는 멀티플랫폼 Gradle 프로젝트
description.text.multiplatform.jvm.js.native=모든 세 가지 주요 플랫폼(JVM, JS, Native) 간에 동일한 Kotlin 코드를 재사용할 수 있는 멀티플랫폼 Gradle 프로젝트
error.text.cannot.find.build.gradle.file.for.module=모듈 {0}에 대한 build.gradle 파일을 찾을 수 없습니다.
error.text.coroutines.support.requires.version.1.1.or.later.of.the.kotlin.runtime.library=코루틴 지원에는 Kotlin 런타임 라이브러리 1.1 및 이후 버전이 필요합니다. 빌드 스크립트의 버전을 업데이트하세요.
error.text.different.kotlin.gradle.version=Gradle({0})과 함께 빌드에 사용되는 Kotlin 버전이 IDE 플러그인({1})에 번들로 제공되는 플러그인과 다릅니다({1}).
error.text.different.kotlin.library.version=플러그인 버전({0})이 라이브러리 버전({1})과 동일하지 않습니다.
error.text.failed.to.load.script.definitions.by={0}을(를) 사용한 스크립트 정의를 로드하지 못했습니다.
error.text.highlighting.is.impossible.during.gradle.import=Gradle 가져오기 중에는 강조 표시할 수 없습니다.
error.text.invalid.gradle.libraries.directory=잘못된 Gradle 라이브러리 디렉터리 {0}
error.text.missing.jars.in.gradle.directory=Gradle 디렉터리에서 jar가 누락되었습니다.
error.text.project.isn.t.linked.with.gradle=프로젝트 ''{0}''이(가) Gradle과 연결되어 있지 않습니다.
error.text.support.requires.version={0} 지원에는 Kotlin 런타임 라이브러리 {1} 및 이후 버전이 필요합니다. 빌드 스크립트의 버전을 업데이트하세요.
error.text.this.language.feature.requires.version=이 언어 기능에는 Kotlin 런타임 라이브러리 {0} 및 이후 버전이 필요합니다. 빌드 스크립트의 버전을 업데이트하세요.
error.text.unable.to.get.gradle.home.directory=Gradle 홈 디렉터리를 얻을 수 없습니다.
title.plugin.suggestion=Sugerencias de complementos
notification.text.native.debug.provides.debugger.for.kotlin.native=네이티브 디버그는 Kotlin/Native용 디버거를 제공합니다
presentable.text.java.with.gradle=Gradle을 사용한 Java
presentable.text.javascript.with.gradle=Gradle을 사용한 JavaScript
presentable.text.js.client.and.jvm.server.gradle=JS 클라이언트 및 JVM 서버 | Gradle
presentable.text.mobile.android.ios.gradle=모바일 Android/iOS | Gradle
presentable.text.mobile.shared.library.gradle=모바일 공유 라이브러리 | Gradle
presentable.text.multiplatform.library.gradle=멀티플랫폼 라이브러리 | Gradle
text.couldn.t.configure.kotlin.gradle.plugin.automatically=kotlin-gradle 플러그인을 자동으로 구성할 수 없습니다.
text.default.kotlin.gradle.script=디폴트 Kotlin Gradle 스크립트
text.gradle.dsl.logs.cannot.be.found.automatically.see.how.to.find.logs=Gradle DSL 로그를 자동으로 찾을 수 없습니다.<br/>로그 찾는 방법은 <a href\="{0}">여기</a>에서 참조하세요.
text.see.manual.installation.instructions=수동 설치 지침은 <a href\="https\://kotlinlang.org/docs/reference/using-gradle.html">여기</a>에서 참조하세요.
text.was.modified={0}이(가) 수정되었습니다.
title.configure.kotlin.gradle.plugin=Kotlin-Gradle 플러그인 구성
title.kotlin.build.script=Gradle Kotlin DSL 스크립트 오류
title.update.language.version=언어 버전 업데이트
display.name.kotlin.multiplatform=Kotlin/멀티플랫폼
display.name.kotlin.jvm=Kotlin/JVM
display.name.kotlin.js.for.node.js=Kotlin/JS(Node.js용)
display.name.kotlin.js.for.browser=Kotlin/JS(브라우저용)
comman.name.configure.kotlin=Kotlin 구성
command.name.configure.0={0} 설정
notification.title.script.configuration.has.been.changed=스크립트 구성이 변경되었습니다.
notification.text.script.configuration.has.been.changed=변경 내용을 로드하려면 Gradle 프로젝트를 가져와야 합니다.
