fork.mode.label=포크 모드(&F)\:
fork.mode.name=포크 모드
fork.mode.none=없음
fork.mode.method=메서드
fork.mode.class=클래스
fork.mode.repeat=반복

repeat.label=반복(&R)\:
repeat.name=반복
repeat.count.label=반복 횟수(&R)\:
repeat.once=한 번
repeat.n.times=N회
repeat.until.failure=실패 시까지
repeat.until.stopped=중단 시까지

search.scope.name=테스트 검색
search.scope.project=전체 프로젝트
search.scope.module=단일 모듈
search.scope.module.deps=모듈 종속 요소 전체

test.group=테스트
#possible run targets
category.label=카테고리
change.list.label=변경 목록
directory.label=경로
pattern.label=패턴
tag.expression.label=태그 표현식
uniqueid.label=UniqueId

#actions
action.AddToISuite.text=JUnit 패턴 스위트에 추가
action.excludeFromSuite.text=스위트에서 제외
action.text.test.unknown.target=알 수 없음
action.text.test.category={0} 테스트
action.text.test.tags={0} 테스트

unused.declaration.junit.test.entry.point=Junit 테스트 케이스
test.discovery.by.all.changes.combo.item=모두
module.does.not.exists=프로젝트 ''{1}''에 모듈 ''{0}''이(가) 없습니다
junit.configuration.description=JUnit 테스트 구성
junit.configuration.class.label=클래스(&C)\:
no.pattern.error.message=선택된 패턴이 없습니다
junit.configuration.method.label=메서드(&E)\:
default.junit.config.name.whole.project=전체 프로젝트
default.junit.config.name.all.in.module={0}의 전부
default.junit.configuration.name=<이름 없음>
default.junit.config.name.all.in.package.in.module={1}의 {0}
default.junit.config.name.temp.suite=임시 스위트
default.junit.config.name.tags=태그({0})
default.junit.config.empty.category=올바르지 않음
default.junit.config.name.category=@Category({0})
junit.configuration.in.single.module.radio=단일 모듈에서(&I)
no.test.class.specified.error.text=테스트 클래스가 지정되지 않았습니다
directory.not.found.error.message=디렉터리 ''{0}''을(를) 찾을 수 없습니다
junit5.valid.parameterized.configuration.display.name=JUnit 5 잘못된 형식의 매개변수화된 테스트
junit5.malformed.repeated.test.display.name=JUnit 5 잘못된 형식의 반복 테스트
junit5.nested.test.display.name=JUnit 5 잘못된 형식의 @Nested 클래스
junit5.malformed.nested.class.inspection.description=@Nested 테스트 클래스로는 비 정적 중첩 클래스만을 사용할 수 있습니다.
junit5.malformed.repetition.description.injected.for.test=RepetitionInfo는 @Test 메서드에 삽입되지 않습니다
junit5.malformed.repetition.description.injected.for.each=RepetitionInfo는 @BeforeEach/@AfterEach에만 삽입되고 {0}에는 삽입되지 않습니다
junit5.malformed.repetition.description.injected.for.repeatedtest=RepetitionInfo는 @RepeatedTest에만 삽입됩니다
junit5.malformed.repetition.description.positive.number=반복 횟수는 0보다 커야 합니다
junit5.malformed.repetition.description.suspicious.combination=의심스러운 조합의 @Test 및 @RepeatedTest
junit5.malformed.parameterized.inspection.description.method.source.static=메서드 소스 ''{0}''의 경우 항상 static이어야 합니다
junit5.malformed.parameterized.inspection.description.method.source.no.params=메서드 소스 ''{0}''에는 매개변수가 포함될 수 없습니다
junit5.malformed.parameterized.inspection.description.method.source.return.type=메서드 소스 ''{0}''에는 다음 반환 타입 중 하나가 포함되어야 합니다. Stream<?>, Iterator<?>, Iterable<?> 또는 Object[]
junit5.malformed.parameterized.inspection.description.method.source.assignable={0} 타입의 객체를 {1} 타입으로 변환하는 묵시적 변환이 없습니다
junit5.malformed.parameterized.inspection.description.method.source.unresolved=대상 메서드 소스를 확인할 수 없습니다. ''{0}''
junit5.malformed.parameterized.inspection.description.duplicated.enum=중복 열거형 상수 이름
junit5.malformed.parameterized.inspection.description.unresolve.enum=열거형 상수 참조를 확인할 수 없습니다.
junit5.malformed.parameterized.inspection.description.wrapped.in.arguments=여러 매개변수는 인수로 감싸야 합니다
junit5.malformed.parameterized.inspection.description.file.source=파일 소스를 해결할 수 없습니다. ''{0}''
junit5.malformed.parameterized.inspection.description.no.value.source.is.defined=정의된 값 소스가 없습니다
junit5.malformed.parameterized.inspection.description.exactly.one.type.of.input.must.be.provided=입력 타입은 정확히 하나만 제공되어야 합니다
junit5.malformed.parameterized.inspection.description.suspicious.combination=의심스러운 조합의 @Test 및 매개변수화된 소스
junit5.malformed.parameterized.inspection.description.multiple.parameters.are.not.supported.by.this.source=이 소스는 여러 매개변수를 지원하지 않습니다
junit5.malformed.parameterized.inspection.description.no.sources.are.provided=제공된 소스가 없어 스위트가 공백으로 남습니다
junit5.malformed.parameterized.inspection.description.suspicious.combination.test.and.parameterizedtest=의심스러운 조합의 @Test 및 @ParameterizedTest
junit5.malformed.parameterized.fix.text={0}로 변경
junit5.malformed.parameterized.fix.family.name=어노테이션 바꾸기
create.setup.dialog.message=메서드 setUp이 이미 있지만 {0}(으)로 어노테이션이 추가되지 않았습니다. 어노테이션을 추가하시겠어요?
junit.configuration.display.name=JUnit
class.isnt.inheritor.of.testcase.error.message={0}은(는) TestCase의 상속자가 아닙니다
cannot.browse.test.inheritors.dialog.title=TestCase 상속자를 찾을 수 없음
junit.configuration.package.label=패키지(&G)\:
create.setup.dialog.title=setUp 메서드 생성
junit.not.found.in.module.error.message=모듈 ''{0}''에서 JUnit을 찾을 수 없습니다
junit.configuration.across.module.dependencies.radio=모듈 종속성 전체(&L)
method.name.not.specified.error.message=메서드 이름이 지정되지 않았습니다
junit.configuration.search.for.tests.label=테스트 검색\:
class.not.test.error.message=클래스 ''{0}''은(는) 테스트가 아닙니다
configuration.not.specified.message=구성 테스트 타입이 지정되지 않았습니다. {0}
package.does.not.exist.error.message=패키지 ''{0}''이(가) 없습니다
test.method.doesnt.exist.error.message=테스트 메서드 ''{0}''이(가) 없습니다
junit.configuration.in.whole.project.radio=전체 프로젝트에서(&W)
junit.entry.point.suggest.package.private.visibility.junit5=junit 5 테스트에 package-private 가시성 수준 제안
category.is.not.specified.error.message=카테고리가 지정되지 않았습니다
directory.is.not.specified.error.message=디렉터리가 지정되지 않았습니다
directory.0.is.not.found.error.message=디렉터리 ''{0}''을(를) 찾을 수 없습니다
module.to.choose.classpath.not.specified.error.message=클래스 경로를 선택할 모듈이 지정되지 않았습니다
tags.are.not.specified.error.message=태그가 지정되지 않았습니다
tag.name.0.must.be.syntactically.valid.warning=태그 이름[{0}]이 구문상 유효해야 합니다
dialog.message.no.unique.id.specified.exception=고유한 ID가 지정되지 않았습니다
test.kind.hint=테스트를 검색할 리소스 타입
test.pattern.hint=테스트를 포함하는 클래스 이름과 일치하는 정규식
test.class.hint=테스트를 포함하는 클래스의 정규화된 이름
test.method.hint=테스트 메서드의 정규화된 이름
test.package.hint=테스트를 포함하는 패키지 이름

# configuration kinds
junit.configuration.kind.all.in.package=패키지 내 모든 항목
junit.configuration.kind.all.in.directory=디렉터리 내 모든 항목
junit.configuration.kind.by.pattern=패턴
junit.configuration.kind.class=클래스
junit.configuration.kind.method=메서드
junit.configuration.kind.category=카테고리
junit.configuration.kind.by.unique.id=UniqueId
junit.configuration.kind.by.tags=태그
junit.configuration.kind.by.source.position=소스 위치를 통해
junit.configuration.kind.by.source.changes=소스 내 변경 내용 전체

# repeat modes
junit.configuration.repeat.mode.once=한 번
junit.configuration.repeat.mode.n.times=N회
junit.configuration.repeat.mode.until.failure=실패할 때까지
junit.configuration.repeat.mode.unlimited=중단될 때까지

# fork modes
junit.configuration.fork.mode.none=없음
junit.configuration.fork.mode.method=메서드
junit.configuration.fork.mode.class=클래스
junit.configuration.fork.mode.repeat=반복

combobox.changelists.all=모두

no.module.selected.error.message=선택된 모듈 없음
category.interface.dialog.title=카테고리 인터페이스
running.tests.disabled.during.index.update.error.message=색인 업데이트 중 테스트 실행이 비활성화되어 있습니다
dialog.message.failed.to.resolve.maven.id={0} 해결 실패
junit5.migration.description=JUnit 4 테스트 어노테이션을 새 Jupiter 어노테이션으로 전송할 경우 빨간 코드가 생길 수 있습니다. 어설션은 마이그레이션되지 않습니다. 완전히 자동으로 변환 가능한 테스트만 마이그레이션하려면 ''Java | JUnit 이슈 | JUnit 4 테스트를 JUnit 5 검사로 변경 가능'' 검사를 확인하세요.