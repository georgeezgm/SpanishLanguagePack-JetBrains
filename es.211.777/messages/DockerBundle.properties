action.Docker.AddDockerConnection.text=Docker 연결
action.Docker.AddDockerConnection.description=도커 연결 추가
action.Docker.FilterUntaggedImages.text=태그가 지정되지 않은 이미지
action.Docker.FilterStoppedContainers.text=중지된 컨테이너
group.Docker.Filter.text=Docker
action.Docker.RemoteServers.StopDeploy.text=배포 중지
action.Docker.RemoteServers.StopDeploy.description=선택한 배포 중지
action.Docker.RemoteServers.CreateTerminal.text=터미널 생성
action.Docker.RemoteServers.CreateTerminal.description=선택한 컨테이너에서 셸 시작 중
action.Docker.RemoteServers.ExecInContainer.text=Exec
action.Docker.RemoteServers.ExecInContainer.description=선택한 컨테이너에서 명령어 실행
action.Docker.RemoteServers.Attach2Container.text=연결
action.Docker.RemoteServers.Attach2Container.description=선택한 컨테이너에 첨부
action.Docker.RemoteServers.ShowContainerProcesses.text=프로세스 표시
action.Docker.RemoteServers.ShowContainerProcesses.description=선택한 컨테이너의 프로세스 목록 표시
action.Docker.RemoteServers.InspectContainerOrImage.text=검사
action.Docker.RemoteServers.CopyContainerImageId.text=이미지 ID 복사
action.Docker.RemoteServers.CopyContainerImageId.description=클립보드에 선택한 컨테이너의 이미지 ID 또는 태그 복사
action.Docker.RemoteServers.CopyContainerId.text=컨테이너 ID 복사
action.Docker.RemoteServers.CopyContainerId.description=클립보드에 선택한 컨테이너 ID 복사
action.Docker.RemoteServers.CopyImageId.text=이미지 ID 복사
action.Docker.RemoteServers.CopyImageId.description=클립보드에 선택한 이미지 ID 복사
action.Docker.RemoteServers.ShowContainerLog.text=로그 표시
action.Docker.RemoteServers.ShowContainerLog.description=선택한 컨테이너의 로그 표시
action.Docker.RemoteServers.SelectContainerImage.text=이미지 표시
action.Docker.RemoteServers.SelectContainerImage.description=서비스 트리에 선택한 컨테이너 이미지 표시
action.Docker.RemoteServers.ScaleComposeService.text=Scale
action.Docker.RemoteServers.ScaleComposeService.description=서비스 확장
action.Docker.RemoteServers.StopComposeService.text=중지
action.Docker.RemoteServers.StopComposeService.description=서비스 중지
action.Docker.RemoteServers.StartComposeService.text=시작
action.Docker.RemoteServers.StartComposeService.description=서비스 시작
action.Docker.RemoteServers.PullImage.text=이미지 끌어오기...
action.Docker.RemoteServers.PullImage.description=저장소에서 이미지 끌어오기
action.Docker.RemoteServers.PushImage.text=이미지 밀어넣기...
action.Docker.RemoteServers.PushImage.description=저장소로 선택한 이미지 밀어넣기
action.Docker.RemoteServers.DeleteImage.text=이미지 삭제
action.Docker.RemoteServers.DeleteImage.description=선택한 이미지 삭제
action.Docker.RemoteServers.CreateContainer.text=컨테이너 생성
action.Docker.RemoteServers.CreateContainer.description=선택한 이미지에 대한 컨테이너 생성 및 실행
action.Docker.RemoteServers.DeleteConnection.text=연결 삭제
action.Docker.RemoteServers.DeleteContainer.text=컨테이너 삭제
action.Docker.RemoteServers.DeleteContainer.description=선택한 컨테이너 삭제
action.Docker.RemoteServers.StopContainer.text=컨테이너 중지
action.Docker.RemoteServers.StopContainer.description=선택한 컨테이너 중지
action.Docker.RemoteServers.StartContainer.text=컨테이너 시작
action.Docker.RemoteServers.StartContainer.description=선택한 컨테이너 시작
action.Docker.RemoteServers.DownComposeApp.text=아래로
action.Docker.RemoteServers.DownComposeApp.description=컨테이너 중지 및 컨테이너, 네트워크, 볼륨, 이미지 제거
action.Docker.RemoteServers.StopComposeApp.text=중지
action.Docker.RemoteServers.StopComposeApp.description=모든 서비스 중지
group.Docker.RemoteServersViewToolbar.text=Docker
DockerConverterProvider.conversion.description=Docker 실행 구성이 새 형식으로 변환됩니다
DockerFileDetector.notification.group=Docker\: Dockerfile 탐지
DockerFileDetector.Notifier.title.one=Dockerfile이 탐지됨
DockerFileDetector.Notifier.title.many=Dockerfile이 탐지됨
DockerFileDetector.Notifier.message.one=다음 파일에 대한 Docker 실행 구성을 생성할 수 있습니다.
DockerFileDetector.Notifier.message.full=다음 파일에 대한 Docker 실행 구성을 생성할 수 있습니다.
DockerFileDetector.Notifier.message.limited=다음을 비롯한 {0}개 파일에 대한 Docker 실행 구성을 생성할 수 있습니다.
DockerFileDetector.Notifier.disable=다시 묻지 않음
dockerTools.name=도구
dockerfile.brackets=대괄호
dockerfile.comma=쉼표
dockerfile.comments=주석
dockerfile.dot=마침표
dockerfile.keyword=키워드
dockerfile.number=숫자
dockerfile.parenths=괄호
dockerfile.string=문자열
dockerfile.variable=변수
dockerfile.displayName=Dockerfile
DockerCloudType.debug.not.supported=디버그 모드가 ''{0}''에서 지원되지 않습니다
DockerCloudType.presentable.name=Docker
DockerCloudType.run.configuration.type.presentable.name=Docker
DockerPropertiesRuntimeEditor.containers.names.warning.message=컨테이너 이름이 변경되면 해당 컨테이너와 관련된 모든 링크가 손상됩니다. 그래도 컨테이너 이름을 변경하시겠어요?
DockerPropertiesRuntimeEditor.containers.names.warning.title=컨테이너 이름 변경
DockerPropertiesRuntimeEditor.container.name.error.empty.message=컨테이너 이름은 공백일 수 없습니다
DockerPropertiesRuntimeEditor.container.name.error.invalid.message={0}은(는) 잘못된 컨테이너 이름입니다. 리터럴, 숫자 및 문장 부호[_.-]만 사용할 수 있습니다
DockerPropertiesRuntimeEditor.container.name.error.title=잘못된 컨테이너 이름
DockerPropertiesRuntimeEditor.container.name.text=컨테이너 이름\:
DockerPropertiesRuntimeEditor.save.text=저장
DockerVolumeBindingConfigurable.BrowseFolderAction.title=호스트 경로
DockerVolumeBindingConfigurable.BrowseFolderAction.description=볼륨 호스트 경로 선택
DockerVolumeBindingConfigurable.mapping.warning.message=경로 매핑은 Docker 설정에서 구성해야 합니다
DockerVolumeBindingConfigurable.mapping.warning.title=경고
DockerVolumeBindingConfigurable.container.path.text=컨테이너 경로\:
DockerVolumeBindingConfigurable.host.path.text=호스트 경로\:
DockerVolumeBindingConfigurable.read.only.text=읽기 전용
InspectDockerAction.description.container=선택한 컨테이너 검사
InspectDockerAction.description.image=선택한 이미지 검사
InspectDockerAction.tab.title=검사
ShowContainerProcessesAction.tab.title=프로세스
CreateContainerAction.popup.title=컨테이너 생성
CreateContainerAction.popup.defaultAction=생성...
DockerDeleteProvider.confirmation.title=삭제 확인
DockerDeleteProvider.confirmation.text.both.types={0} 및 {1}을(를) 삭제하시겠어요?
DockerDeleteProvider.confirmation.text.single.type={0}을(를) 삭제하시겠어요?
DockerDeleteProvider.confirmation.image.one=이미지 1개
DockerDeleteProvider.confirmation.image.many=이미지 {0}개
DockerDeleteProvider.confirmation.container.one=컨테이너 1개
DockerDeleteProvider.confirmation.container.many=컨테이너 {0}개
DockerCliImageBuilder.output.command=명령어\:
DockerGroupRuntime.ContainersGroup.groupName=컨테이너
DockerGroupRuntime.ImagesGroup.groupName=이미지
DockerColorAnnotator.unresolvedVariableRef=변수 ''{0}''을(를) 확인할 수 없습니다
DockerInlayHintsProvider.name=Docker는 이름 지정된 스테이지를 실행합니다
DockerInlayHintsProvider.tooltip.run="{0}" 스테이지 실행(BuildKit 활성화)
DockerInlayHintsProvider.tooltip.build="{0}" 스테이지 빌드(BuildKit 활성화)
DockerInlayHintsProvider.tooltip.all=이름 지정된 모든 스테이지 구성 표시
DockerInlayHintsProvider.popup.title="{0}" 액션
DockerFileFindUsagesProvider.usageType.envVar=ENV 변수
DockerFileFindUsagesProvider.usageType.argVar=ARG 변수
DockerFileFindUsagesProvider.usageType.stage=Stage 선언
DockerFileFindUsagesProvider.usageType.unknown=선언
DockerFileRunLineMarkerProvider.action.group.run=실행
DockerFileRunLineMarkerProvider.action.group.build=이미지 빌드
DockerFileRunLineMarkerProvider.BuildAsTemporaryRunConfig.text=''{0}''에 이미지 빌드
DockerFileRunLineMarkerProvider.BuildExistingRunConfig.text=''{0}''에 대한 이미지 빌드
DockerRunLineMarkerProviderBase.tooltip=Docker에서 실행
DockerRunConfigActions.RunOrBuildExistingConfig.text.build=''{0}'' 빌드
DockerRunLineMarkerProviderBase.RunExistingRunConfig.text=''{0}'' 실행
DockerRunLineMarkerProviderBase.EditExistingRunConfig.text=''{0}'' 편집...
DockerRunLineMarkerProviderBase.EditExistingRunConfig.dialogTitle=실행 구성 편집
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.text=새 실행 구성...
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.dialogTitle=실행 구성 편집
DockerRunLineMarkerProviderBase.RunAsTemporaryRunConfig.text=''{0}''에서 실행
DockerRunConfigurationCreator.editConfiguration.title.new=Docker 구성 생성
DockerCloudConfigurable.loadMachines.task.title=Machine 로드 중
DockerCloudConfigurable.error.apiUrlRequired=API URL 필요
DockerCloudConfigurable.error.machineRequired=Docker Machine 필요
DockerCloudConfigurable.error.connectionNotSpecified=연결 타입 지정
DockerCloudConfigurable.error.certificatesFolder.missing={0}에 인증서 폴더가 없습니다
DockerCloudConfigurable.chooser.certificates.title=인증서 위치 선택
DockerCloudConfigurable.task.loading.machines.title=Machine 설정 로드 중
DockerCloudConfigurable.docker.for.mac.radio.title=Mac용 Docker
DockerCloudConfigurable.docker.for.windows.radio.title=Windows용 Docker
DockerCloudConfigurable.connect.daemon.text=다음을 통해 Docker 데몬에 연결\:
DockerCloudConfigurable.unix.socket.text=Unix 소켓\:
DockerCloudConfigurable.docker.machine.text=Docker Machine\:
DockerCloudConfigurable.tcp.socket.text=TCP 소켓
DockerCloudConfigurable.configure.executable.text=실행 파일 구성
DockerCloudConfigurable.engine.url.text=Engine API URL\:
DockerCloudConfigurable.certificates.folder.text=인증서 폴더\:
DockerCloudConfigurable.path.mappings.text=경로 매핑\:
DockerCloudConfigurable.email.text=이메일\:
DockerCloudConfigurable.password.text=비밀번호\:
DockerFileArgumentCountInspection.display.name=잘못된 인수 개수
DockerFileArgumentCountInspection.error.exactly.one.argument.required=정확히 인수 1개가 필요합니다
DockerFileArgumentCountInspection.error.at.least.N.arguments.required=최소 {0}개 인수가 필요합니다
DockerFileAssignmentsInspection.display.name=''key\=value'' 쌍의 간격 지정
DockerFileAssignmentsInspection.error.spacing.not.allowed=여기에서 간격 지정은 허용되지 않습니다
DockerFileAddOrCopySemanticInspection.display.name=''ADD''/''COPY'' 의미
DockerFileAddOrCopySemanticInspection.error.target.must.be.folder=대상은 ''/''로 끝나는 디렉터리여야 합니다
DockerFileAddOrCopySemanticInspection.error.quick.fix=후행 ''/'' 추가
DockerMappingConfigurable.browse.title=공유된 폴더 경로
DockerMappingConfigurable.browse.description=공유된 폴더 경로 선택
DockerMappingConfigurable.displayName=경로 매핑
DockerMappingConfigurable.error.local.path.required=로컬 경로 필요
DockerMappingConfigurable.error.remote.path.required=가상 머신 경로 필요
DockerMappingConfigurable.virtual.machine.path.text=가상 머신 경로\:
DockerMappingConfigurable.local.path.text=로컬 경로\:
docker.path.mapping.editor.table.virtual.machine.path.header=가상 머신 경로
docker.path.mapping.editor.table.local.path.header=로컬 경로
docker.registry.configurable.connection.status.connecting=연결 중...
docker.registry.configurable.connection.status.successful=연결 성공
docker.registry.configurable.connection.status.cannot.connect=연결 불가\: {0}
DockerContainerSettingsUI.exposedPortsHyperlink=<html>노출된 포트를 호스트 인터페이스에 공개\:</html>
DockerContainerSettingsUI.executable.panel.title=실행 파일
DockerContainerSettingsUI.entrypoint.text=진입점\:
DockerContainerSettingsUI.command.text=명령어\:
DockerContainerSettingsUI.all.text=모두
DockerContainerSettingsUI.specify.text=지정
DockerContainerSettingsUI.bind.ports.text=바인드 포트\:
DockerContainerSettingsUI.bind.mounts.text=바인드 마운트\:
DockerContainerSettingsUI.environment.variables.text=환경 변수\:
DockerContainerSettingsUI.run.options.text=실행 옵션\:
## the similar set as above but without a ":" to use in the fragments UI
DockerContainerSettingsFragments.entrypoint.fragment=Entrypoint
DockerContainerSettingsFragments.entrypoint.actionHint=이미지의 디폴트 ENTRYPOINT 덮어쓰기
DockerContainerSettingsFragments.command.fragment=명령어
DockerContainerSettingsFragments.command.actionHint=새 컨테이너에서 실행할 명령어
DockerContainerSettingsFragments.bind.ports.fragment=바인드 포트
DockerContainerSettingsFragments.bind.ports.actionHint=컨테이너 포트를 호트스 포트에 매핑
DockerContainerSettingsFragments.bind.mounts.fragment=바인드 마운트
DockerContainerSettingsFragments.bind.mounts.actionHint=호스트의 디렉터리 또는 이름이 지정된 볼륨을 컨테이너에 바인드 마운트
DockerContainerSettingsFragments.environment.variables.fragment=환경 변수
DockerContainerSettingsFragments.environment.variables.actionHint=컨테이너 환경 변수 설정
DockerContainerSettingsFragments.attach.to.container.name=컨테이너에 연결
DockerContainerSettingsFragments.attach.to.container.tooltip=컨테이너에 연결 및 시작 시 ''Attached Console'' 열기
DockerContainerSettingsFragments.run.options.fragment=실행 옵션
DockerContainerSettingsFragments.run.options.actionHint=''docker run'' 명령어에 대한 다른 옵션 지정
DockerContainerSettingsFragments.all.ports.fragment=노출된 모든 포트를 임의로 공개
DockerContainerSettingsFragments.all.ports.actionHint=노출된 모든 포트를 임의의 포트에 공개
DockerPortBindingsField.dialogTitle=포트 바인딩\:
DockerPortBindingsField.dialogEmptyText=포트 바인딩 없음
DockerPortBindingsField.PortBindingsTable.hostPort=호스트 포트
DockerPortBindingsField.PortBindingsTable.containerPort=컨테이너 포트
DockerPortBindingsField.PortBindingsTable.hostIP=호스트 IP
DockerPortBindingsField.PortBindingsTable.protocol=프로토콜
DockerPortBindingsEditor.hostPort=호스트 포트
DockerPortBindingsEditor.containerPort=컨테이너 포트
DockerPortBindingsEditor.hostIP=호스트 IP
DockerPortBindingsEditor.protocol=프로토콜
DockerVolumeBindingsField.dialogTitle=바인드 마운트
DockerVolumeBindingsField.dialogEmptyText=바인드 마운트 없음
DockerVolumeBindingsField.VolumeBindingsTable.source=호스트 경로
DockerVolumeBindingsField.VolumeBindingsTable.destination=컨테이너 경로
DockerVolumeBindingsField.VolumeBindingsTable.readOnly=읽기 전용
DockerComposeFilesTextField.DockerComposeFileDialog.title=Docker Compose 구성 파일
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOrFolder=구성 파일 또는 폴더 선택
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOnly=구성 파일 선택
DockerDeploymentSourcePathCombo.dialogTitle=Dockerfile
DockerDeploymentSourcePathCombo.dialogDescription=빌드 및 실행할 Dockerfile 지정
DockerFileAndContextFolderUI.ContextFolderField.dialogTitle=컨텍스트 폴더
DockerFileAndContextFolderUI.ContextFolderField.dialogDescription=컨텍스트 폴더를 지정하거나 디폴트가 적용되도록 공백으로 남겨두세요
DockerBuildSettingsUI.BuildArgsField.dialogTitle=빌드 인수
DockerBuildSettingsUI.BuildArgsField.dialogEmptyText=빌드 인수 없음
DockerBuildSettingsUI.DockerBuildOptionsField.onParseError=빌드 CLI 옵션을 분석할 수 없습니다. {0}
DockerBuildSettingsUI.dockerfile.text=Dockerfile\:
DockerBuildSettingsUI.context.folder.text=컨텍스트 폴더\:
DockerBuildSettingsUI.image.tag.text=이미지 태그\:
DockerBuildSettingsUI.build.args.text=빌드 인수\:
DockerBuildSettingsUI.enable.buildkit.experimental=BuildKit 활성화(실험적)
DockerBuildSettingsUI.build.options.text=빌드 옵션\:
# the same as labels but without ":" for a fragments popup togggle actions
DockerBuildSettingsFragments.context.folder.fragment=컨텍스트 폴더
DockerBuildSettingsFragments.context.folder.actionHint=빌드 도중 데몬으로 전송할 폴더를 지정
DockerBuildSettingsFragments.build.args.fragment=Arg 빌드
DockerBuildSettingsFragments.build.options.fragment=빌드 옵션
DockerBuildSettingsFragments.build.options.actionHint=''docker build'' 명령어의 다른 옵션을 지정하세요
DockerContainerSettingsUI.EnvVarsField.dialogTitle=환경 변수
DockerContainerSettingsUI.EnvVarsField.dialogEmptyText=변수 없음
DockerContainerSettingsUI.DockerRunOptionsField.onParseError=실행 CLI 옵션을 분석할 수 없습니다. {0}
DockerCliOptionsField.onParseError=명령줄 옵션을 분석할 수 없습니다. {0}
SingletonDeploymentSourceType.error.image.tag.atMaxOne=최대 1개 태그만 허용됩니다
SingletonDeploymentSourceType.error.image.tag.format=잘못된 이미지 태그 형식
SingletonDeploymentSourceType.error.container.name.format=잘못된 컨테이너 이름\: ''[a-zA-Z0-9][a-zA-Z0-9_.-]*''가 필요합니다
DockerImageDeploymentSourceType.name=Docker 이미지
DockerImageDeploymentSourceType.suggestRunConfigurationName=Docker 이미지
DockerImageDeploymentSourceType.deploymentName={0} 이미지 ID\: {1}
DockerImageDeploymentSourceType.error.image.id.required=이미지 ID 또는 이름 필요
DockerComposeDeploymentSourceType.name=Docker-compose
DockerComposeDeploymentSourceType.deploymentName=Compose\: {0}
DockerComposeDeploymentSourceType.suggestRunConfigurationName={0}\: Compose 배포
DockerComposeDeploymentSourceType.error.path.required=Compose 파일 경로 필요
DockerComposeDeploymentSourceType.error.file.does.not.exist=Compose 파일이 ''{0}''에 없습니다
DockerFileDeploymentSourceType.name=Dockerfile
DockerFileDeploymentSourceType.deploymentName={0} Dockerfile\: {1}
DockerFileDeploymentSourceType.suggestRunConfigurationName={0}
DockerFileDeploymentSourceType.error.path.required=Dockerfile 파일 경로 필요
DockerFileDeploymentSourceType.error.dockerfile.does.not.exist=Dockerfile이 ''{0}''에 없습니다
DockerBeforeRunTaskProvider.name=디버그 전 Docker 시작
DockerBeforeRunTaskProvider.description=디버그 전 Docker 실행\: ''{0}''
DockerBeforeRunTaskProvider.notifier=Docker 실행 전 작업
DockerBeforeRunTaskProvider.Dialog.title=Docker 구성
DockerEnvVarsRuntimeEditor.name=환경 변수
DockerPortBindingRuntimeEditor.name=포트 바인딩
DockerPortBindingRuntimeEditor.publish.ports.checkbox.title=모든 포트 공개
DockerVolumeBindingsRuntimeEditor.name=볼륨 바인딩
DockerPropertiesRuntimeEditor.name=프로퍼티
DockerPropertiesRuntimeEditor.property.container.id=컨테이너 ID
DockerPropertiesRuntimeEditor.property.container.names=컨테이너 이름
DockerPropertiesRuntimeEditor.property.image.id=이미지 ID
DockerPropertiesRuntimeEditor.property.image.created=생성됨
DockerPropertiesRuntimeEditor.property.image.size=크기
DockerPropertiesRuntimeEditor.property.image.tags=태그
DockerPropertiesRuntimeEditor.action.copy.to.clipboard.name=클립보드에 복사
DockerFileSystem.error.modification.not.supported=Docker 컨테이너 파일 시스템에서는 수정은 지원되지 않습니다. {0}
DockerFileSystem.error.can.not.get.contents={0}의 내용을 가져올 수 없습니다
DockerContainerBrowserTab.displayName=파일
DockerContainerBrowserTab.emptyText=파일을 찾아보려면 컨테이너를 시작합니다
DockerFileChooser.emptyText=파일 시스템 루트에 액세스할 수 없습니다. 해당 Docker 컨테이너 종류는 아직 지원되지 않을 수 있습니다.
DockerFileChooser.loadingText=파일 시스템 루트 받는 중...
DockerFileChooser.emptyPathText=경로를 확인할 항목을 선택하세요
DockerFileChooser.RefreshAction.text=새로 고침
DockerFileChooser.RefreshAction.description=Docker 컨테이너 파일 시스템 트리 새로고침
DockerContainerBrowser.downloadTask.title=Docker 컨테이너에서 파일 다운로드
DockerContainerBrowser.DownloadAction.text=스크래치로 다운로드
DockerContainerBrowser.DownloadAction.description=Docker 컨테이너에서 스크래치로 파일 다운로드
DockerContainerBrowser.ViewInEditorAction.text=에디터 뷰
DockerContainerBrowser.ViewInEditorAction.description=에디터의 Docker 컨테이너에서 파일 뷰
DockerRootType.displayName=Docker 파일
DockerWritingAccessProvider.readOnlyMessage=Docker 컨테이너의 파일은 읽기 전용입니다
#
DockerComposeDeploymentEditor.enable.buildkit.hint=이미지 빌드용 BuildKit 지원 활성화
DockerComposeDeploymentEditor.env.file.does.not.exist=''{0}''에 환경 변수 파일이 없습니다
DockerComposeDeploymentEditor.env.file.not.valid=''{0}''에서 환경 변수 파일을 읽을 수 없습니다
DockerComposeDeploymentEditor.environment.variables=환경 변수
DockerComposeDeploymentEditor.environment.variables.actionHint=Docker Compose 프로세스의 환경 변수를 설정하세요. 이 환경 변수는 모든 컨테이너에서 제공되지 않습니다.
DockerComposeDeploymentEditor.up.build.desc=--build
DockerComposeDeploymentEditor.up.build.name=빌드\: 항상
DockerComposeDeploymentEditor.up.build.actionHint=컨테이너 시작 전 이미지 빌드
DockerComposeDeploymentEditor.up.scale.name=스케일 재정의
DockerComposeDeploymentEditor.up.scale.desc=--scale
DockerComposeDeploymentEditor.up.scale.hint=서비스의 컨테이너 개수 설정
DockerComposeDeploymentEditor.up.exit.code.from=서비스 종료 코드
DockerComposeDeploymentEditor.up.exit.code.from.name=종료 코드 반환
DockerComposeDeploymentEditor.up.exit.code.from.desc=--exit-code-from
DockerComposeDeploymentEditor.up.exit.code.from.actionHint=선택한 서비스 컨테이너의 종료 코드를 반환합니다. 지정된 서비스의 컨테이너가 멈추면 모든 컨테이너를 중지합니다.
DockerComposeDeploymentEditor.up.timeout.name=SIGKILL 시간 제한 초과
DockerComposeDeploymentEditor.up.timeout.desc=--timeout
DockerComposeDeploymentEditor.up.timeout.hint=컨테이너를 강제 종료하려면 시간 제한을 초 단위로 설정하세요. 컨테이너에는 먼저 SIGTERM이 전송되고 지정된 시간이 초과되면 SIGKILL이 전송됩니다.
DockerComposeDeploymentEditor.up.detach.name=연결 대상\: 없음
DockerComposeDeploymentEditor.up.detach.desc=--detach
DockerComposeDeploymentEditor.up.detach.actionHint=연결 해제 모드에서 실행
DockerComposeDeploymentEditor.no.deps.name=시작\: 선택한 서비스
DockerComposeDeploymentEditor.no.deps.desc=--no-deps
DockerComposeDeploymentEditor.no.deps.actionHint=연결된 서비스 시작 안 함
DockerComposeDeploymentEditor.up.force.recreate.name=컨테이너 다시 생성\: 모두
DockerComposeDeploymentEditor.up.force.recreate.desc=--force-recreate
DockerComposeDeploymentEditor.up.force.recreate.actionHint=구성이나 이미지가 변경되지 않는 경우에도 모든 컨테이너 다시 생성
DockerComposeDeploymentEditor.up.always.recreate.name=종속 요소 다시 생성
DockerComposeDeploymentEditor.up.always.recreate.desc=--always-recreate-deps
DockerComposeDeploymentEditor.up.always.recreate.actionHint=종속 컨테이너 다시 생성
DockerComposeDeploymentEditor.up.no.recreate.desc=--no-recreate
DockerComposeDeploymentEditor.up.no.recreate.name=컨테이너 다시 생성\: 없음
DockerComposeDeploymentEditor.up.no.recreate.actionHint=구성이 변경된 경우에도 기존 컨테이너 다시 생성 안 함
DockerComposeDeploymentEditor.up.no.build.name=빌드\: 안 함
DockerComposeDeploymentEditor.up.no.build.desc=--no-build
DockerComposeDeploymentEditor.up.no.build.actionHint=이미지를 빌드하지 않습니다. 누락된 경우 오류 표시와 함께 중지합니다.
DockerComposeDeploymentEditor.up.group.start=시작
DockerComposeDeploymentEditor.up.group.start.hint=시작할 서비스 구성
DockerComposeDeploymentEditor.up.group.start.default=선택 항목 및 종속 요소
DockerComposeDeploymentEditor.up.group.start.default.hint=지정 및 연결된 서비스 시작
DockerComposeDeploymentEditor.up.group.attach.to=연결 대상
DockerComposeDeploymentEditor.up.group.attach.to.hint=출력 스트림을 표시할 컨테이너 구성
DockerComposeDeploymentEditor.up.group.attach.to.default=선택한 서비스
DockerComposeDeploymentEditor.up.group.attach.to.default.hint=종속 요소가 아닌 시작된 모든 컨테이너에 연결
DockerComposeDeploymentEditor.up.group.build=빌드
DockerComposeDeploymentEditor.up.group.build.hint=컨테이너 시작 전 빌드할 이미지 구성
DockerComposeDeploymentEditor.up.group.build.default=누락된 이미지만
DockerComposeDeploymentEditor.up.group.build.default.hint=사용할 수 있는 빌드 이미지만
DockerComposeDeploymentEditor.up.group.recreate=컨테이너 다시 생성
DockerComposeDeploymentEditor.up.group.recreate.hint=중지하고 새 컨테이너로 교체할 컨테이너 구성
DockerComposeDeploymentEditor.up.group.recreate.default=변경된 구성
DockerComposeDeploymentEditor.up.group.recreate.default.hint=구성 또는 이미지가 변경된 경우 컨테이너 교체
DockerComposeDeploymentEditor.up.group.stop.containers=컨테이너 중지
DockerComposeDeploymentEditor.up.group.stop.containers.hint=컨테이너를 중지할 방법 구성
DockerComposeDeploymentEditor.up.group.stop.containers.default=수동
DockerComposeDeploymentEditor.up.group.stop.containers.default.hint=수동으로 컨테이너 중지
DockerComposeDeploymentEditor.up.no.start.name=시작\: 없음
DockerComposeDeploymentEditor.up.no.start.desc=--no-start
DockerComposeDeploymentEditor.up.no.start.actionHint=서비스 생성 후 시작 안 함
DockerComposeDeploymentEditor.up.abort.on.exit.name=컨테이너 중지\: 컨테이너 종료 시
DockerComposeDeploymentEditor.up.abort.on.exit.desc=--abort-on-container-exit
DockerComposeDeploymentEditor.up.abort.on.exit.actionHint=컨테이너 하나가 멈추면 모든 컨테이너 중지
DockerComposeDeploymentEditor.up.attach.deps.name=연결 대상\: 선택 항목 및 종속 요소
DockerComposeDeploymentEditor.up.attach.deps.desc=--attach-dependencies
DockerComposeDeploymentEditor.up.attach.deps.actionHint=시작된 모든 컨테이너 및 종속 요소에 연결
DockerComposeDeploymentEditor.up.renew.anon.volumes.name=익명 볼륨 다시 생성
DockerComposeDeploymentEditor.up.renew.anon.volumes.desc=--renew-anon-volumes
DockerComposeDeploymentEditor.up.renew.anon.volumes.actionHint=이전 컨테이너에서 데이터를 가져오지 않고 익명 볼륨을 다시 생성
DockerComposeDeploymentEditor.up.remove.orphans.name=고립 항목 제거
DockerComposeDeploymentEditor.up.remove.orphans.desc=--remove-orphans
DockerComposeDeploymentEditor.up.remove.orphans.actionHint=Compose 파일에 정의되지 않은 서비스의 컨테이너 제거
DockerComposeDeploymentEditor.group.up=docker-compose up
DockerComposeDeploymentEditor.group.up.actionHint=추가 ''docker-compose up'' 옵션을 사용하여 실행
DockerComposeDeploymentEditor.group.up.name=''up'' 옵션 적용
DockerComposeDeploymentEditor.group.up.childrenGroupName=docker-compose up 옵션
DockerComposeDeploymentEditor.up.timeout.label=시간 제한\:
DockerComposeDeploymentEditor.up.timeout.suffix=초
DockerComposeDeploymentEditor.up.exit.code.label=종료 코드\:
DockerComposeDeploymentEditor.up.exit.code.suffix=선택한 서비스의 종료 코드 반환
#
DockerComposeDeploymentEditor.down.remove.volumes=''down''으로 볼륨 제거
DockerComposeDeploymentEditor.down.remove.volumes.actionHint=--volumes 옵션을 지정하고 ''docker-compose down''을 실행하여 종료 시 이름 지정된 볼륨과 익명 볼륨을 모두 삭제하세요
DockerComposeDeploymentEditor.down.remove.images.group=''down''에 있는 이미지 제거
DockerComposeDeploymentEditor.down.remove.images.group.hint=종료 시 제거해야 할 이미지 구성
DockerComposeDeploymentEditor.down.remove.images.default=없음
DockerComposeDeploymentEditor.down.remove.images.default.hint=이미지 제거 안 함
DockerComposeDeploymentEditor.down.remove.images.all=''down''에서 이미지 제거\: 모두
DockerComposeDeploymentEditor.down.remove.images.all.hint=서비스에서 사용한 모든 이미지 제거
DockerComposeDeploymentEditor.down.remove.images.all.desc=--rmi all
DockerComposeDeploymentEditor.down.remove.images.local=''down''에서 이미지 제거\: 로컬
DockerComposeDeploymentEditor.down.remove.images.local.hint=사용자 지정 태그를 포함한 이미지만 제거
DockerComposeDeploymentEditor.down.remove.images.local.desc=--rmi local
DockerComposeDeploymentEditor.incompatible.error.mask="{0}"이(가) {1}와(과) 호환되지 않습니다
DockerComposeDeploymentEditor.env.file.label=환경 변수 파일\:
DockerComposeDeploymentEditor.env.file.name=환경 변수 파일
DockerComposeDeploymentEditor.env.file.actionHint=환경 변수 설정을 위해 파일을 지정
DockerComposeDeploymentEditor.env.file.browse.title=환경 변수 파일 선택
DockerComposeDeploymentEditor.services.name=서비스 지정
DockerComposeDeploymentEditor.run=실행
DockerComposeDeploymentEditor.up.timeout.dialog.message.not.valid.integer={0}은(는) 유효한 정수가 아닙니다
DockerComposeDeploymentEditor.up.timeout.dialog.message.timeout.cannot.be.less=시간 제한은 0 미만일 수 없습니다
DockerComposeDeploymentEditor.up.timeout.dialog.message.timeout.cannot.be.greater=시간 제한은 1000을 초과할 수 없습니다
DockerComposeServicesField.empty.text=비워 두고 모든 서비스 실행
DockerComposeServiceScalePairPanel.dialog.ok.text=저장
DockerComposeServiceScaleDialog.dialog.title=스케일 조정할 서비스 선택
DockerComposeServiceScaleDialog.column.name.service=서비스
DockerComposeServiceScaleDialog.column.name.scale=다음으로 스케일 조정
DockerComposeServiceScaleDialog.service.label=서비스\:
DockerComposeServiceScaleDialog.scale.to.label=다음으로 스케일 조정\:
DockerComposeServiceScaleDialog.title=각 서비스에서 실행할 컨테이너 개수 설정(compose 파일이 있는 경우 스케일 재정의)
DockerComposeServiceScaleDialog.service.does.not.exist.error="{0}" 서비스가 지정된 docker-compose 파일에 없습니다
DockerComposeServiceScaleDialog.services.does.not.exist.error={0} 서비스가 지정된 docker-compose 파일에 없습니다
#
configurable.DockerLinkConfigurable.display.name=링크
configurable.DockerLinkConfigurable.ContainerNamesLoader.task.title=컨테이너 이름 로드 중...
configurable.DockerLinkConfigurable.name.text=이름\:
configurable.DockerLinkConfigurable.alias.text=별칭\:
configurable.DockerMachineConfigurable.display.name=Docker
configurable.DockerEnvVarConfigurable.display.name=환경 변수
configurable.DockerEnvVarConfigurable.name.text=이름\:
configurable.DockerEnvVarConfigurable.value.text=값\:
configurable.DockerPortBindingConfigurable.display.name=포트 바인딩
configurable.DockerPortBindingConfigurable.container.port.text=컨테이너 포트
configurable.DockerPortBindingConfigurable.protocol.text=프로토콜\:
configurable.DockerPortBindingConfigurable.host.ip.text=호스트 IP\:
configurable.DockerPortBindingConfigurable.host.port.text=호스트 포트\:
configurable.DockerRegistryListConfigurable.empty.selection.string=Docker 레지스트리를 구성하려면 ''+''를 클릭하세요
configurable.DockerRegistryListConfigurable.display.name=Docker 레지스트리
configurable.DockerRegistryListConfigurable.AddRegistryAction.text=추가
configurable.DockerRemoteServerConfigurable.display.name=Docker
configurable.DockerVolumeBindingConfigurable.display.name=볼륨 바인딩
configurable.PushImageConfigurable.display.name=이미지 푸시
configurable.PushImageConfigurable.registry.text=레지스트리\:
configurable.PushImageConfigurable.repository.text=저장소\:
configurable.PushImageConfigurable.tag.text=태그\:
settings.docker.executable=Docker 실행 파일\:
settings.docker.machine.executable=Docker Machine 실행 파일\:
settings.docker.compose.executable=Docker Compose 실행 파일\:
settings.select.docker.machine.executable=Docker Machine 실행 파일 선택
settings.choose.docker.compose.executable.location=Docker Machine 실행 파일 위치 선택
settings.choose.docker.executable.location=Docker 실행 파일 위치 선택
checkbox.wait.for.healthcheck=HEALTHCHECK 대기
DockerRemoteDebugRunConfigurationExtension.editorTitle=Java 원격 디버그
DockerComposeCredentialsEditor.validate.server.not.selected=Docker 서버가 선택되지 않았습니다
DockerComposeCredentialsEditor.validate.files.not.chosen=구성 파일이 선택되지 않았습니다.
DockerComposeCredentialsEditor.validate.no.services.defined=구성 파일에서 정의된 서비스가 없습니다
DockerComposeCredentialsEditor.validate.service.name.not.selected=서비스 이름이 선택되지 않았습니다
DockerComposeCredentialsEditor.server.text=서버\:
DockerComposeCredentialsEditor.configuration.files.text=구성 파일\:
DockerComposeCredentialsEditor.service.text=서비스\:
DockerComposeCredentialsEditor.environment.variables.text=환경 변수(&E)
DockerComposeCredentialsEditor.processing=Docker Compose 구성 처리 중...
DockerComposeCredentialsEditor.no.service.placeholder=<Select service>
DockerComposeCredentialsEditor.getting.services.from.compose.configuration=Docker Compose 구성 파일에서 서비스 목록 가져오는 중...
DockerComposeSettingsEditor.form.name=Docker Compose
DockerComposeSettingsEditor.form.command=명령어 및 옵션\:
DockerComposeSettingsEditor.form.command.preview=명령어 미리보기\:
DockerComposeCredentialsType.name=Docker Compose
DockerCredentialsEditor.validate.server.not.selected=Docker 서버가 선택되지 않았습니다
DockerCredentialsEditor.validate.image.not.specified=Docker 이미지 이름이 지정되지 않았습니다
DockerCredentialsEditor.StartDockerMachineDialog.message=Docker Machine ''{0}''을(를) 시작하시겠어요?
DockerCredentialsEditor.StartDockerMachineDialog.title=Docker Machine이 실행되지 않음
DockerCredentialsEditor.server.text=서버\:
DockerCredentialsEditor.image.name.text=이미지 이름\:
DockerCredentialsType.name=Docker
DockerInterpreterContainerSettingsEditorDialog.title=Docker 컨테이너 설정 편집
DockerInterpreterContainerSettingsEditor.disable.networking.text=네트워킹 비활성화
DockerInterpreterContainerSettingsEditor.network.mode.text=네트워크 모드\:
DockerInterpreterContainerSettingsEditor.publish.all.ports.text=모든 포트 공개
DockerInterpreterContainerSettingsEditor.run.options.text=실행 옵션\:
DockerTargetMainStep.step.description=새 Docker 대상 생성
DockerTargetBuildImageStep.description=Docker 이미지 빌드 중...
DockerTargetPullImageStep.description=Docker 이미지 풀 중...
DockerTargetConfigurable.section.title=Docker 컨테이너
DockerTargetConfigurable.server.row.label=Docker 서버\:
DockerTargetConfigurable.build.radio.text=빌드
DockerTargetConfigurable.pull.radio.text=풀
DockerTargetConfigurable.image.row.label=이미지\:
DockerTargetConfigurable.dockerfile.row.label=Dockerfile\:
DockerTargetConfigurable.context.folder.row.label=컨텍스트 폴더\:
DockerTargetConfigurable.optional.row.title=옵션
DockerTargetConfigurable.build.options.row.label=빌드 옵션\:
DockerTargetConfigurable.build.args.row.label=빌드 인수\:
DockerTargetConfigurable.rebuild.automatically.checkbox.text=코드 실행 전 항상 자동으로 이미지를 다시 빌드합니다.
DockerTargetConfigurable.image.tag.row.label=이미지 태그\:
DockerTargetConfigurable.run.options.row.label=실행 옵션\:
DockerTargetConfigurable.run.options.comment.text=Docker 실행 명령어에 대한 매개변수입니다.\n예\: 포트 8080을 노출하기 위한 -p 8080\:8080
AddDockerConnectionAction.title=도커 연결
ComposeScaleAction.Dialog.message=컨테이너 개수\:
ComposeScaleAction.Dialog.title=스케일 조정
DockerBeforeRunTaskUI.ports.table.title=포트 포워딩\:
DockerBeforeRunTaskUI.command.field.title=사용자 지정 명령어\:
DockerBeforeRunTaskUI.options.field.title=사용자 지정 옵션\:
DockerComposeExecutionFailed.notification.action.title=설정 표시...
DockerMachineUtil.starting.machine.template=Docker Machine ''{0}'' 시작 중
DockerMachineUtil.starting.machine.title=Docker Machine 시작 중
DockerRegistryConfigurable.ConnectionTester.task.title=연결 중...
DockerRegistryConfigurable.address.text=주소\:
DockerRegistryConfigurable.username.text=사용자 이름\:
DockerRegistryConfigurable.password.text=비밀번호\:
DockerRegistryConfigurable.test.connection.text=연결 테스트
DockerRegistryConfigurable.server.text=서버\:
DockerRuntimeEditorBase.save.button.title=저장 중...
DockerServiceViewContributor.contributor.descriptor.name=Docker
ContainerLogTab.title=로그
DockerBuildLogTab.title=빌드 로그
DockerComposeDetails.ComposeDeployLogTab.title=배포 로그
ExecInContainerAction.Case.Dialog.message=명령어\:
ExecInContainerAction.Case.Dialog.title=Exec
ExecInContainerAction.ListPopup.title=컨테이너의 실행 명령어
ExecInContainerAction.ListPopup.textFor.create=생성 및 실행...
ExecInContainerAction.ManageExecCommandsDialog.column.title=명령어\:
ExecInContainerAction.ManageExecCommandsDialog.column.no.commands=명령어 없음
ExecInContainerAction.ManageExecCommandsDialog.command.is.empty=명령어가 비어 있습니다
ExecInContainerAction.ListPopup.textFor.manage=관리...
ExecInContainerAction.tab.title=Exec\: {0}
DockerImageGroupDetails.ImagePullTab.title=이미지 콘솔
ImagePullPanel.image.to.pull.label=풀할 이미지\:
ImagePullPanel.image.to.pull.comment={0}을(를) 눌러 시작
ImagePullPanel.action.pull=선택 항목 풀
ImagePullPanel.terminal.name=Docker 이미지
ImagePullPanel.terminal.info.using.default.tag=디폴트 태그 사용\: 최신
ImagePullPanel.terminal.error.reference.format=잘못된 참조 형식\: {0}
ImagePullPanel.queue.label=대기열에 있는 이미지 풀\: {0}
ToolBasedDockerComposeConfigurationParser.progress.title=Docker Compose 구성 처리 중...
DockerSearchContext.BadResponseException.message=응답 코드\: URL {1}(으)로부터의 {0}
DockerRemoteDebugExtensionEditor.port.text=포트\:
DockerExtraHostConfigurable.hostname.text=호스트 이름\:
DockerExtraHostConfigurable.ip.text=IP\:
DockerComposeDeploymentEditor.services.popup.title=서비스 전환
DockerComposeDeploymentEditor.compose.files.text=Compose 파일\:
DockerComposeDeploymentEditor.services.text=서비스\:
DockerDeploymentEditor.image.id.text=이미지 ID 또는 이름\:
DockerDeploymentEditor.run.built.image.text=빌드된 이미지 실행
DockerDeploymentEditor.container.name.text=컨테이너 이름\:
DockerDeploymentEditor.command.preview.text=명령어 미리보기\:
DockerFileDeploymentEditor.group.run.title=실행
DockerFileDeploymentEditor.group.run.option.name=실행 옵션
DockerFileDeploymentEditor.group.run.actionHint=빌드된 이미지의 컨테이너 실행
DockerFileDeploymentEditor.group.build.title=빌드

DockerRunConfigurationPanel.configuration.text=Docker 구성\:
DockerRunConfigurationPanel.service.text=서비스\:
DockerRuntimeEditor.save.text=저장
RegistrySelectionEditor.new.text=새로 만들기...
progress.text.preparing.volumes=볼륨 준비 중...
progress.text.docker.upload.volume.progress.message={0}에서 업로드 시 {1}(으)로 마운트됩니다
progress.text.docker.download.volume.progress.message={1}에서 다운로드 시 {0}에 저장됩니다
#
DockerDeploymentStatus.image=이미지
DockerDeploymentStatus.stopped=중지됨
DockerDeploymentStatus.created=생성됨
DockerDeploymentStatus.starting=시작 중
DockerDeploymentStatus.started=시작됨
DockerDeploymentStatus.stopping=중지 중
DockerDeploymentStatus.deleting=삭제 중
DockerDeploymentStatus.deleted=삭제됨
AbstractDockerProcessConnectionData.docker.account.specified=Docker 계정이 지정되지 않았습니다
AbstractDockerProcessConnectionData.docker.account.found=Docker 계정을 찾을 수 없습니다
DockerBeforeRunComposeLauncher.target.service.name.required=대상 서비스 이름이 필요합니다
DockerBeforeRunTaskLauncherBase.error.cant.find.docker=Docker {0}을(를) 찾을 수 없습니다
DockerComposeServiceStarter.starting.docker.compose=docker-compose 시작 중...
ConfigurationHelpAreaWrapper.run.remote.jvm.with.following.command.line.arguments=<html><body>다음 명령줄 인수로 원격 JVM 실행\:</body></html>
DockerEnvironment.cant.run.process=프로세스를 실행할 수 없습니다. {0}
DockerEnvVarConfigurable.name.required=이름 필요
DockerExtraHostConfigurable.error.hostname.required=호스트 이름 필요
DockerExtraHostConfigurable.error.ip.required=IP 필요
DockerLinkConfigurable.error.name.required=이름 필요
DockerPortBindingConfigurable.error.container.port.required=컨테이너 포트 필요
DockerPortBindingConfigurable.error.container.port.should.be.number=컨테이너 포트는 숫자여야 합니다
DockerPortBindingConfigurable.error.host.port.should.be.number=호스트 포트는 숫자여야 합니다
DockerRegistryConfigurable.error.address.required=주소 필요
DockerRegistryConfigurable.error.username.required=사용자 이름이 필요합니다
DockerRegistryConfigurable.error.password.required=비밀번호가 필요합니다
DockerRemoteDebugExtensionEditor.error.invalid.port.number=잘못된 포트 번호
DockerSingletonDeploymentSourceType.unknown.node.text=<알 수 없음>
DockerTargetStepBase.title=Docker
DockerTargetType.VolumeContributionUI.mount.as.volume=볼륨으로 마운트
DockerTargetType.error.cant.find.server=Docker 서버 {0}을(를) 찾을 수 없습니다
DockerEnvironmentFactory.error.cant.find.image=이미지를 찾을 수 없습니다. {0}
DockerEnvironmentFactory.progress.text.preparing.docker.target=Docker 대상 준비 중...
DockerUtil.error.docker.image.could.be.found=Docker 이미지 "{0}"을(를) 찾을 수 없습니다
DockerVolumeBindingConfigurable.error.container.path.required=컨테이너 경로 필요
PushImageConfigurable.error.registry.required=레지스트리 필요
PushImageConfigurable.error.repository.required=저장소 필요
PushImageConfigurable.error.tag.required=태그 필요
DockerComposeCli.error.version.command.time.out=docker-compose 버전 명령어가 시간 초과되었습니다
DockerComposeCli.error.version.command.nonzero.exit.code=docker-compose 버전 명령어가 0이 아닌 종료 코드 {0}와(과) 함께 완료되었습니다
DockerComposeCli.error.cant.find.version.in.output=docker-compose 출력에서 버전을 찾을 수 없습니다. {0}
DockerComposeProcessUtil.error.container.not.found=Docker Compose 컨테이너 {0}을(를) 찾을 수 없습니다
ComposeServiceExecCmd.error.path.required=Docker Compose 구성 경로가 정의되지 않았습니다
ComposeServiceExecCmd.error.service.name.required=Docker Compose 서비스 이름이 정의되지 않았습니다
ComposeServiceExecCmd.error.command.required=명령어가 정의되지 않았습니다
ComposeServiceRunCmd.error.path.required=Docker Compose 구성 경로가 정의되지 않았습니다
ComposeServiceRunCmd.error.service.required=Docker Compose 서비스 이름이 정의되지 않았습니다
ComposeServiceUpCmd.error.path.required=Docker Compose 구성 경로가 정의되지 않았습니다
ComposeServiceUpCmd.error.service.required=Docker Compose 서비스 이름이 정의되지 않았습니다
DockerPullToTerminal.error.operation.failed=작업 실패\: {0}. 자세한 내용은 로그를 확인하세요
ComposeApplicationRuntime.notification.group=docker-compose
RegistryRuntimeTask.notification.group=Docker
DockerMachineCommandException.exited.with.error.code=Docker Machine이 오류 코드 {0}와(과) 함께 종료되었습니다
DockerMachineCommandException.exited.with.error.code.and.output=Docker Machine이 오류 코드 {0}와(과) 함께 종료되었습니다. {1}
DockerMachineNotStartedException.start.docker.machine.and.refresh.skeletons=<a href\="\#">Docker Machine ''{0}'' 시작 및 스켈레톤 새로고침</a>
DockerMachine.timeout.exceeded=시간이 초과되었습니다
DockerLinksEditor.NameColumn.title=이름
DockerLinksEditor.AliasColumn.title=별칭
DockerVolumeBindingsEditor.ContainerPath.title=컨테이너 경로
DockerVolumeBindingsEditor.HostPath.title=호스트 경로
DockerVolumeBindingsEditor.ReadOnly.title=읽기 전용
DockerPropertiesRuntimeEditor.NameColumn.title=이름
DockerPropertiesRuntimeEditor.ValueColumn.title=값
DockerBeforeRunTaskUI.DescriptionColumn.title=포트
DockerBeforeRunTaskUI.LocalPortColumn.title=로컬 포트
DockerBeforeRunTaskUI.ContainerPortColumn.title=컨테이너 포트
DockerExtraHostsEditor.HostnameColumn.title=호스트 이름
DockerExtraHostsEditor.IPColumn.title=IP
DockerEnvVarsEditor.ValueColumn.title=값
DockerEnvVarsEditor.NameColumn.title=이름
DockerComposeCliUtil.error.compose.execution.failed=Docker Compose 실행 실패
DockerComposeIntegrationService.progress.title.updating.volume={0} 볼륨 업데이트 중
DockerBeforeRunTaskProvider.error.unable.to.locate.started.container=시작된 컨테이너를 찾을 수 없습니다
DockerBeforeRunTaskProvider.error.configuration.error=구성 오류\: {0}
DockerBeforeRunTaskProvider.error.launch.error=시작 오류\: {0}
DockerComposeCredentialsEditor.error.base.configuration.file.does.not.exist=기본 구성 파일 "{0}"이(가) 없습니다
DockerDeploymentRuntime.images.undeploy.is.not.supported=이미지 배포 취소는 지원되지 않습니다
DockerInterpreterContainerSettingsEditor.port.bindings=포트 바인딩
DockerInterpreterContainerSettingsEditor.links=링크
DockerInterpreterContainerSettingsEditor.extra.hosts=추가 호스트
DockerInterpreterContainerSettingsEditor.volume.bindings=볼륨 바인딩
DockerInterpreterContainerSettingsEditor.environment.variables=환경 변수
ComposeApplicationRuntime.cant.find.configuration.for.compose.project=Compose 프로젝트 ''{0}''의 구성을 찾을 수 없습니다
DockerTargetTerminalStepBase.terminal.title.docker=Docker
DockerTargetTerminalStepBase.status.connecting.to.docker.daemon=Docker 데몬에 연결 중...
DockerTargetTerminalStepBase.error.cannot.connect.to.daemon.at.0={0}의 Docker 데몬에 접속할 수 없습니다. Docker 데몬이 실행 중인가요?
DockerTargetTerminalStepBase.error.cannot.connect.to.daemon=Docker 데몬에 접속할 수 없습니다. Docker 데몬이 실행 중인가요?
RemoteDockerRuntime.progress.title.pulling.image="{0}" 이미지 풀 중...
RegistryRuntimeTask.current.of.total={1}의 {0}
RegistrySelectionEditor.default.name.docker.registry=Docker 레지스트리
DockerCredentialsEditor.listing.docker.images=Docker 이미지 목록 생성 중...
DockerApplicationRuntime.progress.message.pushing={0} 푸시 중...
DockerApplicationRuntime.progress.message.pushed.successfully={0}이(가) 성공적으로 푸시되었습니다
AttachedConsoleTab.name=연결된 콘솔
#
DockerTargetIntrospectable.launching.introspection.container=내부 검사 컨테이너 시작 중...
DockerTargetIntrospectable.introspection.container.launched=완료되었습니다. 컨테이너가 시작되었습니다. {0}
DockerTargetIntrospectable.removing.introspection.container=내부 검사 컨테이너 제거 중
DockerTargetIntrospectable.introspecting.variable.not.found=${0} 내부 검사 중\: 찾을 수 없습니다
DockerTargetIntrospectable.introspecting.variable.result=${0} 내부 검사 중\: {1}
DockerTargetIntrospectable.introspecting.introspecting.image.environment.variables=이미지 환경 변수 내부 검사 중...
DockerTargetIntrospectable.introspecting.image.done=완료되었습니다. 검사 결과에서 {0}개의 변수가 발견되었습니다
DockerDownloadVolume.progress.message.executing.command=실행 중\: ''{0}''
PrepareImageOperation.unable.to.find.an.image.for.introspection=내부 검사할 이미지를 찾을 수 없습니다
PrepareImageOperation.failed.to.find.image.for.introspection=내부 검사할 이미지를 찾지 못했습니다. {0}
BuildImageOperation.build.completed=빌드 완료
BuildImageOperation.waiting.for.build.operation=빌드 작업 대기 중...
BuildImageOperation.connected=연결됨
PrepareImageOperation.introspection.completed.with.error=내부 검사가 오류와 함께 완료되었습니다. {0}
PrepareImageOperation.introspection.completed=내부 검사 완료
PullImageOperation.pull.completed=풀 완료
PullImageOperation.waiting.for.pull.operation=풀 작업 대기 중...
PullImageOperation.connected=연결됨
ProjectPathOnRootRow.row.project.path.on.target=대상에서 프로젝트 경로\:
ProjectPathOnRootRow.row.project.path.on.target.comment=실행 구성은 필요한 파일 복사와 관련된 설정에서 기본적으로 이 경로를 사용합니다
DockerTargetConfigurable.button.rebuild.image=이미지 다시 빌드
DockerTargetConfigurable.wizard.title.rebuild.image=이미지 다시 빌드
DockerTargetConfigurable.language.runtime.label=언어 런타임\:
DockerConfigureLanguageStep.title.label=프로젝트 디렉터리 및 언어 런타임 구성
DockerTargetMainStep.error.cant.finish.now=지금은 종료할 수 없습니다
DockerTargetMainStep.error.dockerfile.must.be.selected=Dockerfile을 선택해야 합니다
DockerTargetMainStep.error.image.tag.is.required=이미지 태그가 필요합니다
DockerTargetEnvironmentConfiguration.error.connection.to.docker.required=Docker 연결이 필요합니다
DockerTargetEnvironmentConfiguration.error.path.to.dockerfile.to.build.required=빌드할 Dockerfile의 경로가 필요합니다
DockerTargetEnvironmentConfiguration.error.image.tag.to.pull.required=풀할 이미지 태그가 필요합니다
DockerTargetEnvironmentConfiguration.error.container.options.error=컨테이너 옵션 오류\: {0}
DockerTargetEnvironmentConfiguration.error.build.image.options.error=빌드 이미지 옵션 오류\: {0}
DockerMachineConfigurable.message.not.valid.executable={0}은(는) 올바른 {1} 실행 파일이 아닙니다
DockerMachineConfigurable.message.does.not.exists={0}이(가) 없습니다
DockerMachineConfigurable.message.not.executable={0}은(는) 실행 파일이 아닙니다
DockerMachineConfigurable.message.executable.not.specified=실행 파일이 지정되지 않았습니다
DockerMachineConfigurable.message.can't.find.executable=실행 파일을 찾을 수 없습니다
CreateTerminalAction.tab.title=터미널({0})
DockerCliImageBuilder.image.build.failed.message=이미지 빌드가 종료 코드 {0}(으)로 실패했습니다.
ComposeDeploymentRuntime.process.finished.error.message=''docker-compose'' 프로세스가 종료 코드 {0}(으)로 완료되었습니다
RemoteDockerApplicationRuntime.untagged.image=태그 없는 이미지
RemoteDockerApplicationRuntime.untagged.container=태그 없는 컨테이너


