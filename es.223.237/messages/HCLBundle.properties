missing.resource.property.inspection.display.name=필수 프로퍼티 누락
missing.resource.property.inspection.required.properties.error.message=누락된 필수 프로퍼티: {0}
missing.resource.property.inspection.add.properties.quick.fix.name=프로퍼티 추가: {0}
missing.resource.property.inspection.add.properties.quick.fix.family.name=누락된 프로퍼티 추가
conflicting.resource.property.inspection.display.name=프로퍼티 충돌
conflicting.resource.property.inspection.error.message=다음과 충돌함: {0}
deprecated.element.inspection.display.name=중단된 기능
deprecated.element.inspection.deprecated.property.error.message=곧 사용할 수 없게 될 프로퍼티: {0}{2, choice, 0# : {1}|1#}
deprecated.element.inspection.deprecated.block.error.message=곧 사용할 수 없게 될 블록: {0}{2, choice, 0# : {1}|1#}
unknown.block.type.inspection.display.name=알 수 없는 블록 유형
unknown.block.type.inspection.unknown.block.type.error.message=알 수 없는 블록 타입 {0}
unknown.block.type.inspection.missing.closing.brace.error.message=이전 줄에 닫는 괄호가 없습니다
unknown.block.type.inspection.add.closing.brace.quick.fix.test=요소 앞에 닫는 괄호 추가
block.name.validness.inspection.display.name=블록 이름 유효성
block.name.validness.inspection.block.name.should.not.be.empty.error.message=블록 이름이 공백일 수 없습니다
block.name.validness.inspection.invalid.name.error.message=이름은 문자 또는 밑줄로 시작해야하며 문자, 숫자, 밑줄 및 대시 기호로 구성되어야 합니다.
block.name.validness.inspection.missing.block.name.error.message={0}개의 이름 요소가 더 필요합니다
block.name.validness.inspection.extra.block.name.error.message=블록 이름 요소가 너무 많습니다
block.name.validness.inspection.add.name.quick.fix.name=이름 요소 추가
block.name.validness.inspection.remove.name.quick.fix.name=추가 이름 요소 제거
block.name.validness.inspection.rename.block.quick.fix.name=이름 변경
terraform.files.duplicates.inspection.group.display.name=중복
duplicated.block.property.inspection.display.name=중복 프로퍼티
duplicated.block.property.inspection.duplicate.property.error.message=프로퍼티 ‘{0}''이(가) 한 블록 내에서 여러 번 선언되었습니다
duplicated.inspection.base.navigate.to.duplicate.quick.fix.name={0} 중복으로 이동
duplicated.inspection.base.navigate.to.duplicate.quick.fix.name.first=첫 번째
duplicated.inspection.base.show.other.duplicates.quick.fix.name=이와 같은 중복 항목 표시
duplicated.output.inspection.display.name=중복 출력
duplicated.output.inspection.output.declared.multiple.times.error.message=출력 ‘{0}''이(가) 여러 번 선언되었습니다
duplicated.output.inspection.delete.output.quick.fix.name=출력 삭제
duplicated.output.inspection.rename.output.quick.fix=출력 이름 변경
duplicated.provider.inspection.display.name=중복 제공자
duplicated.provider.inspection.display.name.multiple.declaration.error.message=제공자 ‘{0}''이(가) 여러 번 선언되었습니다
duplicated.provider.inspection.display.name.add.provider.alias.quick.fix.name=제공자 별칭 추가
duplicated.provider.inspection.display.name.change.provider.alias.quick.fix.name=제공자 별칭 변경
duplicated.variable.inspection.display.name=중복 변수
duplicated.variable.inspection.multiple.declaration.error.message=변수 ‘{0}''이(가) 여러 번 선언되었습니다
duplicated.variable.inspection.delete.variable.quick.fix.name=변수 삭제
duplicated.variable.inspection.rename.variable.quick.fix.name=변수 이름 변경
incorrect.variable.type.inspection.display.name=잘못된 변수 유형
incorrect.variable.type.inspection.legacy.variable.error.message=‘legacy form'' (pre Terraform 0.12)에 사용된 변수 타입이 잘못되었습니다. {0}이(가) 필요합니다.
incorrect.variable.type.inspection.type.mismatch.error.message=변숫값 타입 ‘{0}''이(가) 디폴트 값 타입 ‘{1}''와(과) 일치하지 않습니다
incorrect.variable.type.inspection.type.mismatch.simplified.error.message=변숫값 타입이 디폴트 값 타입 ‘{0}''와(과) 일치하지 않습니다
incorrect.variable.type.inspection.change.type.quick.fix.name=변수 타입을 {0}(으)로 변경
missing.module.inspection.display.name=모듈 누락
missing.module.inspection.missing.module.error.message=로컬에서 모듈을 찾을 수 없습니다. {0}
missing.module.inspection.ru.terraform.get.quick.fix.name={0}에서 ‘terraform get'' 실행
missing.module.inspection.ru.terraform.get.quick.fix.family.name='terraform get' 실행
missing.module.inspection.ru.terraform.get.quick.fix.failure.message=''terraform get''을 실행하지 못했습니다. {0}
missing.module.inspection.ru.terraform.get.quick.fix.failure.title=Terraform 모듈 가져오기 실패
illegal.interpolations.inspection.display.name=잘못된 보간
illegal.interpolations.inspection.no.double.quotes.error.message=모듈 소스는 큰따옴표로 묶인 문자열이어야 합니다
illegal.interpolations.inspection.in.variable.error.message=변수에 보간을 사용할 수 없습니다
illegal.interpolations.inspection.no.function.calls.error.message=단일 정적 변수 참조가 필요합니다. 상수 키를 사용한 색인 및 속성 액세스만 가능합니다(계산, 함수 호출, 템플릿 표현식 등 허용 안 됨).
illegal.interpolations.inspection.depends.on.error.message={0}에 보간을 사용할 수 없습니다
tfvars.unsupported.element.inspection.display.name=잘못된 .tfvars 상수
tfvars.unsupported.element.inspection.only.key.values.allowed.error.message='key = value' 요소만 허용됩니다
tfvars.unsupported.element.inspection.illegal.value.type.error.message=프로퍼티 값은 숫자, 큰따옴표로 묶인 문자열, 목록 또는 객체를 사용해야 합니다
tfvars.unsupported.element.inspection.no.quotes.in.argument.name.error.message=인수 이름은 따옴표로 묶일 수 없습니다
tfvars.unsupported.element.inspection.undefined.variable.error.message=정의되지 않은 변수 ''{0}''
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message=잘못된 변수 값 타입입니다. {0}이(가) 필요합니다
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message.string.expected=간단한 값 (문자열 또는 숫자)
tfvars.unsupported.element.inspection.convert.to.double.quoted.string.quick.fix.name=큰따옴표로 묶인 문자열로 변환
type.specification.validator.illegal.type.specification.error.message=타입 사양은 기본 타입 키워드(부울, 숫자, 문자열) 또는 리스트(문자열)과 같은 복합 타입 생성자 호출입니다.
type.specification.validator.exact.type.required.error.message=키워드 {0}은(는) 이런 타입 사양에는 사용할 수 없습니다. 정확한 타입이 필요합니다.
type.specification.validator.collection.argument.required.error.message={0} 타입 생성자에는 요소 타입이 지정된 하나의 인수가 필요합니다
type.specification.validator.object.argument.required.error.message=객체 타입 생성자에는 속성 타입과 값이 맵으로 지정된 하나의 인수가 필요합니다
type.specification.validator.tuple.argument.required.error.message=튜플 타입 생성자에는 요소 타입이 리스트로 지정된 하나의 인수가 필요합니다
type.specification.validator.invalid.type.specification.error.message=키워드 {0}은(는) 올바른 타입 사양이 아닙니다
type.specification.validator.simple.keyword.required.for.call.error.message=메서드 이름은 단순한 키워드여야 합니다
type.specification.validator.no.argument.expected.error.message=기본 타입 키워드 {0}에는 인수가 필요하지 않습니다
type.specification.validator.object.argument.map.required.error.message=객체 타입 생성자에는 키가 속성 이름이고 값이 이에 상응하는 속성 타입으로 만들어진 맵이 필요합니다
type.specification.validator.block.not.allowed.error.message=블록은 허용되지 않고 속성만 허용됩니다
type.specification.validator.object.constructor.map.keys.must.be.attribute.names.error.message=객체 생성자 맵 키는 속성 이름이어야 합니다
type.specification.validator.invalid.type.constructor.error.message=키워드 {0}은(는) 올바른 타입 생성자가 아닙니다
terraform.files.inspection.group.display.name=Terraform 구성
hil.scope.not.available.in.context.inspection.display.name=컨텍스트에서 범위를 사용할 수 없음
hil.scope.not.available.in.context.inspection.illegal.self.use.message=리소스 정의 내 'provisioner' 및 'connection' 블록에서만 'self' 참조가 허용됩니다
hil.unknown.resource.type.inspection.display.name=알 수 없는 리소스 유형이 참조됨
hil.unknown.resource.type.inspection.unknown.resource.type.error.message=알 수 없는 리소스 타입
hil.unresolved.reference.inspection.display.name=해결되지 않는 참조
hil.unresolved.reference.inspection.unresolved.reference.error.message=해결되지 않은 참조 {0}
hil.operation.types.mismatch.inspection.display.name=작업 인수 타입 불일치
hil.operation.types.mismatch.inspection.number.expected.error.message={0} 대신 숫자가 필요합니다
hil.operation.types.mismatch.inspection.boolean.expected.error.message={0} 대신 bool이 필요합니다
hil.operation.types.mismatch.inspection.boolean.or.string.expected.error.message=조건은 bool 값을 포함하는 문자열 또는 bool이어야 합니다
hil.operation.types.mismatch.inspection.both.branches.must.have.same.type.error.message=두 브랜치가 같은 타입이어야 합니다. ''then''은 {0}이고 ''else''는 {1}입니다
hil.convert.to.hcl.inspection.display.name=HIL 표현식을 HCL2로 변환할 수 있습니다
hil.convert.to.hcl.inspection.interpolation.could.be.replaced.with.hcl2.message=보간을 HCL2 표현식으로 바꿀 수 있습니다
hil.convert.to.hcl.inspection.convert.to.hcl2.quick.fix.text=HCL2 표현식으로 변환
hcl.simplify.expression.inspection.display.name=최적화되지 않은 표현식
hcl.simplify.expression.inspection.could.be.replaced.with.list.indexing.message=목록 색인으로 바꿀 수 있습니다(의미가 변경될 수 있음)
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.text=목록 색인으로 바꾸기
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.family.name=표현식 단순화
terraform.name=Terraform
terraform.name.lowercase=terraform
terraform.configuration.title=Terraform
terraform.configuration.type.description=지정된 매개변수로 Terraform을 실행합니다.
run.configuration.no.working.directory.specified=작업 디렉터리가 지정되지 않았습니다.
run.configuration.no.terraform.specified=Terraform 실행 파일 경로가 설정되어 있지 않습니다.
run.configuration.terraform.path.incorrect=Terraform 실행 파일 경로가 올바르지 않습니다.
introduce.variable.title=변수 삽입
refactoring.introduce.selection.error=선택한 요소를 사용하여 리팩터링을 수행할 수 없습니다.
refactoring.introduce.variable.scope.error=이름이 기존 변수와 충돌합니다.
refactoring.introduce.name.error=잘못된 이름
refactoring.introduce.anchor.error=결과 위치를 찾을 수 없습니다.
refactoring.introduce.error=오류 삽입
label.runs.terraform.fmt=Terraform HCL 구성 파일에서 `terraform fmt` 실행
inspection.suppressor.suppress.for.property.action.name=프로퍼티에 대해 억제
inspection.suppressor.suppress.for.element.action.name={0}에 대해 억제
terraform.fmt.commit.error.details.caption=세부 정보(&D)...
terraform.fmt.commit.error.message=<html><body>'terraform fmt'가 일부 파일에서 0이 아닌 코드를 반환했습니다.<br/>커밋을 진행하시겠어요?</body></html>
AddVariableFix.family.name=변수 추가
AddVariableFix.text=변수 ''{0}'' 추가
HCLFileType.description=HashiCorp 구성 언어 파일
HILFileType.description=HashiCorp 보간 언어 파일
TerraformFileType.description=Terraform 구성 파일
code.style.align.properties.title=프로퍼티 정렬
code.style.formatting.options.group.name=서식 지정 옵션
code.style.line.commenter.character.title=줄 주석 문자
code.style.code.conventions.group.name=코드 변환
hcl.code.style.settings.braces=중괄호
hcl.code.style.settings.equals=상등
hcl.code.style.settings.arrays=배열
hcl.code.style.settings.objects=객체
hcl.color.settings.braces.and.operators.brackets=괄호 및 연산자//대괄호
hcl.color.settings.braces.and.operators.braces=괄호 및 연산자//중괄호
hcl.color.settings.braces.and.operators.comma=괄호 및 연산자//쉼표
hcl.color.settings.braces.and.operators.operation.sign=괄호 및 연산자//연산 기호
hcl.color.settings.number=숫자
hcl.color.settings.keyword=키워드
hcl.color.settings.identifier=식별자
hcl.color.settings.comments.line.comment=주석//줄 주석
hcl.color.settings.comments.block.comment=주석//블록 주석
hcl.color.settings.property.name=프로퍼티 이름
hcl.color.settings.block.only.name.type=블록//타입만 있는 블록
hcl.color.settings.block.first.type=블록//첫 번째 타입이 있는 블록
hcl.color.settings.block.second.type=블록//두 번째 타입이 있는 블록
hcl.color.settings.block.other.types=블록//기타 타입이 있는 블록
hcl.color.settings.block.name=블록//블록 이름
hcl.color.settings.string.text=문자열//문자열 텍스트
hcl.color.settings.string.valid.escape.sequence=문자열//올바른 이스케이프 시퀀스
hcl.color.settings.string.invalid.escape.sequence=문자열//잘못된 이스케이프 시퀀스
hil.color.settings.braces.operators.parentheses=괄호 및 연산자//소괄호
hil.color.settings.braces.operators.braces=괄호 및 연산자//중괄호
hil.color.settings.braces.operators.brackets=괄호 및 연산자//대괄호
hil.color.settings.braces.operators.comma=괄호 및 연산자//쉼표
hil.color.settings.braces.operators.operation.sign=괄호 및 연산자//연산 기호
hil.color.settings.braces.operators.dot=괄호 및 연산자//마침표
hil.color.settings.number=숫자
hil.color.settings.string=문자열
hil.color.settings.keyword=키워드
hil.color.settings.identifier=식별자
hil.color.settings.predefined.scope=사전 정의된 범위
hil.color.settings.resource.type.reference=리소스 타입 참조
hil.color.settings.resource.instance.reference=리소스 인스턴스 참조
hil.color.settings.property.reference=프로퍼티 참조
hil.color.settings.valid.escape.sequence=올바른 이스케이프 시퀀스
hil.color.settings.invalid.escape.sequence=잘못된 이스케이프 시퀀스
HCLFindUsagesProvider.type.module=모듈
HCLFindUsagesProvider.type.variable=입력 변수
HCLFindUsagesProvider.type.output.value=출력 값
HCLFindUsagesProvider.type.provider=제공자
HCLFindUsagesProvider.type.resource=리소스
HCLFindUsagesProvider.type.data.source=데이터 소스
HCLFindUsagesProvider.type.terraform.configuration=Terraform 구성
HCLFindUsagesProvider.type.local.values=로컬 값
HCLFindUsagesProvider.type.backend.configuration=백엔드 구성
HCLFindUsagesProvider.type.local.value=로컬 값
HCLFindUsagesProvider.type.property=프로퍼티
HCLFindUsagesProvider.type.dynamic.iterator=동적 반복자
HCLFindUsagesProvider.type.for.loop.variable=루프 변수
HCLFindUsagesProvider.type.named.block=블록({0})
HCLFindUsagesProvider.type.untyped.named.element=<타입이 지정되지 않은 PsiNamedElement {0}>
HCLFindUsagesProvider.type.untyped.non.psi.named.element=<타입이 지정되지 않은 비 PsiNamedElement {0}>
hcl.literal.annotator.property.key=프로퍼티 키
hcl.literal.annotator.block.only.name.identifier=블록의 단일 이름 식별자
hcl.literal.annotator.block.name.identifier=블록의 이름 식별자
hcl.literal.annotator.block.type.1.element=블록 타입 1의 요소
hcl.literal.annotator.block.type.2.element=블록 타입 2의 요소
hcl.literal.annotator.block.type.3.element=블록 타입 3+의 요소
hcl.literal.annotator.missing.closing.quote=닫는 따옴표 누락
hcl.literal.annotator.illegal.octal.escape.sequence=잘못된 8진 이스케이프 시퀀스
hcl.literal.annotator.illegal.hex.escape.sequence=잘못된 16진 이스케이프 시퀀스
hcl.literal.annotator.illegal.unicode.escape.sequence=잘못된 유니코드 이스케이프 시퀀스
hcl.literal.annotator.illegal.escape.sequence=잘못된 이스케이프 시퀀스
hcl.literal.annotator.argument.names.must.not.be.quoted=인수 이름은 따옴표로 묶일 수 없습니다
hcl.literal.annotator.illegal.number.literal=올바르지 않은 숫자 리터럴
hcl.literal.annotator.add.closing.quote.quick.fix.text=닫는 따옴표 추가
hil.literal.annotator.unwrap.string.quick.fix.text=식별자로 변환
hil.variable.annotator.expression.start.expected=포현식 시작 필요
hil.variable.annotator.expanded.function.argument.must.be.immediately.followed.by.closing.parentheses=확장된 함수 인수 바로 뒤에 닫는 소괄호가 필요합니다
hil.introduce.variable.handler.dialog.caption=변수 삽입
hil.inplace.variable.introducer.title=변수 삽입
terraform.executable.macro.description=Terraform 실행 파일 경로
terraform.settings.executable.path.label=Terraform 실행 파일 경로
terraform.settings.reloading.terraform.model.progress.title=Terraform 모델 다시 로드 중
terraform.run.configuration.name=Terraform 실행
terraform.run.configuration.type.plan.name.suffix=계획
terraform.run.configuration.type.apply.name.suffix=적용
introduce.dialogs.replace.all.checkbox.title={0}(찾은 항목 {1}개)
TFExecutor.finished.successfully.notification.text=성공적으로 종료되었습니다
TFExecutor.interrupted.notification.text=중단됨
TFExecutor.unknown.error.notification.text=알 수 없는 오류. 자세한 내용은 로그를 참조하세요
TFExecutor.failed.to.run.notification.text=실행하지 못했습니다
terraform.settings.reload.terraform.metadata.model=Terraform 메타데이터 모델 다시 로드
notification.group.terraform.execution=Terraform 실행이 완료되었습니다
action.GenerateTFResource.text=리소스...
action.GenerateTFDataSource.text=데이터 소스...
action.GenerateTFVariable.text=변수...
action.GenerateTFOutput.text=출력...
action.GenerateTFProvider.text=제공자...
action.GenerateTFModule.text=모듈...
action.TFFmtFileAction.text=파일 서식 지정
action.TFFmtFileAction.description='terraform fmt' 유틸리티로 선택한 파일 서식 지정
group.TFTools.text=Terraform 도구
group.TFTools.description=Terraform 외부 도구
