
facet.name.general=일반
facet.column.name.options=옵션
facet.column.name.plugin=플러그인
facet.name.compiler.plugins=컴파일러 플러그인
facet.text.following.options.are.not.correct=다음 옵션이 올바르지 않습니다.
facet.label.text.target.platform=대상 플랫폼:
facet.label.text.selected.target.platforms=선택한 대상 플랫폼:
facet.label.text.the.project.is.imported.from.external.build.system.and.could.not.be.edited=외부 빌드 시스템에서 가져온 프로젝트이므로 편집할 수 없습니다.
facet.checkbox.text.use.project.settings=프로젝트 설정 사용
facet.label.text.project.settings.that.are.used.for.this.facet=이 패싯에 사용되는 프로젝트 설정:
facet.text.multiplatform=멀티플랫폼
facet.link.text.edit.project.settings=프로젝트 설정 편집
facet.error.text.at.least.one.target.platform.should.be.selected=하나 이상의 대상 플랫폼을 선택해야 합니다.
facet.text.following.arguments.are.redundant=다음 인수가 중복됩니다. {0}
facet.text.following.arguments.override.facet.settings=다음 인수가 패싯 설정을 재정의합니다. {0}
facets.editor.general.tab.label.depends.on.0=기준: {0}.
configuration.description.plain.put.to.global.scope=일반(전역 범위에 배치)
configuration.description.amd=AMD
configuration.description.commonjs=CommonJS
configuration.description.umd.detect.amd.or.commonjs.if.available.fallback.to.plain=UMD(가능한 경우 AMD 또는 CommonJS를 탐지하여 일반으로 대체)
configuration.description.always=항상
configuration.description.never=안 함
configuration.description.when.inlining.a.function.from.other.module.with.embedded.sources=포함된 소스가 있는 다른 모듈의 함수를 인라인화할 경우
configuration.title.kotlin.compiler.js.option.output.prefix.browse.title=생성된 코드 앞에 추가할 파일 선택
configuration.title.kotlin.compiler.js.option.output.postfix.browse.title=생성된 코드 뒤에 추가할 파일 선택
configuration.title.choose.output.directory=출력 디렉터리 선택
configuration.warning.text.modules.override.project.settings={0} 모듈이 프로젝트 설정을 재정의합니다.
configuration.warning.text.following.modules.override.project.settings=다음 모듈은 프로젝트 설정을 재정의합니다.
configuration.text.and=그리고
configuration.text.other.s=Otros
loading.available.versions.from.maven=사용 가능한 버전을 Maven에서 로드 중...
failed.fetching.all.available.versions.from.maven=Maven에서 사용 가능한 모든 버전을 가져올 수 없습니다
configuration.name.kotlin.compiler=Kotlin 컴파일러
configuration.text.bundled.0.jps.version=번들({0})
configuration.text.0.unsupported.jps.version={0}(지원되지 않음)
deprecated.jvm.version=(지원 중단됨)
configuration.warning.text.language.version.unsupported=언어 버전 {0}은(는) 더 이상 지원되지 않습니다
configuration.warning.text.api.version.unsupported=API 버전 {0}은(는) 더 이상 지원되지 않습니다
kotlin.compiler.js.option.output.prefix=생성된 코드 앞에 추가할 파일(&P):
kotlin.compiler.js.option.output.postfix=생성된 코드에 추가할 파일(&O):
kotlin.compiler.option.generate.no.warnings=컴파일러 경고 보고(&W)
kotlin.compiler.option.additional.command.line.parameters=추가 명령줄 매개변수(&A):
additional.command.line.parameters=추가 명령줄 매개변수
kotlin.compiler.jvm.option.panel.title=Kotlin에서 JVM으로
kotlin.compiler.js.option.panel.title=Kotlin에서 JavaScript로
kotlin.script.option.panel.title=Kotlin 스크립트(베타)
kotlin.compiler.js.option.generate.sourcemaps=소스 맵 생성(&S)
embed.source.code.into.source.map=소스 코드를 소스 맵에 포함:
kotlin.compiler.js.option.output.copy.files=라이브러리 런타임 파일 복사(&C)
enable.incremental.compilation=증분 컴파일 활성화
keep.compiler.process.alive.between.invocations=호출 사이에 컴파일러 프로세스 지속
module.kind=모듈 종류(&K):
destination.directory=대상 디렉터리(&D)
kotlin.compiler.lib=lib
kotlin.compiler.version=&Kotlin 컴파일러 오류
target.jvm.version=대상 JVM 버전(&J)
language.version=Versión del &lenguaje
api.version=API 버전(&I)
