
#replacement dialog preview
structural.replace.preview.dialog.title=구조 대체 미리보기
replace.preview.oktext=바꾸기(&R)
replacement.code=대체 코드

# Search Dialog specific titles/options
structural.search.title=구조 검색
search.template=검색 템플릿:
template.name.button=템플릿 이름

save.template.description.button=현재 템플릿 저장
save.template=템플릿 저장(&S)…
save.inspection.action.text=템플릿을 검사로 저장…
save.template.action.text=저장된 템플릿에 추가…
create.inspection.from.template.action.text=템플릿에서 검사 생성…
remove.template=저장된 템플릿 제거
new.template.defaultname=이름 없음

search.in.injected.checkbox=삽입된 코드(&J)
reformat.checkbox=서식 다시 지정(&R)
use.static.import.checkbox=정적 import 문 사용(&I)
search.target.label=대상(&T):

filter.button=제어자 패널 전환
filter.button.description=변수 제어자 패널을 전환합니다
templates.button=기존 템플릿 패널 토글
templates.button.description=기존 템플릿 패널 토글
pin.button=검색 후 대화상자 유지
pin.button.description=검색 후에도 대화상자를 닫지 않고 유지합니다

open.in.new.tab.checkbox=새 탭에서 결과 열기(&B)
search.dialog.file.type.label=언어(&L):

import.template.action=클립보드에서 템플릿 가져오기
export.template.action=클립보드로 템플릿 내보내기
no.template.found.warning=클립보드에 템플릿이 없습니다.
import.template.script.warning.title=경고: 템플릿에 스크립트가 있습니다
import.template.script.corrupted=클립보드에 손상된 템플릿이 있습니다.
import.template.script.warning=가져온 템플릿에 {1,choice,1#1개의 Groovy 스크립트 제어자|1<{1}개의 Groovy 스크립트 제어자}가 있어 임의의 스크립트가 전체 {0} 내부 코드에 액세스할 수 있습니다. 이 템플릿을 사용하기 전에 스크립트가 손상을 주지 않는지 확인하세요.
switch.to.search.action=검색으로 전환
switch.to.replace.action=대체로 전환

#search usage view specific
looking.in.progress.message={0}에서 검색 중
found.progress.message={0}개의 일치 항목을 찾았습니다
occurrences.of=템플릿 ''{0}''와(과) 일치하는 조각
occurrences.of.0.in.1={1} 내 템플릿 ''{0}''
replace.occurrences.of.0.with.1.in.2={2} 내 ''{0}''을(를) ''{1}''(으)로 바꾸기
found.occurrences={0}에서 일치 항목이 발견되었습니다.
targets.node.text=구조 검색 템플릿

# search dialog messages
this.pattern.is.malformed.message=지정된 템플릿의 형식이 잘못되었습니다
incorrect.pattern.message=잘못된 템플릿

# filters
count.filter.name=집계
reference.filter.name=참조
script.filter.name=스크립트
text.filter.name=텍스트
type.filter.name=타입
context.filter.name=컨텍스트
add.filter.title=제어자 추가
add.filter.label=제어자 추가
add.script.label=스크립트 추가
count.label=개수={0}
default.label= 디폴트 값
max.label=최대=
min.label=최소=
reference.label=참조=
reference.0.label=참조={0}
script.label=스크립트=
script.0.label=스크립트={0}
text.label=텍스트=
text.0.label=텍스트={0}
type.label=타입=
type.0.label=타입={0}
context.label=컨텍스트=
context.0.label=컨텍스트={0}
within.hierarchy.label=, 계층 구조 내
whole.words.label=, 전체 단어
within.type.hierarchy.check.box=타입 계층 구조 내
regex.check.box=정규식
no.filters.whole.template.label=전체 템플릿에 추가된 제어자가 없습니다
no.filters.for.0.label=${0}$에 추가된 제어자가 없습니다
no.script.for.0.label=${0}$에 추가된 스크립트가 없습니다
filters.for.whole.template.title=전체 템플릿의 제어자:
filters.for.0.title=${0}$의 제어자:

type.filter.help.text=<p>일치하는 표현식의 타입은 제공된 "|"로 구분된 패턴에 대해 검사됩니다. <p>패턴을 반전시키려면 "!"를 사용하세요.
text.filter.help.text=<p>일치하는 텍스트는 제공된 패턴에 대해 검사됩니다. <p>패턴을 반전시키려면 "!"를 사용하세요. <p>정규 표현식이 지원됩니다.
script.filter.match.variable.help.text=<p>GroovyScript IntelliJ API를 사용하여 검색 결과를 제어하세요. 지정된 스크립트가 <code>false</code>를 반환하면 발견된 요소는 검색 결과에 나오지 않습니다. 부울이 아닌 스크립트 결과는 부울로 변환됩니다.<p>이용 가능한 변수: {0}
script.filter.replacement.variable.help.text=<p>고급 이름 재지정, 다시 쓰기 또는 리팩터링을 위해 GroovyScript Intellij API로 사용자 지정 대체를 생성하세요. 바꾸면 대체 템플릿 내 변수가 지정된 스크립트의 문자열 결과로 대체됩니다. <p>이용 가능한 변수: {0}
reference.filter.help.text=<p>참조된 요소는 제공된 템플릿과 비교하여 확인됩니다.
invert.filter=제어자 반전

# Replace Dialog specific titles/options
structural.replace.title=구조 바꾸기
shorten.fully.qualified.names.checkbox=완전히 정규화된 이름 줄이기(&Q)
replacement.template.label=대체 템플릿:

#replacement usage view specific
preview.replacement.button=대체 미리보기(&P)
do.replace.all.button=모두 바꾸기(&A)
replace.selected.button=선택 항목 바꾸기(&R)

# predefined configuration categories
draft.template.node=초안 탬플릿
expressions.category=Java/표현식
recent.category=최근
user.defined.category=저장된 템플릿
xml_html.category=XML//HTML
generics.category=Java/제네릭
misc.category=Java/기타
metadata.category=Java/주석, Javadoc 및 메타데이터
class.category=Java/클래스 기반
operators.category=Java/연산자
j2ee.category=Java/Java EE
interesting.category=Java/관심

# predefined configuration names

predefined.configuration.method.calls=메서드 호출
predefined.configuration.struts.1.1.actions=Struts 1.1 액션
predefined.configuration.ejb.interface=EJB 인터페이스
predefined.configuration.servlets=서블릿
predefined.configuration.unboxing.in.method.calls=메서드 호출 내 언박싱
predefined.configuration.boxing.in.method.calls=메서드 호출 내 박싱
predefined.configuration.unboxing.in.declarations=선언 내 언박싱
predefined.configuration.boxing.in.declarations=선언 내 박싱
predefined.configuration.any.unboxing=언박싱된 표현식
predefined.configuration.any.boxing=박싱된 표현식
predefined.configuration.filters=제어자
predefined.configuration.session.ejb=세션 EJB
predefined.configuration.fields.variables.read=필드/변수 읽기
predefined.configuration.symbol=심볼
predefined.configuration.inner.classes=내부 클래스
predefined.configuration.junit.test.cases=Junit 테스트 케이스
predefined.configuration.ifs=If
predefined.configuration.anonymous.classes=<html>Anonymous classes</html>
predefined.configuration.local.classes=지역 클래스
predefined.configuration.javadoc.tags=Javadoc 태그
predefined.configuration.all.methods.of.the.class.within.hierarchy=클래스의 모든 메서드(계층 구조 내)
predefined.configuration.similar.methods.structure=유사 메서드 구조
predefined.configuration.class.implements.two.interfaces=2개의 인터페이스를 구현하는 클래스
predefined.configuration.bean.info.classes=Bean 정보 클래스
predefined.configuration.all.expressions.of.some.type=일부 타입의 모든 표현식
predefined.configuration.variables.of.generic.types=제네릭 타입의 변수
predefined.configuration.diamond.operators=다이아몬드 연산자
predefined.configuration.method.returns.bounded.wildcard=메서드가 바운드된 와일드카드를 반환합니다
predefined.configuration.generic.constructors=제네릭 생성자
predefined.configuration.comments=주석
predefined.configuration.fields_variables.with.given.name.pattern.updated=제공된 이름 패턴이 업데이트된 필드/변수
predefined.configuration.trys=Try
predefined.configuration.try.without.resources=리소스 및 catch 블록이 없는 try 문
predefined.configuration.switch.with.branches=브랜치가 거의 없는 switch 문 및 표현식
predefined.configuration.labeled.break=라벨 지정된 break 문
predefined.configuration.double.checked.locking=이중 검사된 락
predefined.configuration.block.dcls=블록 선언
predefined.configuration.pattern.matching.instanceof=instanceof에 대한 패턴 매칭
predefined.configuration.methods.of.the.class=생성자 및 메서드
predefined.configuration.deprecated.methods=곧 사용할 수 없게 될 메서드
predefined.configuration.instanceof=Instanceof
predefined.configuration.implementors.of.interface.within.hierarchy=인터페이스 구현자(계층 구조 내)
predefined.configuration.generic.casts=제네릭 형 변환
predefined.configuration.field.selections=필드 선택 범위
predefined.configuration.fields.of.the.class=클래스의 필드
predefined.configuration.array.access=배열 액세스
predefined.configuration.usage.of.derived.type.in.cast=형 변환 내 파생 타입의 사용 위치
predefined.configuration.annotated.methods=어노테이션이 추가된 메서드
predefined.configuration.not.annotated.methods=어노테이션이 없는 메서드
predefined.configuration.annotation.declarations=어노테이션 선언
predefined.configuration.annotations=<html>어노테이션</html>
predefined.configuration.annotated.class=어노테이션 추가된 클래스, 인터페이스 및 열거형
predefined.configuration.entity.ejb=엔티티 EJB
predefined.configuration.generic.methods=제네릭 메서드
predefined.configuration.cloneable.implementations=복제 가능한 구현
predefined.configuration.xdoclet.metadata=XDoclet 메타데이터
predefined.configuration.type.var.substitutions.in.instanceof.with.generic.types=제네릭 타입을 가진 intanceof 내 타입 변수 대체
predefined.configuration.singletons=싱글턴
predefined.configuration.switches=Switch
predefined.configuration.foreaches=Foreach 루프
predefined.configuration.interfaces=인터페이스
predefined.configuration.string.literals=문자열 리터럴
predefined.configuration.all.inner.classes.within.hierarchy=모든 내부 클래스(계층 구조 내)
predefined.configuration.direct.subclasses=직접 하위 클래스
predefined.configuration.javadoc.annotated.methods=Javadoc 어노테이션이 추가된 메서드 및 생성자
predefined.configuration.javadoc.annotated.fields=Javadoc 어노테이션이 추가된 필드
predefined.configuration.assignments=대입
predefined.configuration.casts=형 변환
predefined.configuration.serializable.classes.and.their.serialization.implementation=직렬화 가능한 클래스 및 해당 클래스의 직렬화 구현
predefined.configuration.annotated.fields=어노테이션이 추가된 필드
predefined.configuration.generic.classes=제네릭 클래스
predefined.configuration.javadoc.annotated.class=Javadoc 어노테이션이 추가된 클래스
predefined.configuration.constructors.of.the.class=클래스 생성자
predefined.configuration.typed.symbol=타입 지정된 심볼
predefined.configuration.all.fields.of.the.class=클래스의 모든 필드
predefined.configuration.instance.fields.of.the.class=클래스의 인스턴스 필드
predefined.configuration.packagelocal.fields.of.the.class=Package-private 필드
predefined.configuration.classes=클래스
predefined.configuration.classes.interfaces.enums=클래스, 인터페이스 및 열거형
predefined.configuration.new.expressions=새 표현식
predefined.configuration.lambdas=람다
predefined.configuration.method.references=메서드 참조
predefined.configuration.string.concatenations=피연산자가 여러 개인 문자열 연결
predefined.configuration.deprecated.method.calls=사용 중단된 메서드에 대한 메서드 호출
predefined.configuration.methods.with.final.parameters=final 매개변수가 있는 메서드 및 생성자
predefined.configuration.class.static.blocks=static 이니셜라이저
predefined.configuration.class.instance.initialization.blocks=인스턴스 이니셜라이저
predefined.configuration.class.any.initialization.blocks=임의의 이니셜라이저
predefined.configuration.logging.without.if=if 없이 로그 기록
predefined.configuration.assert.without.description=설명 없는 assert 문
predefined.configuration.class.with.parameterless.constructors=매개변수 없는 생성자를 가진 클래스
predefined.configuration.static.fields.without.final=final이 아닌 static 필드
predefined.configuration.sample.method.invokation.with.constant.argument=상수 인수로 샘플 메서드 호출
predefined.configuration.interfaces.having.no.descendants=구현되거나 확장되지 않은 인터페이스
predefined.configuration.enums=열거형
predefined.configuration.records=기록
predefined.configuration.comments.containing.word=주어진 단어를 포함하는 주석
predefined.configuration.xml.attribute.referencing.java.class=Java 클래스를 참조하는 XML 속성
predefined.configuration.statement.in.if=if 내 구문
predefined.configuration.type.text={0} 검색 템플릿
predefined.configuration.type.text.user.defined={0} 검색 템플릿, 사용자 정의

# edit variable constraint dialog options
invalid.regular.expression=잘못된 정규식: {0}
unlimited.placeholder=무제한

# tooltip message fragment on ss variables
min.occurs.tooltip.message=[{0},{1}]
text.tooltip.message=텍스트{0,choice,0#=|1#≠}{1}{2,choice,0#|1#, 전체 단어}{3,choice,0#|1#, 계층 구조 내}
hierarchy.tooltip.message=계층 구조 내
exprtype.tooltip.message=타입{0,choice,0#=|1#≠}{1}{2,choice,0#|1#, 계층 구조 내}
#expected.type.tooltip.message=expected type{0,choice,0#=|1#\u2260}{1}{2,choice,0#|1#, within hierarchy}
script.tooltip.message=스크립트
#within.constraints.tooltip.message=within{0,choice,0#=|1#\u2260}{1}
reference.target.tooltip.message=참조{0,choice,0#=|1#≠}{1}
replacement.variable.is.not.defined.message=검색 변수 ''{0}''을(를) 알 수 없거나 대체 변수 ''{0}''에 스크립트가 없습니다
replacement.variable.is.not.valid=대체 변수 ''{0}''에 스크립트 코드 문제가 없습니다. {1}
replacement.template.is.not.expression.error.message=표현식을 비표현식으로 바꿀 수 없습니다.
replacement.not.supported.for.filetype=대체는 {0} 파일 타입에 대해 지원되지 않습니다.
search.template.is.not.expression.error.message=비표현식을 표현식으로 바꿀 수 없습니다.

modify.editor.content.command.name=에디터 내용 수정
option.is.not.recognized.error.message=제약 조건 ''{0}''을(를) 인식할 수 없습니다.

error.only.one.target.allowed=대상이 하나만 허용됩니다.
error.condition.only.on.first.variable.reference=제약 조건은 변수의 첫 번째 참조에서만 허용됩니다.
error.two.different.type.constraints=2가지 다른 타입의 제약 조건
error.incorrect.regexp.constraint=잘못된 정규식 제약 조건: {1}에 대한 {0}
error.expected.character=작은 따옴표 뒤에 문자가 필요합니다.
error.overflow=값 오버플로
error.expected.digit=숫자가 필요합니다.
error.expected.brace1=숫자, '}' 또는 ','가 필요합니다.
error.expected.brace2=숫자 또는 '}'가 필요합니다.
error.empty.quantifier=수량자가 비어 있습니다.
error.expected.condition=''{0}'' 뒤에 상수가 필요합니다.
error.expected.condition.name=상수 이름이 누락되었습니다.
error.expected.value=''{0}''이(가) 필요합니다
error.unexpected.value=예기치 않은 ''{0}''
invalid.modifier.type=제어자 타입 {0}이(가) 유효하지 않습니다
error.argument.expected=''{0}'' 제약 조건에서 인수가 필요합니다.
error.cannot.invert=''{0}'' 제약 조건을 반전시킬 수 없습니다.
error.only.applicable.to.complete.match=제약 조건 ''{0}''은(는) 전체 일치에만 적용할 수 있습니다.
error.bad.character.literal=잘못된 문자 리터럴
error.bad.literal=잘못된 리터럴
error.pattern.recursively.references.itself=템플릿이 재귀적으로 자신을 참조합니다
error.configuration.0.not.found=템플릿 ''{0}''을(를) 찾을 수 없습니다
error.script.constraint.for.0.has.problem.1={0}의 스크립트 제약에 문제 {1}이(가) 있습니다
error.in.groovy.parser=Groovy 파서 내 오류

SSRInspection.replace.with=''{0}''(으)로 바꾸기
SSRInspection.family.name=구조적으로 바꾸기...
SSRInspection.display.name=구조 검색 검사
SSRInspection.add.search.template.button=검색 템플릿 추가...
SSRInspection.add.replace.template.button=대체 템플릿 추가...
overwrite.message=같은 이름의 템플릿이 이미 있습니다. 기존 템플릿을 바꾸면 해당 템플릿의 현재 내용을 덮어쓰게 됩니다.
overwrite.title="{0}"이(가) 있습니다. 바꾸시겠어요?
template.in.use.message=템플릿 ''{0}''이(가) 템플릿 ''{1}''에서 사용됩니다. 제거하시겠어요?
ssr.will.not.find.anything=지정된 템플릿이 범위 ''{0}'' 내 무엇과도 일치하지 않습니다
inspection.script.problem={0}\n 구조 검색 검사 템플릿 ''{1}'' 내에서 오류 발생
search.template.problem=구조 검색: {0}
search.script.problem=구조 검색 스크립트가 예외를 던졌습니다. {0}
complete.match.variable.name=전체 일치
template.in.use.title=사용 중인 템플릿 ''{0}''

structural.search.group.name=구조 검색
edit.metadata.button=메타데이터 편집...
add.pattern.action=템플릿 추가
templates.title=템플릿:
add.inspection.button=구조 검색 \\&\\& 바꾸기 검사 추가
remove.inspection.button=구조 검색 \\&\\& 바꾸기 검사 제거

meta.data.dialog.title=구조 검색 검사
inspection.name.label=검사 이름:
problem.descriptor.label=문제 툴팁(매크로 #ref을(를) 사용하여 강조 표시된 코드 삽입):
description.label=설명:
suppress.id.label=억제 ID:
no.description.message=제공된 설명이 없습니다

name.must.not.be.empty.warning=이름이 공백일 수 없습니다.
inspection.with.name.exists.warning=이름이 ''{0}''인 검사가 이미 있습니다.
suppress.id.must.match.regex.warning=억제 ID가 정규 [a-zA-Z_0-9.-]+와 일치해야 합니다.
suppress.id.in.use.warning=억제 ID ''{0}''이(가) 다른 검사에서 이미 사용되고 있습니다.
button.replace=바꾸기
popup.content.directory=디렉터리가 아닙니다
command.name.adjust.line.indent=줄 들여쓰기 조정
command.name.live.search.template.builder=라이브 검색 템플릿 빌더
tooltip.preconfigured.search.patterns=<p>사전 구성된 검색 템플릿이 {0}(으)로 자동 완성됩니다.<p>제공된 템플릿은 대상 템플릿 컨텍스트를 제약하는 데 사용됩니다
status.bar.text.results.found.in.current.file=현재 파일에서 {0}개 결과를 찾았습니다
predefined.template.xml.tag=XML 태그
predefined.template.xml.attribute=XML 속성
predefined.template.html.attribute=HTML 속성
predefined.template.xml.attribute.value=XML 속성 값
predefined.template.html.attribute.value=XML 속성 값
predefined.template.xml.html.tag.value=XML/HTML 태그 값
predefined.template.ul.or.ol=<ul> 또는 <ol>
predefined.template.li.not.contained.in.ul.or.ol=<li>가 <ul> 또는 <ol>에 포함되어 있지 않습니다
pattern.context.class.member=클래스 멤버
pattern.context.default=디폴트

# file type combo box in structural search dialog
file.type.pattern.context={0}~{1}

#history drop down and inspection templates box
replace.configuration.display.text={0} ⇨ {1}

# SSR advertising in the empty inspection tree
inspection.tree.create.inspection.search.template=구조 검색 템플릿 사용 중…
inspection.tree.create.inspection.replace.template=구조 교체 템플릿 사용 중…