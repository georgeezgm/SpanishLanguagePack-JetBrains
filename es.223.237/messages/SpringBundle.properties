model.property.error.message=프로퍼티 ''{0}''을(를) 확인할 수 없습니다
model.create.factory.method.quickfix.message=factory 메서드 ''{0}'' 생성
model.create.factory.method.quickfix.family.name=factory 메서드 생성
model.add.constructor.args.for.method.quickfix.message=''{0}'' 에 대한 <constructor-arg> 추가
model.add.constructor.args.for.method.quickfix.message.family.name=<constructor-arg> 추가
model.method.signature.parse.error.message=시그니처 ''{0}'' 을(를) 분석할 수 없습니다
model.method.resolve.class.error.message=클래스 ''{0}'' 을(를) 해결할 수 없습니다
model.bean.not.found.error.message=이름이 ''{0}'' 인 bean을 찾을 수 없습니다
model.method.choose.method=메서드 선택
model.bean.quickfix.message=새 bean ''{0}'' 생성
model.bean.quickfix.message.family.name=새 bean 생성
model.inspection.display.name=Spring 모델
model.inspection.display.bean.name.convention=Spring bean 이름 지정 규칙
model.inspection.bean.property.value=삽입 값 유형
model.inspection.bean.constructor.arg=생성자 태그 삽입
model.inspection.bean.autowiring=Spring bean 자동 주입
model.inspection.validator.progress.text=Spring 모델 유효성 검사 중...
model.goto.related.item.group.context=Spring 컨텍스트\: "{0}"
model.goto.related.item.group.application.context=Spring 애플리케이션 컨텍스트
model.goto.related.item.group.test.context=Spring 테스트 컨텍스트
scopes.inspection.display.name=Spring 범위
inspection.group.code=코드
inspection.group.setup=설정
inspection.group.xml=XML
model.inspection.invalid.identifier.message=''{0}'' 이(가) bean 이름 지정 규칙을 준수하지 않습니다
model.inspection.invalid.lowercase.name.message=''{0}'' 은(는) 소문자로 시작해야 합니다
model.inspection.bean.factory.method=Spring bean factory 메서드
model.inspection.bean.public.factory.method=Spring bean public factory 메서드
method.must.be.static=factory 메서드 ''{0}'' 은(는) static이어야 합니다
method.must.not.be.static=factory 메서드 ''{0}'' 은(는) static이면 안 됩니다
method.must.be.public=factory 메서드 ''{0}'' 은(는) public이어야 합니다
method.cannot.instantiate.bean=factory 메서드 ''{0}'' 은(는) bean을 인스턴스화할 수 없습니다
bean.autowiring.by.type.none=자동 주입을 할 수 없습니다. ''{0}'' 유형의 bean을 찾을 수 없습니다.
bean.autowiring.by.type.no.beans=자동 주입을 할 수 없습니다. ''{0}'' 또는 ''{1}'' 유형의 bean을 찾을 수 없습니다.
bean.autowiring.by.type=자동 주입을 할 수 없습니다. ''{0}'' 유형의 bean이 하나 이상 있습니다. Bean\: {1}. 프로퍼티\: ''{2}''
bean.class.autowired.by.type=자동 주입을 할 수 없습니다. ''{0}'' 유형의 bean이 하나 이상 있습니다.
bean.autowiring.by.type.no.parameter.for.autowired.method=매개 변수 없이 자동 주입 {0}
bean.class.autowired.incorrect.qualifier.type=자동 주입을 할 수 없습니다. 정규화된 bean은 ''{0}'' 유형이어야 합니다.
bean.class.unknown.qualifier.bean=한정자가 ''{0}'' 인 bean을 찾을 수 없습니다
bean.bad.property.type=''{0}'' 유형의 프로퍼티는 ''{1}'' 에 의해 삽입될 수 없습니다
idref.cannot.be.added.in.collection=''{0}'' 유형의 컬렉션에 추가할 수 없습니다
timeout.parsing.bean=사용자 지정 bean 탐색이 너무 오래 걸렸습니다
process.unexpectedly.terminated=예기치 않게 종료된 프로세스{0}
try.parsing.custom.beans=\ 사용자 지정 bean 파싱 시도
internal.error.parsing.bean=bean을 분석하는 중에 내부 오류가 발생했습니다. 출력\:\n\
cannot.find.bean.constructor.with.parameters.count=클래스 ''{0}'' 내 일치하는 생성자를 찾을 수 없습니다
cannot.find.factory.method.with.parameters.count=클래스 내 일치하는 factory 메서드를 찾을 수 없습니다
cannot.find.constructor.arg.index=인수 색인이 {0} 인 생성자를 찾을 수 없습니다
cannot.find.constructor.arg.index.in.class=클래스 {1} 내 인수 색인이 {0} 인 생성자를 찾을 수 없습니다
cannot.find.factory.method.index=클래스 {1} 내 인수 색인이 {0} 인 factory 메서드를 찾을 수 없습니다
incorrect.constructor.arg.index.not.unique=색인은 고유해야 합니다
constructor.arg.incorrect.value.type=삽입된 값 유형은 생성자 인수 유형과 일치해야 합니다
spring.bean=Spring Bean
spring=Spring
config.display.name=구성
config.no.contexts.defined=정의된 애플리케이션 컨텍스트가 없습니다
spring.bean.class.tooltip.navigate.declaration=Spring bean 선언으로 이동
navigate.to.autowired.dependencies=자동 주입 종속성으로 이동
navigate.to.by.name.autowired.dependencies=''byName'' 자동 주입 종속성으로 이동
autowired.dependencies.goto.related.item.group.name=자동 주입 종속성
spring.bean.show.beans.candidates.title=Bean 후보
gutter.navigate.no.matching.beans=일치하는 bean을 찾을 수 없습니다
spring.bean.class.navigate.choose.class.title=Bean 선택
spring.bean.property.tooltip.navigate.declaration=Spring bean 프로퍼티로 이동
spring.bean.property.navigate.choose.class.title=프로퍼티를 포함한 Bean 선택
spring.bean.constructor.tooltip.navigate.declaration=Spring bean으로 이동
spring.bean.constructor.navigate.choose.class.title=생성자를 포함한 Bean 선택
spring.bean.methods.tooltip.navigate.declaration=Spring bean 메서드 선언으로 이동
spring.bean.method.tooltip.navigate.declaration=Spring bean {0} 메서드 선언으로 이동
spring.bean.filter.tooltip=필터 요소에 입력 시작
config.file.not.found=파일을 찾을 수 없음
config.files.not.found=파일을 찾을 수 없습니다.
config.file.is.not.spring=파일이 Spring 구성으로 인식되지 않습니다
config.unmapped.configs.popup.title={0} 내 매핑되지 않은 Spring 구성 파일
spring.bean.lookup.method.inspection=조회 메서드
spring.bean.lookup.method.incorrect.return.type=잘못된 조회 메서드 반환 유형
spring.bean.lookup.method.constructor.not.allowed=생성자는 허용되지 않습니다
spring.bean.lookup.method.return.type.mismatch=조회 메서드 반환 유형은 ''{0}'' bean 클래스와 일치하지 않습니다
spring.bean.lookup.method.bean.has.no.class=''{0}'' bean에는 클래스가 없습니다
spring.bean.lookup.method.must.be.public.or.protected=메서드는 public이거나 protected이어야 합니다
spring.bean.lookup.method.must.have.no.parameters=메서드에 매개변수가 있으면 안 됩니다.
spring.bean.lookup.method.must.be.not.static=static 메서드는 허용되지 않습니다
model.inspection.injection.value.style=Spring 삽입 값 스타일
model.inspection.injection.value.style.message=명시적 <value> 요소 사용 위치
model.inspection.injection.value.style.value.fix=<value> 요소를 "{0}" 속성으로 바꾸기
model.inspection.injection.value.style.value.fix.family.name=<value> 요소를 속성으로 바꾸기
model.inspection.injection.value.style.ref.fix=<ref> 요소를 "{0}" 속성으로 바꾸기
model.inspection.injection.value.style.ref.fix.family.name=<ref> 요소를 속성으로 바꾸기
model.inspection.injection.value.style.ref.message=명시적 <ref> 요소 사용 위치
spring.bean.property=프로퍼티
spring.bean.constructor.arg=생성자 인수
spring.bean.map.entry=맵 항목
model.inspection.injection.value.consistency=삽입 값 일관성
model.inspection.injection.value.message={0} 은(는) 참조 또는 값을 지정해야 합니다
spring.bean.property.value.inconsistency.ref.or.value.sub.element.must.defined={0} 은(는) "ref" 속성 또는 "value" 속성 또는 하위 요소만 포함할 수 있습니다
spring.bean.property.value.inconsistency.more.one.sub.element={0} 에는 하위 요소 하나 이상이 포함될 수 없습니다
spring.bean.ref.attributes.inconsistency=<ref> 태그는 "bean" 속성 또는 "local" 속성 또는 "parent" 속성만 포함할 수 있습니다
spring.bean.ref.attributes.must.specify=<ref> 태그는 bean을 지정해야 합니다
spring.bean.idref.attributes.inconsistency=<idref> 태그는 "bean" 속성 또는 "local" 속성만 포함할 수 있습니다
spring.bean.idref.attributes.must.specify=<idref> 태그는 bean을 지정해야 합니다
model.inspection.injection.value.entry.key=맵 항목은 키를 지정해야 합니다
spring.bean.property.value.inconsistency.key=맵 항목은 "key" 속성 또는 "key-ref" 속성 또는 <key> 하위 요소만 포함할 수 있습니다
model.inspection.injection.value.add.ref="ref" 속성 추가
model.inspection.injection.value.add.list=<list> 태그 추가
model.inspection.injection.value.add.set=<set> 태그 추가
model.inspection.injection.value.add.array=<array> 태그 추가
model.inspection.injection.value.add.map=<map> 태그 추가
spring.bean.abstract.bean.references.inspection=추상 bean 참조
spring.bean.referenced.by.abstract.bean=추상 bean은 사용될 수 없습니다
spring.bean.autowire.escape.inspection.name=자동 주입 종속성
spring.bean.use.autowire=자동 주입 종속성의 불필요한 사용
spring.bean.autowire.escape=자동 주입 종속성을 명시적으로 만들기
spring.bean.duplicated.bean.name.inspection=bean 이름 복제
spring.bean.duplicate.bean.name=Bean 이름이 복제되었습니다
spring.bean.instantiation.by.factory=Spring Bean(팩토리 bean에 의해 인스턴스화됨)
spring.bean.instantiation.using.factory.method=Spring Bean(static factory 메서드에 의해 인스턴스화됨)
spring.generate.properties=프로퍼티...
spring.generate.setter.dependencies=Setter 종속성...
spring.generate.constructor.dependencies=생성자 종속성...
action.Spring.Beans.Generate.Setter.Dependency.Action.text=Spring setter 종속성...
action.Spring.Beans.Generate.Constructor.Dependency.Action.text=Spring 생성자 종속성...
spring.bean.properties.chooser.title=프로퍼티 선택
spring.bean.dependencies.chooser.title=Bean 선택
spring.beans.chooser.show.context.files=컨텍스트 파일 표시
spring.beans.chooser.all.context.files=모든 bean
spring.beans=Bean
util.schema.inspection.name=유틸리티 스키마
util.required.class.message=클래스는 ''{0}'' 의 상속자여야 합니다
spring.bean.instantiation.inspection=Spring bean 인스턴스화
mark.bean.as.abstract=bean을 추상으로 만들기
abstract.class.not.allowed=추상 클래스는 비 추상 bean에서 허용되지 않습니다
interface.not.allowed=인터페이스는 비 추상 bean에서 허용되지 않습니다
spring.parent.bean.tooltip=하위 선언으로 이동
spring.choose.bean.templates.dialog.title={0} Bean 추가
spring.choose.bean.templates.dialog.beans=Bean
facet.context.default.name=Spring 애플리케이션 컨텍스트
facet.context.xml.files=XML 기반 구성
facet.context.code.files=코드 기반 구성
facet.context.properties.files=추가 프로퍼티 파일
facet.context.other.files=Otros archivos
facet.context.autodetected.suffix=(자동 탐지)
facet.context.autoconfigured.suffix=(자동 구성)
facet.context.new.title=새 애플리케이션 컨텍스트
facet.context.edit.title=애플리케이션 컨텍스트 ''{0}'' 편집
facet.context.edit.name.label=이름(&N)\:
facet.context.edit.parent.label=상위 컨텍스트(&P)\:
facet.context.edit.parent.none.selected=<없음>
facet.context.edit.name.validation.not.empty=이름이 비어 있으면 안 됩니다.
facet.context.edit.name.validation.already.exists=동일한 이름의 컨텍스트가 이미 있습니다. 동일한 이름의 기존 컨텍스트를 삭제한 경우 먼저 "적용"을 사용해야 합니다.
facet.context.edit.add.file.choose.type=유형 선택
facet.context.remove.title=Eliminar
facet.context.remove.message=애플리케이션 컨텍스트 "{0}" 을(를) 제거하시겠어요? (파일은 삭제되지 않습니다)
config.new.file=Spring 구성
create.new.spring.configuration.file=새 스프링 설정 파일 생성
framework.title.spring=&Spring
spring.facet.inspection=Spring 패싯 XML 구성
spring.facet.code.inspection=Spring 패싯 코드 구성
spring.facet.programmatic.inspection=Spring 패싯 프로그래매틱 구성
spring.facet.inspection.create.facet=Spring 패싯 생성
spring.facet.inspection.context.choose=애플리케이션 컨텍스트 선택
spring.facet.inspection.context.create=새 애플리케이션 컨텍스트 생성...
spring.facet.inspection.context.not.configured.for.file=이 파일에 대해 구성되지 않은 애플리케이션 컨텍스트
spring.facet.inspection.configure.context.for.file=애플리케이션 컨텍스트 구성
spring.facet.inspection.check.test.files=테스트 파일 확인
introduce.bean.intention=bean 삽입
parse.custom.bean.intention=사용자 지정 bean 분석
parsing.custom.bean=사용자 지정 Spring bean 핸들러 실행...
parse.custom.bean.error=사용자 지정 Bean 분석 오류
parse.custom.bean.success=사용자 지정 핸들러가 성공적으로 완료되었습니다
parse.no.custom.beans=분석기가 bean을 생성하지 않았습니다
parse.only.infrastructure.beans=분석기가 기반 bean만 생성했습니다
parse.these.beans=사용자 지정 네임스페이스 핸들러가 다음 bean 정의를 생성했습니다\:\n\
parse.these.beans.induct=사용자 지정 네임스페이스 핸들러가 다음 bean 정의를 생성했습니다\:\n\
parse.these.beans.induct.only.this=이 Bean
parse.these.beans.induct.all.beans=모든 Bean
parse.no.namespace.handler=네임스페이스 ''{0}'' 의 사용자 지정 핸들러를 찾을 수 없습니다
unparsed.custom.bean.inspection=분석되지 않은 사용자 지정 Spring bean
unparsed.custom.bean.message=이 사용자 지정 Spring bean은 아직 분석되지 않았습니다
custom.bean.no.id=IntelliJ IDEA가 구성 파일에서 이 bean의 ID를 찾을 수 없습니다. 이름을 바꾸면 \n\
custom.bean.no.id.title=경고
do.you.want.to.move.bean.to.the.top.level=이 bean을 최상위로 이동하시겠어요?
move.bean.to.the.top.level=Bean을 최상위로 이동
move.bean=Bean 이동
update.schema.intention=Spring XML 스키마로 변환
use.p.namespace=p-namespace로 변환
xml.schema.will.be.updated=XML 스키마를 spring-beans.xsd.로 업데이트합니다.\n\
xml.schema.update.is.required=XML 스키마 업데이트가 필요합니다
model.qualifiers.in.class.inspection.display.name=bean 클래스에 대해 자동 주입
required.properties.inspection=필수 어노테이션
required.property.not.mapped=필수 프로퍼티 ''{0}'' 이(가) 삽입되지 않았습니다
create.missing.mappings=''{0}'' 에 대해 누락된 매핑 생성
create.missing.mappings.family.name=누락된 매핑 생성
spring.required.property.inspection=필수 프로퍼티
required.properties.missed=필수 프로퍼티 누락\: ''{0}''
create.missing.properties=누락된 프로퍼티 생성
cannot.find.bean.qualified.by={0} (으)로 정규화된 bean을 찾을 수 없습니다
cannot.autowire.bean.of.type=자동 주입을 할 수 없습니다. Bean은 ''{0}'' 유형이어야 합니다
required.spring.bean.type.inspection=필수 bean 유형
placeholders.inspection.display.name=Spring 자리표시자
bean.property.extract.name=프로퍼티 값을 구성 파일로 추출
spring.incorrect.resource.type.inspection=잘못된 리소스 유형
SpringIncorrectResourceTypeInspection.incorrect.resource.type=잘못된 리소스 유형
SpringIncorrectResourceTypeInspection.expected.resource.types=잘못된 리소스 유형. 필요 유형\: {0}
spring.import.resource.inspection.display.name=@ImportResource 위치 경고
spring.property.source.inspection.display.name=@PropertySource 및 @TestPropertySource 위치 경고
spring.configuration.proxy.methods.display.name=@Configuration proxyMethods 사용 위치 경고
spring.context.configuration.inspection.display.name=@ContextConfiguration 및 @SqlConfig 경고
spring.testing.sql.inspection.display.name=@Sql 및 @SqlGroup 경고
spring.transaction.inspection.display.name=정의되지 않은 PlatformTransactionManager
spring.lookup.inspection.display.name=@Lookup
SpringContextConfigurationInspection.cannot.find.default.app.context=디폴트 애플리케이션 컨텍스트 파일 {0} 을(를) 찾을 수 없습니다
SpringContextConfigurationInspection.create.nested.configuration.class=중첩된 ContextConfiguration 클래스 생성
action.generate.autowired.dependencies.action.text=@Autowired 종속성...
SpringAutowiringInspection.add.qualifier.fix=한정자 추가
context.schema.inspection.name=컨텍스트 구성 요소 검사
ContextComponentScanInconsistencyInspection.annotation.is.expected.here=어노테이션이 필요합니다
spring.import.resource.error.message.trailing.space=''{0}'' 내 후행 공백
spring.profile.expression.inspection=잘못된 프로파일 표현식
spring.profile.expression.empty=프로파일 표현식은 텍스트를 포함해야 합니다
spring.profile.expression.malformed=형식이 잘못된 프로파일 표현식
spring.profile.unresolved.message=알 수 없는 프로파일
editor.panel.profiles.tooltip=활성화된 프로파일
editor.panel.profiles.tooltip.action.name=프로파일 변경...
SpringInactiveProfilesHighlightingPass.inactive.profile=비활성화된 프로파일
spring.dom.component.scan.stereotypes=스테레오타입 선택
spring.dom.component.scan.stereotypes.title=구성 요소로 이동
ContextJavaBeanUnresolvedMethodsInspection.display.name=@Configuration 및 @Bean
ContextJavaBeanUnresolvedMethodsInspection.cannot.resolve.method=메서드를 해결할 수 없습니다
ActivateSpringProfileIntentionAction.activate.profile=프로파일 ''{0}'' 활성화
ActivateSpringProfileIntentionAction.activate.profile.family.name=프로파일 활성화
ActivateSpringProfileIntentionAction.deactivate.profile=프로파일 ''{0}'' 비활성화
ActivateSpringProfileIntentionAction.deactivate.profile.family.name=프로파일 비활성화
spring.app.context.to.navigate=애플리케이션 컨텍스트 선택
spring.app.context.navigate.tooltip=애플리케이션 컨텍스트로 이동
SpringStaticMembersAutowiringInspection.display.name=Static 구성원 자동 주입
static.members.autowiring=static 구성원을 자동 주입하지 않습니다
gutter.choose.autowired.candidates.title=자동 주입 후보 선택
gutter.navigate.to.autowired.candidates.title=자동 주입 후보로 이동
gutter.navigate.no.matching.autowired.candidates=일치하는 자동 주입 후보를 찾을 수 없습니다
process.explicitly.annotated.beans=명시적으로 어노테이션이 작성된 프로세스 bean
configuration.tab.additional.settings=추가 설정
gutter.choose.bean.factory.calls.title=BeanFactory.getBean(...) 사용 위치 선택
gutter.navigate.no.bean.factory.calls=일치하는 BeanFactory의 사용 위치를 찾지 못했습니다
gutter.navigate.to.bean.factory.calls.title=BeanFactory.getBean(...) 사용 위치로 이동
multiple.context.tooltip.text=활성화된 컨텍스트
multiple.context.description.in.module.text=<html><body>  모듈 내 <b>{0}</b>.</body></html>
multiple.context.description.label.text=<html><body>파일이 <b>{0} 컨텍스트</b>에 포함되었습니다.</body></html>
multiple.context.description.in.modules.label.text=<html><body>파일이 <b>{1}</b> 모듈 내 <b>{0} 컨텍스트</b>에 포함되었습니다.</body></html>
class.without.matching.constructor.for.autowiring=클래스가 자동 주입에 대한 일치하는 생성자를 포함하지 않습니다
multiple.autowiring.constructor=하나의 생성자만 @Autowired 어노테이션을 가질 수 있습니다
class.is.not.spring.bean.autowired=자동 주입 구성원은 유효한 Spring bean에서 정의되어야 합니다 (@Component|@Service|...)
model.inspection.inactive.profile=비활성화된 프로파일 강조 표시
spring.bean.attributes.inspection.key=Spring bean 속성
component.scan.setup.inspection.key=@ComponentScan 설정
custom.namespace.registration.inspection.key=Spring 사용자 지정 네임스페이스 등록
spring.event.publisher.choose.title=이벤트 퍼블리셔 선택
spring.event.publisher.tooltip.text=이벤트 퍼블리셔로 이동
spring.event.publisher.empty.tooltip.text=이벤트 퍼블리셔를 찾을 수 없습니다
spring.event.listener.choose.title=이벤트 리스너 선택
spring.event.listener.tooltip.text=이벤트 리스너로 이동
spring.event.listener.empty.tooltip.text=이벤트 리스너를 찾을 수 없습니다
spring.cacheable.annotations.inspection.display.name=@Cacheable, @CacheEvict, @CachePut, @CacheConfig 오류
spring.cacheable.names.inspection.display.name=캐시 이름 정의 오류
spring.cacheable.and.cache.put.on.the.same.method.display.name=동일한 메서드에서 @CachePut 및 @Cacheable 사용
spring.cacheable.annotations.on.interfaces=인터페이스/인터페이스 메서드에서 정의된 캐시* 어노테이션
cacheable.annotations.should.be.defined.on.public.methods=캐싱 어노테이션은 public 메서드에서 정의되어야 합니다
cacheable.no.cache.could.be.resolved.for.cache.operation=캐시 연산자 당 하나 이상의 비어있지 않은 이름이 제공되어야 합니다
cacheable.should.be.defined.on.concrete.method=Spring에서 @Cache* 어노테이션을 사용하여 인터페이스 메서드에 어노테이션을 만들지 않는 것이 좋습니다
cacheable.and.cache.put.on.the.same.method=Spring에서 동일한 메서드에 @CachePut 및 @Cacheable 어노테이션을 사용하지 않는 것이 좋습니다
event.listener.method.parameters.count=메서드가 최대 하나의 매개 변수를 포함해야 합니다
event.listener.method.visibility.public=@EventListener로 어노테이션을 만든 메서드는 public이어야 합니다
event.listener.method.visibility.nonstatic=@EventListener로 어노테이션을 만든 메서드는 static이 아니어야 합니다
spring.cacheable.element.choose.title=캐시 가능 연산자 선택
spring.cacheable.element.tooltip.text=동일한 이름을 가진 캐시 가능 연산자로 이동
SpringAutowiredFieldsWarningInspection.inspection.display.name=필드 삽입 경고
field.injection.is.not.recommended=필드 삽입은 권장되지 않습니다
field.injection.create.constructor.family.warning=필드 삽입 변경. 생성자 생성
field.injection.add.parameter.family.warning=필드 삽입 변경. 생성자에 매개변수 추가
field.injection.create.constructor.injection=<html>생성자 생성\: {0}</html>
field.injection.add.parameters=<html>생성자에 매개변수 추가\: {0}</html>
spring.testing.context.dirties.inspection.display.name=Spring 테스트 @DirtiesContext 오류
spring.testing.transactional.inspection.display.name=Spring 테스트 @Transactional 오류
spring.testing.model.dirties.method.mode.error.message=어노테이션이 만들어진 테스트 클래스에서 메서드 모드 설정은 의미가 없습니다. 클래스 수준 제어의 경우 classMode를 대신 사용하세요.
spring.testing.model.dirties.class.mode.error.message=어노테이션이 만들어진 테스트 메서드에서 클래스 모드 설정은 의미가 없습니다. 메서드 수준 제어의 경우 methodMode를 대신 사용하세요..
spring.testing.model.dirties.hierarchy.mode.error.message=컨텍스트가 @ContextHierarchy를 통해 계층 구조의 일부로 구성될 때 hierarchyMode를 사용해야 합니다
spring.testing.transactional.wrong.number.of.arguments.error.message=잘못된 인수 개수
spring.testing.transactional.void.method.return.type.error.message=필요한 메서드 반환 유형은 ''void''입니다
ScheduledMethodInspection.inspection.display.name=@Scheduled로 어노테이션이 만들어진 메서드는 void 및 비인수여야 합니다
ScheduledMethodInspection.incorrect.signature=@Scheduled 메서드는 인수를 받거나 값을 반환할 수 없습니다
method.parameters.removing.fix.family.name=메서드 매개변수 제거
method.parameters.removing.fix.text=''{0}'' 을(를) 비인수로 변경
AsyncMethodInspection.inspection.display.name=@Async로 어노테이션이 만들어진 메서드는 ''void'' 또는 "Future-like" 유형을 반환해야 합니다
AsyncMethodInspection.incorrect.signature=@Async 어노테이션이 추가된 메서드는 'void' 또는 'Future-like' 타입을 반환해야 합니다
SpringEventListenerInspection.inspection.display.name=@EventListener 구성 오류
method.return.type.make.async.family.name=메서드를 변경하여 "Future-like" 값 반환
method.return.type.make.async.fix.text=메서드를 변경하여 ''{0}'' 을(를) 반환
ImplicitSubclassInspection.display.forClass.annotated=''@{0}'' (으)로 어노테이션이 만들어진 클래스는 묵시적으로 하위 클래스가 될 수 있으며 final이 아니어야 합니다
ImplicitSubclassInspection.display.forMethod.annotated=''@{0}'' (으)로 어노테이션이 작성된 메서드는 재정의할 수 없습니다
ImplicitSubclassInspection.display.bean.in.configuration=@Configuration 내 @Bean-method는 재정의할 수 없습니다
navigate.to.fileset.configuration=애플리케이션 컨텍스트 구성으로 이동
bean.method.called.from.configuration.without.proxy=@Bean으로 어노테이션이 작성된 메서드는 proxyBeanMethods가 false로 설정된 @Configuration에서 직접 호출됩니다. proxyBeanMethods를 true로 설정하거나 종속성 삽입을 사용합니다.
bean.method.called.without.proxy=@Bean으로 어노테이션이 작성된 메서드는 직접 호출됩니다. 종속성 삽입을 대신 사용합니다.
action.DumpSpringConfiguration.text=\ Spring 설정 덤프
group.Internal.Spring.text=Spring
action.SpringChangeActiveProfiles.text=활성 Spring 프로파일 변경...
action.Spring.Create.Context.File.text=Spring 구성
action.Spring.Beans.Generate.Action.text=Spring Bean
spring.settings.common=공통
spring.settings.auto.configure=애플리케이션 컨텍스트 자동 구성 허용
spring.settings.configuration.file.editor=구성 파일 에디터
spring.settings.profiles.panel=프로파일 패널 표시(&P)
spring.settings.profiles.panel.tooltip=활성화된 프로파일 선택 허용
spring.settings.multiple.context.panel=다중 컨텍스트 패널 표시(&M)
spring.settings.multiple.context.panel.tooltip=파일이 여러 컨텍스트에서 사용되는 경우 활성화된 컨텍스트 선택 허용
framework.support.provider.create.empty.spring.config=빈 {0} 생성
fileset.editor.help.label=<html><b>\\&lt;import.../\\&gt;</b>를 통해 참조된 구성 파일 또는 <b>@Import</b>는 묵시적으로 추가됩니다.<br/>테스트로 사용되는 구성 파일은 컨텍스트에 추가될 수 <em>없습니다</em>.</html>
fileset.circular.dependencies=컨텍스트 간 순환 종속성\:<br/>{0}<br/>{1}
fileset.contains.testing.configs.short=테스트를 위해 사용되는 {0, choice,1\#구성 파일|1<{0, number}개 구성 파일}은 컨텍스트에 추가될 수 <em>없습니다</em>
fileset.contains.testing.configs.full=테스트를 위해 사용되는 {0, choice,1\#구성 파일|1<{0, number}개 구성 파일}은 컨텍스트에 추가될 수 <em>없습니다</em>\:<br/>{1}
spring.facet.validation.help.action=도움말 표시
spring.facet.validation.disable.action=Desactivar...
spring.facet.detection.will.be.disabled.for.whole.project=전체 프로젝트에 대해 탐지가 비활성화됩니다.\n\
spring.facet.config.detection=Spring 구성 탐지
spring.facet/detection.disable.detection=탐지 비활성화
spring.configuration.check=Spring 구성 확인
unmapped.configuration.fix.instruction=Spring 패싯을 구성하거나 ''{0}''을(를) 사용하여 매핑되지 않은 모든 파일을 포함하는 패싯 하나를 추가하세요.
unmapped.configuration.configure.facet=Spring 패싯을 구성하세요.
unmapped.configuration.create.default.context=디폴트 컨텍스트 생성
unmapped.configuration.files.count={0, choice,1\#1개 파일|1<{0, number}개 파일}
unmapped.configuration.files.found=매핑되지 않은 Spring 구성 파일을 발견했습니다.
unmapped.configuration.programmatic.contexts.found=프로그래매틱 컨텍스트가 발견되었습니다.
unmapped.configuration.files.short={0, choice,1\#매핑되지 않은 Spring 구성 파일|1<{0, number} 매핑되지 않은 Spring 구성 파일}
unmapped.configuration.files.full={0, choice,1\#매핑되지 않은 Spring 구성 파일|1<{0, number} 매핑되지 않은 Spring 구성 파일}\:<br/>{1}
unmapped.configuration.is.not.available.during.index.update=색인 업데이트 중에는 ''{0}'' 을(를) 사용할 수 없습니다
unmapped.configuration.open.facet.configuration=패싯 구성 열기
unmapped.configuration.spring.configuration=Spring 구성
unmapped.configuration.autodetected.context.found.for={0} 에 대해 자동 탐지된 컨텍스트를 찾았습니다.\n\
scanning.for.programmatic.contexts=프로그래매틱 컨텍스트 검사 중...
checking.spring.configuration=Spring 구성 확인 중
searching.for.stereotype.usages=스테레오타입 사용 위치 검색 중...
searching.for.implicit.usages=묵시적 사용 위치 검색 중...
spring.core.autowired.annotator.name=자동 주입
spring.core.bean.annotator.name=Bean
spring.core.component.scan.annotator.name=구성 요소 검사
spring.core.dom.annotator.name=구성 (XML)
spring.core.properties.annotator.name=프로퍼티
spring.core.test.configuration.annotator.name=구성 테스트
spring.core.cacheable.annotator.name=동일한 이름을 가진 캐시 가능 연산자
spring.core.event.listener.annotator.name=애플리케이션 이벤트
spring.model.actions.dump.model.gathering.spring.models=Spring 모델 수집 중...
spring.model.actions.dump.model.scanning.spring.models=Spring 모델 검사 중...
spring.model.actions.dump.model.generating.json=JSON 생성 중...
spring.model.actions.generate.beans=Spring Bean 생성
custom.namespace.quick.fixes.family.name=사용자 지정 네임스페이스 bean 생성
custom.namespace.quick.fixes.create.custom.namespace.bean=사용자 지정 네임스페이스 bean 생성 ({0} variant)...
custom.namespace.quick.fixes.create.custom.namespace.bean.with.id=사용자 지정 네임스페이스 bean {0} 생성
custom.namespace.quick.fixes.create.name={0} 생성
custom.namespace.quick.fixes.popup.title=사용자 지정 네임스페이스 Bean 생성
use.existing.quick.fixes.use.existing.bean.family.name=기존 bean 사용
use.existing.quick.fixes.use.existing.bean.from.context=컨텍스트 ''{0}'' 에서 기존 bean 사용
use.existing.quick.fixes.choose.fix.for=''{0}'' 에 대한 수정 선택
use.existing.quick.fixes.add.dependency.to.context=컨텍스트 ''{0}'' 에 종속성 추가
use.existing.quick.fixes.add.spring.xml.to.fileset.action=컨텍스트 ''{1}'' 에 ''{0}'' 을(를) 추가
use.existing.quick.fixes.add.import.action=''{0}'' 에 대한 <import> "추가
use.existing.quick.fixes.open.spring.facet.settings=Spring 패싯 설정 열기...
setup.programmatic.context.quick.fix.setup.spring.context=Spring 컨텍스트 설정...
setup.programmatic.context.quick.fix.settings.displayName=Spring
setup.programmatic.context.quick.fix.context.with.name=이름이 ''{0}'' 인 컨텍스트가 생성되었습니다.\n\
spring.facet.programmatic.inspection.spring.context=프로그래매틱 Spring 컨텍스트
duplicated.bean.name.inspection.name.view.duplicates=중복 보기
duplicated.bean.quick.fix.popup.title=중복 보기
UnparsedCustomBeanInspection.unsupported.tag=네임스페이스 ''{1}'' 에 지원되지 않는 태그 ''{0}'', 이슈를 보고해주세요 (도움말|{2})
change.active.profile.dialog.spring.profiles=활성 Spring 프로파일 변경
change.active.profile.dialog.module=모듈 ''{0}''
change.active.profile.dialog.context=컨텍스트 ''{0}''
SpringUpdateSchemaIntention.spring.schema.update=Spring 스키마 업데이트
SpringUpdateSchemaIntention.schema.update.failed.for.invalid.file=잘못된 파일 {0} 에 대한 스키마 업데이트에 실패했습니다
reference.injector.spring.resource.path=Spring 리소스 경로
reference.injector.spring.bean.name=Spring Bean 이름
reference.injector.spring.placeholder=Spring 자리표시자
SpringSpiRegistrationAnnotator.choose.registration=등록 선택
SpringSpiRegistrationAnnotator.tooltip=spring.factories 내 등록으로 이동
SpringSpiRegistrationAnnotator.spring.factories.registration=spring.factories 등록
SpringBeansView.show.implicit.beans=묵시적 Bean 표시
SpringBeansView.show.infrastructure.beans=기반 Bean 표시
SpringBeansView.show.modules=모듈 표시
SpringBeansView.show.application.contexts=애플리케이션 컨텍스트 표시
SpringBeansView.config.no.contexts.defined=정의된 애플리케이션 컨텍스트가 없습니다
application.context.configuration=애플리케이션 컨텍스트 구성
ChangeActiveProfileDialogUi.radio.button.project=프로젝트
ChangeActiveProfileDialogUi.radio.button.module=모듈
ChangeActiveProfileDialogUi.radio.button.context=컨텍스트
ChangeActiveProfileDialogUi.radio.button.comment=쉼표로 분리된 프로파일 목록
ChangeActiveProfileDialogUi.radio.button.profiles=프로파일\:
ChangeActiveProfileDialogUi.radio.button.scope=범위\:
SpringBeanMoveHandler.no.other.files.found=기타 Spring 파일을 찾을 수 없습니다
SpringBeanMoveHandler.choose.file=Selección de archivos
message.navigation.available.during.indexing=색인 생성 중에는 탐색을 사용할 수 없습니다
dependency.node.in.module.tail=(모듈 {0} 내)
spring.el.inspection.key=Spring EL
spring.bean.already.exists={1}에 이름이 ''{0}''인 Spring Bean이 이미 있습니다
spring.bean.pointer.invalid=<유효하지 않음>
spring.bean.pointer.unknown=<알 수 없음>
spring.beans.tab.title=Bean
spring.beans.select.in.target=Spring Bean
spring.intention.category=Spring
spring.factories.file.type=Spring 펙토리
spring.aliases=별칭
spring.profile=프로파일
spring.scope=범위
spring.depends.on.inspection.display.name=@DependsOn 어노테이션의 잘못 참조된 bean
config.detecting.contexts=애플리케이션 컨텍스트 탐지 중...
spring.scheduled.tasks=예정된 작업
spring.scheduled.method=예정된 메서드
spring.el.static.field.inspection.key=static 필드 내 잘못된 SpEL 삽입
notification.group.spring.beans=Spring 사용자 지정 Bean 분석이 실패함
notification.group.spring.configuration=Spring 구성 문제가 감지됨
action.SpringConfigurationCheckAction.text=Spring 구성 확인
spring.bean.class.tooltip.show.in.description=Spring 뷰에서 선택
duplicated.bean.quick.fix.description=중복으로 이동
model.add.constructor.args.for.method.quickfix.description=누락된 'constructor-arg' 태그 생성
spring.add.bean.dependency.fix.text=''{0}''과(와) 이름이 일치하는 종속성 추가
spring.add.bean.dependency.fix.family.name=Bean에 종속성 추가
