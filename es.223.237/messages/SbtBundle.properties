### META-INF/sbt.xml
displayname.sbt=sbt
displayname.replace.project.with.project.in=Project()를 project.in()으로 바꾸기
group.sbt=SBT
packagesearch.dependency.version.inspection.description=라이브러리 종속성을 위한 새 안정화 버전을 사용할 수 있습니다

### org/jetbrains/sbt/SbtDirectoryCompletionContributor.scala
sbt.source.sets=SBT Source Sets

### org/jetbrains/sbt/annotator/SbtAnnotator.scala
sbt.annotation.blankLineRequired=0.13.7 이전 버전의 *.sbt 파일에서 표현식을 분리하려면 빈 줄이 필요합니다(현재 버전: {0})
sbt.annotation.sbtFileMustContainOnlyExpressions=SBT 파일은 표현식만 포함해야 합니다
sbt.annotation.expectedExpressionType=SBT 파일에서 필요한 표현식 타입은 Def.SettingsDefinition입니다
sbt.annotation.expectedExpressionTypeSbt0136=SBT 파일에서 필요한 표현식 타입은 DslEntry입니다
sbt.annotation.expressionMustConform=SBT 파일에서 필요한 표현식 타입 {0}은(는) Def.SettingsDefinition을 준수해야 합니다
sbt.annotation.expressionMustConformSbt0136=SBT 파일에서 필요한 표현식 타입 {0}은(는) DslEntry를 준수해야 합니다

### org/jetbrains/sbt/codeInspection/SbtDependencyVersionInspection.scala
packagesearch.newer.stable.version.available={0}:{1}의 새 안정화 버전을 사용할 수 있습니다
packagesearch.update.dependency.to.newer.stable.version=새 안정화 버전 {0}(으)로 종속성 업데이트

### org/jetbrains/sbt/codeInspection/SbtReplaceProjectWithProjectInInspection.scala
sbt.inspection.projectIn.name=Project()를 project.in()으로 바꾸기

### org/jetbrains/sbt/project/SbtExternalSystemManager.scala
sbt.import.noCustomJvmFound=선택한 JDK에서 Java VM 실행 파일을 파악할 수 없습니다
sbt.import.noProjectJvmFound=현재 프로젝트의 JDK에서 Java VM 실행 파일을 파악할 수 없습니다

### org/jetbrains/sbt/project/SbtNotificationListener.scala
sbt.project.import=SBT 프로젝트 가져오기

### org/jetbrains/sbt/project/SbtProcessJdkGuesser.scala
sbt.import.detecting.jdk=SBT에 대한 JDK 탐지 중

### org/jetbrains/sbt/project/SbtProjectResolver.scala
sbt.import.to.intellij.project.model=IntelliJ 프로젝트 모델에 가져오기
sbt.unknown.cause=알 수 없는 원인
sbt.import.cancelled=SBT 가져오기가 취소되었습니다. {0}
sbt.launcher.not.found={0}에서 SBT 런처를 찾을 수 없습니다
sbt.sincesbtversion.required=SBT {0} 이후 버전이 필요합니다. 프로젝트 build.properties를 업데이트하세요.
sbt.import.extracting.structure.failed=구조를 추출하지 못했습니다
sbt.import.message.build.status=빌드 상태: {0}
sbt.import.message.structure.file.is.not.a.file=구조 파일 {0}은(는) 파일이 아닙니다
sbt.import.message.structure.file.is.empty=구조 파일{0}이(가) 비어 있습니다
sbt.local.cache=로컬 캐시

### org/jetbrains/sbt/project/SbtViewContributor.scala
sbt.tasks.defined.in.this.project=이 프로젝트에 SBT 작업이 정의되었습니다
sbt.tasks=SBT 작업
sbt.settings.defined.in.this.project=이 프로젝트에 SBT 설정이 정의되었습니다
sbt.settings=SBT 설정
sbt.named.sbt.commands.defined.in.this.project=이 프로젝트에 명명된 SBT 명령어가 정의되었습니다
sbt.commands=SBT 명령어

### org/jetbrains/sbt/project/modifier/BuildFileModifier.scala
sbt.build.file.modification=SBT 빌드 파일 수정

### org/jetbrains/sbt/project/modifier/ui/BuildFileModifiedStatus.java
sbt.build.modified.detected=탐지됨
sbt.build.modified.automatically=자동으로 수정됨
sbt.build.modified.manually=수동으로 수정됨
sbt.build.modified.automatically.and.fixed.manually=자동으로 수정된 후 수동으로 고쳐짐

### org/jetbrains/sbt/project/modifier/ui/ChangesConfirmationDialog.scala
sbt.build.file.changes=SBT 빌드 파일 변경

### org/jetbrains/sbt/project/module/SbtModuleSettingsEditor.scala
sbt.settings.sbtModuleSettings=SBT
sbt.settings.sbtVersionNotDetected=탐지되지 않음
sbt.settings.noImplicitImportsFound=묵시적 import 문을 찾을 수 없습니다
sbt.settings.resolvers.url=URL
sbt.settings.resolvers.name=이름

### org/jetbrains/sbt/project/module/SbtModuleSettingsForm.form
sbt.settings.sbtVersionInModule=SBT 버전
sbt.settings.implicitImports=묵시적 import 문
sbt.settings.resolvers=해결자

### org/jetbrains/sbt/project/settings/SbtExtraControls.scala
sbt.settings.scalaVersionPreference=다음으로 크로스 컴파일된 Scala 3/Scala 2 프로젝트 열기:
sbt.settings.scalaVersionPreference.tooltip=Scala 2와 Scala 3에 대해 크로스 컴파일된 프로젝트는 실제로는 Scala 3 기능을 사용하지 않으며 Scala 2(더 안정적임)로 열 수 있습니다.
sbt.settings.useShell=사용 대상:
sbt.settings.download=Descargar:
sbt.settings.shell.title=SBT 셸
sbt.settings.useShellForImport=프로젝트 다시 로드
sbt.settings.useShellForBuild=빌드
sbt.settings.remoteDebug=디버그 활성화
sbt.settings.allowSbtVersionOverride=SBT 버전 재정의 허용
sbt.settings.resolveClassifiers=라이브러리 소스
sbt.settings.resolveSbtClassifiers=SBT 소스
sbt.settings.resolveClassifiers.tooltip=SBT에서 프로젝트를 다시 로드할 때 프로젝트 라이브러리 종속 요소의 소스를 다운로드합니다
sbt.settings.resolveSbtClassifiers.tooltip=SBT에서 프로젝트를 다시 로드할 때 SBT 및 SBT 플러그인의 소스를 다운로드합니다
sbt.settings.useShellForImport.tooltip=프로젝트가 새 SBT 프로세스 대신 SBT 셸에서 다시 로드됩니다. 이렇게 하면 다시 로드하는 시간이 단축되지만 SBT 셸이 메모리에 남아 있어야 합니다
sbt.settings.useShellForBuild.tooltip=SBT 셸에서 프로젝트를 빌드합니다. SBT 빌드 구성 때문에 IntelliJ IDEA 컴파일러의 컴파일이 제대로 작동하지 않는 경우에 권장됩니다
sbt.settings.remoteDebug.tooltip=디버그 가능한 프로세스로 SBT 셸을 시작합니다. SBT 셸에서 실행되는 SBT 플러그인 코드 및 테스트를 디버그할 수 있습니다
sbt.settings.allowSbtVersionOverride.tooltip=SBT의 최신 호환 버전이 프로젝트 build.properties에 구성되어 있는 버전보다 최신인 경우 해당 최신 버전으로 SBT 셸을 실행합니다. SBT 셸 통합 기능을 사용하면 새로운 기능 및 수정 사항을 이용할 수 있습니다

### org/jetbrains/sbt/project/settings/SbtProjectSettingsControl.scala
sbt.settings.project.jdk="프로젝트 JDK:"

### org/jetbrains/sbt/project/sources/SharedSourcesModuleType.scala
sbt.shared.sources.module=공유 소스 모듈
sbt.shared.source.module.description=컴파일 도중 공유 소스 모듈의 종속성이 모듈 출력이 아닌 모듈 소스에 혼합됩니다

### org/jetbrains/sbt/project/structure/SbtStructureDump.scala
sbt.extracting.project.structure.from.sbt.shell=SBT 셸에서 프로젝트 구조 추출 중
sbt.project.structure.extracted=프로젝트 구조 추출됨
sbt.import.errors.project.reload.aborted=가져오기 오류가 발생했습니다. 프로젝트 다시 로드가 중단됩니다
sbt.extracting.project.structure.from.sbt=SBT에서 프로젝트 구조 추출 중
sbt.task.failed.see.log.for.details=SBT 작업이 실패했습니다. 자세한 내용은 로그를 참조하세요
sbt.events=이벤트
sbt.task.canceled=작업이 취소되었습니다

### org/jetbrains/sbt/project/template/SbtModuleBuilder.scala
scala.version.requires.library.version=Scala {0}에는 {1} {2}이(가) 필요합니다
wrong.library.version=잘못된 {0} 버전

### org/jetbrains/sbt/project/template/SbtProjectTemplate.scala
sbt.based.scala.project.recommended=SBT 기반 Scala 프로젝트(권장)

### org/jetbrains/sbt/project/template/techhub/TechHubDownloadUtil.scala
sbt.techhub.downloading.location=Descargando {0}
sbt.techhub.no.response.status.from.connection.to.url={0} 연결의 응답 상태가 없습니다
sbt.techhub.response.to.connection.to.url.was.status={0} 연결의 응답 상태는 ''{1}''이었습니다

### org/jetbrains/sbt/project/template/techhub/TechHubModuleBuilder.scala
downloading.list.of.templates=템플릿 목록 다운로드 중...
select.template=템플릿 선택
downloading.template=템플릿 다운로드 중...

### org/jetbrains/sbt/project/template/techhub/TechHubProjectTemplate.scala
sbt.techhub.lightbend.project.starter=Lightbend 프로젝트 스타터
sbt.techhub.sbt.based.project.from.a.lightbend.tech.hub.template=Lightbend Tech Hub 템플릿의 SBT 기반 프로젝트

### org/jetbrains/sbt/project/template/wizard/SbtModuleStepLike.scala
sbt.settings.sbt=SBT(&S):
sbt.settings.scala=Scala(&C):
sbt.download.scala.standard.library.sources=Scala 표준 라이브러리 소스 다운로드(소스 코드 편집에 유용함)
sbt.download.sbt.sources=SBT 소스 다운로드(프로젝트 정의 편집에 유용함)
sbt.module.step.download.sources=소스 다운로드

### org/jetbrains/sbt/project/template/wizard/buildSystem/IntelliJScalaNewProjectWizardStep.scala
scala.sdk.must.be.set=Scala SDK가 설정되어야 합니다

### org/jetbrains/sbt/runner/SbtConfigurationType.scala
sbt.runner.displayName=SBT 작업
sbt.runner.description=SBT 작업을 실행합니다

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.form
sbt.runner.form.tasks=작업:
sbt.runner.form.vmParameters=VM 매개변수:
sbt.runner.form.environmentVariables=환경 변수:
sbt.runner.form.tasksEditorTitle=작업
sbt.runner.form.vmParametersEditorTitle=VM 매개변수
sbt.runner.form.use.sbt.shell=SBT 셸 사용
sbt.runner.form.working.directory=작업 디렉터리:

### org/jetbrains/sbt/runner/SbtRunConfigurationForm.java
sbt.runner.choose.working.directory=작업 디렉터리 선택

### org/jetbrains/sbt/settings/SbtSettingsPane.form
sbt.settings.jvm=JVM
sbt.settings.custom.launcher=사용자 지정(&U)
sbt.settings.maxHeapSize=최대 힙 크기(MB)
sbt.settings.vmParams=VM 매개변수
sbt.settings.sbtLauncher=런처(sbt-launch.jar)
sbt.settings.bundled=번들(&B)

### org/jetbrains/sbt/settings/SbtSettingsPane.java
sbt.settings.choose.custom.launcher=사용자 지정 런처 선택
sbt.settings.choose.sbt.launch.jar=sbt-launch.jar 선택

### org/jetbrains/sbt/shell/SbtProcessManager.scala
sbt.shell.disable.version.override=버전 재정의 비활성화
sbt.shell.update.sbt.version=SBT 버전 업데이트
sbt.shell.configure.sbt.jvm=SBT JVM 구성(&C)
sbt.shell.configure.project.jdk=프로젝트 JDK 구성(&C)
sbt.shell.started.sbt.shell.with.sbt.version=프로젝트가 구성한 SBT {1} 버전 대신 {0} 버전으로 SBT 셸을 시작했습니다.
sbt.shell.no.jre.found.at.path=경로 {0}에서 JRE를 찾을 수 없습니다. 대신 프로젝트 JDK를 사용하세요.
sbt.shell.no.project.jdk.configured=프로젝트 JDK가 구성되지 않았으나 SBT 셸을 실행하려면 JDK를 구성해야 합니다.

### org/jetbrains/sbt/shell/SbtProjectTaskRunnerImpl.scala
sbt.shell.refresh.sbt.project=SBT 프로젝트 새로고침
sbt.shell.sbt.build.failed=SBT 빌드 실패
sbt.shell.unable.to.build.sbt.project=IDEA 모듈 {0}에 해당하는 빌드 SBT 프로젝트를 빌드할 수 없습니다.
sbt.shell.sbt.build=SBT 빌드
sbt.shell.build.interrupted=빌드가 중단됨
sbt.shell.error.build.interrupted=오류: 빌드가 중단됨
sbt.shell.errors.in.build=빌드 내 오류
sbt.shell.warnings.in.build=빌드 내 경고
sbt.shell.synchronizing.output.directories=출력 디렉터리 동기화 중...

### org/jetbrains/sbt/shell/SbtShellRunner.scala
initializing.sbt.shell.message=SBT 셸 초기화 중...
sbt.shell.status.initializing=초기화 중
sbt.shell.status.busy=사용 중

### org/jetbrains/sbt/shell/SbtShellToolWindowFactory.scala
sbt.shell.title=SBT 셸

### org/jetbrains/sbt/shell/action/projectWindowActions.scala
sbt.shell.action.run.task=실행
sbt.shell.action.run.task.description=SBT 셸에서 작업을 실행합니다
sbt.shell.action.show.task=결과 표시
sbt.shell.action.show.task.description=SBT 셸에 작업 결과를 표시합니다
sbt.shell.action.inspect.task=검사
sbt.shell.action.inspect.task.description=SBT 셸에서 작업을 검사합니다
sbt.shell.action.show.setting=값 표시
sbt.shell.action.show.setting.description=SBT 셸에 설정을 표시합니다
sbt.shell.action.inspect.setting=검사
sbt.shell.action.inspect.setting.description=SBT 셸에서 설정을 검사합니다
sbt.shell.action.run.command=실행
sbt.shell.action.run.command.description=SBT 셸에서 명령어를 실행합니다
sbt.shell.action.help=도움말
sbt.shell.action.help.description=SBT 셸에서 도움말을 확인합니다

### org/jetbrains/sbt/shell/action/shellWindowActions.scala
sbt.shell.start=SBT 셸 시작
sbt.shell.restart=SBT 셸 다시 시작
sbt.shell.stop=SBT 셸 중지
sbt.shell.ctrl.d.eof=Ctrl+D EOF
sbt.shell.attach.debugger=SBT 셸에 디버거 연결
sbt.shell.enable.debugging.in.sbt.settings=SBT 설정에서 SBT 셸 디버그를 활성화한 후 셸을 다시 시작하여 디버거를 연결하세요
sbt.shell.debug=SBT 셸 디버그
