uml.class.diagram.file.name=Diagrama de clases ''{0}''
building.diagram=Edificio {0}
error=Error
new.class=Nueva clase
new.enum=Nueva enumeración
new.record=Nuevo registro
new.interface=Nueva interfaz
cant.create.element=No se puede crear {0} en el directorio {1}
add.new.field.title=Agregar nuevo campo o constante a {0}
add.new.enum.constant.title=Agregar una nueva constante de enumeración a {0}
create.new.method.dialog.title=Crear nuevo método
create.new.constructor.dialog.title=Crear nuevo constructor
create.method=&Crear
final.class.cant.be.inherited=La clase {0} es final
node.is.interface=La interfaz solo puede extender una interfaz
error.cant.create.edge=No se puede crear un vínculo de relación
preview=Vista previa
this.will.remove.relationship.link.between.classes=Esto eliminará el vínculo de relación entre clases y modificará la clase {0}. ¿Seguir?
remove.relationship.link=Eliminar enlace de relación
class.must.be.abstract.or.implement.methods=La clase ''{0}'' debe declararse abstracta o implementar los métodos abstractos requeridos
class.must.be.abstract.title=Implementar métodos o declarar un resumen de clase
generate.methods=Generar métodos
make.abstract=Hacer abstracto
initializer.is.empty=El inicializador está vacío
constant.in.interface.must.have.initializer=La constante en la interfaz debe tener un inicializador
class.is.readonly=La clase ''{0}'' es de solo lectura
file.is.readonly=El archivo ''{0}'' es de solo lectura
annotation.class.cant.be.extended.or.implemented=Las anotaciones no pueden extender/implementar otras clases/interfaces
remove.annotation.from.class=Eliminar anotación @{0} de {1}
relationship.already.exists=La relación entre {0} y {1} ya existe
show.supers.for=Superclases para {0}
UML=UML
uml.change.list.name=Cambios
uml.file.name.for.changes=Cambios para ''{0}''
other=Otro
select.uml.provider=Seleccionar tipo de diagrama
dependencies=Dependencias
uml.structure.view=Elementos del diagrama
abstract=A&bstracto
set.up.jdk=JDK no está configurado
make.class.abstract=Hacer que la clase sea abstracta
change.visibility.group.text=Cambiar el nivel de visibilidad
change.scope.group.text=Cambiar alcance
modules.diagram.presentable.name=Módulos del proyecto
uml.0.presentable.name={0} 클래스
uml.jigsaw.presentable.name=Diagrama de módulos de Java
diff.presentable.name=Mostrar diferencia
add.modules.libraries=Agregar módulo y bibliotecas...
looking.for.dependencies=Buscando dependencias
dependencies.for.module=Dependencias del módulo ''{0}''
show.modules.dependencies=Mostrar dependencias del módulo
fit.content.after.layout=&Ajustar contenido después del diseño
do.relayout.when.new.elements.were.added=Hacer&retransmitir cuando se agregan nuevos elementos
default.layout=Disposición predeterminada:
default.scope=Alcance predeterminado:
change.list.contains.too.many.files=La lista de cambios ''{0}'' contiene más de {1} archivos
show.categories.title=Mostrar categorías
uml.java.calculating.dependencies=Calculando dependencias
uml.java.analyzing.0={0} 분석 중
uml.java.package.title=Paquete {0}
uml.java.default.package.title=Paquete de nivel superior
action.UML.Find.text=Encontrar diagrama de elementos
action.UML.ShowStructure.text=Ver estructura
action.UML.SaveDiagram.text=Guardar diagrama UML
action.Uml.ShowDiff.text=Mostrar diferencia como UML
action.Uml.ExpandNodes.text=Expandir nodos
action.Uml.CollapseNodes.text=Contraer nodos
action.Diagram.Layout.CustomLayouter.text=다이어그램 전용
action.Diagram.DeselectAll.text=Deseleccionar todo
action.Diagram.SelectAll.text=Seleccionar todo
action.UML.ShowChanges.text=Mostrar cambios locales como UML
action.ShowUmlDiagramPopup.text=Mostrar ventana emergente UML
action.ShowUmlDiagram.text=Mostrar diagrama UML
action.Uml.NewElement.text=Nuevo
group.Uml.NewGroup.text=Diagrama
group.UML.Group.text=Diagrama
group.UML.Group.description=Diagrama
group.UML.Group.Simple.text=Diagrama
group.UML.Group.Simple.description=Diagrama
group.UML.EditorGroup.text=Diagrama
group.UML.EditorGroup.description=Diagrama
configurable.UmlConfigurable.display.name=Diagrama
settings.select.categories.text=Seleccione las categorías que se habilitarán de forma predeterminada cada vez que aparezca el diagrama
color.descriptor.node.header=Encabezado de nodo
color.descriptor.node.background=Fondo del nodo
color.descriptor.realization.edge=Borde de realización
color.descriptor.generalization.edge=Borde de generalización
color.descriptor.default.edge=Borde predeterminado
color.descriptor.annotation.edge=Borde predeterminado
color.descriptor.inner.class.edge=Borde de clase interno
color.descriptor.note.background=Fondo de la nota
color.descriptor.note.border=Borde de la nota
dialog.message.can.t.save.converted.content.into.file.check.read.only.status=No se puede guardar el contenido convertido en un archivo. Verifique el estado de olo lectura.
dialog.title.old.diagram.format=Formato de diagrama antiguo
dialog.message.this.file.has.old.format.would.you.like.to.convert.it=Este archivo tiene un formato antiguo. ¿Le gustaría convertirlo?
action.text.show.0.1=Mostrar {0} {1}...
dialog.description.save.uml.class.diagram.as.uml=Guardar diagrama de clases UML como .uml
dialog.title.save.file=Guardar archivo
configurable.display.name.diagrams=Diagramas
group.action.text.new=Nuevo
dialog.title.edit.note=Editar nota
dialog.message.note.text=Texto de la nota
popup.title.select.target.node=Seleccionar nodo de destino
goto.class.prompt.text.enter.class.name.to.add=Ingrese el nombre de la clase para agregar
dialog.title.add.a.note=Agregar una nota
popup.title.select.change.list=Seleccionar lista de cambios
filetype.diagram.description=다이어그램
filetype.diagram.display.name=다이어그램
task.title.calculating.paths=Calcular rutas
dialog.message.can.t.show.more.than.0.changes.at.one.diagram=No se pueden mostrar más de {0} cambios en un diagrama.
action.name.show.diagram.structure=Mostrar estructura del diagrama
action.name.set.edge.creation.mode=Establecer el modo de creación de bordes
action.name.select.all=Seleccionar todo
command.edit.note=Editar nota
notification.message.scope.has.been.changed.to.b.all.b=El alcance se ha cambiado a <b>Todos</b>
action.name.change.visibility.to.0=Cambiar la visibilidad a {0}
action.name.safe.delete=Eliminación segura
action.name.show.dependencies=Mostrar dependencias
action.name.collapse.nodes=Contraer nodos
action.name.expand.nodes=Expandir nodos
action.name.change.scope.to.0=Cambiar alcance a {0}
action.name.create.line=Crear línea
action.name.add.note=Agregar nota
action.name.save.diagram=Guardar diagrama
action.name.deselect.all=Deseleccionar todo
action.name.add.elements2=Agregar elementos
action.name.enable.category=Habilitar {0}
action.name.disable.category=Desactivar {0}
show.intentions.for.node=노드 인텐션 표시
add.class.to.diagram=다이어그램에 클래스 추가...
show.parents=상위 항목 표시
show.implementations=구현 표시
creates.a.relationship.between.nodes=노드 간 관계 생성
line.to=줄...
searching.for.elements=요소 검색
can.t.save.diagram.to.0=다이어그램을 {0}에 저장할 수 없습니다
edge.creation.mode=에지 생성 모드
changes.for.revision.0=리비전 {0} 변경
add.note.action.title=참고
uml.dependencies.settings.group.title=종속성
category.name.show.neighbours.of.selected.nodes=선택한 노드의 인접 항목 표시
category.name.show.paths.root.selection=경로 표시\: 루트 -> 선택
category.name.fields=필드
category.name.constructors=생성자
category.name.methods=메서드
category.name.properties=프로퍼티
category.name.inner.classes=내부 클래스
category.name.dependencies=종속성
category.name.all=모두
category.name.constants=상수
category.name.details=세부사항
uml.action.name=Diagrama
visibility.level.package=public + package
visibility.level.all=모두
delete.selection.command.name=선택 항목 제거
add.element.to.diagram=다이어그램에 요소 추가
unknown.uml.file=알 수 없는 UML 파일
show.diagram.popup.title={0} de {1}
unknown.uml.action=알 수 없는 UML 액션
cant.annotate.class.0=클래스 ''{0}''에 어노테이션을 추가할 수 없습니다
diagram.edge.origins=엣지 원점
diagram.layout.compact.orthogonal=콤팩트
diagram.layout.component=구성 요소
diagram.layout.directed.orthogonal=방향 표시됨(아래에서 위로)
diagram.layout.hierarchic=계층
diagram.layout.hierarchic.compact=계층적 콤팩트
diagram.layout.orthogonal.groups=직교 그룹
diagram.layout.channel=채널
diagram.layout.series.parallel=연속 병렬
diagram.layout.circular=원형
diagram.layout.circular.edge.bundled=엣지 번들 순환
diagram.layout.radial=방사
diagram.layout.radial.edge.bundled=엣지 번들 방사
diagram.layout.single.cycle=단일 순환
diagram.layout.ar.tree=콤팩트
diagram.layout.balloon=풍선
diagram.layout.balloon.edge.bundled=엣지 번들 풍선
diagram.layout.family.tree=패밀리
diagram.layout.generic.tree=일반
diagram.layout.hv.tree=와이드
diagram.layout.organic=유기적
diagram.layout.organic.edge.bundled=엣지 번들 유기
diagram.layout.random=랜덤
diagram.layout.custom=사용자 지정
diagram.scope.all=모두
diagram.scope.project.files=프로젝트 파일
diagram.scope.non-project.files=비 프로젝트 파일
diagram.scope.production=프로덕션
diagram.scope.tests=테스트
group.Diagram.MergeEdgesGroup.text=엣지 병합
color.descriptor.node.sloppy.background=노드//노드 배경 미리보기
color.descriptor.node.border=노드//노드 테두리
color.descriptor.selected.node=노드//선택한 노드 테두리
color.descriptor.note.sloppy.background=노트//개요 노트 배경
color.descriptor.selected.edge=에지//에지 선택
color.descriptor.bend=벤드//벤드
color.descriptor.selected.bend=벤드//벤드 선택
color.descriptor.hot.spot=핫스팟
color.descriptor.port=포트
color.descriptor.snap.lines=줄 꺽기
color.descriptor.selection.box.border=선택 상자//선택 상자 테두리
color.descriptor.selection.box.background=선택 상자//선택 상자 백그라운드
notification.can.t.open.diagram.while.indexing.is.in.progress=색인 생성이 진행되는 동안 다이어그램을 사용할 수 없습니다
category.name.show.borders=테두리 표시
group.Diagram.AppearanceGroup.text=모양
action.Diagram.SearchItemOnWeb.text=Google 검색
group.Uml.NodeCellEditorPopup.QuickActions.text=표시
group.Uml.NodeCellEditorPopup.GoTo.text=이동
group.Diagram.ExportGroup.text=다이어그램 내보내기
color.descriptor.fine.grid=좁은 간격 그리드
color.descriptor.coarse.grid=넓은 간격 그리드
diagram.build.progress.preparing.data=데이터 준비 중…
diagram.build.progress.starting.data.model.build=데이터 모델 빌드 시작 중…
diagram.build.progress.building.data.model=데이터 모델 빌드 중…
diagram.build.progress.opening.diagram=다이어그램 여는 중…
diagram.build.progress.finishing.diagram.build=종료 중...
java.build.progress.searching.for.classes=클래스 검색 중…
java.build.progress.searching.for.class.members=클래스 멤버 검색 중…
java.build.progress.inferring.nullability=Null 추론 중…
java.build.progress.inferring.relationships=관계 추론 중...
java.build.progress.analyzing={0} 분석 중
show.grid.by.default=기본값으로 그리드 표시(&S)
enable.node.items.syntax.highlighting=노드 항목 구문 강조 표시(&E)
layout.on.category.switch=카테고리 전환 시 레이아웃(&C):
shorten.node.items.on.length=노드 항목의 길이 줄이기(&I):
layout.animation.duration=레이아웃 애니메이션 기간(&A):
diagram.layout.on.category.switch.never=사용 안 함
diagram.layout.on.category.switch.with.current.layouter=현재 레이아우터 사용
diagram.layout.on.category.switch.with.light.layouter=라이트 레이아우터 사용
diagram.settings.layout.title=레이아웃
diagram.settings.appearance.title=모양
diagram.settings.enable.animations=애니메이션 활성화(&A)
action.Diagram.DeleteSelection.text=삭제
group.change.content.name=내용
visibility.level.public=public만
visibility.level.protected=public + package + protected
action.Diagram.OpenSettings.text=다이어그램 설정 열기
group.Uml.Refactoring.text=리팩터링
group.UML.SourceActionsGroup.text=선택된 요소 액션
group.Uml.SourceActionsGroup.QuickActions.text=표시
group.Uml.SourceActionsGroup.GoTo.text=이동
add.note.with.docs.action.title=요소 문서에 대한 안내
add.note.no.docs.found=문서를 찾을 수 없습니다
group.Diagram.ExportToFileGroup.text=파일로 내보내기
group.Diagram.OpenInOnlineEditorGroup.text=웹 에디터에서 열기
action.Diagram.ExportToFileGroup.DotWithPositions.text=포지션이 있는 Graphviz .dot
action.Diagram.ExportToFileGroup.Dot.text=Graphviz .dot
action.Diagram.ExportToFileGroup.Mxgraph.text=JGraph .drawio
action.Diagram.ExportToFileGroup.Plantuml.text=PlantUML
action.Diagram.ExportToFileGroup.Graphml.text=YEd .graphml
action.Diagram.OpenInOnlineEditorGroup.DotWithPositions.text=포지션이 있는 Graphviz Online
action.Diagram.OpenInOnlineEditorGroup.Dot.text=Graphviz Online
action.Diagram.OpenInOnlineEditorGroup.Mxgraph.text=JGraph diagrams.net
action.Diagram.OpenInOnlineEditorGroup.Plantuml.text=PlantUML 웹 서버
action.Diagram.OpenInOnlineEditorGroup.Graphml.text=yEd Live
color.descriptor.bad.edge=에지//잘못된 에지
group.Diagram.CopyToClipboardGroup.text=클립보드에 복사
action.Diagram.ExportToFileGroup.Mermaid.text=Mermaid .md
action.Diagram.OpenInOnlineEditorGroup.Mermaid.text=Mermaid Live
action.Diagram.CopyToClipboardGroup.DotWithPositions.text=포지션이 있는 Graphviz DOT으로
action.Diagram.CopyToClipboardGroup.Dot.text=Graphviz DOT으로
action.Diagram.CopyToClipboardGroup.Mermaid.text=Mermaid로
action.Diagram.CopyToClipboardGroup.Plantuml.text=PlantUML으로
change.ordering.group.text=항목 순서 변경
action.name.change.ordering.to.0=항목 순서를 {0}(으)로 변경
ordering.as.in.source.code=선언 순서로 정렬
ordering.alphabetically=알파벳순 정렬
ordering.by.visibility=가시성별 정렬
diagram.node.item.style=노드 항목 스타일
diagram.node.style.plain=일반
diagram.node.style.with.types.aligned=타입 정렬함
diagram.export.progress=내보내는 중...
group.Diagram.ExportAndCopyGroup.text=다이어그램 내보내기
action.Diagram.RefreshDataModelManually.text=데이터 모델 새로고침
color.descriptor.highlighted.node=노드//강조표시된 노드 테두리
diagram.focusview.focus.view=포커스 뷰
dialog.diagram.focus.view.on=다음을 포커스 뷰
dialog.diagram.focus.view.on.paths.between.two.nodes.title=두 노드 간의 경로를 포커스 뷰
dialog.diagram.focus.view.on.node.neighbourhood.title=노드 이웃점을 포커스 뷰
dialog.diagram.focus.view.on.cycles.title=순환을 포커스 뷰
dialog.diagram.focus.view.on.directed.paths.from.0.to.1={0}(에)서 {1}(으)로 방향을 설정함
dialog.diagram.focus.view.on.directed.paths.from.0={0}(에)서 방향을 설정함
dialog.diagram.focus.view.on.directed.paths.to.0={0}(으)로 방향을 설정함
dialog.diagram.focus.view.on.directed.paths.in.both.directions=양쪽에서 방향을 설정함
dialog.diagram.focus.view.on.undirected.paths=방향이 설정되지 않은 경로
dialog.diagram.focus.view.on.directed.cycles=방향이 설정된 순환
dialog.diagram.focus.view.on.undirected.cycles=방향이 설정되지 않은 순환
dialog.diagram.focus.view.find.button.title=찾기
diagram.focus.view.no.path.has.been.found.notification=경로를 찾을 수 없습니다
dialog.diagram.focus.view.path.filter=경로 표시
dialog.diagram.focus.view.path.filter.all=모두
dialog.diagram.focus.view.path.filter.k.shortest=K 최단경로:
dialog.diagram.focus.view.cycles.filter=순환 표시
dialog.diagram.focus.view.cycles.filter.all=모두
dialog.diagram.focus.view.cycles.filter.containing.all.selected.nodes=선택된 모든 노드를 포함함
dialog.diagram.focus.view.cycles.filter.containing.any.selected.node=선택된 노드 중 아무것이나 포함함
dialog.diagram.measure.centrality=중심성 측정
dialog.diagram.centrality.number.of.connected.edges=연결된 에지 수
dialog.diagram.centrality.number.of.connected.edges.description=노드와 관련된 수신, 발신 혹은 모든 에지의 수를 표시합니다(수신, 발신 및 전체적인 정도를 측정함)
dialog.diagram.centrality.graph.centrality=중심성 그래프 작성
dialog.diagram.centrality.graph.centrality.description=노드에서 다른 모든 노드까지의 최단 경로거리 중 최대값의 역수를 표시합니다
dialog.diagram.centrality.nodes.betweenness.centrality=노드 매개 중심성
dialog.diagram.centrality.nodes.betweenness.centrality.description=노드/에지가 노드 쌍 간에 최단 거리에 놓여 있는 빈도를 표시합니다
dialog.diagram.centrality.closeness.centrality=근접 중심성
dialog.diagram.centrality.closeness.centrality.description=노드에서 다른 모든 노드까지의 모든 최단 경로거리를 합한 값의 역수를 표시합니다
dialog.diagram.centrality.edges.to.consider=고려할 에지
dialog.diagram.centrality.edges.to.consider.incoming=수신
dialog.diagram.centrality.edges.to.consider.outgoing=발신
dialog.diagram.centrality.consider.edge.directions=에지 방향 고려
dialog.diagram.centrality.measure.button.title=측정
diagram.path.finding=경로 찾는 중…
diagram.computing.characteristics=그래프 특성 연산 중…
diagram.measuring.centrality=중심성 측정 중…
dialog.diagram.graph.characteristics.title=공통 특성의 그래프 작성
diagram.graph.characteristics.group.common=공통
diagram.graph.characteristics.group.connectivity=연결성
diagram.graph.characteristics.group.cycles=주기
diagram.graph.characteristics.node.count=노드 개수:
diagram.graph.characteristics.node.count.context.help=그래프 상의 노드 개수
diagram.graph.characteristics.edge.count=에지 개수:
diagram.graph.characteristics.edge.count.context.help=그래프 상의 에지 개수
diagram.graph.characteristics.average.degree=평균 정도:
diagram.graph.characteristics.average.degree.context.help=<i>평균 정도</i>는 노드 개수 대비 에지 개수를 측정하며 다음과 같이 정의됩니다. <code>numberOfEdges / numberOfNodes</code>
diagram.graph.characteristics.density=밀도:
diagram.graph.characteristics.density.context.help=<i>밀도</i>는 가능한 최대의 에지 개수와 그래프 상의 에지의 비율로 다음과 같이 정의됩니다. <code>numberOfEdges / (numberOfNodes * (numberOfNodes - 1))</code>
diagram.graph.characteristics.contains.self.loops=셀프 루프를 포함:
diagram.graph.characteristics.contains.self.loops.context.help=소스와 목표가 같은 노드인 에지는 <i>셀프 루프</i>입니다
diagram.graph.characteristics.is.simple=간단함:
diagram.graph.characteristics.is.simple.context.help=<i>간단한</i> 그래프란 고유한 두 개의 에지 <code>e1, e2</code>가 없으며 <code>e1.source()</code>가 <code>e2.source()</code>와 같고 <code>e1.target()</code>가 <code>e2.target()</code>와 같은 그래프를 말합니다
diagram.graph.characteristics.contains.multiple.edges=다중 에지를 포함:
diagram.graph.characteristics.contains.multiple.edges.context.help=같은 쌍의 노드를 어느 방향으로든 연결하면 두 개의 고유한 에지 <code>e1, e2</code>는 다중 에지입니다
diagram.graph.characteristics.is.connected=연결됨:
diagram.graph.characteristics.is.connected.context.help=그래프에 모든 노드 쌍 사이에 방향이 설정되지 않은 경로가 있으면 해당 그래프는 <i>연결된</i> 것입니다
diagram.graph.characteristics.is.biconnected=이중 연결됨:
diagram.graph.characteristics.is.biconnected.context.help=단절점이 없어 어떤 노드가 제거되어도 그래프의 연결이 끊어지지 않는 그래프는 <i>이중 연결</i>된 것입니다
diagram.graph.characteristics.is.strongly.connected=강하게 연결됨:
diagram.graph.characteristics.is.strongly.connected.context.help=그래프에 모든 노드 쌍 사이에 방향이 설정된 경로가 있으면 해당 그래프는 <i>강하게 연결된</i> 것입니다
diagram.graph.characteristics.is.acyclic=비순환임:
diagram.graph.characteristics.is.acyclic.context.help=방향이 있는 순환이 없는 그래프는 <i>비순환</i> 그래프입니다
diagram.graph.characteristics.is.bipartite=이분 그래프임:
diagram.graph.characteristics.is.bipartite.context.help=나누되 각 에지가 다른 세트의 두 노드를 연결하도록 노드를 두 세트로 나눌 수 있는 그래프는 <i>이분</i>그래프입니다
diagram.graph.characteristics.is.planar=평면임:
diagram.graph.characteristics.is.planar.context.help=에지가 교차 없이 평면에 그릴 수 있는 그래프는 <i>평면</i> 그래프입니다
diagram.graph.characteristics.is.forest=포레스트임:
diagram.graph.characteristics.is.forest.context.help=연결된 구성요소가 트리인 그래프는 <i>포레스트</i>입니다
diagram.graph.characteristics.is.tree=트리임:
diagram.graph.characteristics.is.tree.context.help=비순환 연결 그래프는 <i>트리</i>입니다
diagram.graph.characteristics.yes=예
diagram.graph.characteristics.no=아니요
group.Diagram.AnalyzeGraphGroup.text=그래프 분석
action.Diagram.AnalyzeGraph.ShowCharacteristics.text=그래프 특성 표시
action.Diagram.AnalyzeGraph.DropFocus.text=포커스 해제
action.Diagram.AnalyzeGraph.FocusOnSelectedNodes.text=선택된 노드에 포커스
action.Diagram.AnalyzeGraph.FocusOnNodeNeighbourhood.text=노드 이웃점에 포커스…
action.Diagram.AnalyzeGraph.FocusOnPathsBetweenTwoNodes.text=두 노드 간의 경로에 포커스…
action.Diagram.AnalyzeGraph.FocusOnCycles.text=순환에 포커스…
action.Diagram.AnalyzeGraph.MeasureCentrality.text=중심성 측정…
action.Diagram.AnalyzeGraph.DropCentralityValues.text=중심성 라벨 해제
dialog.diagram.auto.clustering=자동 클러스터링
dialog.diagram.auto.clustering.biconnected=이중 연결된 구성요소
dialog.diagram.auto.clustering.biconnected.description=노드 내의 모든 그룹이 이중 연결되도록 노드가 그룹화됩니다. 여러 개의 이중 연결된 구성 요소에 속하는 노드는 이러한 구성 요소 중 정확히 하나에 할당됩니다.
dialog.diagram.auto.clustering.edge.betweenness=에지 매개
dialog.diagram.auto.clustering.edge.betweenness.description=반복할 때마다 매개 중심성이 가장 높은 에지는 그래프에서 제거됩니다. 제거할 에지가 없거나 요청된 최대 개수 만큼의 그룹이 발견되면 메서드가 중단됩니다.
dialog.diagram.auto.clustering.quality.time.ratio=품질/시간 비율
dialog.diagram.auto.clustering.kmeans=K 평균
dialog.diagram.auto.clustering.kmeans.description=그래프의 노드는 위치에 따라 클러스터의 평균(무게 중심)으로부터 거리ㅏ 최소화되는 방향으로 K 클러스터내에서 나뉩니다.
dialog.diagram.auto.clustering.button.title=실행
diagram.auto.clustering.cluster=클러스터
diagram.auto.clustering=자동 클러스터링…
action.Diagram.AnalyzeGraph.AutoClustering.text=자동 클러스터링…
action.Diagram.AnalyzeGraph.DropClustering.text=클러스터링 중단
