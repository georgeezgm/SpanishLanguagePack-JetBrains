action.DlvDebugger.ViewAsGroup.text=mostrar como
action.DlvRewindAction.description=Ejecutar el programa hacia atrÃ¡s al punto de interrupciÃ³n anterior
action.DlvRewindAction.text=Revertir
action.DlvToggleThreadsAction.description=Mostrar hilos
action.DlvToggleThreadsAction.text=Mostrar hilos
action.DlvDumpAction.text=Volcar Goroutines
action.MergeIdenticalStacktraces.text=Combinar seguimientos de pila idÃ©nticos
action.HideGoroutine=Ocultar Goroutines
action.HideSimilarGoroutines=Ocultar todas las Goroutines con la misma pila
action.ResetHiddenAction.text=Restablecer Goroutines ocultas
action.ResetHiddenAction.description=Restablecer gorutinas ocultas
action.FilterStacktraces.description=Mostrar solo las pilas que contienen la cadena especificada
action.FilterStacktraces.task.name=Pila de filtros
action.Go.NewGoFile.description=Crear un nuevo archivo Go
action.Go.NewGoFile.text=Ir archivo
action.GoAddContentRootFromGopath.description=Agregar directorio seleccionado al proyecto actual
action.GoAddContentRootFromGopath.text=Agregar directorio al proyecto actual
action.GoCallHierarchyPopupMenu.BaseOnThisDeclaration.text=Basado en esta declaraciÃ³n
action.GoCoreDumpAction.text=Volcado de nÃºcleo abierto...
action.GoFmtFileAction.description=ir a formatear el archivo seleccionado con la utilidad fmt
action.GoFmtFileAction.text=Ir a archivo Fmt
action.GoFmtProjectAction.description=go fmt utilidad para formatear el proyecto
action.GoFmtProjectAction.text=Ir al proyecto Fmt
action.GoGenerateConstructorAction.description=Crear funciÃ³n constructora para estructura
action.GoGenerateConstructorAction.text=Constructor
action.GoGenerateStructFieldsFromJsonAction.description=JSONì—?ì„œ êµ¬ì¡°ì²´ í•„ë“œ ìƒ?ì„±
action.GoGenerateStructFieldsFromJsonAction.text=JSONì—?ì„œ êµ¬ì¡°ì²´ í•„ë“œ
action.GoGenerateTypeFromJsonAction.description=JSONì—?ì„œ íƒ€ìž… ìƒ?ì„±
action.GoGenerateTypeFromJsonAction.text=JSONì?˜ íƒ€ìž…
action.GoGenerateFileAction.description=Ejecutar ir a generar en archivos seleccionados
action.GoGenerateFileAction.text=Ir a generar archivo
action.GoGenerateGetterAction.description=Generar mÃ©todo getter para campo
action.GoGenerateGetterAction.text=Getter
action.GoGenerateGetterSetterAction.description=Generar mÃ©todos getter y setter para campos
action.GoGenerateGetterSetterAction.text=Getter y Setter
action.GoGenerateSetterAction.description=Generar mÃ©todo de establecimiento para el campo
action.GoGenerateSetterAction.text=Setter
action.GoIdeNewProjectAction.text=Proyecto...
action.GoImportsFileAction.description=Optimizar la importaciÃ³n de archivos seleccionados con la utilidad goimports
action.GoImportsFileAction.text=Archivo Goimports
action.GoOpenProjectFromGopath.description=Abrir directorio seleccionado como proyecto
action.GoOpenProjectFromGopath.text=Abrir directorio como proyecto
action.GoRemoveContentRootAction.description=Eliminar la raÃ­z del contenido seleccionado del proyecto actual
action.GoRemoveContentRootAction.text=Desconectar directorio...
action.GoReplayTraceAction.text=Depurar seguimiento guardado...
action.GoVetFileAction.description=Lint archivos o directorios seleccionados con la herramienta go vet
action.GoVetFileAction.text=Ir a archivo veterinario
action.Vgo.NewVgoFile.description=Cree un nuevo archivo de mÃ³dulo Go
action.Vgo.NewVgoFile.text=Ir al archivo del mÃ³dulo
action.WelcomeScreen.CreateDirectoryProject.text=Nuevo proyecto
action.com.goide.vgo.actions.VgoSyncAction.description=ir a la sincronizaciÃ³n del mÃ³dulo
action.com.goide.vgo.actions.VgoSyncAction.text=MÃ³dulo Sync Go
action.com.goide.vgo.actions.VgoTidyAction.description=Ejecute `go mod tidy` en el mÃ³dulo
action.com.goide.vgo.actions.VgoTidyAction.text=Ir Mod Tidy
action.go.fill.paragraph=Rellenar pÃ¡rrafo
action.GoShareInPlaygroundAction.text=Compartir en el patio de juegos
action.GoShareInPlaygroundAction.description=Compartir el archivo actual en Go Playground
action.GoShareInPlaygroundAction.error=No se pudo compartir el archivo en el patio de juegos. {0}
action.GoShareInPlaygroundAction.empty.id=Playground devuelve una ID vacÃ­a
action.GoShareInPlaygroundAction.confirmation=Â¿EstÃ¡ seguro de que desea subir {0} a Go Playground y hacerlo pÃºblico?
action.GoShareInPlaygroundAction.notification.text=Archivo compartido en Go Playground\: <a href\="{0}"> {0}</a>
action.GoShareInPlaygroundAction.notification.copyUrl=Copiar URL al portapapeles
action.go.exclude.package.from.import.and.completion=Excluir ''{0}'' de la importaciÃ³n y finalizaciÃ³n
action.GoIntroduceTypeAction.text=íƒ€ìž… ì‚½ìž…â€¦
go.app.engine.not.gae.sdk.validation.message=El SDK seleccionado no es adecuado para App Engine. <br> El SDK para App Engine estÃ¡ disponible en el siguiente enlace <a href \="https\://cloud.google.com/appengine/downloads">https\://cloud.google.com/appengine/downloads</a>
go.app.engine.wizard.description=\ Cree un proyecto de Go App Engine para desarrollar aplicaciones de Go que utilicen Google App Engine. <br/> El nuevo mÃ³dulo contiene la configuraciÃ³n predeterminada y los controladores de Go predeterminados.
go.app.engine.wizard.name=App Engine
go.modules.wizard.description=Cree un proyecto de mÃ³dulo Go para desarrollar aplicaciones y bibliotecas Go que utilicen mÃ³dulos Go para la gestiÃ³n de dependencias.
go.wizard.description=Cree un proyecto Go para desarrollar aplicaciones y bibliotecas. <br/> Esta opciÃ³n crea un proyecto Go vacÃ­o.
go.background.task.running.title=Ejecutando...
go.background.task.compiling.title=Compilando...
filetype.go.cgo.description=Cgo íŒŒì?¼
go.checkin.factory.fmt.commit.anyway.question=Â¿EstÃ¡ seguro de que quiere comprometerse de todos modos?
go.checkin.factory.fmt.failed.message=GoFmt devuelve un cÃ³digo distinto de cero para algunos archivos.
go.checkin.factory.fmt.not.started.message=go fmt. {0} no se puede ejecutar.
go.colors.and.fonts.bad.character=CarÃ¡cter no vÃ¡lido
go.colors.and.fonts.braces.and.operators.braces=Tirantes
go.colors.and.fonts.braces.and.operators.brackets=Corchetes
go.colors.and.fonts.braces.and.operators.colon=colon
go.colors.and.fonts.braces.and.operators.comma=Coma
go.colors.and.fonts.braces.and.operators.dot=Periodo
go.colors.and.fonts.braces.and.operators.operator=Operadores
go.colors.and.fonts.braces.and.operators.parentheses=parentheses
go.colors.and.fonts.braces.and.operators.semicolon=Punto y coma
go.colors.and.fonts.braces.and.operators=Llaves y operadores
go.colors.and.fonts.comments.block.comment=Bloquear comentarios
go.colors.and.fonts.comments.comment.keyword=Palabra clave de comentario
go.colors.and.fonts.comments.comment.reference=Ver comentarios
go.colors.and.fonts.comments.line.comment=Comentarios de lÃ­nea
go.colors.and.fonts.comments=Comentarios
go.colors.and.fonts.comments.build.constraints=ë¹Œë“œ ì œì•½ ì¡°ê±´
go.colors.and.fonts.comments.build.constraints.tag=ê¼¬ë¦¬í‘œ
go.colors.and.fonts.comments.build.constraints.parens=ì†Œê´„í˜¸
go.colors.and.fonts.comments.build.constraints.operators=ì—°ì‚°ìž?
go.colors.and.fonts.declarations.constants.builtin.constant=Constantes integradas
go.colors.and.fonts.declarations.constants.local.constant=Constantes locales
go.colors.and.fonts.declarations.constants.package.exported.constant=Constantes expuestas del paquete
go.colors.and.fonts.declarations.constants.package.local.constant=Paquete de constantes locales
go.colors.and.fonts.declarations.constants=Constantes
go.colors.and.fonts.declarations.function.parameter=ParÃ¡metros de funciÃ³n
go.colors.and.fonts.declarations.functions.builtin.function=Funciones integradas
go.colors.and.fonts.declarations.functions.exported.function=Funciones expuestas
go.colors.and.fonts.declarations.functions.package.local.function=Funciones locales del paquete
go.colors.and.fonts.declarations.functions=Funciones
go.colors.and.fonts.declarations.label=Etiquetas
go.colors.and.fonts.declarations.method.receiver=Receptor de mÃ©todo
go.colors.and.fonts.declarations.package=Paquete
go.colors.and.fonts.declarations.types.package.exported.interface=Empaquetado de interfaz expuesto
go.colors.and.fonts.declarations.types.package.exported.struct=Paquete de estructura expuesto
go.colors.and.fonts.declarations.types.package.local.interface=Interfaces locales del paquete
go.colors.and.fonts.declarations.types.package.local.struct=Empaquetar estructuras locales
go.colors.and.fonts.declarations.types.type.specification=EspecificaciÃ³n de tipo
go.colors.and.fonts.declarations.types=Tipos
go.colors.and.fonts.declarations.variables.builtin.variable=Variables integradas
go.colors.and.fonts.declarations.variables.local.variable=Variables locales
go.colors.and.fonts.declarations.variables.package.exported.variable=Paquete de variables expuestas
go.colors.and.fonts.declarations.variables.package.local.variable=Paquete de variables locales
go.colors.and.fonts.declarations.variables.reassignment.in.short.variable.declaration=Reasignar declaraciones de variables cortas
go.colors.and.fonts.declarations.variables.scope.declared.variable=Especificar el alcance de la variable declarada
go.colors.and.fonts.declarations.variables.shadowing.variable=Variables de sombra
go.colors.and.fonts.declarations.variables.struct.exported.member=Configurar miembros no expuestos
go.colors.and.fonts.declarations.variables.struct.local.member=Configurar miembros locales
go.colors.and.fonts.declarations.variables=Variables
go.colors.and.fonts.declarations=Declaraciones
go.colors.and.fonts.identifier=Identificador
go.colors.and.fonts.keyword=Palabra clave
go.colors.and.fonts.number=NÃºmero
go.colors.and.fonts.references.function.calls.builtin.function.call=Llamar a la funciÃ³n incorporada
go.colors.and.fonts.references.function.calls.exported.function.call=Llamar a la funciÃ³n expuesta
go.colors.and.fonts.references.function.calls.local.function.call=Llamar a la funciÃ³n local
go.colors.and.fonts.references.function.calls=Llamadas a funciones
go.colors.and.fonts.references.type.references.builtin.type.reference=Referencia de tipo incorporada
go.colors.and.fonts.references.type.references.package.exported.interface=Empaquetado de interfaz expuesto
go.colors.and.fonts.references.type.references.package.exported.struct=Estructura expuesta del paquete
go.colors.and.fonts.references.type.references.package.local.interface=Interfaz local del paquete
go.colors.and.fonts.references.type.references.package.local.struct=Estructura local del paquete
go.colors.and.fonts.references.type.references.type.specification=EspecificaciÃ³n de tipo
go.colors.and.fonts.references.type.references=Referencias de tipo
go.colors.and.fonts.references.variable.calls.exported.variable.call=Llamar a variables expuestas
go.colors.and.fonts.references.variable.calls.local.variable.call=Llamar a variables locales
go.colors.and.fonts.references.variable.calls.package.local.variable.call=Empaquetado de llamadas de variables locales
go.colors.and.fonts.references.variable.calls.struct.exported.member.call=Configurar llamadas de miembros no expuestos
go.colors.and.fonts.references.variable.calls.struct.local.member.call=Configurar llamadas de miembros locales
go.colors.and.fonts.references.variable.calls=Variables de llamada
go.colors.and.fonts.references=Referencias
go.colors.and.fonts.string.invalid.escape=Escape no vÃ¡lido
go.colors.and.fonts.string.text=Texto
go.colors.and.fonts.string.valid.escape=Escapes vÃ¡lidos
go.colors.and.fonts.string=Cadena
go.colors.and.fonts.declarations.struct.tags=êµ¬ì¡°ì²´ íƒœê·¸
go.colors.and.fonts.declarations.struct.tags.key=í‚¤
go.colors.and.fonts.declarations.struct.tags.colon=ì½œë¡ 
go.colors.and.fonts.declarations.struct.tags.value=ê°’
go.colors.and.fonts.declarations.struct.tags.arbitraryText=ìž„ì?˜ì?˜ í…?ìŠ¤íŠ¸
go.completion.insert.if.not.nil.statement.command.name=' if value \! \=nil {...} '
go.completion.insert.literal.command.name=Insertar literal Go
go.completion.insert.type.name.command.name=Insertar nombre de tipo
go.completion.method.like.completion.advertisement=Haga clic en {0} para ver las funciones que aceptan expresiones como primer argumento
go.completion.method.like.completion.command.name=CÃ³digo de expresiÃ³n de mÃ©todo completo de la funciÃ³n
go.core.dump.dialog.dump.path.label=& Dump Core\:
go.core.dump.dialog.executable.label=& Ejecutable\:
go.core.dump.dialog.invalid.core.dump.validation.message=Archivo de volcado de nÃºcleo no vÃ¡lido.
go.core.dump.dialog.invalid.executable.validation.message=Este archivo no es ejecutable.
go.core.dump.dialog.specify.core.dump.validation.message=Especificar el volcado del nÃºcleo
go.core.dump.dialog.specify.executable.validation.message=Especificar ejecutable
go.core.dump.failed.to.start.error.message=No se pudo iniciar el volcado del nÃºcleo del depurador {0}\: {1}
go.core.dump.session.name=Volcado de nÃºcleo {0}
go.create.new.file.action.command.name=Crear archivo Go {0}
go.create.new.file.action.name=Ir archivo
go.create.new.file.dialog.title=Nuevo archivo Go
go.create.new.file.empty.file.kind.name=Archivo vacÃ­o
go.create.new.file.simple.application.kind.name=AplicaciÃ³n simple
go.debug.show.goroutines.action.name=Mostrar Goroutines
go.debug.show.threads.action.name=Mostrar hilos
go.declarations.intentions.category=Go/declaraciones
go.edit.auto.import.settings.action.name=Editar la configuraciÃ³n de importaciÃ³n automÃ¡tica
go.auto.import.and.completion.title=ImportaciÃ³n automÃ¡tica y finalizaciÃ³n del cÃ³digo
go.auto.import.and.completion.add.exclude.label=Ingrese la ruta de importaciÃ³n para excluir de la importaciÃ³n automÃ¡tica y la finalizaciÃ³n del cÃ³digo.
go.element.is.not.go.expression.error.hint=La selecciÃ³n no contiene una expresiÃ³n Go.
go.exclude.import.path.dialog.empty.path.validation.message=La ruta de importaciÃ³n no puede estar en blanco.
go.exclude.import.path.dialog.title=Excluir ruta de importaciÃ³n
go.exclude.import.path.from.completion.action.name=\ Exclude ''{0}''
filetype.go.description=Go íŒŒì?¼
go.fix.searching.for.usages.progress.title=Buscando usos...
go.fix.change.parameters.parameter={0, choice, 0\#parameters |1\#parameters|2\#parameters}
go.fix.add.missing.new.line.name=Agregar saltos de lÃ­nea faltantes
go.fix.add.comma.name=Agregar coma
go.fix.add.whitespace.name=Agregar espacio en blanco
go.fix.add.import.for.side.effects.name=Importar efectos secundarios
go.fix.add.prefix.to.comment.name=Agregar prefijo ''{0}'' al comentario
go.fix.add.return.statement.name=return ë¬¸ì?„ ì¶”ê°€í•©ë‹ˆë‹¤.
go.fix.change.import.sorting.settings.name=Cambiar la configuraciÃ³n de clasificaciÃ³n de importaciÃ³n
go.fix.change.result.parameters.result.parameter={0, choice, 0\#resultparameters |1\#resultparameters|2\#resultparameter}
go.fix.create.directory.text=Crear directorio {0} en {1}
go.fix.change.parameters.name=Cambiar parÃ¡metro
go.fix.change.result.parameters.in.assignment.name=Cambiar los parÃ¡metros de resultado en la asignaciÃ³n
go.fix.change.result.parameters.in.call.name=Cambiar los parÃ¡metros de resultado en la llamada
go.fix.change.result.parameters.in.return.name=Cambiar los parÃ¡metros de resultado a cambio
go.fix.change.result.parameters.in.variable.specification.name=Cambiar el parÃ¡metro de resultado en la especificaciÃ³n de la variable
go.fix.change.result.parameters.name=Cambiar parÃ¡metros de resultado
go.fix.change.signature.from.function.type.name=Cambiar la firma del tipo de funciÃ³n
go.fix.change.signature.from.usage.text=Cambiar firma de uso
go.fix.change.signature.from.function.type.text=Cambiar firma ''{1}'' de {0} a ({2}) ({3})
go.fix.change.signature.from.usage.add=''{0}'' to {1, number, ordinal} th {2} {3} ''{4}'' agregar a
go.fix.change.signature.from.usage.remove={2} Eliminar {0, number, ordinal} th {1} de ''{3}''
go.fix.change.signature.from.usage.change=\ {2} {0, number, ordinal} {1} in ''{3}'' in ''{4}'' {5} cambiado a ' '
go.fix.change.signature.from.usage.mix={1} Cambiar {0} en ''{2}'' a ({3})
go.fix.convert.to.is.equal.name=Convertir a '' \=\=''
go.fix.delete.name=Eliminar {0}
go.fix.delete.text={0} Eliminar ''{1}''
go.fix.delete.range.name=Eliminar elemento
go.fix.delete.third.index.name=Eliminar tercer Ã­ndice
go.fix.delete.blank.argument.name=Eliminar argumento vacÃ­o
go.fix.export.name=Exportar
go.fix.export.field.name=Campo de exportaciÃ³n
go.fix.replace.tilda.with.hat.name=Reemplazar '' ~ '' con '' ^ ''
go.fix.replace.assign.with.equals.name=':='ì?„ '='ë¡œ ë°”ê¾¸ê¸°
go.fix.replace.equals.with.assign.name=Reemplazar con ''\: \=''
go.fix.replace.with.nil.with.side.effects.name=reemplazar con nil (cambiar el significado)
go.fix.replace.with.correct.defer.name=Reemplazar con la sintaxis de aplazamiento correcta
go.fix.add.function.call.name=Agregar llamada de funciÃ³n
go.fix.delete.redundant.index.name=Eliminar Ã­ndice innecesario
go.fix.delete.conversion.name=Eliminar conversiÃ³n
go.fix.delete.conversion.with.side.effects.name=Eliminar conversiÃ³n (el significado puede cambiar)
go.fix.disable.vendoring.in.module.text=Deshabilitar el soporte de experimentaciÃ³n de proveedores en el mÃ³dulo ''{0}''
go.fix.disable.vendoring.in.module.name=Deshabilitar el soporte de experimentaciÃ³n del proveedor en el mÃ³dulo
go.fix.drop.suffix.text=Eliminar el sufijo especÃ­fico de la unidad ''{0}''
go.fix.drop.suffix.name=Eliminar el sufijo especÃ­fico de la unidad
go.fix.multiple.packages.name=Cambiar el nombre del paquete
go.fix.multiple.packages.text=Cambiar el nombre del paquete a {0}
go.fix.choose.package.name=Elija el nombre del paquete
go.fix.simplify.bool.expr.name=Simplificar expresiones
go.fix.failed.to.simplify.if.statement=No se pudo simplificar la declaraciÃ³n '' if ''.
go.fix.view.all.duplicates.name=Ver nombres duplicados
go.fix.view.all.duplicates.text=Ver nombres duplicados de ''{0}''
go.fix.view.all.duplicates.targets.tab.text=''{0}'' Duplicar
go.fix.view.all.duplicates.targets.tool.window.title={0} de {1}
go.fix.view.all.duplicates.targets.code.usages.string=Se encontraron duplicados
go.fix.add.function.block.name=Agregar cuerpo
go.fix.add.keys.to.struct.literal.value.name=Agregar clave y eliminar valor cero
go.fix.add.local.var.for.expression.name=Insertar variable local
go.fix.add.missing.return.value.name=Agregar valor de retorno faltante
go.fix.add.pointer.name=Agregar puntero
go.fix.add.explicit.dereference.name=Agregar desreferencia explÃ­cita
go.fix.always.false.if.name=Eliminar rama '' if ''
go.fix.always.true.if.name=Elimina las ramas restantes y simplifica la declaraciÃ³n '' if '' actual
go.fix.convert.int.to.string.using.conversion.call={0} í˜¸ì¶œì?„ ì‚¬ìš©í•´ ì •ìˆ˜ë¥¼ ë¬¸ìž?ì—´ë¡œ ë³€í™˜
go.fix.convert.string.to.byte.name=Convertir cadena a bytes
go.fix.convert.to.expected.type.name=Convertir a
go.fix.convert.to.expected.type.text='{0}'
go.fix.create.wrapper.type.name=Crear tipo
go.fix.delete.all.unused.parameters.name=Eliminar todos los parÃ¡metros no utilizados
go.fix.delete.ampersand.and.type.in.composite.lit.name=Eliminar tipo duplicado
go.fix.delete.extra.expressions.name=Eliminar expresiones adicionales
go.fix.delete.import.name=eliminar declaraciÃ³n de importaciÃ³n
go.fix.delete.parameter.names.name=Eliminar nombres de parÃ¡metros
go.fix.delete.unused.parameter.name=Eliminar parÃ¡metros no utilizados
go.fix.empty.signature.name=Corregir firma
go.fix.exclude.from.unhandled.inspection.name=No informe este mÃ©todo/funciÃ³n ahora
go.fix.extract.empty.slice.to.var.declaration.name=nil Reemplazar con declaraciÃ³n de segmento (cambiar significado)
go.fix.extract.to.own.declaration.name=Extracto con autodeclaraciÃ³n
go.fix.finish.call.name=Finalizar llamada
go.fix.ignore.explicitly.name=Ignorar explÃ­citamente
go.fix.ignore.explicitly.using.closure.name=í?´ë¡œì €ë¥¼ ì‚¬ìš©í•´ ëª…ì‹œì ?ìœ¼ë¡œ ë¬´ì‹œ
go.fix.handle.error.name=ì˜¤ë¥˜ ì²˜ë¦¬
go.fix.ignore.unused.call.result.name=Ignorar los resultados de llamadas no utilizadas
go.fix.implement.missing.methods.name=Falta la implementaciÃ³n del mÃ©todo
go.fix.insert.blank.identifiers.name=Inserte un identificador vacÃ­o a la izquierda de una declaraciÃ³n de asignaciÃ³n
go.fix.navigate.to.name=Ir a
go.fix.navigate.to.text={0}(ìœ¼)ë¡œ ì?´ë?™
go.fix.optimize.imports.name=optimizaciÃ³n de declaraciÃ³n de importaciÃ³n
go.fix.place.build.tag.before.package.name=Coloque la etiqueta de compilaciÃ³n antes del paquete
go.fix.remove.redundant.bool.literal.name=Simplificar a
go.fix.replace.with.name=Reemplazar con
go.fix.replace.with.text=Reemplazar con ''{0}''
go.fix.rename.to.name=Cambiar nombre a
go.fix.rename.to.text=''{0}''(ìœ¼)ë¡œ ì?´ë¦„ ë³€ê²½
go.fix.rename.all.receivers.name=Cambiar el nombre de todos los receptores
go.fix.rename.all.receivers.text=Cambiar el nombre de todos los receptores a ''{0}''
go.fix.replace.expression.name=Anteponer '' \\ & ''
go.fix.signature.name=Corregir firma
go.fix.sort.imports=Ordenar importaciones
go.fix.simplify.expression.to.boolean.literal.name=Simplificar condiciÃ³n
go.fix.simplify.to.text=\ Simplificar a ''{0}''
go.fix.simplify.something.to.text='{0}'' simplificado a ''{1}'
go.fix.suppress.inspection.for.text=Suprimir {0}
go.fix.suppress.all.inspections.for.text=Suprime todas las {0} inspecciones
go.fix.unwrap.parens.name=Desenvolver parÃ©ntesis
go.fix.convert.to.format.function.name=Cambiar a la funciÃ³n de formato
go.fix.convert.to.format.function.text=Cambiar ''{0}'' con funciÃ³n de formato
go.fix.introduce.local.variable.for.expression=''{0}'' insertar variable local
go.fix.introduce.method.name=Crear mÃ©todo
go.fix.introduce.method.text=Crear mÃ©todo ''{0}''.
go.fix.introduce.function.name=Crear funciÃ³n
go.fix.introduce.function.text=''{0}'' Crear funciÃ³n
go.fix.field.with.the.same.tag='{1}'' Campo con la misma etiqueta ''{0}'
go.fix.field.repeats.tag.with.value=El campo ''{1}'' tiene el valor ''{2}'' en el campo ''{3}'' repite la etiqueta ''
go.fix.convert.int.to.rune=Convertir entero en runa
go.fix.unpack.slice.name=Desembalaje de rodajas
go.fix.enable.gopath.indexing.name=Habilitar la indexaciÃ³n de GOPATH
go.get.package.fix.family.name='go get' ì‹¤í–‰
go.use.gopath.from.system.environment.checkbox=Usar GOPATH definido en el entorno del sistema
go.index.entire.gopath.checkbox=Crear Ã­ndice GOPATH completo
go.index.entire.gopath.tooltip=Cuando estÃ¡ deshabilitado, solo se indexan los proyectos y los paquetes vendidos. <br/> Esto mejora el rendimiento general, pero los paquetes GOPATH no estÃ¡n disponibles.
go.libraries.configurable.path.source.prefix.default=[Predeterminado]
go.libraries.configurable.path.source.prefix.gopath=[GOPATH]
go.inspection.assignment.nil.without.explicit.type.message=No se puede asignar nil sin un tipo explÃ­cito
go.inspection.assignment.to.receiver.display.name=Asignar al receptor
go.inspection.bool.condition.display.name=condiciÃ³n bool
go.inspection.comment.has.no.leading.space.display.name=El comentario no tiene espacios iniciales.
go.inspection.comment.of.exported.element.starts.with.incorrect.name.display.name=El comentario del elemento expuesto comienza con un nombre incorrecto.
go.inspection.comment.should.have.package.prefix.message=Los comentarios del paquete deben tener el formato '' Paquete {0}... ''
go.inspection.comment.should.be.without.article.message=El formato del comentario debe/debe ser '' {0}... '' (con editorial opcional)
go.inspection.comment.should.be.meaningful.message=El comentario debe ser significativo o debe eliminarse
go.inspection.defer.go.statement.calls.recover.or.panic.directly.display.name=Defer/go ë¬¸ì?€ 'recover' ë˜?ëŠ” 'panic'ì?„ ì§?ì ‘ í˜¸ì¶œí•©ë‹ˆë‹¤
go.inspection.defer.or.go.should.not.call.function.message={0} no se puede llamar a {1} directamente
go.inspection.defer.in.loop.display.name=Aplazar en bucle
go.inspection.deprecated.element.display.name=elementos obsoletos
go.inspection.division.by.zero.display.name=DivisiÃ³n por 0
go.inspection.empty.declaration.display.name=DeclaraciÃ³n vacÃ­a
go.inspection.empty.declaration.message=declaraciÃ³n vacÃ­a {0}
go.inspection.empty.slice.declared.via.literal.display.name=Rebanada vacÃ­a declarada mediante literal
go.inspection.error.string.should.not.be.capitalized.or.end.with.punctuation.display.name=La cadena de error no puede escribirse en mayÃºscula o terminar con puntuaciÃ³n
go.inspection.exceeded.shift.expression.display.name=ExcediÃ³ la expresiÃ³n de cambio
go.inspection.explicit.dereference.calling.method.with.receiver.message=El mÃ©todo de llamada {0} con el receptor {1} (tipo {2}) requiere una desreferencia explÃ­cita
go.inspection.explicit.dereference.accessing.field.message={1}(íƒ€ìž… {2})ì?˜ í•„ë“œ {0}ì—? ì•¡ì„¸ìŠ¤í•˜ë ¤ë©´ ëª…ì‹œì ? ì—­ì°¸ì¡°ê°€ í•„ìš”í•©ë‹ˆë‹¤
go.inspection.exported.element.should.have.comment.display.name=Los elementos expuestos deben contener comentarios.
go.inspection.exported.element.should.have.its.own.declaration.display.name=Los elementos expuestos deben contener sus propias declaraciones.
go.inspection.extended.method.expression.syntax.before.go.1.10.message=Tipo de receptor inesperado, sintaxis de expresiÃ³n de mÃ©todo extendido disponible a partir de Go 1.10
go.inspection.imported.package.name.as.name.identifier.display.name=Nombre del paquete importado como identificador de nombre
go.inspection.impossible.interface.type.assertion=AserciÃ³n de tipo de interfaz imposible
go.inspection.incorrect.strings.replace.count.argument.display.name=Cadenas no vÃ¡lidas Reemplazar argumento de cÃ¡lculo
go.inspection.incorrect.usage.of.printf.display.name=ìž˜ëª»ë?œ 'fmt.Printf' ë°? 'fmt.Println' í•¨ìˆ˜ ì‚¬ìš©
go.inspection.incorrect.usage.of.the.errors.as.function.display.name=errors.Como uso incorrecto de la funciÃ³n
go.inspection.incorrect.usage.of.the.sync.atomic.display.name=ìž˜ëª»ë?œ 'sync/atomic' íŒ¨í‚¤ì§€ ì‚¬ìš©
go.inspection.locks.mistakenly.passed.by.value=Bloqueos pasados accidentalmente por valor
go.inspection.possible.misuse.of.unsafe.pointer={0} Existe la posibilidad de mal uso
go.inspection.invalid.conversions.of.uintptr.to.unsafe.Pointer=No se pudo convertir uintptr en unsafe.Pointer
go.inspection.infinite.for.loop.display.name=Bucle for infinito
go.inspection.problem.cannot.take.address=No se puede tomar la direcciÃ³n de {0}
go.inspection.problem.invalid.indirect=DirecciÃ³n indirecta {0} (tipo {1}) no vÃ¡lida
go.inspection.int.to.string.conversion=ConversiÃ³n de tipo entero a cadena
go.inspection.lost.cancel=context.CancelFunc no se llama
go.inspection.loop.closure.display.name=Variable de bucle capturada por la funciÃ³n literal
go.inspection.loop.closure.message=Variable de bucle {0} capturada por la funciÃ³n literal {1}
go.inspection.malformed.build.tag.display.name=Etiqueta de compilaciÃ³n no vÃ¡lida
go.inspection.malformed.struct.tag.display.name=Etiqueta de estructura no vÃ¡lida
go.inspection.missing.trailing.comma.before.newline.in.composite.literal.display.name=Falta la coma final antes de la nueva lÃ­nea en el literal compuesto
go.inspection.name.starts.with.package.name.display.name=El nombre comienza con el nombre del paquete.
go.inspection.nilness.analyzer.display.name=Nilness Analyzer
go.inspection.non-standard.signature.for.well.known.function.names.display.name=Firma no estÃ¡ndar de nombres de funciones conocidos
go.inspection.receiver.has.generic.name.display.name=El receptor contiene un nombre genÃ©rico.
go.inspection.redundant.blank.argument.in.range.display.name=Argumento vacÃ­o duplicado en el rango
go.inspection.redundant.comma.display.name=Coma duplicada
go.inspection.redundant.import.alias.display.name=Alias de importaciÃ³n duplicado
go.inspection.redundant.parentheses.display.name=ParÃ©ntesis duplicados
go.inspection.redundant.second.index.in.slices.display.name=Segundo Ã­ndice duplicado de la rebanada
go.inspection.redundant.semicolon.display.name=Punto y coma duplicado
go.inspection.redundant.type.conversion.display.name=Convertir tipo duplicado
go.inspection.redundant.types.in.composite.literals.display.name=Tipos duplicados de literales complejos
go.inspection.reserved.word.used.as.name.display.name=Palabra reservada utilizada como nombre
go.inspection.self.assignment.display.name=AutoasignaciÃ³n
go.inspection.shadowing.variable.display.name=Variable de sombra
go.inspection.struct.initialization.without.field.names.display.name=Inicializar estructura sin nombres de campo
go.inspection.struct.initialization.settings.report.for.local.type.checkbox=Informar tambiÃ©n las definiciones de tipos locales
go.inspection.struct.initialization.settings.report.for.literals.without.type.checkbox=Informar literales de estructura sin tipo
go.inspection.struct.field.has.tag.but.is.not.exported=El campo de estructura ''{0}'' tiene la etiqueta ''{1}'' pero no se exporta
go.inspection.type.can.be.omitted.display.name=El tipo se puede omitir
go.inspection.type.can.be.omitted.message=El tipo se puede omitir
go.inspection.unexported.return.type.of.exported.function.display.name=Tipo de retorno no expuesto de funciÃ³n expuesta
go.inspection.unhandled.error.display.name=Error no controlado
go.inspection.unit.specific.suffix.for.time.duration.display.name=time.Duration sufijo especÃ­fico de la unidad
go.inspection.unnecessarily.exported.identifier.display.name=ë¶ˆí•„ìš”í•˜ê²Œ ë‚´ë³´ë‚¸ ì‹?ë³„ìž?
go.inspection.unreachable.code.display.name=CÃ³digo inalcanzable
go.inspection.unknown.field.message=Campo desconocido {0} en la estructura literal
go.inspection.ambiguous.reference.message=referencia ambigua {0}
go.inspection.unresolved.reference.message=Referencia resuelta {0}
go.inspection.unresolved.type.message=Escriba {0} sin resolver
go.inspection.unresolved.label.message=Etiqueta resuelta {0}
go.inspection.unresolved.disabled.gopath.indexing.display.name=IndexaciÃ³n GOPATH deshabilitada
go.inspection.unresolved.disabled.gopath.indexing.message=La indexaciÃ³n GOPATH deshabilitada puede impedir una resoluciÃ³n de referencia adecuada
go.inspection.unsorted.imports.display.name=DeclaraciÃ³n de importaciÃ³n sin clasificar
go.inspection.unused.constant.display.name=Constante no utilizada
go.inspection.unused.constant.message=Constante no utilizada {0}
go.inspection.unused.exported.function.display.name=Exponer funciÃ³n obsoleta
go.inspection.unused.function.message=FunciÃ³n no utilizada {0}
go.inspection.unused.label.message=Etiqueta no utilizada {0}
go.inspection.unused.exported.type.display.name=Tipo de exposiciÃ³n obsoleto
go.inspection.unused.function.display.name=FunciÃ³n obsoleta
go.inspection.unused.function.or.method.call.result.display.name=FunciÃ³n obsoleta o resultado de la llamada al mÃ©todo
go.inspection.unused.global.variable.display.name=Variable global no utilizada
go.inspection.unused.parameter.display.name=ParÃ¡metro no utilizado
go.inspection.unused.parameter.message=ParÃ¡metro no utilizado {0}
go.inspection.unused.type.display.name=Tipo no utilizado
go.inspection.unused.type.message=Tipo no utilizado {0}
go.inspection.unused.variable.message=ì‚¬ìš©ë?˜ì§€ ì•ŠëŠ” ë³€ìˆ˜ {0}
go.inspection.usage.of.snake.case.display.name=Snake_Case í‘œê¸°ë²• ì‚¬ìš©
go.inspection.incorrect.call.to.unmarshal.display.name=Unmarshalì?´ ì˜¬ë°”ë¥´ì§€ ì•Šì?€ ì?¸ìˆ˜ì™€ í•¨ê»˜ í˜¸ì¶œë?˜ì—ˆìŠµë‹ˆë‹¤
go.inspection.struct.tag.value.consists.only.of.spaces=êµ¬ì¡°ì²´ íƒœê·¸ ê°’ì?´ ê³µë°±ë§Œì?„ í?¬í•¨í•©ë‹ˆë‹¤
go.inspection.suspicious.space.in.the.beginning.of.the.struct.tag.value=êµ¬ì¡°ì²´ íƒœê·¸ê°’ ì‹œìž‘ ë¶€ë¶„ì?˜ ì?˜ì‹¬ìŠ¤ëŸ¬ìš´ ê³µë°±
go.inspection.suspicious.space.in.the.end.of.the.struct.tag.value=êµ¬ì¡°ì²´ íƒœê·¸ê°’ ë?? ë¶€ë¶„ì?˜ ì?˜ì‹¬ìŠ¤ëŸ¬ìš´ ê³µë°±
go.inspection.suspicious.extra.space.in.struct.tag.value=êµ¬ì¡°ì²´ íƒœê·¸ê°’ ë‚´ ì¶”ê°€ ê³µë°±
go.inspection.suspicious.space.in.struct.tag.value=êµ¬ì¡°ì²´ íƒœê·¸ê°’ ë‚´ ì?˜ì‹¬ìŠ¤ëŸ¬ìš´ ê³µë°±
go.inspection.missing.closing.double.quote.character.in.value=ê°’ ë‚´ ë‹«ëŠ” í?°ë”°ì˜´í‘œ ë¬¸ìž? ëˆ„ë?½
go.inspection.expected.opening.double.quote.character.after.colon=''\:'' ë’¤ì—? ì—¬ëŠ” í?°ë”°ì˜´í‘œ ë¬¸ìž? í•„ìš”
go.inspection.expected.colon.after.key=í‚¤ ë’¤ì—? ''\:'' í•„ìš”
go.inspection.key.is.empty.or.starts.from.incorrect.symbol=í‚¤ê°€ ë¹„ì–´ ìžˆê±°ë‚˜ ì˜¬ë°”ë¥´ì§€ ì•Šì?€ ì‹¬ë³¼ì—?ì„œ ì‹œìž‘í•©ë‹ˆë‹¤
go.inspection.key.is.not.separated.by.space.from.previous.pair=í‚¤ê°€ ì?´ì „ ìŒ?ê³¼ ê³µë°±ìœ¼ë¡œ êµ¬ë¶„ë?˜ì–´ ìžˆì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.test.name.display.name=í˜•ì‹?ì?´ ìž˜ëª»ë?œ í•¨ìˆ˜ ì?´ë¦„
go.inspection.problem.malformed.test.name=í˜•ì‹?ì?´ ìž˜ëª»ë?œ í…ŒìŠ¤íŠ¸ ì?´ë¦„\: ''Test'' ë’¤ ì²« ë¬¸ìž?ëŠ” ì†Œë¬¸ìž?ì—¬ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.malformed.benchmark.name=í˜•ì‹?ì?´ ìž˜ëª»ë?œ ë²¤ì¹˜ë§ˆí?¬ ì?´ë¦„\: Benchmark'' ë’¤ ì²« ë¬¸ìž?ëŠ” ì†Œë¬¸ìž?ì—¬ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.malformed.example.suffix=í˜•ì‹?ì?´ ìž˜ëª»ë?œ ì˜ˆì‹œ ì?´ë¦„\: ì ‘ë¯¸ì‚¬ {0} ì?´(ê°€) ì†Œë¬¸ìž?ë¡œ ì‹œìž‘í•´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.example.for.unknown.identifier=ì˜ˆì‹œê°€ ì•Œ ìˆ˜ ì—†ëŠ” ì‹?ë³„ìž?ë¥¼ ì°¸ì¡°í•©ë‹ˆë‹¤\: {0}
go.inspection.problem.example.for.unknown.field.or.method=ì˜ˆì‹œê°€ ì•Œ ìˆ˜ ì—†ëŠ” í•„ë“œ ë˜?ëŠ” ë©”ì„œë“œë¥¼ ì°¸ì¡°í•©ë‹ˆë‹¤\: {0}.{1}
go.intention.add.declaration.parens.name=ì„ ì–¸ì—? ì†Œê´„í˜¸ ì¶”ê°€
go.intention.add.dot.import.alias.name=ë§ˆì¹¨í‘œ(.) import ë¬¸ ë³„ì¹­ ì¶”ê°€
go.intention.add.fmt.string.argument.name=ì„œì‹? ë¬¸ìž?ì—´ ì?¸ìˆ˜ ì¶”ê°€
go.intention.add.import.alias.name=import ë¬¸ ë³„ì¹­ ì¶”ê°€
go.intention.convert.to.short.var.declaration.name=ì§§ì?€ var ì„ ì–¸ìœ¼ë¡œ ë³€í™˜
go.intention.convert.to.var.declaration.name=ì§§ì?€ ì„ ì–¸ìœ¼ë¡œ ë³€í™˜
go.intention.create.field.getter.and.setter.name=getter ë°? setter ìƒ?ì„±
go.intention.create.field.getter.and.setter.command.name=í•„ë“œ ì ‘ê·¼ìž? ìƒ?ì„±
go.intention.create.field.getter.name=getter ìƒ?ì„±
go.intention.create.field.setter.name=setter ìƒ?ì„±
go.intention.expand.signature.types.name=ì‹œê·¸ë‹ˆì²˜ ìœ í˜• í™•ìž¥
go.intention.export.name=ë‚´ë³´ë‚´ê¸°
go.intention.fill.all.fields.name=ëª¨ë“  í•„ë“œ ì±„ìš°ê¸°
go.intention.fill.all.fields.recursively.checkbox=ìž¬ê·€ì ?
go.intention.fill.all.fields.enforce.multiline.checkbox=ì—¬ëŸ¬ ì¤„ ì‹¤í–‰
go.intention.fill.all.fields.command.name=êµ¬ì¡°ì²´ ì±„ìš°ê¸°
go.intention.fill.all.fields.recursively.name=ìž¬ê·€ì ?ìœ¼ë¡œ ëª¨ë“  í•„ë“œ ì±„ìš°ê¸°
go.intention.fill.fields.name=í•„ë“œ ì±„ìš°ê¸°...
go.intention.flip.binary.operator.changes.operator.text=Invertir ''{0}'' a ''{1}''
go.intention.flip.binary.operator.changes.semantics.text=Invertir ''{0}''(Cambio semÃ¡ntico)
go.intention.flip.binary.operator.name=ì?´ì§„ ì—°ì‚°ìž? ë°˜ì „
go.intention.flip.binary.operator.text=Invertir ''{0}''
go.intention.fmt.string.argument.bad.position.error.message=ìž˜ëª»ë?œ ìœ„ì¹˜
go.intention.fmt.string.argument.explicit.indices.error.message=ë¬¸ìž?ì—´ì—? ëª…ì‹œì ? ìƒ‰ì?¸ì?´ í?¬í•¨ë?©ë‹ˆë‹¤.
go.intention.fmt.string.argument.percent.with.args.error.message=ë¬¸ìž?ì—´ì—? ì?¸ìˆ˜ê°€ ìžˆëŠ” %%ì?´(ê°€) í?¬í•¨ë?©ë‹ˆë‹¤.
go.intention.fmt.string.argument.syntax.error.message=ë¬¸ì œì—´ì—? êµ¬ë¬¸ ì˜¤ë¥˜ê°€ í?¬í•¨ë?©ë‹ˆë‹¤.
go.intention.fmt.string.argument.too.few.arguments.error.message=ë¬¸ìž?ì—´ì—? í?¬í•¨ë?œ ì?¸ìˆ˜ê°€ ë„ˆë¬´ ì ?ìŠµë‹ˆë‹¤.
go.intention.fmt.string.argument.variadic.arg.error.message=ë¬¸ìž?ì—´ì—?...ì?¸ìˆ˜ê°€ í?¬í•¨ë?©ë‹ˆë‹¤.
go.intention.fmt.string.title.error.message=Fmt ë¬¸ìž?ì—´ ì?¸ìˆ˜ë¥¼ ì¶”ê°€í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.intention.generate.constructor.name=ìƒ?ì„±ìž? ìƒ?ì„±
go.intention.go.to.implementation.name=êµ¬í˜„ìœ¼ë¡œ ì?´ë?™
go.intention.go.to.implementation.text=êµ¬í˜„ìœ¼ë¡œ ì?´ë?™...
go.intention.go.to.super.name=ì?¸í„°íŽ˜ì?´ìŠ¤ë¡œ ì?´ë?™
go.intention.go.to.super.text=ì?¸í„°íŽ˜ì?´ìŠ¤ë¡œ ì?´ë?™...
go.intention.implement.interface.name=ì?¸í„°íŽ˜ì?´ìŠ¤ êµ¬í˜„
go.intention.implement.interface.text=ì?¸í„°íŽ˜ì?´ìŠ¤ êµ¬í˜„...
go.intention.invert.if.name=Invertir if
go.intention.merge.all.declarations.name=ëª¨ë“  ì„ ì–¸ ë³‘í•©
go.intention.merge.declaration.up.name=ì„ ì–¸ ë³‘í•©
go.intention.merge.declarations.by.comma.name=ì‰¼í‘œë¥¼ í†µí•´ ì„ ì–¸ ë³‘í•©
go.intention.move.to.struct.initialization.name=í•„ë“œ í• ë‹¹ì?„ êµ¬ì¡°ì²´ ì´ˆê¸°í™”ë¡œ ì?´ë?™
go.intention.negate.boolean.expression.name.recursively.suffix=ìž¬ê·€ì ?ìœ¼ë¡œ
go.intention.negate.boolean.expression.name=í‘œí˜„ì‹? ë¶€ì •
go.intention.negate.boolean.expression.text=Negar ''{0}'' como ''{1}''
go.intention.negate.boolean.topmost.expression.name=ìµœìƒ?ìœ„ í‘œí˜„ì‹? ë¶€ì •
go.intention.negate.boolean.topmost.expression.text=ìµœìƒ?ìœ„ ''{0}''ì?„(ë¥¼) ''{1}''(ìœ¼)ë¡œ ë¶€ì •
go.intention.remove.declaration.parens.name=ì„ ì–¸ì—?ì„œ ì†Œê´„í˜¸ ì œê±°
go.intention.remove.dot.import.alias.name=ë§ˆì¹¨í‘œ(.) import ë¬¸ ë³„ì¹­ ì œê±°
go.intention.remove.keys.from.struct.literal.value.name=\ struct ë¦¬í„°ëŸ´ì—?ì„œ í‚¤ ì œê±°
go.intention.reuse.signature.types.name=ì‹œê·¸ë‹ˆì²˜ ìœ í˜• ìž¬ì‚¬ìš©
go.intention.run.go.generate.name=ì£¼ì„?ì—?ì„œ go ìƒ?ì„± ì‹¤í–‰
go.intention.run.go.generate.on.file.name=íŒŒì?¼ì—?ì„œ go ìƒ?ì„± ì‹¤í–‰
go.intention.run.go.generate.on.package.name=íŒ¨í‚¤ì§€ì—?ì„œ go ìƒ?ì„± ì‹¤í–‰
go.intention.run.go.generate.text=''{0}'' Go ìƒ?ì„±
go.intention.select.fields.dialog.title=í•„ë“œ ì„ íƒ?
go.intention.specify.type.name=ëª…ì‹œì ?ìœ¼ë¡œ ìœ í˜• ì§€ì •
go.intention.split.all.declarations.name=ëª¨ë“  ì„ ì–¸ ë¶„í• 
go.intention.split.declarations.by.comma.name=ì‰¼í‘œë¡œ ì„ ì–¸ ë¶„í• 
go.intention.split.declarations.name=ì„ ì–¸ì?„ ë‘? ê·¸ë£¹ìœ¼ë¡œ ë¶„í• 
go.intention.chop.arguments=ì?¸ìˆ˜ë¥¼ ë³„ë?„ì?˜ ì¤„ì—? ë°°ì¹˜
go.intention.chop.parameters=ë§¤ê°œë³€ìˆ˜ë¥¼ ë³„ë?„ì?˜ ì¤„ì—? ë°°ì¹˜
go.intention.chop.composite.literal.elements=ë³„ë?„ì?˜ ì¤„ì—? ìš”ì†Œ ë°°ì¹˜
go.intention.join.arguments=ì?¸ìˆ˜ë¥¼ í•œ ì¤„ì—? ë°°ì¹˜
go.intention.join.parameters=ë§¤ê°œë³€ìˆ˜ë¥¼ í•œ ì¤„ì—? ë°°ì¹˜
go.intention.join.composite.literal.elements=í•œ ì¤„ì—? ì?¸ìˆ˜ ë°°ì¹˜
go.intention.add.tag.key=íƒœê·¸ì—? í‚¤ ì¶”ê°€
go.intention.change.field.name.style.in.tags=íƒœê·¸ì?˜ í•„ë“œ ì?´ë¦„ ìŠ¤íƒ€ì?¼ ë³€ê²½
go.intention.change.field.name.style.select.style=í•„ë“œ ì?´ë¦„ ìŠ¤íƒ€ì?¼ ì„ íƒ?:
go.intention.change.field.name.style.command=íƒœê·¸ì?˜ í•„ë“œ ì?´ë¦„ ìŠ¤íƒ€ì?¼ ë³€ê²½
go.intention.update.value.in.tags=íƒœê·¸ì?˜ í‚¤ ê°’ ì—…ë?°ì?´íŠ¸
go.intention.generate.type.from.json=JSONì—?ì„œ íƒ€ìž… ìƒ?ì„±
go.intention.generate.struct.fields.from.json=JSONì—?ì„œ êµ¬ì¡°ì²´ í•„ë“œ ìƒ?ì„±
go.intention.generate.struct.fields.from.json.error=JSONì?˜ ìµœìƒ?ìœ„ ê°’ì?€ ê°?ì²´ë‚˜ ê°?ì²´ ë°°ì—´ì?´ì–´ì•¼ í•©ë‹ˆë‹¤
go.intention.download.all.missing.modules.fix.text=ëª¨ë“  ëª¨ë“ˆì?„ ëª¨ë“ˆ ìº?ì‹œì—? ë‹¤ìš´ë¡œë“œ
go.intention.download.single.missing.module.fix.family.name=ëª¨ë“ˆì?„ ëª¨ë“ˆ ìº?ì‹œì—? ë‹¤ìš´ë¡œë“œ
go.intention.download.single.missing.module.fix.text={0}(ì?„)ë¥¼ ëª¨ë“ˆ ìº?ì‹œì—? ë‹¤ìš´ë¡œë“œ
go.intention.download.single.missing.module.fix.from.replacement.text={1}ì—?ì„œ {0} (ì?„)ë¥¼ ëª¨ë“ˆ ìº?ì‹œì—? ë‹¤ìš´ë¡œë“œ
go.generate.type.from.json.dialog.title=JSONì—?ì„œ Go íƒ€ìž… ìƒ?ì„±
go.generate.type.from.json.dialog.json.label=ì?´ê³³ì—? JSON ë°°ì¹˜:
go.generate.type.from.json.dialog.ok.label=ìƒ?ì„±
go.generate.type.from.json.error.invalid.json=ìž˜ëª»ë?œ JSONì—?ì„œ Go íƒ€ìž…ì?„ ìƒ?ì„±í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.generate.type.from.json.error.no.top.value=JSONì—?ëŠ” ë‹¨ì?¼ ìµœìƒ?ìœ„ ê°’ì?´ í•„ìš”í•©ë‹ˆë‹¤
go.generate.type.from.json.on.paste.dialog.title=JSONì—?ì„œ Go íƒ€ìž… ìƒ?ì„±
go.generate.type.from.json.on.paste.type.message=ì‚½ìž…ë?œ í…?ìŠ¤íŠ¸ëŠ” JSONìœ¼ë¡œ ë³´ìž…ë‹ˆë‹¤. ì?´ í…?ìŠ¤íŠ¸ì—?ì„œ Go íƒ€ìž…ì?„ ìƒ?ì„±í•˜ì‹œê² ì–´ìš”?
go.generate.type.from.json.properties.on.paste.type.message=ì‚½ìž…ë?œ í…?ìŠ¤íŠ¸ëŠ” JSON í”„ë¡œí?¼í‹° ì‹œí€€ìŠ¤ì²˜ëŸ¼ ë³´ìž…ë‹ˆë‹¤. ì?´ í…?ìŠ¤íŠ¸ì—?ì„œ Go íƒ€ìž…ì?„ ìƒ?ì„±í•˜ì‹œê² ì–´ìš”?
go.generate.type.from.json.on.paste.struct.fields.message=ì‚½ìž…ë?œ í…?ìŠ¤íŠ¸ëŠ” JSONìœ¼ë¡œ ë³´ìž…ë‹ˆë‹¤. ì?´ í…?ìŠ¤íŠ¸ì—?ì„œ êµ¬ì¡°ì²´ í•„ë“œë¥¼ ìƒ?ì„±í•˜ì‹œê² ì–´ìš”?
go.generate.type.from.json.properties.on.paste.struct.fields.message=ì‚½ìž…ë?œ í…?ìŠ¤íŠ¸ëŠ” JSON í”„ë¡œí?¼í‹° ì‹œí€€ìŠ¤ì²˜ëŸ¼ ë³´ìž…ë‹ˆë‹¤. ì?´ í…?ìŠ¤íŠ¸ì—?ì„œ êµ¬ì¡°ì²´ í•„ë“œë¥¼ ìƒ?ì„±í•˜ì‹œê² ì–´ìš”?
go.completion.generate.struct.fields.from.json=JSONì—?ì„œ êµ¬ì¡°ì²´ í•„ë“œ ìƒ?ì„±â€¦
go.completion.add.tag.key.to.all.fields=ëª¨ë“  í•„ë“œì—? íƒœê·¸ í‚¤ ì¶”ê°€â€¦
go.intentions.category=Go
go.macro.bin.dirs.description=Go ë?„êµ¬ê°€ ìžˆëŠ” bin ë””ë ‰í„°ë¦¬ ê²½ë¡œ
go.macro.executable.path.description=Go ì‹¤í–‰ íŒŒì?¼ ê²½ë¡œ
go.macro.file.import.path.description=í˜„ìž¬ íŒŒì?¼ì?˜ ê°€ì ¸ì˜¤ê¸° ê²½ë¡œ
go.macro.file.go.path.description=GOPATH ê°’
go.macro.file.go.root.description=í”„ë¡œì ?íŠ¸ SDK ê²½ë¡œ
go.mozilla.rr.dialog.specify.trace.directory.validation.message=ì¶”ì ? ë””ë ‰í„°ë¦¬ ì§€ì •
go.mozilla.rr.dialog.trace.directory.label=ì¶”ì ? ë””ë ‰í„°ë¦¬(&T)\:
go.mozilla.rr.failed.to.start.error.message=rr trace {0} ë””ë²„ê±°ë¥¼ ì‹œìž‘í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤\: {1}
go.mozilla.rr.session.name={0} ì¶”ì ?
go.navigation.progress.title={0} ê²€ìƒ‰ ì¤‘...
go.navigation.shadowed.method.usages.title={0} ì?˜ ê·¸ë¦¼ìž? ë©”ì„œë“œ
go.navigation.go.to.shadowed.method.popup.title=ë©”ì„œë“œ {0} ì?´(ê°€) {1} {1,choice,0\#ìœ í˜•|1\#ìœ í˜•|2\#ìœ í˜•}ì?˜ ë©”ì„œë“œë¥¼ ê°€ë¦½ë‹ˆë‹¤
go.navigation.go.to.shadowed.method=ê·¸ë¦¼ìž? ë©”ì„œë“œë¡œ ì?´ë?™
go.navigation.go.to.super.method.popup.title=ë©”ì„œë“œ {0} ì?´(ê°€) {1} {1,choice,0\#ì?¸í„°íŽ˜ì?´ìŠ¤|1\#ì?¸í„°íŽ˜ì?´ìŠ¤|2\#ì?¸í„°íŽ˜ì?´ìŠ¤}ì?˜ ë©”ì„œë“œë¥¼ êµ¬í˜„í•©ë‹ˆë‹¤
go.navigation.go.to.super.method.find.usages.title.kind={0} ì?˜ êµ¬í˜„ë?œ ë©”ì„œë“œ ì‚¬ì–‘
go.navigation.go.to.super.method=ë©”ì„œë“œ ì‚¬ì–‘ìœ¼ë¡œ ì?´ë?™
go.navigation.go.to.super.popup.title=ìœ í˜• {0} ì?´(ê°€) {1} {1,choice,0\#ì?¸í„°íŽ˜ì?´ìŠ¤|1\#ì?¸í„°íŽ˜ì?´ìŠ¤|2\#ì?¸í„°íŽ˜ì?´ìŠ¤}ë¥¼ êµ¬í˜„í•©ë‹ˆë‹¤
go.navigation.go.to.super.find.usages.title={0}ì?˜ êµ¬í˜„ë?œ ì?¸í„°íŽ˜ì?´ìŠ¤
go.navigation.go.to.super=ì?¸í„°íŽ˜ì?´ìŠ¤ë¡œ ì?´ë?™
go.navigation.go.to.type.implementation.popup.title=ìœ í˜• {0} ì?´(ê°€) {1} {1,choice,0\#ìœ í˜•|1\#ìœ í˜•|2\#ìœ í˜•}ì—?ì„œ êµ¬í˜„ë?¨
go.navigation.go.to.method.implementation.popup.title=ë©”ì„œë“œ {0} ì?´(ê°€) {1} {1,choice,0\#ìœ í˜•|1\#ìœ í˜•|2\#ìœ í˜•}ì—?ì„œ êµ¬í˜„ë?¨
go.navigation.go.to.implementation.find.usages.title={0}ì?˜ êµ¬í˜„
go.navigation.go.to.implementation=êµ¬í˜„ìœ¼ë¡œ ì?´ë?™
go.navigation.go.to.shadowing.method.popup.title=ë©”ì„œë“œ {0} ì?´(ê°€) {1} ê°œ {1,choice,0\#ìœ í˜•|1\#ìœ í˜•|2\#ìœ í˜•}ì—?ì„œ ê°€ë ¤ì§?
go.navigation.go.to.shadowing.method.find.usages.title={0} ì?˜ ê·¸ë¦¼ìž? ë©”ì„œë“œ
go.navigation.go.to.shadowing.method=ê·¸ë¦¼ìž? ë©”ì„œë“œë¡œ ì?´ë?™
go.navigation.recursive.call=ìž¬ê·€ì ? í˜¸ì¶œ
go.notification.go.edit.project.settings.action.text=Go í”„ë¡œì ?íŠ¸ ì„¤ì • íŽ¸ì§‘
go.notification.go.support.is.disabled.in.module.text=ëª¨ë“ˆ ''{0}'' ì—?ì„œ Go ì§€ì›?ì?´ ë¹„í™œì„±í™”ë?˜ì–´ ìžˆìŠµë‹ˆë‹¤
go.notification.go.support.enable.action.text=Go ì§€ì›? í™œì„±í™”
go.notification.go.setup.action.text=GOROOT ì„¤ì •
go.notification.gopath.is.empty.text=GOPATHê°€ ë¹„ì–´ ìžˆìŠµë‹ˆë‹¤
go.notification.gopath.configure.action.text=GOPATH êµ¬ì„±
go.notification.gopath.detected.title=GOPATHê°€ íƒ?ì§€ë?˜ì—ˆìŠµë‹ˆë‹¤
go.notification.gopath.detected.text=GOPATHì—?ì„œ ë?¼ì?´ë¸ŒëŸ¬ë¦¬ë¥¼ íƒ?ì§€í–ˆìŠµë‹ˆë‹¤. GOPATH ì„¤ì •ì—? ì¶”ê°€ ë?¼ì?´ë¸ŒëŸ¬ë¦¬ë¥¼ ì¶”ê°€í•˜ì„¸ìš”.
go.notification.gopath.detected.configure.gopath.action.text=GOPATH êµ¬ì„±
go.notification.vendoring.detected.title=ë²¤ë?”ë§? ì‚¬ìš© ìœ„ì¹˜ê°€ íƒ?ì§€ë?˜ì—ˆìŠµë‹ˆë‹¤
go.notification.vendoring.detected.text=<strong>ë²¤ë?”</strong> ë””ë ‰í„°ë¦¬ëŠ” ë³´í†µ í”„ë¡œì ?íŠ¸ê°€ Go Vendor Experimentë¥¼ ì‚¬ìš©í•œë‹¤ëŠ” ê²ƒì?„ ì?˜ë¯¸í•©ë‹ˆë‹¤. ì„ íƒ?í•œ Go SDK ë²„ì „ì?€ ë²¤ë?”ë§?ì?„ ì§€ì›?í•˜ì§€ë§Œ ë””í?´íŠ¸ë¡œ ë¹„í™œì„±í™”ë?˜ì–´ ìžˆìŠµë‹ˆë‹¤. í”„ë¡œì ?íŠ¸ ì„¤ì •ì—?ì„œ ëª…ì‹œì ?ìœ¼ë¡œ Go Vendor Experimentë¥¼ í™œì„±í™”í•˜ì„¸ìš”.
go.notification.vendoring.detected.configure.go.vendor.experiment.action.text=Go Vendor Experiment êµ¬ì„±
go.notification.go.tool.is.missing.text=ì‹¤í–‰ íŒŒì?¼ ''{0}'' ì?´(ê°€) GOPATHì—?ì„œ ëˆ„ë?½ë?˜ì—ˆìŠµë‹ˆë‹¤. í•´ë‹¹ ì‹¤í–‰ íŒŒì?¼ì?„ ì„¤ì¹˜í•˜ì‹œê² ì–´ìš”?
go.notification.go.tool.is.missing.run.go.get.text=GOPATHì—?ì„œ ''{0}'' ì?„(ë¥¼) ì°¾ì?„ ìˆ˜ ì—†ì?Œ
go.notification.go.tool.is.missing.run.go.get.invoke.go.get.action.text=''go get {0}'' í˜¸ì¶œ
go.notification.install.go.tool.action.text=Go ë?„êµ¬ ì„¤ì¹˜
go.notification.add.to.gopath.action.text=GOPATHì—? ì¶”ê°€
go.notification.add.to.module.action.text=ëª¨ë“ˆì—? ì¶”ê°€
go.notification.create.go.mod.file.action.text=go.mod íŒŒì?¼ ìƒ?ì„±
go.notification.disable.go.modules.integration.action.text=Go ëª¨ë“ˆ í†µí•© ë¹„í™œì„±í™”
go.notification.do.not.show.action.text=o volver a mostrar
go.notification.cgo.optimizations.are.not.disabled=CGO_CFLAGSê°€ ''-O0 -g''ë¡œ ì„¤ì •ë?˜ì§€ ì•Šì•˜ìœ¼ë¯€ë¡œ, Cgo ì½”ë“œê°€ ìµœì ?í™”ë?  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.notification.install.package.action.text={0} ì„¤ì¹˜
go.notification.modules.file.is.absent.title=go.mod íŒŒì?¼ì?´ ì—†ìŠµë‹ˆë‹¤.
go.notification.obsolete.imports.code.style.detected.title=ì‚¬ìš©ë?˜ì§€ ì•ŠëŠ” import ì½”ë“œ ìŠ¤íƒ€ì?¼ ì„¤ì •ì?´ íƒ?ì§€ë?˜ì—ˆìŠµë‹ˆë‹¤.
go.notification.review.code.style.settings.action.text=ì½”ë“œ ìŠ¤íƒ€ì?¼ ì„¤ì • ê²€í† 
go.notification.file.starts.with.underscore.text=''{0}'' ì?€(ëŠ”) ì?´ë¦„ì?´ ''{1}'' (ìœ¼)ë¡œ ì‹œìž‘í•˜ë¯€ë¡œ ë¹Œë“œ ë?„êµ¬ì—? ì?˜í•´ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.does.not.match.target.system.text=''{0}'' ì?´(ê°€) ëŒ€ìƒ? ì‹œìŠ¤í…œê³¼ ì?¼ì¹˜í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤. íŒŒì?¼ì?´ ë¹Œë“œ ë?„êµ¬ì—? ì?˜í•´ ë¬´ì‹œë?©ë‹ˆë‹¤.
go.notification.inspections.are.disabled.text=íŒŒì?¼ì—?ì„œ ê²€ì‚¬ê°€ ë¹„í™œì„±í™”ë?˜ì–´ ìžˆìŠµë‹ˆë‹¤.
go.notification.inspections.are.disabled.enabled.action.text=ê²€ì‚¬ í™œì„±í™”
go.notification.code.insight.features.are.disabled.text=ì½”ë“œ ë¶„ì„? ê¸°ëŠ¥ì?„ ì‚¬ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.notification.file.exceeds.size.limit.text="íŒŒì?¼ í?¬ê¸°({0})ê°€ êµ¬ì„±ë?œ ì œí•œ({1})ì?„ ì´ˆê³¼í•©ë‹ˆë‹¤. {2}
go.notification.code.insight.disabled.for.vendored.files.text=ë?¼ì?´ë¸ŒëŸ¬ë¦¬ ë‚´ ë²¤ë?” íŒŒì?¼ì—?ì„œ ì½”ë“œ ë¶„ì„? ê¸°ëŠ¥ íŽ¸ì§‘ì?´ ë¹„í™œì„±ë?˜ì—ˆìŠµë‹ˆë‹¤
go.notification.add.vendored.package.to.project.action.text=í”„ë¡œì ?íŠ¸ì—? ''{0}'' ì¶”ê°€;
go.notification.package.was.excluded={0}ì?´(ê°€) ê°€ì ¸ì˜¤ê¸°ì—?ì„œ ì œì™¸ë?˜ì—ˆìŠµë‹ˆë‹¤
go.notification.open.imports.settings=ê°€ì ¸ì˜¤ê¸° ì„¤ì • ì—´ê¸°
go.notification.download.missing.module.successfully.done={0}ê°œ {0,choice,0#ëª¨ë“ˆ|1#ëª¨ë“ˆ|2#ëª¨ë“ˆ}ì?´ ì²˜ë¦¬ë?˜ì—ˆìŠµë‹ˆë‹¤
go.profiler.application.configurable.name=Go í”„ë¡œíŒŒì?¼ëŸ¬
go.profiler.profile.fraction.comment.text=í”„ë¡œíŒŒì?¼ì—? ë³´ê³ ë?œ mutex ê²½í•© ì?´ë²¤íŠ¸ì?˜ í”„ëž™ì…˜(fraction)ì?„ ì œì–´í•©ë‹ˆë‹¤. í?‰ê· ì ?ìœ¼ë¡œ 1/í”„ëž™ì…˜ ì?´ë²¤íŠ¸ê°€ ë³´ê³ ë?©ë‹ˆë‹¤. ë””í?´íŠ¸ í”„ëž™ì…˜ 1ì?„ ì‚¬ìš©í•˜ë ¤ë©´ ê³µë°±ìœ¼ë¡œ ë‚¨ê²¨ ë‘¡ë‹ˆë‹¤.
go.profiler.profile.fraction.label.text=í”„ë¡œíŒŒì?¼ í”„ëž™ì…˜\:
go.profiler.profile.rate.cpu.comment.text=í”„ë¡œíŒŒì?¼ì—? ë³´ê³ ë?œ goroutine ì°¨ë‹¨ ì?´ë²¤íŠ¸ì?˜ í”„ëž™ì…˜ì?„ ì œì–´í•©ë‹ˆë‹¤. í”„ë¡œíŒŒì?¼ëŸ¬ëŠ” í”„ë¡œê·¸ëž¨ì?´ ì°¨ë‹¨ì—? ì†Œìš”ë?œ ë‚˜ë…¸ì´ˆë§ˆë‹¤ í?‰ê·  1ê°œì?˜ ì°¨ë‹¨ ì?´ë²¤íŠ¸ë¥¼ ìƒ˜í”Œë§?í•˜ëŠ” ê²ƒì?„ ëª©í‘œë¡œ í•©ë‹ˆë‹¤. í”„ë¡œíŒŒì?¼ì—? ëª¨ë“  ì°¨ë‹¨ ì?´ë²¤íŠ¸ë¥¼ í?¬í•¨í•˜ë ¤ë©´ ì†?ë?„ë¥¼ 1ë¡œ ì„¤ì •í•©ë‹ˆë‹¤. ë””í?´íŠ¸ ì†?ë?„ 1ì?„ ì‚¬ìš©í•˜ë ¤ë©´ ê³µë°±ìœ¼ë¡œ ë‚¨ê²¨ ë‘¡ë‹ˆë‹¤.
go.profiler.profile.rate.label.text=í”„ë¡œíŒŒì?¼ ì†?ë?„\:
go.profiler.profile.illegal.rate.validation.message=ìž˜ëª»ë?œ í”„ë¡œíŒŒì?¼ ì†?ë?„\: {0}
go.profiler.profile.illegal.profile.fraction.validation.message=ìž˜ëª»ë?œ í”„ë¡œíŒŒì?¼ ë¹„ìœ¨\: {0}
go.profiler.profile.rate.memory.comment.text=í”„ë¡œíŒŒì?¼ì—? ê¸°ë¡? ë°? ë³´ê³ ë?œ ë©”ëª¨ë¦¬ í• ë‹¹ì?„ ì œì–´í•©ë‹ˆë‹¤. í”„ë¡œíŒŒì?¼ëŸ¬ëŠ” í• ë‹¹ë?œ ë°”ì?´íŠ¸ ì†?ë?„ë§ˆë‹¤ í?‰ê·  1ê°œì?˜ í• ë‹¹ì?„ ìƒ˜í”Œë§?í•˜ëŠ” ê²ƒì?„ ëª©í‘œë¡œ í•©ë‹ˆë‹¤. í”„ë¡œíŒŒì?¼ì—? í• ë‹¹ë?œ ëª¨ë“  ì°¨ë‹¨ì?„ í?¬í•¨í•˜ë ¤ë©´ ì†?ë?„ë¥¼ 1ë¡œ ì„¤ì •í•©ë‹ˆë‹¤. ë””í?´íŠ¸ ì†?ë?„ 512Kbë¥¼ ì‚¬ìš©í•˜ë ¤ë©´ ê³µë°±ìœ¼ë¡œ ë‚¨ê²¨ ë‘¡ë‹ˆë‹¤.
go.profiler.blocking.profiler.name=í”„ë¡œíŒŒì?¼ëŸ¬ ì°¨ë‹¨ ì¤‘
go.profiler.blocking.profile.prefix=í”„ë¡œíŒŒì?¼ëŸ¬ ì°¨ë‹¨ ì¤‘
go.profiler.cpu.profiler.name=Perfilador de CPU
go.profiler.cpu.profile.prefix=CPU í”„ë¡œíŒŒì?¼
go.profiler.memory.profiler.name=ë©”ëª¨ë¦¬ í”„ë¡œíŒŒì?¼ëŸ¬
go.profiler.memory.profile.prefix=ë©”ëª¨ë¦¬ í”„ë¡œíŒŒì?¼
go.profiler.mutex.profiler.name=Perfilador de Mutex
go.profiler.mutex.profile.prefix=Mutex í”„ë¡œíŒŒì?¼
go.profiler.not.a.pprof.profile.error=pprof í”„ë¡œí•„ì?´ ì•„ë‹˜
go.profiler.cpu.time.metric.name=CPU ì‹œê°„
go.profiler.parse.error=í”„ë¡œíŒŒì?¼ íŒŒì‹± ë?„ì¤‘ ì˜¤ë¥˜ ë°œìƒ?: {0}
go.profiler.parse.error.eof=ì˜ˆê¸°ì¹˜ ì•Šì?€ íŒŒì?¼ì?˜ ë??(EOF)
go.profiler.parse.error.empty=í”„ë¡œíŒŒì?¼ì?´ ë¹„ì–´ ìžˆìŠµë‹ˆë‹¤
go.profiler.allocated.objects.metric.name=í• ë‹¹ë?œ ê°?ì²´
go.profiler.allocated.space.metric.name=í• ë‹¹ë?œ ê³µê°„
go.profiler.in.use.objects.metric.name=ì‚¬ìš© ì¤‘ì?¸ ê°?ì²´
go.profiler.in.use.space.metric.name=ì‚¬ìš© ì¤‘ì?¸ ê³µë°±
go.profiler.downloading.profiler.dump.progress.title=í”„ë¡œíŒŒì?¼ëŸ¬ ë?¤í”„ ë‹¤ìš´ë¡œë“œ ì¤‘â€¦
go.run.configuration.environment.label=Am&biente\:
go.run.configuration.go.tool.arguments.label=Go ë?„êµ¬ ì?¸ìˆ˜(&G)\:
go.run.configuration.module.label=ëª¨ë“ˆ(&M)\:
go.run.configuration.output.directory.label=ì¶œë ¥ ë””ë ‰í„°ë¦¬(&O)\:
go.run.configuration.program.arguments.label=Argumento del &programa\:
go.run.configuration.run.after.build.checkbox=ë¹Œë“œ í›„ ì‹¤í–‰(&R)\:
go.run.configuration.build.on.remote.target.checkbox=ì›?ê²© ëŒ€ìƒ?ì—?ì„œ ë¹Œë“œ(&B)
go.run.configuration.run.kind.label=ì‹¤í–‰ ì¢…ë¥˜(&K)\:
go.run.configuration.run.with.sudo.label=sudoë¡œ ì‹¤í–‰(&I)
go.run.configuration.run.with.sudo.tooltip=ìƒ?ìœ„ ì‚¬ìš©ìž? ê¶Œí•œìœ¼ë¡œ êµ¬ì„± ì‹¤í–‰
go.run.configuration.run.with.sudo.mnemonic=ë†’ì?€ ê¶Œí•œìœ¼ë¡œ ì‹¤í–‰(&I)
go.run.configuration.add.go.tool.argument.label=AÃ±adir
go.run.configuration.target.directory.label=ë””ë ‰í„°ë¦¬(&D)\:
go.run.configuration.target.files.label=íŒŒì?¼(&F)\:
go.run.configuration.target.package.label=íŒ¨í‚¤ì§€ ê²½ë¡œ(&E)\:
go.run.configuration.test.framework=í…ŒìŠ¤íŠ¸ í”„ë ˆìž„ì›Œí?¬(&R)\:
go.run.configuration.test.kind.label=í…ŒìŠ¤íŠ¸ ì¢…ë¥˜(&K)\:
go.run.configuration.kind.directory=ë””ë ‰í„°ë¦¬
go.run.configuration.kind.package=íŒ¨í‚¤ì§€
go.run.configuration.kind.file=íŒŒì?¼
go.run.configuration.test.pattern.label=íŒ¨í„´(&T)\:
go.run.configuration.use.all.custom.build.tags.label=ëª¨ë“  ì‚¬ìš©ìž? ì§€ì • ë¹Œë“œ íƒœê·¸ ì‚¬ìš©(&L)
go.run.configuration.use.all.custom.build.tags.tooltip=ë¹Œë“œí•˜ëŠ” ë?™ì•ˆ ì„¤ì •ì?˜ ëª¨ë“  ì‚¬ìš©ìž? ì§€ì • ë¹Œë“œ íƒœê·¸ê°€ ì¶”ê°€ë?©ë‹ˆë‹¤.
go.settings.build.tags.arch.label=Arch
go.settings.build.tags.cgo.support.label=CGO ì§€ì›?
go.settings.build.tags.compiler.label=ì»´íŒŒì?¼ëŸ¬
go.settings.build.tags.custom.tags.hint=ê³µë°±ì?„ ì‚¬ìš©í•˜ì—¬ íƒœê·¸ ë¶„ë¦¬
go.settings.build.tags.custom.tags.label=ì‚¬ìš©ìž? ì§€ì • íƒœê·¸
go.settings.build.tags.description=<html>\n  <head>\n    \n</head>\n  <body>\n    <p>\n      ë‹¤ì?Œ ì˜µì…˜ì?€ í”„ë¡œì ?íŠ¸ì?˜ ëŒ€ìƒ? ì‹œìŠ¤í…œì?„ ì„¤ëª…í•©ë‹ˆë‹¤. IDEëŠ” \n      ì?´ëŸ¬í•œ ê°’ì?„ í™œìš©í•´ ìœ íš¨ì„± ê²€ì‚¬ ì¤‘ ë¬´ì‹œí•´ì•¼ í•˜ëŠ” íŒŒì?¼ì?„ ê²°ì •í•˜ë©°\n      ì‹¬ë³¼ì?„ í•´ê²°í•˜ê³  ì œì•ˆí•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤. ìž?ì„¸í•œ ë‚´ìš©ì?€<a href\="https\://golang.org/pkg/go/build/\#hdr-Build_Constraints">Go  \n      ì œì•½ ì¡°ê±´ ë¬¸ì„œ</a>ë¥¼ ì°¸ì¡°í•˜ì„¸ìš”.\n   </p>\n </body>\n</html>
go.settings.build.tags.display.name=íƒœê·¸ ë¹Œë“œ ë°? ë²¤ë?”ë§?
go.settings.build.tags.group.name=íƒœê·¸ ë¹Œë“œ
go.settings.build.tags.os.label=OS
go.settings.build.tags.version.label=Go ë²„ì „
go.settings.build.tags.any.sdk.value=ìž„ì?˜
go.settings.invalid.build.tag.error=ì˜¬ë°”ë¥´ì§€ ì•Šì?€ ë¹Œë“œ íƒœê·¸: ''{0}''
go.settings.default.value=Valor por defecto({0})
go.settings.project.sdk.value=í”„ë¡œì ?íŠ¸ SDK({0})
go.settings.default.for.project.sdk.value=SDK ({0}) ë””í?´íŠ¸ ê°’
go.settings.enabled=ì‚¬ìš©
go.settings.disabled=Deshabilitar
go.settings.common.suggest.parameter.names.checkbox=ì½”ë“œ ì™„ì„± ì‹œ ë§¤ê°œë³€ìˆ˜ ì?´ë¦„ ì œì•ˆ
go.settings.common.show.auto.import.in.completion.popup.checkbox=ìž…ë ¥ ì‹œ ì¶”ê°€ ê°€ì ¸ì˜¤ê¸°ê°€ í•„ìš”í•œ í•­ëª© ì œì•ˆ
go.settings.common.indent.on.enter.in.raw.strings.checkbox=ì›?ì‹œ ë¬¸ìž?ì—´ì—?ì„œ Enter ìž…ë ¥ ì‹œ ë“¤ì—¬ì“°ê¸°
go.settings.common.show.documentation.in.parameter.info.checkbox=ë§¤ê°œë³€ìˆ˜ ì •ë³´ì—? ë¬¸ì„œ í‘œì‹œ
go.settings.common.detect.go.packages.from.clipboard.checkbox=í?´ë¦½ë³´ë“œì—?ì„œ Go íŒ¨í‚¤ì§€ íƒ?ì§€
go.settings.common.confirmation.show.options.option=ì˜µì…˜ ë³´ê¸°
go.settings.common.package.rename.rename.directory.option=ë””ë ‰í„°ë¦¬ ì?´ë¦„ ë³€ê²½
go.settings.common.package.rename.do.not.rename.directory.option=ë””ë ‰í„°ë¦¬ ì?´ë¦„ ë³€ê²½ ì•ˆ í•¨
go.settings.common.directory.rename.rename.package.option=íŒ¨í‚¤ì§€ ì?´ë¦„ ë³€ê²½
go.settings.common.directory.rename.do.not.rename.package.option=íŒ¨í‚¤ì§€ ì?´ë¦„ ë³€ê²½ ì•ˆ í•¨
go.settings.common.test.rename.corresponding.file.option=í•´ë‹¹í•˜ëŠ” í…ŒìŠ¤íŠ¸ ë˜?ëŠ” í”„ë¡œë?•ì…˜ íŒŒì?¼ ì?´ë¦„ ë³€ê²½
go.settings.common.test.do.not.rename.corresponding.file.option=í•´ë‹¹í•˜ëŠ” í…ŒìŠ¤íŠ¸ ë˜?ëŠ” í”„ë¡œë?•ì…˜ íŒŒì?¼ ì?´ë¦„ ë³€ê²½ ì•ˆ í•¨
go.settings.common.directory.rename.option=ë””ë ‰í„°ë¦¬ ì?´ë¦„ì?´ ë³€ê²½ë?œ ê²½ìš°
go.settings.common.package.rename.option=íŒ¨í‚¤ì§€ ì?´ë¦„ì?´ ë³€ê²½ë?œ ê²½ìš°
go.settings.common.test.rename.option=íŒŒì?¼ ì?´ë¦„ì?´ ë³€ê²½ë?œ ê²½ìš°
go.settings.common.convert.json.on.paste.option=JSONì?´ ë¶™ì—¬ë„£ê¸°ë?œ ê²½ìš°
go.settings.common.convert.json.on.paste.convert.option=Go íƒ€ìž…ìœ¼ë¡œ JSON ë³€í™˜
go.settings.common.convert.json.on.paste.insert.as.is.option=JSON ê·¸ëŒ€ë¡œ ì‚½ìž…
go.settings.completion.ml.display.name=Go
go.settings.debugger.stack.depth.name=ìŠ¤íƒ? ê¹Šì?´
go.settings.debugger.goroutines.limit.name=Goroutines ì œí•œ
go.settings.debugger.rebuild.transitive.packages.checkbox=ì?´í–‰ì ? íŒ¨í‚¤ì§€ ìž¬êµ¬ì„±(&R)
go.settings.debugger.rebuild.transitive.packages.description=ë?” ë‚˜ì?€ ë””ë²„ê·¸ ê²½í—˜ì?„ ìœ„í•´ Delveì—?ì„œ $GOROOT/pkgì?˜ ìµœì ?í™”ë?œ ëª¨ë“ˆì?„ ë‹¤ì‹œ ì»´íŒŒì?¼í•´ì•¼ í•©ë‹ˆë‹¤.
go.settings.imports.display.name=ê°€ì ¸ì˜¤ê¸°
go.settings.modules.display.title=Go ëª¨ë“ˆ
go.settings.sdk.detected.notification.title=GOROOTê°€ íƒ?ì§€ë?˜ì—ˆìŠµë‹ˆë‹¤
go.settings.sdk.detected.notification.text=<b>{0}</b> ì?´(ê°€) í”„ë¡œì ?íŠ¸ <b>{0}</b>ë¡œ ìž?ë?™ ì„¤ì •ë?˜ì—ˆìŠµë‹ˆë‹¤. GOROOT ì„¤ì •ì—?ì„œ ì?´ë¥¼ ë³€ê²½í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.settings.sdk.detected.notification.configure.go.sdk.action.text=Go SDK êµ¬ì„±
go.settings.sdk.enable.integration.label=ëª¨ë“ˆì—?ì„œ Go ì§€ì›? í™œì„±í™”\:
go.settings.sdk.combo.tooltip=SDK ì¶”ê°€...
go.settings.sdk.add.button=SDK ì¶”ê°€...
go.settings.sdk.add.action.name=ë¡œì»¬...
go.settings.sdk.add.local.title=Go SDK í™ˆ ë””ë ‰í„°ë¦¬ ì„ íƒ?
go.settings.sdk.add.button.tooltip=SDK({0}) ì¶”ê°€
go.settings.sdk.download.action.name=Descargar...
go.settings.sdk.download.dialog.title=Go SDK ë‹¤ìš´ë¡œë“œ
go.settings.sdk.download.dialog.version.label=ë²„ì „\:
go.settings.sdk.download.dialog.location.label=ìœ„ì¹˜\:
go.settings.sdk.download.dialog.reload.versions.action.name=ë‹¤ì‹œ ë¶ˆëŸ¬ì˜¤ê¸°
go.settings.sdk.download.dialog.progress.versions.status=Go SDK ë²„ì „
go.settings.sdk.download.dialog.cannot.load.go.versions.validation.message=Go ë²„ì „ì?„ ë¡œë“œí•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤. {0}
go.settings.sdk.download.dialog.version.is.not.specified.validation.message=ë²„ì „ì?„ ì§€ì •í•˜ì„¸ìš”.
go.settings.sdk.download.dialog.location.is.not.specified.validation.message=ëŒ€ìƒ? ë””ë ‰í„°ë¦¬ë¥¼ ì§€ì •í•˜ì„¸ìš”.
go.settings.sdk.download.dialog.cannot.create.directory.validation.message=ì£¼ì–´ì§„ ê²½ë¡œì—? ë””ë ‰í„°ë¦¬ë¥¼ ìƒ?ì„±í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.settings.sdk.download.progress.downloading.status=Go {0} ë‹¤ìš´ë¡œë“œ ì¤‘
go.settings.sdk.download.progress.verifying.status=ë‹¤ìš´ë¡œë“œ ì•„ì¹´ì?´ë¸Œ ê²€ì‚¬ ì¤‘...
go.settings.sdk.download.progress.unpacking.status=SDK íŒ¨í‚¹ í•´ì œ ì¤‘...
go.settings.sdk.download.unpacked.sdk.is.corrupted.error=íŒ¨í‚¹ í•´ì œë?œ SDKê°€ ì†?ìƒ?ë?˜ì—ˆìŠµë‹ˆë‹¤
go.settings.sdk.download.checksum.of.downloaded.file.mismatched.error=ë‹¤ìš´ë¡œë“œí•œ íŒŒì?¼ì?˜ ê²€ì‚¬í•©ì?´ ì?¼ì¹˜í•˜ì§€ ì•Šì?Œ
go.settings.sdk.download.could.not.get.checksum.error=ê²€ì‚¬í•©ì?„ êµ¬í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤\: {0}
go.settings.sdk.download.could.not.find.go.directory.in.downloaded.file.error=ë‹¤ìš´ë¡œë“œí•œ íŒŒì?¼ì—?ì„œ Go ë””ë ‰í„°ë¦¬ë¥¼ ì°¾ì§€ ëª»í–ˆìŠµë‹ˆë‹¤
go.settings.sdk.download.could.not.unpack.downloaded.file.error=ë‹¤ìš´ë¡œë“œí•œ íŒŒì?¼ì?„ íŒ¨í‚¹ í•´ì œí•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤
go.settings.sdk.download.could.not.copy.unpacked.sdk.error=íŒ¨í‚¹ í•´ì œë?œ SDKë¥¼ ë³µì‚¬í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤
go.settings.sdk.download.installed.notification.title=Go {0} ì„¤ì¹˜ ì™„ë£Œ
go.settings.sdk.download.failed.to.download.notification.title=SDK ë‹¤ìš´ë¡œë“œ ì‹¤íŒ¨
go.settings.modules.enable.integration.checkbox=Go ëª¨ë“ˆ í†µí•© ë¹„í™œì„±í™”
go.settings.modules.choose.module.dialog.title=Go ëª¨ë“ˆ ì„ íƒ?
go.settings.modules.choose.module.validation.message=í•˜ë‚˜ ì?´ìƒ?ì?˜ ëª¨ë“ˆì?„ ì„ íƒ?í•´ì•¼ í•©ë‹ˆë‹¤.
filetype.go.settings.modules.dependency.description=Go ëª¨ë“ˆ ì¢…ì†?ì„± íŒŒì?¼
go.settings.modules.goproxy.documentation.link.title=ëª¨ë“ˆ ë‹¤ìš´ë¡œë“œ ë°? ê²€ì¦?
go.settings.modules.goproxy.tooltip=GOPROXYëŠ” ì¢…ì†?ì„± ë‹¤ìš´ë¡œë“œ ì‹œ go ëª…ë ¹ì–´ê°€ íŠ¹ì • í”„ë¡?ì‹œ ì„œë²„ë¥¼ ì‚¬ìš©í•˜ë?„ë¡? ì§€ì‹œí•©ë‹ˆë‹¤.
go.settings.modules.environment.label=Ambiente\:
go.settings.modules.environment.context.help=GOPROXY, GOPRIVATE ë“±
go.settings.modules.sync.dependencies.fix.family.name=ì¢…ì†?ì„± ë?™ê¸°í™”
go.settings.modules.sync.dependencies.fix.text={0}ì?˜ ì¢…ì†?ì„± ë?™ê¸°í™”
go.settings.modules.vendoring.checkbox=ë²¤ë?”ë§? ì§€ì›? ì§€ë?™ í™œì„±í™”
go.settings.modules.vendoring.checkbox.tooltip=Go 1.14 ì?´í›„ ë¬´ì‹œë?¨.<br>Go 1.14 ì?´ì „ ë²„ì „ì—?ì„œëŠ” ê³µê¸‰ì—…ì²´ ë””ë ‰í„°ë¦¬ê°€ ëª¨ë“ˆì—? í?¬í•¨ë?  ë•Œë§ˆë‹¤ ë²¤ë?”ë§? ì§€ì›?ì?´ í™œì„±í™”ë?©ë‹ˆë‹¤. íŠ¹ížˆ IDEëŠ” -mod\=vendor í”Œëž˜ê·¸ë¡œ go ë?„êµ¬ë¥¼ ì‹¤í–‰í•©ë‹ˆë‹¤.
go.settings.modules.vendoring.documentation.link.title=ëª¨ë“ˆê³¼ í•¨ê»˜ ë²¤ë?”ë§?ì?„ ì‚¬ìš©í•˜ëŠ” ë°©ë²•
go.settings.modules.explain.environment.variable=ë³€ìˆ˜ ì„¤ëª…
go.settings.modules.add.other.environment.variable=Otros
go.settings.modules.gosumdb.description=GOSUMDBëŠ” ê²€ì‚¬í•© ë?°ì?´í„°ë² ì?´ìŠ¤ ì?´ë¦„ì?„ ë‚˜íƒ€ëƒ…ë‹ˆë‹¤. Go ëª…ë ¹ì–´ê°€ ë‹¤ìš´ë¡œë“œë?œ ì¢…ì†?ì„±ì?˜ ê²€ì‚¬í•©ì?´ ë³€ê²½ë?œ ê²ƒì?„ í™•ì?¸í•˜ê¸° ìœ„í•´ ì?´ ê°’ì?„ ì‚¬ìš©í•©ë‹ˆë‹¤.
go.settings.modules.gosumdb.documentation.link.title=ëª¨ë“ˆ ì?¸ì¦? ì‹¤íŒ¨
go.settings.modules.goprivate.description=GOPRIVATEëŠ” privateìœ¼ë¡œ ê°„ì£¼ë?˜ëŠ” íŒ¨í‚¤ì§€ë¥¼ ë‚˜ì—´í•©ë‹ˆë‹¤. ì?´ íŒ¨í‚¤ì§€ë¥¼ ë‹¤ìš´ë¡œë“œí•˜ê±°ë‚˜ ìœ íš¨ì„± ê²€ì‚¬ë¥¼ ì‹¤í–‰í•˜ëŠ” ë?„ì¤‘ì—?ëŠ” Go ëª…ë ¹ì–´ê°€ í”„ë¡?ì‹œë‚˜ ê²€ì‚¬í•© ë?°ì?´í„°ë² ì?´ìŠ¤ë¥¼ ì‚¬ìš©í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.settings.modules.goprivate.documentation.link.title=ë¹„ public ëª¨ë“ˆì—? ëŒ€í•œ ëª¨ë“ˆ êµ¬ì„±
go.settings.modules.gonoproxy.description=GONOPROXYëŠ” privateìœ¼ë¡œ ê°„ì£¼ë?˜ëŠ” íŒ¨í‚¤ì§€ë¥¼ ë‚˜ì—´í•©ë‹ˆë‹¤. ì?´ íŒ¨í‚¤ì§€ë¥¼ ë‹¤ìš´ë¡œë“œí•˜ëŠ” ë?„ì¤‘ì—?ëŠ” Go ëª…ë ¹ì–´ê°€ í”„ë¡?ì‹œë¥¼ ì‚¬ìš©í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤. GOPRIVATEì?„ ìž¬ì •ì?˜í•©ë‹ˆë‹¤.
go.settings.modules.gonosumdb.description=GONOSUMDBëŠ” privateìœ¼ë¡œ ê°„ì£¼ë?˜ëŠ” íŒ¨í‚¤ì§€ë¥¼ ë‚˜ì—´í•©ë‹ˆë‹¤. ì?´ íŒ¨í‚¤ì§€ì—? ëŒ€í•´ ìœ íš¨ì„± ê²€ì‚¬ë¥¼ ì‹¤í–‰í•˜ëŠ” ë?„ì¤‘ì—?ëŠ” Go ëª…ë ¹ì–´ê°€ ê²€ì‚¬í•© ë?°ì?´í„°ë² ì?´ìŠ¤ë¥¼ ì‚¬ìš©í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤. GOPRIVATEì?„ ìž¬ì •ì?˜í•©ë‹ˆë‹¤.
go.settings.modules.gomodcache.description=GOMODCACHEì?€ ëª¨ë“ˆ ìº?ì‹œ ìœ„ì¹˜ë¥¼ ì„¤ì •í•©ë‹ˆë‹¤.
go.settings.modules.gomodcache.documentation.link.title=Go 1.15 ë¦´ë¦¬ìŠ¤ ë…¸íŠ¸
go.settings.postfix.enter.type.import.path.label=ê°€ì ¸ì˜¤ê¸° ê²½ë¡œ(&I)\:
go.settings.postfix.enter.type.name.label=ìœ í˜• ì?´ë¦„(&T)\:
go.settings.postfix.enter.type.empty.type.validation.message=ìœ í˜• ì?´ë¦„ì?„ ì§€ì •í•˜ì„¸ìš”
go.settings.postfix.enter.type.action.name=ìœ í˜• ì?´ë¦„ ìž…ë ¥...
go.settings.postfix.choose.type.action.name=ìœ í˜• ì„ íƒ?...
go.settings.postfix.choose.type.prompt.text=ìœ í˜• ì„ íƒ?
go.settings.vendoring.cannot.be.disabled.error.message=Go {0}ì—?ì„œëŠ” ë²¤ë?” ì‹¤í—˜ ë¹„í™œì„±í™”ê°€ ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.settings.vendoring.description=<html>\n  <head>\n    \n</head>\n  <body>\n    <p>\n      ì?´ ì˜µì…˜ì?„ ì‚¬ìš©í•˜ë©´ í™œì„±í™”ë?œ IDEì—?ì„œ ë‹¤ì?Œ ë¬¸ì„œì—? ë”°ë?¼ ì‹¬ë³¼ì?„ í•´ê²°í•˜ê³  \n      ì™„ì„±í•©ë‹ˆë‹¤. <a href\="https\://golang.org/s/go15vendor">Go ë²¤ë?”ë§? ì‹¤í—˜ \n      ì œì•ˆ</a>.\n   </p>\n    <p>\n      ë˜?í•œ ì?´ì—? ìƒ?ì?‘í•˜ëŠ” <strong>GO15VENDORExperiment</strong>\n      í™˜ê²½ ë³€ìˆ˜ ê°’ì?€ IDEì?˜ ëª¨ë“  go ì‹¤í–‰ì—? ë§žì¶° ì„¤ì •ë?©ë‹ˆë‹¤.\n   </p>\n </body>\n</html>
ì?´ ì˜µì…˜ì?„ í™œì„±í™”í•˜ë©´ IDEì—?ì„œ <a href="https://golang.org/s/go15vendor">Go ë²¤ë?”ë§? ì‹¤í—˜ ì œì•ˆ</a>ì—? ë”°ë?¼ \n\
go.settings.vendoring.enable.vendoring.checkbox=ë²¤ë?”ë§? í™œì„±í™”
go.settings.vendoring.group.name=ë²¤ë?” ì‹¤í—˜
go.settings.vendoring.is.not.supported.error.message=Go {0}ì—?ì„œëŠ” ë²¤ë?” ì‹¤í—˜ì?´ ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.template.intention.add.type.hint.name=ë§ˆì¹¨í‘œ ìœ í˜• ì§€ì •
go.template.intention.associate.file.extension.with.go.template=Go í…œí”Œë¦¿ê³¼ íŒŒì?¼ í™•ìž¥ìž? ì—°ê²°
go.template.intention.extension.associated.with.template=''{0}'' í™•ìž¥ì?´ Go í…œí”Œë¦¿ê³¼ ì—°ê²°ë?˜ì—ˆìŠµë‹ˆë‹¤
go.template.intention.open.file.type.settings=Go í…œí”Œë¦¿ íŒŒì?¼ ìœ í˜• ì„¤ì • ì—´ê¸°
go.template.intention.undo=ì‹¤í–‰ ì·¨ì†Œ
go.unknown.type.information.hint=<ì•Œ ìˆ˜ ì—†ì?Œ>
group.GoTools.description=Herramientas externas Go
group.GoTools.text=Go ë?„êµ¬
go.call.hierarchy.respect.interface.calls.action.name=ì?¸í„°íŽ˜ì?´ìŠ¤ í˜¸ì¶œì—? ë”°ë¦„
go.call.hierarchy.respect.interface.calls.description=ì?¸í„°íŽ˜ì?´ìŠ¤ í˜¸ì¶œì—? ë”°ë¦„
go.settings.formatter.no.exceptions.empty.text=ì˜ˆì™¸ ì—†ì?Œ
go.settings.formatter.comment.prefix.dialog.title=ì£¼ì„? ì ‘ë‘?ì‚¬
go.settings.formatter.wrap.call.arguments=í•¨ìˆ˜ í˜¸ì¶œ ì?¸ìˆ˜
go.settings.formatter.wrap.comp.lit=ë³µí•© ë¦¬í„°ëŸ´
go.settings.formatter.wrap.func.params=í•¨ìˆ˜ ë§¤ê°œë³€ìˆ˜
go.settings.formatter.wrap.func.result=í•¨ìˆ˜ ê²°ê³¼ ë§¤ê°œë³€ìˆ˜
go.settings.diff.ignore.imports.and.formatting.description=import ë¬¸ ë°? ì„œì‹? ì§€ì • ë¬´ì‹œ
go.settings.debugger.default.integer.format.label=ë””í?´íŠ¸ ì •ìˆ˜ í˜•ì‹?\:
go.executable.file.chooser.title={0} ì„ íƒ?
go.executable.file.process.icon.tooltip={0} ë°œê²¬
go.executable.file.invalid.path.text=ê²½ë¡œê°€ ì˜¬ë°”ë¥´ì§€ ì•ŠìŠµë‹ˆë‹¤
go.executable.file.cannot.retrieve.version=ë²„ì „ì?„ ê°€ì ¸ì˜¬ ìˆ˜ ì—†ì?Œ
go.executable.file.empty.value=<Empty>
go.fmt.add.leading.space.to.comments=ì£¼ì„?ì—? ì„ í–‰ ê³µê°„ ì¶”ê°€
go.fmt.add.parentheses.for.single.import=ë‹¨ì?¼ import ë¬¸ì—? ì†Œê´„í˜¸ ì¶”ê°€
go.fmt.group.stdlib.imports=stdlib import ë¬¸ ê·¸ë£¹ ì§€ì •
go.fmt.imports.tab.title=ê°€ì ¸ì˜¤ê¸°
go.fmt.move.all.imports.in.single.declaration=ë‹¨ì?¼ ì„ ì–¸ì?˜ ëª¨ë“  import ë¬¸ ì?´ë?™
go.fmt.move.all.stdlib.imports.in.single.group=ë‹¨ì?¼ ê·¸ë£¹ì?˜ ëª¨ë“  stdlib import ë¬¸ ì?´ë?™
go.fmt.remove.redundant.import.aliases=ì¤‘ë³µë?œ import ë³„ì¹­ ì œê±°
go.fmt.import.sorting.type=ì •ë ¬ ìœ í˜•
go.fmt.use.back.quotes.for.imports=import ë¬¸ì—? ì—­ë”°ì˜´í‘œ ì‚¬ìš©
go.fmt.fill.paragraph.width.label=ë‹¨ë?½ ë„ˆë¹„ ì±„ìš°ê¸°\:
go.fmt.create.local.group.label=ê·¸ë£¹
go.fmt.for.current.project.packages=í˜„ìž¬ í”„ë¡œì ?íŠ¸ íŒ¨í‚¤ì§€
go.fmt.for.imports.starting.with.prefix=ë‹¤ì?Œìœ¼ë¡œ ì‹œìž‘í•˜ëŠ” import ë¬¸:
go.fmt.for.imports.starting.with.prefix.comment='goimports -local'ê³¼ ë?™ì?¼í•œ ì ‘ë‘?ì‚¬ë¥¼ ì‰¼í‘œë¡œ êµ¬ë¶„í•œ ëª©ë¡?
go.fmt.imports.prefix.error.title=ìž˜ëª»ë?œ import ë¬¸ ì ‘ë‘?ì‚¬
go.fmt.imports.prefix.error.empty.message=import ë¬¸ ì ‘ë‘?ì‚¬ëŠ” ê³µë°±ì?¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.fmt.run.gofmt.panel.border.title=gofmt ì‹¤í–‰
go.fmt.run.gofmt.on.code.reformat.label=ì½”ë“œ ì„œì‹? ë‹¤ì‹œ ì§€ì • ì‹œ(&R)
go.debugger.disconnected.unexpectedly=ë””ë²„ê±° ì—°ê²°ì?´ ì˜ˆê¸°ì¹˜ ì•Šê²Œ í•´ì œë?¨
go.debugger.failed.to.compute.node.presentation=ë…¸ë“œ í”„ë ˆì  í…Œì?´ì…˜ ê³„ì‚° ì‹¤íŒ¨
go.debugger.connection.failed.generic.message={0}ì—? ì—°ê²° ì‹¤íŒ¨
go.debugger.connecting.to.address.message={0} ì—°ê²° ì¤‘...
go.debugger.connecting.to.unknown.address.message=ì›?ê²© ì£¼ì†Œ ì—°ê²° ì¤‘...
go.debugger.cannot.retrieve.go.processes=Go í”„ë¡œì„¸ìŠ¤ë¥¼ ê²€ìƒ‰í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.debugger.install.gops.to.attach.to.go.processes={0} ì„¤ì¹˜í•˜ì—¬ Go í”„ë¡œì„¸ìŠ¤ì—? ì—°ê²°
go.debugger.local.attach.group.name=Go
go.debugger.breakpoint.title=Go ì¤‘ë‹¨ì ?
go.debugger.error.breakpoint.title=Go ì˜¤ë¥˜ ì¤‘ë‹¨ì ?
go.debugger.error.breakpoint.display.text=ì¹˜ëª…ì ?ì?¸ ì˜¤ë¥˜
go.debugger.missing.function.name=<missed>
go.debugger.record.and.debug.action.name=ê¸°ë¡? ë°? ë””ë²„ê·¸
go.debugger.record.and.debug.description=ê¸°ë¡? ë°? ë””ë²„ê·¸
go.debugger.record.and.debug.start.action.text=ê¸°ë¡? ë°? ë””ë²„ê·¸
go.debugger.record.and.debug.cannot.find.rr.message=<html><a href\="https\://rr-project.org">mozilla rr</a> ì‹¤í–‰ íŒŒì?¼ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤. í•´ë‹¹ íŒŒì?¼ì?„ ì„¤ì¹˜í•˜ê³  ê²½ë¡œì—? ì¶”ê°€í•˜ì„¸ìš”.</html>
go.debugger.internal.messaging.error=ë‚´ë¶€ ë©”ì‹œì§• ì˜¤ë¥˜
go.debugger.cannot.connect.twice=Delve í”„ë¡œì„¸ìŠ¤ëŠ” ë‘? ë²ˆ ì—°ê²°ë?  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.debugger.cannot.connect.non.remote=ì›?ê²© ì—°ê²°ì?´ ì•„ë‹Œ ê²ƒì?„ ì‚¬ìš©í•˜ê¸° ë•Œë¬¸ì—? Delve í”„ë¡œì„¸ìŠ¤ ì—°ê²°ì?´ ë¶ˆê°€í•©ë‹ˆë‹¤.
go.debugger.cannot.evaluate.expression=\ ''{0}'' í‘œí˜„ì‹?ì?„ í?‰ê°€í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤\: {1}
go.debugger.cannot.get.current.goroutine=í˜„ìž¬ goroutineì?„ ë°›ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.debugger.go.version.is.not.officially.supported=Go {0} ë²„ì „ì—?ëŠ” ê³µì‹?ì ?ì?¸ ë””ë²„ê±° ì§€ì›?ì?´ ì—†ìœ¼ë©° ì?¼ë¶€ ê¸°ëŠ¥ì—?ì„œ ì˜¤ë¥˜ê°€ ë°œìƒ?í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤. go {1} ë˜?ëŠ” ìµœì‹  ë²„ì „ìœ¼ë¡œ ì—…ë?°ì?´íŠ¸í•˜ì„¸ìš”.
go.debugger.go.version.is.not.supported=Go {0} ë²„ì „ì—?ëŠ” ê³µì‹?ì ?ì?¸ ë””ë²„ê±° ì§€ì›?ì?´ ì—†ìŠµë‹ˆë‹¤. go {1} ë˜?ëŠ” ìµœì‹  ë²„ì „ìœ¼ë¡œ ì—…ë?°ì?´íŠ¸í•˜ì„¸ìš”.
go.debugger.no.debug.information.for.file=ì‹¤í–‰ íŒŒì?¼ì?€ {0}ì—? ëŒ€í•œ ë””ë²„ê·¸ ì •ë³´ë¥¼ í?¬í•¨í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.debugger.cannot.find.debugger.path={0} ë””ë²„ê±° ê²½ë¡œë¥¼ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.debugger.cannot.pause=ì?¼ì‹œ ì¤‘ë‹¨ ë¶ˆê°€
go.debugger.recording.in.progress=í”„ë¡œê·¸ëž¨ ì‹¤í–‰ì?„ ê¸°ë¡?í•©ë‹ˆë‹¤. ê¸°ë¡?ì?„ ë””ë²„ê·¸í•˜ë ¤ë©´ í”„ë¡œê·¸ëž¨ ì¢…ë£Œë¥¼ ê¸°ë‹¤ë¦¬ê±°ë‚˜ <a href\=''{0}''>ê¸°ë¡?ì?„ ì¤‘ë‹¨</a>í•˜ì„¸ìš”.
go.debugger.failed.to.stop.mozilla.rr.recording=mozilla rr ê¸°ë¡? ì¤‘ì§€ ì‹¤íŒ¨
go.debugger.failed.to.stop.mozilla.rr.recording.details=mozilla rr ê¸°ë¡? ì¤‘ì§€ ì‹¤íŒ¨\: {0}
go.debugger.cannot.evaluate.call=í˜¸ì¶œ í?‰ê°€ ë¶ˆê°€\: {0}
go.debugger.non.top.frame.selected=ìµœìƒ?ìœ„ê°€ ì•„ë‹Œ í”„ë ˆìž„ì?´ ì„ íƒ?ë?˜ì—ˆìŠµë‹ˆë‹¤.
go.debugger.missing.current.function=í˜„ìž¬ í•¨ìˆ˜ ëˆ„ë?½
go.debugger.unused.functions.are.not.included.message= (ì‚¬ìš©í•˜ì§€ ì•ŠëŠ” ê¸°ëŠ¥ì?€ ì‹¤í–‰ íŒŒì?¼ì—? í?¬í•¨ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤)
go.debugger.unused.methods.are.not.included.message= (ì‚¬ìš©í•˜ì§€ ì•ŠëŠ” ë©”ì„œë“œëŠ” ì‹¤í–‰ íŒŒì?¼ì—? í?¬í•¨ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤)
go.debugger.smart.step.into.failed=ìŠ¤ë§ˆíŠ¸ ìŠ¤í…?ì?¸íˆ¬ ì‹¤íŒ¨\: {0}
go.debugger.expression.is.not.a.function=''{0}''ì?€(ëŠ”) ê¸°ëŠ¥ì?´ ì•„ë‹™ë‹ˆë‹¤.
go.debugger.expression.is.nil=''{0}''ì?€(ëŠ”) nilìž…ë‹ˆë‹¤.
go.debugger.cannot.retrieve.interface.value.type=ì?¸í„°íŽ˜ì?´ìŠ¤ ê°’ì?˜ í˜•ì‹?ì?„ ê²€ìƒ‰í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.debugger.cannot.get.current.stack=í˜„ìž¬ ìŠ¤íƒ?ì?„ ë°›ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.debugger.smart.step.into.popup.title=ìŠ¤í…?ì?¸íˆ¬ ê¸°ëŠ¥
go.debugger.renderers.binary.name=2ì§„
go.debugger.renderers.decimal.name=10ì§„ìˆ˜
go.debugger.renderers.hex.name=16ì§„ìˆ˜
go.debugger.computing.full.value.of.call.results.is.not.supported=í˜¸ì¶œ ê²°ê³¼ì?˜ ì „ì²´ ê°’ ê³„ì‚°ì?´ ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.debugger.cannot.calculate.value=ê°’ì?„ ê³„ì‚°í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.debugger.obsolete.value=<obsolete>
go.debugger.cannot.calculate.string.presentation=ë¬¸ìž?ì—´ í”„ë¦¬ì  í…Œì?´ì…˜ ê³„ì‚°ë¶ˆê°€\: {0}
go.debugger.unsupported.type=<unsupported type\: {0}>
go.debugger.cannot.load.remaining.call.result.children=ë‚¨ì?€ í˜¸ì¶œ ê²°ê³¼ì?˜ í•˜ìœ„ í•­ëª©ì?„ ë¡œë“œí•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.debugger.unreadable.error=\ ê°€ë?…ì„± ì €í•˜\: {0}
go.debugger.fmt.sprintf.unsupported.format=(ì§€ì›?ë?˜ì§€ ì•ŠëŠ” í˜•ì‹?)
go.debugger.fmt.sprintf.unsupported.verb=(ì§€ì›?ë?˜ì§€ ì•ŠëŠ” ë?™ì‚¬)
go.debugger.fmt.sprintf.cannot.format.value=(ê°’ ì„œì‹? ì§€ì • ë¶ˆê°€)
go.debugger.async.stacktrace.caption=ë¹„ë?™ê¸° ìŠ¤íƒ? ì¶”ì ?
go.debugger.thread=ìŠ¤ë ˆë“œ
go.debugger.goroutine=Goroutine
go.debugger.unsupported.architecture.error=ë””ë²„ê·¸ëŠ” 64ë¹„íŠ¸ ì‹œìŠ¤í…œ ë°? 32ë¹„íŠ¸ ë¦¬ëˆ…ìŠ¤ì—?ì„œë§Œ ì§€ì›?ë?©ë‹ˆë‹¤
go.debugger.unsupported.go.version.on.darwin.arm64.error=darwin/arm64ì—?ì„œ ë””ë²„ê·¸í•˜ë ¤ë©´ go{0} ì?´(ê°€) í•„ìš”í•©ë‹ˆë‹¤
go.debugger.unsupported.go.arch.on.darwin.arm64.error={0}(ìœ¼)ë¡œ ì»´íŒŒì?¼ë?œ í”„ë¡œê·¸ëž¨ì?˜ ë””ë²„ê·¸ëŠ” ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤. darwin/arm64ì—?ì„œëŠ” go sdkë¥¼ ì‚¬ìš©í•˜ì„¸ìš”.
go.debugger.only.first.goroutines.are.shown=ì²« ë²ˆì§¸ {0} goroutinesë§Œ í‘œì‹œë?©ë‹ˆë‹¤
go.debugger.thread.dump.error=ìŠ¤ë ˆë“œ ë?¤í”„ ê°€ì ¸ì˜¤ê¸° ì‹¤íŒ¨\: {0}
go.debugger.thread.dump.display.name={0} ë?¤í”„
go.debugger.thread.dump.incomplete.display.name=ë¶ˆì™„ì „í•œ ë?¤í”„ {0}
go.debugger.cannot.find.file=íŒŒì?¼ {0} ì?„(ë¥¼) ì°¾ì?„ ìˆ˜ ì—†ì?Œ
go.debugger.unknown.function.name=<unknown>
go.debugger.create.dump.background.task.title=ìŠ¤íƒ? ë?¤í”„ ì¤‘...
go.debugger.create.dump.background.task.progress.text=ìŠ¤íƒ? ({0}) ë?¤í”„ ì¤‘...
go.debugger.thread.dump.n.goroutines={0} {0,choice,0\#goroutine|1\#goroutine|2\#goroutine}
go.debugger.thread.dump.n.unique.stacks={0} ê³ ìœ í•œ {0,choice,0\#ìŠ¤íƒ?|1\#ìŠ¤íƒ?|2\#ìŠ¤íƒ?}
go.debugger.thread.dump.n.hidden.goroutines={0} ìˆ¨ê²¨ì§„ {0,choice,0\#goroutine|1\#goroutine|2\#goroutine}
go.debugger.thread.dump.n.goroutines.matched.by.filter=í•„í„°ì™€ ì?¼ì¹˜í•˜ëŠ” {0} {0,choice,0\#goroutine|1\#goroutine|2\#goroutine}
go.debugger.another.command.is.in.progress=ë‹¤ë¥¸ ëª…ë ¹ì–´ê°€ ì§„í–‰ ì¤‘ìž…ë‹ˆë‹¤
go.debugger.thread.dump.is.in.progress=ìŠ¤ë ˆë“œ ë?¤í”„ê°€ ì§„í–‰ ì¤‘ìž…ë‹ˆë‹¤
go.debugger.and.n.more={0} ê°œ ì?´ìƒ? ì¶”ê°€
go.debugger.hidden.group.name=ìˆ¨ê²¨ì§„ ({0})
go.debugger.stop.remote.delve.title=ì›?ê²© Delve ì¤‘ì§€
go.debugger.stop.remote.delve.message=ì›?ê²© Delve ì?¸ìŠ¤í„´ìŠ¤ë¥¼ ì¤‘ì§€í•˜ì‹œê² ì–´ìš”?
go.debugger.process.terminated.stop.remote.delve.message=ì›?ê²© í”„ë¡œì„¸ìŠ¤ê°€ ì¢…ë£Œë?˜ì—ˆìŠµë‹ˆë‹¤. ì›?ê²© Delve ì?¸ìŠ¤í„´ìŠ¤ë?„ ì¤‘ì§€í•˜ì‹œê² ì–´ìš”?
go.debugger.kill.existing.process.title=ì›?ê²© í”„ë¡œì„¸ìŠ¤ ê°•ì œ ì¢…ë£Œ
go.debugger.kill.existing.process.message=ë””ë²„ê±°ê°€ ì—°ê²°ë?˜ì–´ ìžˆë?˜ ì›?ê²© í”„ë¡œì„¸ìŠ¤ë¥¼ ê°•ì œ ì¢…ë£Œí•˜ì‹œê² ì–´ìš”?
go.remote.debug.disconnect.delve.label=ì—°ê²° í•´ì œ ì‹œ\:
go.remote.debug.disconnect.delve.option.ask=í™•ì?¸í•˜ê¸°
go.remote.debug.disconnect.delve.option.leave=ê³„ì†? ì‹¤í–‰í•˜ê¸°
go.remote.debug.disconnect.delve.option.stop=ì›?ê²© Delve í”„ë¡œì„¸ìŠ¤ ì¤‘ì§€
go.settings.debugger.general.section.name=Go
go.settings.debugger.dataViews.section.name=Go
go.execution.package.is.not.specified.error=íŒ¨í‚¤ì§€ê°€ ì§€ì •ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.execution.directory.is.not.specified.error=ë””ë ‰í„°ë¦¬ê°€ ì§€ì •ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤
go.execution.file.is.not.specified.error=íŒŒì?¼ì?´ ì§€ì •ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤
go.execution.cannot.find.package.error=<code>{0}</code> íŒ¨í‚¤ì§€ë¥¼ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.package.contains.several.mains.error=<code>{0}</code> íŒ¨í‚¤ì§€ì—?ëŠ” í•˜ë‚˜ ì?´ìƒ?ì?˜ <code>ë©”ì?¸</code>ê¸°ëŠ¥ì?´ í?¬í•¨ë?©ë‹ˆë‹¤.<br>ëŒ€ì‹  íŒŒì?¼ ì¢…ë¥˜ë¥¼ ì‚¬ìš©í•˜ì‹œê¸¸ ê¶Œìž¥í•´ ë“œë¦½ë‹ˆë‹¤.
go.execution.cannot.find.directory.error=<code>{0}</code> ë””ë ‰í„°ë¦¬ë¥¼ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.run.after.build.is.not.possible.incompatible.os.error=ë¹Œë“œ í›„ ì‹¤í–‰ì?´ ë¶ˆê°€í•©ë‹ˆë‹¤.<br>ê²°ê³¼ ë°”ì?´ë„ˆë¦¬ê°€ OSì™€ í˜¸í™˜ë?˜ì§€ ì•Šì?„ ê²ƒìž…ë‹ˆë‹¤.
go.execution.run.after.build.is.not.possible.main.not.found.single.file.error=ë¹Œë“œ í›„ ì‹¤í–‰ì?´ ë¶ˆê°€í•©ë‹ˆë‹¤.<br>ë©”ì?¸ íŒŒì?¼ì—? ë©”ì?¸ì?´ ì•„ë‹Œ íŒ¨í‚¤ì§€ê°€ í?¬í•¨ë?˜ê±°ë‚˜ ë©”ì?¸ ê¸°ëŠ¥ì?´ í?¬í•¨ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.execution.run.after.build.is.not.possible.main.not.found.many.files.error=ë¹Œë“œ í›„ ì‹¤í–‰ì?´ ë¶ˆê°€í•©ë‹ˆë‹¤.<br>ì„ íƒ?í•œ íŒŒì?¼ ì¤‘ ì–´ë””ì—?ë?„ ê¸°ë³¸ íŒ¨í‚¤ì§€ì™€ ë©”ì?¸ ê¸°ëŠ¥ì?´ í?¬í•¨ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.execution.file.not.found.error=íŒŒì?¼ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤\: <code>{0}</code>
go.execution.files.must.be.in.one.directory.error=ì?´ë¦„ì?´ ì§€ì •ë?œ íŒŒì?¼ì?€ ëª¨ë‘? í•˜ë‚˜ì?˜ ë””ë ‰í„°ë¦¬ì—? ìžˆì–´ì•¼ í•©ë‹ˆë‹¤.
go.execution.not.go.file.error=íŒŒì?¼ì?´ Go íŒŒì?¼ì?´ ì•„ë‹™ë‹ˆë‹¤\: {0}
go.execution.application.run.configuration.display.name=Go ë¹Œë“œ
go.execution.application.run.configuration.description=Go ë¹Œë“œ ì‹¤í–‰ êµ¬ì„±
go.execution.before.run.task.name=Go ëª…ë ¹ì–´ ì‹¤í–‰
go.execution.before.run.task.description=''{0}'' ì‹¤í–‰
go.execution.before.run.task.supports.only.go.run.configurations.error=Go ëª…ë ¹ì–´ ìž‘ì—…ì?€ Go ì‹¤í–‰ êµ¬ì„±ë§Œ ì§€ì›?í•©ë‹ˆë‹¤
go.execution.before.run.task.supports.only.go.modules.error=Go ëª…ë ¹ì–´ ìž‘ì—…ì?€ í™œì„±í™”ë?œ Go í†µí•©ì?´ ìžˆëŠ” ëª¨ë“ˆë§Œ ì§€ì›?í•©ë‹ˆë‹¤
go.execution.before.run.task.executing.presentable.name=`{0}` ì‹¤í–‰ ì¤‘
go.execution.before.run.task.error.dialog.title=Go ëª…ë ¹ì–´ ìž‘ì—…
go.execution.before.run.task.edit.go.command.dialog.title=Go ëª…ë ¹ì–´ ìž‘ì—… íŽ¸ì§‘
go.execution.before.run.task.empty.command.error=ë¹ˆ Go ëª…ë ¹ì–´ëŠ” í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.execution.before.run.task.command.should.not.start.with.go.error=Go ëª…ë ¹ì–´ëŠ” ''go''ë¡œ ì‹œìž‘ë?˜ë©´ ì•ˆ ë?©ë‹ˆë‹¤.
go.execution.coverage.percent.statements=% êµ¬ë¬¸
go.execution.coverage.percent.files=% íŒŒì?¼
go.execution.coverage.covered=ì§€ì›?ë?¨
go.execution.coverage.engine.name=Go ì»¤ë²„ë¦¬ì§€
go.execution.coverage.cannot.run.coverage.on.directory.kind.run.configurations.error=ë””ë ‰í„°ë¦¬ ì¢…ë¥˜ ì‹¤í–‰ êµ¬ì„±ì—?ì„œ ì»¤ë²„ë¦¬ì§€ë¥¼ ì‹¤í–‰í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.coverage.loading.coverage.data=ì»¤ë²„ë¦¬ì§€ ë?°ì?´í„° ë¡œë“œ ì¤‘...
go.execution.coverage.runner.name=Go
go.execution.coverage.downloading.coverage.report.progress.title=ì»¤ë²„ë¦¬ì§€ ë³´ê³ ì„œ ë‹¤ìš´ë¡œë“œ ì¤‘â€¦
go.test.creator.empty.test.file.name=ë¹ˆ í…ŒìŠ¤íŠ¸ íŒŒì?¼
go.test.creator.test.for.function.name=í•¨ìˆ˜ í…ŒìŠ¤íŠ¸
go.test.creator.test.for.file.name=íŒŒì?¼ í…ŒìŠ¤íŠ¸
go.test.creator.test.for.package.name=íŒ¨í‚¤ì§€ í…ŒìŠ¤íŠ¸
go.test.creator.test.for.selection.name=ì„ íƒ? í•­ëª© í…ŒìŠ¤íŠ¸
go.test.creator.gotests.generation.name=í…ŒìŠ¤íŠ¸ ìƒ?ì„±
go.test.creator.gotests.no.tests.generated=ìƒ?ì„±ë?œ í…ŒìŠ¤íŠ¸ê°€ ì—†ìŠµë‹ˆë‹¤.
go.test.creator.gotests.failed.to.create.test.file=í…ŒìŠ¤íŠ¸ íŒŒì?¼ ''{0}''ì?„(ë¥¼) ìƒ?ì„±í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤.
go.test.creator.gotests.generation.failed.notification.title=í…ŒìŠ¤íŠ¸ ìƒ?ì„± ì‹¤íŒ¨
go.test.creator.cannot.find.test.package.name=í…ŒìŠ¤íŠ¸ íŒ¨í‚¤ì§€ ì?´ë¦„ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.test.creator.cannot.find.test.import.path=í…ŒìŠ¤íŠ¸ ê°€ì ¸ì˜¤ê¸° ê²½ë¡œë¥¼ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.test.creator.cannot.find.function.signature=í•¨ìˆ˜ ì‹œê·¸ë‹ˆì²˜ë¥¼ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.test.creator.cannot.find.method.receiver={0}ì—? ëŒ€í•œ ë©”ì„œë“œ ë¦¬ì‹œë²„ë¥¼ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.test.creator.cannot.find.method.receiver.type={0}ì—? ëŒ€í•œ ë©”ì„œë“œ ë¦¬ì‹œë²„ ìœ í˜•ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.test.creator.cannot.find.field.type={0}ì—? ëŒ€í•œ í•„ë“œ ìœ í˜•ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.test.generate.table.benchmark.text=Tabla de referencia
go.test.generate.table.benchmark.description=Crear función de referencia de tabla
go.test.generate.table.test.text=Prueba de tabla
go.test.generate.table.test.description=Crea una función de prueba de tabla
go.test.generate.function.description={0} í•¨ìˆ˜ ìƒ?ì„±
go.test.generate.test.text=í…ŒìŠ¤íŠ¸
go.test.generate.test.main.text=Test_main
go.test.generate.benchmark.text=ë²¤ì¹˜ë§ˆí?¬
go.test.generate.example.text=ì˜ˆ
go.test.testify.run.configuration.name={1}ì?˜ {0}
go.test.testify.unknown.target.name=ì•Œ ìˆ˜ ì—†ì?Œ
go.test.framework.not.available.in.module.error=<code>{0}</code> í”„ë ˆìž„ì›Œí?¬ëŠ” ì„ íƒ?í•œ ëª¨ë“ˆì—?ì„œ ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.test.working.directory.should.be.ancestor.of.testing.directory.error=ìž‘ì—… ë””ë ‰í„°ë¦¬ëŠ” í…ŒìŠ¤íŠ¸ ë””ë ‰í„°ë¦¬ì?˜ ìƒ?ìœ„ ë””ë ‰í„°ë¦¬ì—¬ì•¼ í•©ë‹ˆë‹¤.
go.test.testing.directory.does.not.exist.error=í…ŒìŠ¤íŠ¸ ë””ë ‰í„°ë¦¬ê°€ ì—†ìŠµë‹ˆë‹¤.
go.test.non.a.package.error=<code>{0}</code>ì?€(ëŠ”) íŒ¨í‚¤ì§€ê°€ ì•„ë‹™ë‹ˆë‹¤.<br>ë””ë ‰í„°ë¦¬ ì¢…ë¥˜ ì‹¤í–‰ êµ¬ì„±ì?„ ì‚¬ìš©í•˜ì—¬ ë””ë ‰í„°ë¦¬ì—?ì„œ ìž¬ê·€ì ?ìœ¼ë¡œ í…ŒìŠ¤íŠ¸ê°€ ì‹¤í–‰ë?©ë‹ˆë‹¤.
go.test.cannot.find.files.compatible.with.framework.error=<code>{0}</code>ì—?ì„œ <code>{1}</code> í”„ë ˆìž„ì›Œí?¬ì™€ í˜¸í™˜ ê°€ëŠ¥í•œ Go í…ŒìŠ¤íŠ¸ íŒŒì?¼ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.test.file.does.not.exist.error=íŒŒì?¼ì?´ ì—†ìŠµë‹ˆë‹¤\: {0}
go.test.not.go.file.error=''{0}'' íŒŒì?¼ì?€ Go íŒŒì?¼ì?´ ì•„ë‹™ë‹ˆë‹¤.
go.test.framework.is.not.available.on.files.error=<code>{0}</code> í”„ë ˆìž„ì›Œí?¬ëŠ” ëª¨ë“  <code>{1}</code> íŒŒì?¼ì—?ì„œ ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.test.suggested.run.configuration.name={1}ì?˜ {0}
go.test.run.configuration.name=Go í…ŒìŠ¤íŠ¸
go.test.run.configuration.description=Go í…ŒìŠ¤íŠ¸ ì‹¤í–‰ êµ¬ì„±
go.test.template.run.configuration.name=Go í…ŒìŠ¤íŠ¸
go.test.run.test.tooltip=í…ŒìŠ¤íŠ¸ ì‹¤í–‰
go.test.no.tests.were.run=ì‹¤í–‰ë?œ í…ŒìŠ¤íŠ¸ê°€ ì—†ìŠµë‹ˆë‹¤.
go.test.cannot.run.compiling.on.directory.kind.run.configurations.error=ë””ë ‰í„°ë¦¬ ì¢…ë¥˜ ì‹¤í–‰ êµ¬ì„±ì—?ì„œ ì»´íŒŒì?¼ì?„  ì‹¤í–‰í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.cannot.find.target.to.compile.error=ì»´íŒŒì?¼ ëŒ€ìƒ?ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.cannot.create.temp.output.file.error=ìž„ì‹œ ì¶œë ¥ íŒŒì?¼ì?„ ìƒ?ì„±í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.cannot.create.output.file.error={0} ì¶œë ¥ íŒŒì?¼ì?„ ìƒ?ì„±í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.cannot.create.output.file.in.error={0}ì—?ì„œ ì¶œë ¥ íŒŒì?¼ì?„ ìƒ?ì„±í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.cannot.make.temporary.file.executable.error={0} ìž„ì‹œ ì‹¤í–‰ íŒŒì?¼ì?„ ìƒ?ì„±í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.could.not.bind.remote.debugging.port.error=ì›?ê²© ë””ë²„ê·¸ í?¬íŠ¸ë¥¼ ë°”ì?¸ë”©í•  ìˆ˜ ì—†ì?Œ
go.execution.cannot.find.target.error=ëŒ€ìƒ? {0} ì?„(ë¥¼) ì°¾ì?„ ìˆ˜ ì—†ì?Œ
go.execution.sdk.not.set.or.sdk.home.path.empty.for.module.error=ëª¨ë“ˆì—? ëŒ€í•´ SDKê°€ ì„¤ì •ë?˜ì–´ ìžˆì§€ ì•Šê±°ë‚˜ SDK í™ˆ ê²½ë¡œê°€ ë¹„ì–´ ìžˆìŠµë‹ˆë‹¤
go.execution.can.not.run.go.local.process.error=ë¡œì»¬ í”„ë¡œì„¸ìŠ¤ë¥¼ ì‹¤í–‰í•  ìˆ˜ ì—†ì?Œ
go.execution.failed.to.prepare.remote.environment.error=ì›?ê²© í™˜ê²½ì?„ ì¤€ë¹„í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤. {0}
go.execution.outdated.go.notification.title=Go ë²„ì „ì?´ ì˜¤ëž˜ë?˜ì—ˆìŠµë‹ˆë‹¤
go.execution.outdated.go.notification.text=ëª¨ë“  ë””ë²„ê·¸ ê¸°ëŠ¥ì?„ ì™„ë²½í•˜ê²Œ ì§€ì›?í•˜ë ¤ë©´ Go ë²„ì „ì?„ ì—…ë?°ì?´íŠ¸í•˜ì„¸ìš”.
go.execution.change.goroot.action.name=GOROOT ë³€ê²½
go.execution.compilation.finished.with.exit.code=$EXIT_CODE$ ì¢…ë£Œ ì½”ë“œë¡œ ì™„ë£Œë?œ ì»´íŒŒì?¼
go.execution.compiled.binary.cannot.be.executed=ì»´íŒŒì?¼ë?œ ë°”ì?´ë„ˆë¦¬ë¥¼ ì‹¤í–‰í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.compilation.failed.notification.title=ì»´íŒŒì?¼ ì‹¤íŒ¨
go.execution.install.lldb.notification.text=xcode-select --installì?„ í™œìš©í•˜ì—¬ lldb ì„¤ì¹˜
go.execution.go.setup.folding.placeholder=<{0} go ì„¤ì • {0,choice,1\#í˜¸ì¶œ|2\#í˜¸ì¶œ}>
go.execution.remote.run.configuration.display.name=Go Remote
go.execution.remote.run.configuration.description=Go Remote
go.execution.remote.run.configuration.start.delve.text=ì?´ êµ¬ì„±ì?„ ì‹¤í–‰í•˜ê¸° ì „ì—? ì•„ëž˜ ì„¤ëª…ëŒ€ë¡œ ì• í”Œë¦¬ì¼€ì?´ì…˜ ë°? Delveë¥¼ ì‹œìž‘í•˜ì„¸ìš”.<br><br>Delveê°€ ì• í”Œë¦¬ì¼€ì?´ì…˜ì?„ ì»´íŒŒì?¼í•˜ë?„ë¡? í•˜ì„¸ìš”\:<br><pre>dlv debug --headless --listen\=\:{0} --api-version\=2 --accept-multiclient</pre><br>ì•„ë‹ˆë©´ Go {3} ì?´ìƒ?ì?„ ì‚¬ìš©í•˜ì—¬ ì• í”Œë¦¬ì¼€ì?´ì…˜ë¥¼ ì»´íŒŒì?¼í•˜ì„¸ìš”\:\:<br><pre>go build -gcflags \"all\=-N -l\" github.com/app/demo</pre><br>ê·¸ë¦¬ê³  ë‹¤ì?Œ Delve ëª…ë ¹ë¥¼ í†µí•´ ì• í”Œë¦¬ì¼€ì?´ì…˜ì?„ ì‹¤í–‰í•˜ì„¸ìš”\:<br><pre>dlv --listen\=\:{1} --headless\=true --api-version\=2 --accept-multiclient exec ./{2}</pre>
go.execution.remote.run.configuration.host.label=Nombre del &servidor\:
go.execution.remote.run.configuration.port.label=&Puerto\:
go.execution.sdk.is.not.specified.error=<code>{0}</code>ëª¨ë“ˆì—? Go SDKê°€ ì§€ì •ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤.
go.execution.module.does.not.exist.error=í”„ë¡œì ?íŠ¸ì—? <code>{0}</code> ëª¨ë“ˆì?´ ì—†ìŠµë‹ˆë‹¤.
go.execution.working.directory.is.not.specified.error=ìž‘ì—… ë””ë ‰í„°ë¦¬ê°€ ì§€ì •ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤.
go.execution.cannot.find.working.directory.error=<code>{0}</code> ìž‘ì—… ë””ë ‰í„°ë¦¬ë¥¼ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.execution.input.file.is.not.specified.error=ìž…ë ¥ íŒŒì?¼ì?´ ì§€ì •ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤
go.execution.cannot.find.input.file.error=ìž…ë ¥ íŒŒì?¼ <code>{0}</code>ì?„(ë¥¼) ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.execution.go.is.not.configured.error=ì‹¤í–‰ êµ¬ì„±ì—?ì„œ GoëŠ” êµ¬ì„±ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤\: {0}
go.execution.run.application.tooltip=ì• í”Œë¦¬ì¼€ì?´ì…˜ ì‹¤í–‰
go.execution.process.finished.with.exit.code={1} ì¢…ë£Œ ì½”ë“œë¡œ ì™„ë£Œë?œ {0}
go.execution.application.process.name=í”„ë¡œì„¸ìŠ¤
go.execution.debugger.process.name=ë””ë²„ê±°
go.execution.unknown.target.delve.socket.error=Delveë¥¼ ì‹¤í–‰í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤. ëŒ€ìƒ? ì†Œì¼“ì?„ ì•Œ ìˆ˜ ì—†ìŠµë‹ˆë‹¤. RunState\: {0}
go.execution.process.interrupted=ì¤‘ë‹¨ë?¨
go.execution.process.cancelled=Cancelado
go.execution.go.sdk.is.not.downloaded.yet=Go SDKê°€ ì•„ì§? ë‹¤ìš´ë¡œë“œë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤
go.execution.process.finished.successfully=ì„±ê³µì ?ìœ¼ë¡œ ì™„ë£Œí•¨
go.execution.process.failed.to.run=ì‹¤í–‰ ì‹¤íŒ¨
go.execution.unknown.error=ì•Œ ìˆ˜ ì—†ëŠ” ì˜¤ë¥˜, ì„¸ë¶€ ì‚¬í•­ ë¡œê·¸ ë³´ê¸°
go.execution.enter.sudo=sudo ë¹„ë°€ë²ˆí˜¸ë¥¼ ìž…ë ¥í•˜ì„¸ìš”\:
go.import.optimizer.removed.imports={0} ê°œì?˜ {0,choice,1\#import ë¬¸|2\#import ë¬¸}ì?´ ì œê±°ë?˜ì—ˆìŠµë‹ˆë‹¤
go.import.optimizer.removed.aliases={0} ê°œì?˜ {0,choice,1\#ë³„ì¹­|2\#ë³„ì¹­}ì?´ ì œê±°ë?˜ì—ˆìŠµë‹ˆë‹¤
go.import.optimizer.removed.imports.and.aliases={0} ê°œì?˜ {0,choice,1\#import ë¬¸|2\#import ë¬¸} ë°? {1} ê°œì?˜ {0,choice,1\#ë³„ì¹­|2\#ë³„ì¹­}ì?´ ì œê±°ë?˜ì—ˆìŠµë‹ˆë‹¤
go.import.package.fix.family.name=íŒ¨í‚¤ì§€ ê°€ì ¸ì˜¤ê¸°
go.import.package.fix.text=íŒ¨í‚¤ì§€ ê°€ì ¸ì˜¤ê¸°
go.import.package.fix.text.no.variants=íŒ¨í‚¤ì§€ ê°€ì ¸ì˜¤ê¸°?
go.import.package.fix.text.single.variant={0} ê°€ì ¸ì˜¤ê¸°?
go.import.package.fix.text.many.variants={0} ê°€ì ¸ì˜¤ê¸°?(ë‹¤ì¤‘ ì„ íƒ?...)
go.import.package.popup.title=ê°€ì ¸ì˜¬ íŒ¨í‚¤ì§€
go.import.package.cannot.invoke.fix.with.ambiguous.imports.error={0}ì—?ë””í„°ì—?ì„œ ëª¨í˜¸í•œ import ë¬¸ìœ¼ë¡œ ìˆ˜ì •ì?„ í˜¸ì¶œí•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤. íŒ¨í‚¤ì§€\: {1}
go.create.intermediate.variable.declaration.fix.name=ì¤‘ê°„ ë³€ìˆ˜ ìƒ?ì„±
go.add.import.command.name=ê°€ì ¸ì˜¤ê¸° ì¶”ê°€
go.add.import.with.alias.presentation=\ {1} (ìœ¼)ë¡œì„œì?˜ {0}
go.error.parser.expected=''{0}'' í•„ìš”
go.error.parser.expected.got=''{0}'' ì?´(ê°€) í•„ìš”í•˜ë‚˜ ''{1}'' ë°œê²¬
go.error.parser.expected.or.got=''{0}'' ë˜?ëŠ” ''{1}''ì?´(ê°€) í•„ìš”í•˜ë‚˜ ''{2}''ì?´(ê°€) ìžˆìŠµë‹ˆë‹¤
go.error.parser.unexpected=ì˜ˆê¸°ì¹˜ ì•Šì?€ ''{0}''
go.error.annotator.invalid.package.name=ìž˜ëª»ë?œ íŒ¨í‚¤ì§€ ì?´ë¦„
go.error.annotator.continue.statement.not.inside.a.for.loop=for ë£¨í”„ì—? í?¬í•¨ë?˜ì§€ ì•ŠëŠ” continue ë¬¸
go.error.annotator.break.statement.not.inside.a.for.loop.select.or.switch=for ë£¨í”„ ë‚´ë¶€ì—? ì—†ëŠ” break ë¬¸, ì„ íƒ? ë˜?ëŠ” ì „í™˜
go.error.annotator.unexported.reference.usage=ë¹„ë…¸ì¶œ {0} ''{1}'' ì‚¬ìš© ìœ„ì¹˜
go.error.annotator.type.is.not.an.expression=ìœ í˜• ''{0}'' ì?€(ëŠ”) í‘œí˜„ì‹?ì?´ ì•„ë‹™ë‹ˆë‹¤
go.error.annotator.unexported.type.usage=ë¹„ë…¸ì¶œ ìœ í˜• ''{0}'' ì‚¬ìš© ìœ„ì¹˜
go.error.annotator.reference.is.not.a.type={0} ì?€(ëŠ”) ìœ í˜•ì?´ ì•„ë‹™ë‹ˆë‹¤.
go.error.annotator.missing.key.in.map.literal=map ë¦¬í„°ëŸ´ì?˜ ëˆ„ë?½ë?œ í‚¤
go.error.annotator.use.of.type.outside.type.switch=ìœ í˜• ì „í™˜ ì™¸ë¶€ì?˜ .(type) ì‚¬ìš©
go.error.annotator.invalid.type.assertion=ìž˜ëª»ë?œ ìœ í˜• ì–´ì„¤ì…˜\: {0} (ì™¼ìª½ì?˜ ë¹„ ì?¸í„°íŽ˜ì?´ìŠ¤ ìœ í˜• {1})
go.error.annotator.invalid.type.switch.guard=ìž˜ëª»ë?œ ìœ í˜• ì „í™˜ ë³´í˜¸\: {0} (ì™¼ìª½ì?˜ ë¹„ ì?¸í„°íŽ˜ì?´ìŠ¤ ìœ í˜• {1})
go.error.annotator.map.key.type.is.not.comparable=ìž˜ëª»ë?œ map í‚¤ ìœ í˜•\: ë¹„êµ? ì—°ì‚°ìž? \=\= ë°? \!\=ì?˜ ê²½ìš° í‚¤ ìœ í˜•ìœ¼ë¡œ ì™„ì „ížˆ ì •ì?˜ë?˜ì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.call.used.as.value.but.it.returns.nothing={0} ì?€(ëŠ”) ê°’ìœ¼ë¡œ ì‚¬ìš©ë?˜ì§€ë§Œ ì•„ë¬´ê²ƒë?„ ë°˜í™˜í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.error.annotator.multiple.value.in.single.value.context=ë‹¨ì?¼ ê°’ ì»¨í…?ìŠ¤íŠ¸ì?˜ ë‹¤ì¤‘ ê°’ {0}
go.error.annotator.type.aliases.are.available.since.go.1.9=ìœ í˜• ì„ ì–¸ì?˜ ì˜ˆê¸°ì¹˜ ì•Šì?€ \=. ìœ í˜• ë³„ì¹­ì?€ Go 1.9ë¶€í„° ì§€ì›?ë?©ë‹ˆë‹¤.
go.error.annotator.missing.function.body=ëˆ„ë?½ë?œ {0} ë³¸ë¬¸
go.error.annotator.main.or.init.has.invalid.signature={0} í•¨ìˆ˜ì—?ëŠ” ì?¸ìˆ˜ì™€ ë°˜í™˜ ê°’ì?´ í?¬í•¨ë?  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.invalid.index.or.slice.operation=ìž˜ëª»ë?œ ì—°ì‚° {0}(ë¬¸ìž?ì—´ì?˜ 3-ìƒ‰ì?¸ ìŠ¬ë?¼ì?´ìŠ¤)
go.error.annotator.unexpected.end.of.statement=êµ¬ë¬¸ ì˜¤ë¥˜\: ì˜ˆê¸°ì¹˜ ì•Šì?€ êµ¬ë¬¸ ë??,\:\=, \= ë˜?ëŠ” ì‰¼í‘œ ê¸°ëŒ€
go.error.annotator.unexpected.newline.after.if=ì˜ˆê¸°ì¹˜ ì•Šì?€ ì¤„ ë°”ê¿ˆ, ''if'' ì ˆ ë’¤ì—? ''{'' ê¸°ëŒ€
go.error.annotator.missing.condition.in.if.statement=''if'' ë¬¸ì?˜ ëˆ„ë?½ë?œ ì¡°ê±´
go.error.annotator.semicolon.is.missing=; ëˆ„ë?½
go.error.annotator.fallthrough.statement.out.of.place=ë¶€ì ?ì ˆí•œ í?´ìŠ¤ë£¨ êµ¬ë¬¸
go.error.annotator.cannot.fallthrough.final.case.in.switch=switch ë¬¸ì—?ì„œ ë§ˆì§€ë§‰ caseë¥¼ í?´ìŠ¤ë£¨ í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.annotator.cannot.fallthrough.in.type.switch=ìœ í˜• ìŠ¤ìœ„ì¹˜ì—?ì„œ í?´ìŠ¤ë£¨ê°€ í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.error.annotator.end.of.file.in.comment=ì£¼ì„?ì—? í?¬í•¨ë?œ íŒŒì?¼ì?˜ ë??
go.error.annotator.array.bound.must.be.a.constant.expression=ìž˜ëª»ë?œ ë°°ì—´ ë°”ìš´ë“œ ''{0}'', ìƒ?ìˆ˜ì‹?ì?´ì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.array.bound.must.be.non.negative=ìž˜ëª»ë?œ ë°°ì—´ ë°”ìš´ë“œ ''{0}'', ì?Œìˆ˜ ê°’ì?€ í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.error.annotator.array.bound.must.be.representable.by.int.type=ìž˜ëª»ë?œ ë°°ì—´ ë°”ìš´ë“œ ''{0}'', ê°’ì?€ ''int'' ìœ í˜•ìœ¼ë¡œ í‘œì‹œë?  ìˆ˜ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.invalid.argument.for.len=ìž˜ëª»ë?œ len ì?¸ìˆ˜
go.error.annotator.invalid.argument.for.cap=ìž˜ëª»ë?œ cap ì?¸ìˆ˜
go.error.annotator.cannot.declare.init.must.be.a.function=initì?„ ì„ ì–¸ì?´ ë¶ˆê°€í•˜ë©° í•¨ìˆ˜ì—¬ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.too.many.arguments.to.new=ìƒˆë¡œìš´ ì?¸ìˆ˜ê°€ ë„ˆë¬´ ë§Žì?Œ
go.error.annotator.cannot.make.type={0} ìƒ?ì„± ë¶ˆê°€
go.error.annotator.argument.is.not.a.type={0} ì?€(ëŠ”) ìœ í˜•ì?´ ì•„ë‹™ë‹ˆë‹¤.
go.error.annotator.missing.argument.to.make=ìƒ?ì„±í•  ì?¸ìˆ˜ ëˆ„ë?½
go.error.annotator.non.integer.size.argument.to.make=ìƒ?ì„±í•  ì •ìˆ˜ê°€ ì•„ë‹Œ í?¬ê¸° ì?¸ìˆ˜
go.error.annotator.non.integer.capacity.argument.to.make=ìƒ?ì„±í•  ì •ìˆ˜ê°€ ì•„ë‹Œ ìš©ëŸ‰ ì?¸ìˆ˜
go.error.annotator.missing.len.argument.to.make=ìƒ?ì„±í•  len ì?¸ìˆ˜ ëˆ„ë?½
go.error.annotator.too.many.arguments.to.make=ìƒ?ì„±í•  ì?¸ìˆ˜ê°€ ë„ˆë¬´ ë§Žì?Œ
go.error.annotator.cyclic.definition.detected=íƒ?ì§€ë?œ ìˆœí™˜ ì •ì?˜
go.error.annotator.use.of.package.without.selector=ì„ íƒ?ìž? ì—†ëŠ” íŒ¨í‚¤ì§€ ''{0}'' ì‚¬ìš©
go.error.annotator.unexpected.assign.operator=ì˜ˆê¸°ì¹˜ ì•Šì?€ {0},\:\=, \= ë˜?ëŠ” ì‰¼í‘œ ì˜ˆìƒ?
go.error.annotator.invalid.constant.type=ìž˜ëª»ë?œ ìƒ?ìˆ˜ ìœ í˜•
go.error.annotator.const.initializer.is.not.a.constant=const ì?´ë‹ˆì…œë?¼ì?´ì € ''{0}''ì?€(ëŠ”) ìƒ?ìˆ˜ê°€ ì•„ë‹™ë‹ˆë‹¤.
go.error.annotator.missing.value.in.const.declaration=const ì„ ì–¸ì—?ì„œ ëˆ„ë?½ë?œ ê°’
go.error.annotator.extra.expression.in.const.declaration=const ì„ ì–¸ì?˜ ì¶”ê°€ í‘œí˜„ì‹?
go.error.annotator.conversion.in.defer.or.go={0} ì—?ëŠ” ë³€í™˜ì?´ ì•„ë‹Œ í•¨ìˆ˜ í˜¸ì¶œì?´ í•„ìš”í•©ë‹ˆë‹¤
go.error.annotator.function.not.permitted.in.defer.or.go=ì?´ í•¨ìˆ˜ëŠ” {0} êµ¬ë¬¸ì—?ì„œ í˜¸ì¶œë?  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.parenthesized.expression.in.defer.or.go={0} í‘œí˜„ì‹?ì?€ ì†Œê´„í˜¸ ì•ˆì—? í?¬í•¨ë?˜ì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.defer.or.go.requires.function.call={0} í‘œí˜„ì‹?ì?€ í•¨ìˆ˜ í˜¸ì¶œì?´ì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.evaluated.but.not.used=í?‰ê°€ë?˜ì—ˆì§€ë§Œ ì‚¬ìš©ë?˜ì§€ ì•ŠëŠ” {0}
go.error.annotator.cannot.declare.in.post.statement.of.for.loop=for ë£¨í”„ì?˜ í›„í–‰ ë¬¸ì—?ì„œ ì„ ì–¸í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.too.many.variables.in.range=ë²”ìœ„ ì•ˆì—? ë³€ìˆ˜ê°€ ë„ˆë¬´ ë§ŽìŠµë‹ˆë‹¤.
go.error.annotator.named.and.unnamed.parameters={0} ì?´(ê°€) ì?´ë¦„ì?´ ì§€ì •ë?œ ë§¤ê°œë³€ìˆ˜ ''{1}'' ë°? ì?´ë¦„ ì—†ëŠ” ë§¤ê°œë³€ìˆ˜ ''{1}'' ëª¨ë‘? í?¬í•¨í•©ë‹ˆë‹¤.
go.error.annotator.named.and.unnamed.return.parameters={0} ì?´(ê°€) ì?´ë¦„ì?´ ì§€ì •ë?œ ë§¤ê°œë³€ìˆ˜ ''{1}'' ë°? ì?´ë¦„ ì—†ëŠ” ë°˜í™˜ ë§¤ê°œë³€ìˆ˜ ''{1}'' ëª¨ë‘? í?¬í•¨í•©ë‹ˆë‹¤.
go.error.annotator.can.only.use.triple.dot.as.final.argument=ëª©ë¡?ì—?ì„œ ë§ˆì§€ë§‰ ì?¸ìˆ˜ë¡œ ''...'' ë§Œ ì‚¬ìš© ê°€ëŠ¥í•©ë‹ˆë‹¤
go.error.annotator.cannot.use.triple.dot.for.output.arguments=ì¶œë ¥ ì?¸ìˆ˜ ëª©ë¡?ì—?ì„œ ''...''ëŠ” ì‚¬ìš© ë¶ˆê°€í•©ë‹ˆë‹¤.
go.error.annotator.method.name.in.interface.cannot.be.blank=ì?¸í„°íŽ˜ì?´ìŠ¤ì?˜ ë©”ì„œë“œ ì?´ë¦„ì?„ ê³µë°±ìœ¼ë¡œ ë‘˜ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.digit.separator.is.not.supported=ìž?ë¦¿ìˆ˜ ë¶„ë¦¬ìž?ëŠ” Go {0}ë¶€í„° ì§€ì›?ë?©ë‹ˆë‹¤.
go.error.annotator.binary.digits.are.not.supported=2ì§„ìˆ˜ëŠ” Go {0}ë¶€í„° ì§€ì›?ë?©ë‹ˆë‹¤.
go.error.annotator.octal.prefix.is.not.supported=8ì§„ìˆ˜ ì ‘ë‘?ì‚¬ëŠ” Go {0}ë¶€í„° ì§€ì›?ë?©ë‹ˆë‹¤.
go.error.annotator.hex.floats.are.not.supported=16ì§„ìˆ˜ ë¶€ë?™ì†Œìˆ˜ì ?ì?€ Go {0}ë¶€í„° ì§€ì›?ë?©ë‹ˆë‹¤.
go.error.annotator.closing.single.quote.expected=ë‹«ê¸° '' ê¸°ëŒ€
go.error.annotator.empty.rune.literal=ë¹ˆ rune ë¦¬í„°ëŸ´
go.error.annotator.too.many.characters.in.rune.literal=rune ë¦¬í„°ëŸ´ì—? ë¬¸ìž?ê°€ ë„ˆë¬´ ë§ŽìŠµë‹ˆë‹¤
go.error.annotator.invalid.select.assignment=ì„ íƒ? í• ë‹¹ì?€ ì˜¤ë¥¸ìª½ì—?ì„œ ìˆ˜ì‹ í•´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.invalid.select.case=ì„ íƒ? case ë¬¸ì?€ receive ë¬¸ì?´ê±°ë‚˜ receive ë¬¸ì?„ ì „ì†¡ ë˜?ëŠ” í• ë‹¹í•´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.cannot.reassign.a.constant=ìƒ?ìˆ˜ë¥¼ ë‹¤ì‹œ í• ë‹¹í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.no.new.variables=\:\= ì™¼ìª½ì—? ìƒˆ ë³€ìˆ˜ê°€ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.assignment.count.mismatch=í• ë‹¹ count ë¬¸ ë¶ˆì?¼ì¹˜\: {0} \={1}
go.error.annotator.cannot.assign.to.expression={0}ì—? í• ë‹¹í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.multiple.defaults={0}ì?˜ ì—¬ëŸ¬ ë””í?´íŠ¸ ê°’
go.error.annotator.new.line.in.string=ë¬¸ìž?ì—´ì?˜ ìƒˆ ì¤„
go.error.annotator.bad.octal.escape=8ì§„ ì?´ìŠ¤ì¼€ì?´í”„ ì„¸ ê°œì?˜ 8ì§„ìˆ˜ë¥¼ í?¬í•¨í•´ì•¼ í•˜ë©° ì²« ë²ˆì§¸ 8ì§„ìˆ˜ëŠ” 3 ì?´í•˜ì?˜ ê°’ì?´ì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.invalid.hex.escape.sequence.syntax=\\x ë‹¤ì?Œì—? 16ì§„ìˆ˜ 2ê°œê°€ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.invalid.unicode.escape.sequence.syntax=\\u ë‹¤ì?Œì—? 16ì§„ìˆ˜ 4ê°œê°€ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.invalid.long.unicode.escape.sequence.syntax=\\U ë‹¤ì?Œì—? 16ì§„ìˆ˜ 8ê°œê°€ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.invalid.escape.sequence=ìž˜ëª»ë?œ ì?´ìŠ¤ì¼€ì?´í”„ ì‹œí€€ìŠ¤
go.error.annotator.invalid.unicode.code.point=ìž˜ëª»ë?œ ìœ ë‹ˆì½”ë“œ ì½”ë“œí?¬ì?¸íŠ¸
go.error.annotator.invalid.embedded.type=ìž˜ëª»ë?œ ìœ í˜• {0}\: typeName ë˜?ëŠ” *typeNameì?´ì–´ì•¼ í•©ë‹ˆë‹¤.
go.error.annotator.embedded.type.cannot.be.a.pointer=ìž„ë² ë””ë“œ ìœ í˜•ì?€ í?¬ì?¸í„°ê°€ ë?  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.embedded.type.cannot.be.a.pointer.to.interface=ìž„ë² ë””ë“œ ìœ í˜•ì?€ ì?¸í„°íŽ˜ì?´ìŠ¤ì?˜ í?¬ì?¸í„°ê°€ ë?  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.cannot.call.pointer.method=''{0}'' ì—?ì„œ í?¬ì?¸í„° ë©”ì„œë“œë¥¼ í˜¸ì¶œí•  ìˆ˜ ì—†ì?Œ
go.error.annotator.type.parameters.are.not.supported=ì œë„¤ë¦­(ìœ í˜• ë§¤ê°œë³€ìˆ˜ì—? ëŒ€í•œ ì‹¤í—˜ì ? ì§€ì›?)ì?´ ë¹„í™œì„±í™”ë?˜ì—ˆìŠµë‹ˆë‹¤
go.go.mod.error.annotator.no.module.statement=íŒŒì?¼ì—? ëª¨ë“ˆ êµ¬ë¬¸ì?´ ì—†ìŠµë‹ˆë‹¤.
go.go.mod.error.annotator.multiple.module.statements=íŒŒì?¼ì?˜ ì—¬ëŸ¬ ëª¨ë“ˆ êµ¬ë¬¸
go.go.mod.error.annotator.multiple.version.statements=íŒŒì?¼ì?˜ ì—¬ëŸ¬ go ë²„ì „ êµ¬ë¬¸
go.go.mod.error.annotator.missing.dependency=ì¢…ì†?ì„± ëˆ„ë?½
go.go.mod.error.annotator.unresolved.dependency=í•´ê²°ë?˜ì§€ ì•ŠëŠ” ì¢…ì†?ì„±
go.go.mod.error.module.version.expected=ëª¨ë“ˆ ë²„ì „ì?´ í•„ìš”í•©ë‹ˆë‹¤
go.terms.duplicate=ì¤‘ë³µ
go.terms.duplicated.case=case ì¤‘ë³µ
go.terms.duplicated.default=default ì¤‘ë³µ
go.terms.version.statement=ë²„ì „ êµ¬ë¬¸
go.terms.module.statement=ëª¨ë“ˆ êµ¬ë¬¸
go.terms.empty.declaration=ë¹ˆ ì„ ì–¸
go.terms.shadowed.declaration=ê°€ë ¤ì§„ ì„ ì–¸
go.terms.comment=Comentario
go.terms.variable=ë³€ìˆ˜
go.terms.method=ë©”ì„œë“œ
go.terms.closure=í?´ë¡œì €
go.terms.import=ê°€ì ¸ì˜¤ê¸°
go.terms.parameter=ë§¤ê°œ ë³€ìˆ˜
go.terms.receiver=ë¦¬ì‹œë²„
go.terms.import.alias=import ë¬¸ ë³„ì¹­
go.terms.label=ë?¼ë²¨
go.terms.package=íŒ¨í‚¤ì§€
go.terms.package.statement=íŒ¨í‚¤ì§€ êµ¬ë¬¸
go.terms.package.capitalized=íŒ¨í‚¤ì§€
go.terms.map=ë§µ
go.terms.chan=chan
go.terms.string=ë¬¸ìž?ì—´
go.terms.array=ë°°ì—´
go.terms.declaration=ì„ ì–¸
go.terms.statement=êµ¬ë¬¸
go.terms.semicolon=ì„¸ë¯¸ì½œë¡ 
go.terms.comma=ì‰¼í‘œ
go.terms.go.statement=go êµ¬ë¬¸
go.terms.case=ì¼€ì?´ìŠ¤
go.terms.slice=ìŠ¬ë?¼ì?´ìŠ¤
go.terms.pointer=í?¬ì?¸í„°
go.terms.struct=struct
go.terms.anonymous.field=ì?µëª… í•„ë“œ
go.terms.type.alias=ìœ í˜• ë³„ì¹­
go.terms.global.variable=ì „ì—­ ë³€ìˆ˜
go.terms.constant=ìƒ?ìˆ˜
go.terms.global.constant=ì „ì—­ ìƒ?ìˆ˜
go.terms.field=í•„ë“œ
go.terms.type=ìœ í˜•
go.terms.type.pluralized=ìœ í˜•
go.terms.interface=ì?¸í„°íŽ˜ì?´ìŠ¤
go.terms.function=í•¨ìˆ˜
go.terms.method.specification=ë©”ì„œë“œ ì‚¬ì–‘
go.refactoring.implement.methods.command={0} êµ¬í˜„
go.refactoring.implement.methods.prompt=êµ¬í˜„í•  ì?¸í„°íŽ˜ì?´ìŠ¤ ì„ íƒ?\:
go.refactoring.implement.methods.checkbox=ë¹„-&&í”„ë¡œì ?íŠ¸(&N)
go.refactoring.implement.methods.dummy.background.updater.task.title=ìž‘ì—… ì¤‘...
go.refactoring.implement.methods.create.type.name=ìœ í˜• ìƒ?ì„±...
go.refactoring.declarations.separator=ì„ ì–¸
go.refactoring.exported.column.name=ë‚´ë³´ëƒ„
go.refactoring.extract.interface.caret.should.be.inside.type.error.message=ìº?ëŸ¿ì?´ ë¦¬íŒ©í„°ë§?í•  ìœ í˜• ë‚´ë¶€ì—? ìžˆì–´ì•¼ í•©ë‹ˆë‹¤.
go.refactoring.unexported.validation.message=ë?” ì?´ìƒ? {1}ì—?ì„œ ë¹„ë…¸ì¶œ {0}(ìœ¼)ë¡œ ì•¡ì„¸ìŠ¤í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.redeclare.validation.message={0}ì—?ì„œ ë?™ì?¼í•œ ì?´ë¦„ì?˜ {1}ì?„(ë¥¼) ë‹¤ì‹œ ì„ ì–¸í•©ë‹ˆë‹¤.
go.refactoring.less.than.one.declaration.validation.message=í•˜ë‚˜ ì?´ìƒ?ì?˜ ì„ ì–¸ì?„ ì„ íƒ?í•´ì•¼ í•©ë‹ˆë‹¤.
go.refactoring.empty.target.directory.path.validation.message=ëŒ€ìƒ? ë””ë ‰í„°ë¦¬ ê²½ë¡œëŠ” ê³µë°±ìœ¼ë¡œ ë‘˜ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.empty.target.file.name.validation.message=ëŒ€ìƒ? íŒŒì?¼ ì?´ë¦„ì?€ ê³µë°±ìœ¼ë¡œ ë‘˜ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.incorrect.file.name.validation.message=ëŒ€ìƒ? íŒŒì?¼ ì?´ë¦„ì?´ ì˜¬ë°”ë¥´ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.empty.target.package.validation.message=ëŒ€ìƒ? íŒ¨í‚¤ì§€ ì?´ë¦„ì?€ ê³µë°±ìœ¼ë¡œ ë‘˜ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.incorrect.package.name.validation.message=ëŒ€ìƒ? íŒ¨í‚¤ì§€ ì?´ë¦„ì?´ ì˜¬ë°”ë¥´ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.non.writable.directory.validation.message=ëŒ€ìƒ? ë””ë ‰í„°ë¦¬ëŠ” ì“°ê¸° ê°€ëŠ¥í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.non.writeable.file.validation.message=ëŒ€ìƒ? íŒŒì?¼ì?€ ì“°ê¸° ê°€ëŠ¥í•œ íŒŒì?¼ì?´ ì•„ë‹™ë‹ˆë‹¤.
go.refactoring.different.package.name.validation.message=íŒ¨í‚¤ì§€ ì?´ë¦„ì?€ ê¸°ì¡´ íŒŒì?¼ê³¼ ë‹¤ë¥¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.non.go.file.validation.message=ëŒ€ìƒ? íŒŒì?¼ì?€ Go íŒŒì?¼ì?´ì–´ì•¼ í•©ë‹ˆë‹¤.
go.refactoring.file.chooser.dialog.title=ëŒ€ìƒ? ë””ë ‰í„°ë¦¬ ë˜?ëŠ” íŒŒì?¼ ì„ íƒ?
go.refactoring.file.label=íŒŒì?¼ë¡œ\:
go.refactoring.failed.to.create.directory.error.message=''{0}'' ë””ë ‰í„°ë¦¬ë¥¼ ì°¾ê±°ë‚˜ ìƒ?ì„±í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.failed.to.create.file.for.package.error.message=\ ''{1}'' íŒ¨í‚¤ì§€ìš© ''{0}'' íŒŒì?¼ì?„ ì°¾ê±°ë‚˜ ìƒ?ì„±í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.refactor.action=ë¦¬íŒ©í„°ë§?
go.refactoring.rename.action=ì?´ë¦„ ë°”ê¾¸ê¸°
go.refactoring.inline.defined.in.goroot.error.message=GOROOTì—? ì •ì?˜ë?œ ë³€ìˆ˜ {0}
go.refactoring.inline.no.initializer.error.message={0} {1}ì—? ì?´ë‹ˆì…œë?¼ì?´ì €ê°€ ì—†ìŠµë‹ˆë‹¤
go.refactoring.inline.no.parameter.value.error.message=ë§¤ê°œë³€ìˆ˜ {0}ì?˜ ê°’ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.refactoring.inline.defined.in.multi.value.context.error.message=ë‹¤ì¤‘ ê°’ ì»¨í…?ìŠ¤íŠ¸ë¡œ ì •ì?˜ë?œ {0} {1}
go.refactoring.inline.reassigned.error.message={0}ì?´(ê°€) ë‹¤ì‹œ ëŒ€ìž…ë?˜ì—ˆìŠµë‹ˆë‹¤
go.refactoring.inline.found.usages.in.goroot.message=GOROOTì—?ì„œ ''{1}''ì?˜ {0, choice,1\#1ê°œ ì‚¬ìš© ìœ„ì¹˜|2\#{0}ê°œ ì‚¬ìš© ìœ„ì¹˜} ë°œê²¬.
go.refactoring.inline.kept.definition.and.inlined.message=ì •ì?˜ë¥¼ ìœ ì§€í–ˆìŠµë‹ˆë‹¤{0, choice, 0\#|1\# ê·¸ë¦¬ê³  í”„ë¡œì ?íŠ¸ì™€ GOPATHì—?ì„œ 1ê°œì?˜ ì‚¬ìš©ìœ„ì¹˜ë¥¼ ì?¸ë?¼ì?¸í–ˆìŠµë‹ˆë‹¤|2\# ê·¸ë¦¬ê³  í”„ë¡œì ?íŠ¸ì™€ GOPATHì—?ì„œ {0}ê°œì?˜ ì‚¬ìš© ìœ„ì¹˜ë¥¼ ì?¸ë?¼ì?¸í–ˆìŠµë‹ˆë‹¤.}
go.refactoring.inline.cannot.inline.variadic.parameter=varargs ë§¤ê°œë³€ìˆ˜ì?˜ ì?¸ë?¼ì?¸í™”ëŠ” ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.refactoring.change.signature.reuse.types.checkbox=ìž¬ì‚¬ìš© ìœ í˜•
go.refactoring.change.signature.result.parameters.tab.title=ê²°ê³¼ ë§¤ê°œë³€ìˆ˜
go.refactoring.change.signature.not.legal.identifier.validation.message=''{0}''ì?€(ëŠ”) ì •ê·œ ì‹?ë³„ìž?ê°€ ì•„ë‹™ë‹ˆë‹¤.
go.refactoring.change.signature.named.and.unnamed.parameters.validation.message=ì?´ë¦„ì?´ ì§€ì •ë?œ ë§¤ê°œë³€ìˆ˜ì™€ ì?´ë¦„ ì—†ëŠ” ë§¤ê°œë³€ìˆ˜ëŠ” ë?™ì‹œì—? í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.change.signature.parameter.without.type.validation.message={0,number,ordinal} ë§¤ê°œë³€ìˆ˜ì—?ëŠ” ìœ í˜•ì?´ í?¬í•¨ë?˜ì–´ì•¼ í•©ë‹ˆë‹¤.
go.refactoring.change.signature.used.multiple.times.validation.message=''{0}''ì?´(ê°€) ì—¬ëŸ¬ ë²ˆ ì‚¬ìš©ë?©ë‹ˆë‹¤.
go.refactoring.change.signature.variadic.parameter.in.result.validation.message=ê°€ë³€ ë§¤ê°œë³€ìˆ˜ëŠ” ê²°ê³¼ì—? í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.change.signature.variadic.is.not.last.validation.message=ê°€ë³€ ë§¤ê°œë³€ìˆ˜ëŠ” í•­ìƒ? ë§ˆì§€ë§‰ì?´ì–´ì•¼ í•©ë‹ˆë‹¤.
go.refactoring.change.signature.method.specification.and.implementations.option=ë©”ì„œë“œ ì‚¬ì–‘ ë°? ëª¨ë“  êµ¬í˜„ {0}
go.refactoring.change.signature.current.method.option=í˜„ìž¬ ë©”ì„œë“œë§Œ {0}
go.refactoring.change.signature.target.not.found.error.message=ìº?ëŸ¿ì?´ ë¦¬íŒ©í„°ë§?í•  í•¨ìˆ˜ ë˜?ëŠ” ë©”ì„œë“œ ì?´ë¦„ì?˜ ìœ„ì¹˜ì—? ìžˆì–´ì•¼ í•©ë‹ˆë‹¤.
go.refactoring.change.signature.function.will.not.start.application.validation.message=ì?´ì œ {0} í•¨ìˆ˜ëŠ” ì• í”Œë¦¬ì¼€ì?´ì…˜ì?„ ì‹œìž‘í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.change.signature.function.will.not.perform.initialization.validation.message=ì?´ì œ {0} í•¨ìˆ˜ëŠ” ì´ˆê¸°í™”ë¥¼ ìˆ˜í–‰í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.change.signature.renamed.parameter.validation.message.part=ì?´ë¦„ì?´ ë³€ê²½ë?œ ë§¤ê°œë³€ìˆ˜
go.refactoring.change.signature.new.parameter.validation.message.part=ìƒˆ ë§¤ê°œë³€ìˆ˜
go.refactoring.extract.interface.rename.type.and.use.interface.radio.button=ì›?ë³¸ ìœ í˜• ì?´ë¦„ ë³€ê²½ ë°? ê°€ëŠ¥í•œ ê²½ìš° ì?¸í„°íŽ˜ì?´ìŠ¤ ì‚¬ìš©(&E)
go.refactoring.extract.interface.rename.type.spec.label=ìœ í˜• ì‚¬ì–‘ì?˜ ì?´ë¦„ì?„ ë‹¤ì?Œìœ¼ë¡œ ë³€ê²½\:
go.refactoring.extract.interface.unexported.method.specification.validation.message={0} {1} ì?€(ëŠ”) ë¹„ë…¸ì¶œ ë©”ì„œë“œ ì‚¬ì–‘ì?„ êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.extract.interface.unexported.not.be.accessible.validation.message={1}ì—?ì„œ ë¹„ë…¸ì¶œ {0}(ìœ¼)ë¡œ ì•¡ì„¸ìŠ¤í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.extract.interface.empty.type.name.validation.message=ìœ í˜• ì?´ë¦„ì?€ ê³µë°±ìœ¼ë¡œ ë‘˜ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.refactoring.extract.interface.incorrect.type.name.validation.message=ìœ í˜• ì?´ë¦„ì?´ ì˜¬ë°”ë¥´ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.introduce.extract.title=ì¶”ì¶œ
go.refactoring.introduce.extract.function.title=í•¨ìˆ˜ ì¶”ì¶œ
go.refactoring.introduce.extract.function.command=í•¨ìˆ˜ ì¶”ì¶œ
go.refactoring.introduce.extract.method.command=ë©”ì„œë“œ ì¶”ì¶œ
go.refactoring.introduce.extract.variable.command=ë³€ìˆ˜ ì¶”ì¶œ
go.refactoring.introduce.extract.method.or.function.title=ë©”ì„œë“œ ë˜?ëŠ” í•¨ìˆ˜ ì¶”ì¶œ
go.refactoring.introduce.range.contains.defer.message=ì„ íƒ?í•œ ë²”ìœ„ì—?ëŠ” ì¶”ì¶œ ì¤‘ ìˆœì„œê°€ ë‹¤ì‹œ ì •ë ¬ë?  ìˆ˜ ìžˆëŠ” ''defer'' ë¬¸ì?´ í?¬í•¨ë?˜ì–´ ìžˆìŠµë‹ˆë‹¤.
go.refactoring.introduce.receiver.without.name.error.message=ë¦¬ì‹œë²„ì—?ëŠ” ì?´ë¦„ì?´ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤.
go.refactoring.introduce.continue.statement.interrupts.execution.flow.error.message=continue êµ¬ë¬¸ì?´ ì‹¤í–‰ í??ë¦„ì?„ ë°©í•´í•  ë•Œ  ë¦¬íŒ©í„°ë§?ì?´ ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.introduce.label.reference.interrupts.execution.flow.error.message=ë?¼ë²¨ ì°¸ì¡°ê°€ ì‹¤í–‰ í??ë¦„ì?„ ë°©í•´í•  ë•Œ  ë¦¬íŒ©í„°ë§?ì?´ ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.introduce.label.definition.selected.with.all.references.error.message=ë?¼ë²¨ ì •ì?˜ê°€ ëª¨ë“  ì°¸ì¡°ì™€ í•¨ê»˜ ì„ íƒ?ë?œ ê²½ìš°ì—?ë§Œ ë¦¬íŒ©í„°ë§?ì?´ ì§€ì›?ë?©ë‹ˆë‹¤.
go.refactoring.introduce.does.not.return.value.error.message={0} í‘œí˜„ì‹?ì?€ ê°’ì?„ ë°˜í™˜í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.introduce.not.constant.value.error.message=í‘œí˜„ì‹? {0} ì?´(ê°€) ìƒ?ìˆ˜ ê°’ì?´ ì•„ë‹™ë‹ˆë‹¤.
go.refactoring.introduce.method.with.receiver.renderer={0} receiverê°€ ìžˆëŠ” ë©”ì„œë“œ
go.refactoring.introduce.type.dialog.title=íƒ€ìž… ì‚½ìž…
go.refactoring.introduce.type.command=íƒ€ìž… ì‚½ìž…
go.refactoring.introduce.type.chooser.title=íƒ€ìž… ì„ íƒ?
go.refactoring.move.affect.initialization.order.validation.message={0} í•¨ìˆ˜ ì?´ë?™ì?´ ì• í”Œë¦¬ì¼€ì?´ì…˜ ì´ˆê¸°í™” ìˆœì„œì—? ì˜?í–¥ì?„ ì¤„ ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.refactoring.move.break.initialization.validation.message={0} ë³€ìˆ˜ ì?´ë?™ì?€ {1} ë³€ìˆ˜ ì´ˆê¸°í™”ë¥¼ ì¤‘ë‹¨í•©ë‹ˆë‹¤.
go.refactoring.move.value.will.change.validation.message={1}ì?„(ë¥¼) í†µí•´ ì„ ì–¸ë?  ë•Œ {0} ìƒ?ìˆ˜ ê°’ì?´ ë³€ê²½ë?©ë‹ˆë‹¤.
go.refactoring.move.function.will.not.start.application.validation.message=ì?´ì œ {1} íŒ¨í‚¤ì§€ ì™¸ë¶€ì?˜ {0} í•¨ìˆ˜ëŠ” ì• í”Œë¦¬ì¼€ì?´ì…˜ì?„ ì‹œìž‘í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.move.type.will.not.implement.interface.validation.message=ì?´ì œ {0} ìœ í˜•ì?€ {1} ì?¸í„°íŽ˜ì?´ìŠ¤ë¥¼ êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.move.exported.function.will.not.start.application.validation.message=ì?´ì œ ë¹„ë…¸ì¶œ í•¨ìˆ˜ {0} ì?€(ëŠ”) ì• í”Œë¦¬ì¼€ì?´ì…˜ì?„ ì‹œìž‘í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.move.exported.function.will.not.perform.initialization.validation.message=ì?´ì œ ë…¸ì¶œ í•¨ìˆ˜ {0} ì?€(ëŠ”) ì´ˆê¸°í™”ë¥¼ ìˆ˜í–‰í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.refactoring.move.type.will.become.non.local.for.method.validation.message={0} ìœ í˜•ì?´ {1} ë©”ì„œë“œì—? ëŒ€í•œ ë¹„ ë¡œì»¬ ìœ í˜•ì?´ ë?©ë‹ˆë‹¤.
go.refactoring.move.required.by.validation.message={0}ì—? í•„ìš”
go.refactoring.move.file.should.differ.validation.message=ëŒ€ìƒ? íŒŒì?¼ì?€ ì†ŒìŠ¤ íŒŒì?¼ê³¼ ë‹¤ë¥¼ ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.refactoring.rename.looking.for.anonymous.field.usages.progress.title=ì?µëª… í•„ë“œì?˜ ì‚¬ìš© ìœ„ì¹˜ ê²€ìƒ‰ ì¤‘
go.refactoring.rename.looking.for.method.usages.progress.title=ë©”ì„œë“œ ì‚¬ìš© ìœ„ì¹˜ ê²€ìƒ‰ ì¤‘
go.refactoring.rename.package.title=íŒ¨í‚¤ì§€ ì?´ë¦„ë?„ ''{0}''ì—?ì„œ ''{1}''(ìœ¼)ë¡œ ë³€ê²½í•˜ì‹œê² ì–´ìš”?
go.refactoring.rename.test.file.title=í…ŒìŠ¤íŠ¸ íŒŒì?¼ ''{0}'' ì?˜ ì?´ë¦„ë?„ ë³€ê²½í•˜ì‹œê² ì–´ìš”?
go.refactoring.rename.production.file.title=í”„ë¡œë?•ì…˜ íŒŒì?¼ ''{0}'' ì?˜ ì?´ë¦„ë?„ ë³€ê²½í•˜ì‹œê² ì–´ìš”?
go.refactoring.rename.directory.message=íŒ¨í‚¤ì§€ ë””ë ‰í„°ë¦¬ ''{0}'' ì?´ë¦„ë?„ ë³€ê²½í•˜ì‹œê² ì–´ìš”?
go.refactoring.rename.current.receiver.option=í˜„ìž¬ ë¦¬ì‹œë²„ ì?´ë¦„ë§Œ ë³€ê²½
go.refactoring.rename.all.receivers.option=ëª¨ë“  ë¦¬ì‹œë²„ ì?´ë¦„ ë³€ê²½
go.find.usages.of.interface.methods.dialog.base.methods.checkbox=ê¸°ë³¸ ë©”ì„œë“œ(&B)
go.find.usages.of.interface.methods.dialog.title=ì?¸í„°íŽ˜ì?´ìŠ¤ ë©”ì„œë“œì?˜ ì‚¬ìš© ìœ„ì¹˜ë¥¼ ê²€ìƒ‰í•˜ì‹œê² ì–´ìš”?
go.find.usages.of.interface.methods.dialog.message=''{0}'' ìœ í˜•ì?€ ì?¸í„°íŽ˜ì?´ìŠ¤ë¥¼ êµ¬í˜„í•˜ë©° ''{1}'' ë©”ì„œë“œëŠ” ë©”ì„œë“œë¥¼ ìž¬ì •ì?˜í•©ë‹ˆë‹¤. ì?¸í„°íŽ˜ì?´ìŠ¤ ë©”ì„œë“œì?˜ ì‚¬ìš© ìœ„ì¹˜ë¥¼ ê²€ìƒ‰í•˜ì‹œê² ì–´ìš”?
go.find.usages.of.interface.methods.notification.title=ì?¸í„°íŽ˜ì?´ìŠ¤ ë©”ì„œë“œì?˜ ì‚¬ìš© ìœ„ì¹˜ë¥¼ ê²€ìƒ‰ ì¤‘
go.find.usages.of.interface.methods.notification.show.options.text={0} ì˜µì…˜ í‘œì‹œ
go.find.usages.show.usages.in.comments.text=ì£¼ì„? ë‚´ ì‚¬ìš© ìœ„ì¹˜ í‘œì‹œ
go.find.usages.show.usages.in.comments.description=ì£¼ì„? ë‚´ ìš”ì†Œì?˜ ì‚¬ìš© ìœ„ì¹˜ í‘œì‹œ
go.code.smells.commit.local.paths=ë¡œì»¬ ê²½ë¡œ ì»¤ë°‹ì?€ ì?´ì‹?ì?´ ë¶ˆê°€ëŠ¥í•  ìˆ˜ë?„ ìžˆìŠµë‹ˆë‹¤.
go.init.with.zero.value=ì œë¡œ ê°’ìœ¼ë¡œ ì´ˆê¸°í™”
go.usage.type.return.type=ë°˜í™˜ ìœ í˜•
go.usage.type.parameter.declaration=ë§¤ê°œë³€ìˆ˜ ì„ ì–¸
go.usage.type.struct.initialization=êµ¬ì¡°ì²´ ì´ˆê¸°í™”
go.usage.type.import=ê°€ì ¸ì˜¤ê¸°
go.usage.type.variable.declaration=ë³€ìˆ˜ ì„ ì–¸
go.usage.type.field.declaration=í•„ë“œ ì„ ì–¸
go.usage.type.const.declaration=ìƒ?ìˆ˜ ì„ ì–¸
go.usage.type.receiver=ë¦¬ì‹œë²„
go.usage.type.type.assertion=ìœ í˜• ì–´ì„¤ì…˜
go.usage.type.type.alias=ìœ í˜• ë³„ì¹­
go.usage.type.type.conversion=ìœ í˜• ë³€í™˜
go.inspection.problem.unmarshal.argument.must.be.a.pointer=ì?´ ì?¸ìˆ˜ì—? í?¬ì?¸í„° ìœ í˜•ì?´ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤
go.enable.template.plugin.notification.text=html/templates íŒ¨í‚¤ì§€ì—?ì„œ ê°•ì¡° í‘œì‹œ, ì½”ë“œ ì™„ì„± ê¸°ëŠ¥, íƒ?ìƒ‰ ê¸°ëŠ¥ì?„ í–¥ìƒ?ì‹œí‚¤ë ¤ë©´ Go í…œí”Œë¦¿ì?„ í™œì„±í™”í•˜ì„¸ìš”
go.enable.template.plugin.action.text=í”ŒëŸ¬ê·¸ì?¸ í™œì„±í™”
go.install.template.plugin.notification.text=html/templates íŒ¨í‚¤ì§€ì—?ì„œ ê°•ì¡° í‘œì‹œ, ì½”ë“œ ì™„ì„± ê¸°ëŠ¥, íƒ?ìƒ‰ ê¸°ëŠ¥ì?„ í–¥ìƒ?ì‹œí‚¤ë ¤ë©´ Go í…œí”Œë¦¿ì?„ ì„¤ì¹˜í•˜ì„¸ìš”
go.install.template.plugin.action.text=í”ŒëŸ¬ê·¸ì?¸ ì„¤ì¹˜
go.ignore.template.plugin.action.text=ì?´ í”„ë¡œì ?íŠ¸ì—?ì„œ í”ŒëŸ¬ê·¸ì?¸ ë¬´ì‹œ
go.inspection.problem.range.var.copies.lock=ë²”ìœ„ ë³€ìˆ˜ {0} ì?´(ê°€) ìž ê¸ˆì?„ ë³µì‚¬í•©ë‹ˆë‹¤\: {1}
go.inspection.problem.function.passes.lock.by.value={0} ì?´(ê°€) ê°’ìœ¼ë¡œ ìž ê¸ˆì?„ ì „ë‹¬í•©ë‹ˆë‹¤\: {1}
go.inspection.problem.return.copies.lock.value=ë°˜í™˜ì?´ lock ê°’ì?„ ë³µì‚¬í•©ë‹ˆë‹¤\: {0}
go.inspection.problem.call.copies.lock.value={0} í˜¸ì¶œì?´ lock ê°’ì?„ ë³µì‚¬í•©ë‹ˆë‹¤\: {1}
go.inspection.problem.literal.copies.lock.value=ë¦¬í„°ëŸ´ì?´ lock ê°’ì?„ {0} ì—? ë³µì‚¬í•©ë‹ˆë‹¤\: {1}
go.inspection.problem.assignment.copies.lock.value=ëŒ€ìž…ì?´ lock ê°’ì?„ {0} ì—? ë³µì‚¬í•©ë‹ˆë‹¤\: {1}
go.inspection.problem.variable.declaration.copies.lock.value=ë³€ìˆ˜ ì„ ì–¸ì?´ lock ê°’ì?„ {0} ì—? ë³µì‚¬í•©ë‹ˆë‹¤\: {1}
go.inspection.problem.invalid.second.argument.to.errors.as={0} ì?˜ ë‘? ë²ˆì§¸ ì?¸ìˆ˜ê°€ ì?¸í„°íŽ˜ì?´ìŠ¤ ë˜?ëŠ” ì˜¤ë¥˜ë¥¼ êµ¬í˜„í•˜ëŠ” ìœ í˜•ì?„ ê°€ë¥´í‚¤ëŠ” í?¬ì?¸í„°ì—¬ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.expression.is.too.small.for.shift={0}({1} ë¹„íŠ¸) ì?´(ê°€) {2} ì‹œí”„íŠ¸ë¡œ ë„ˆë¬´ ìž‘ì?Œ
go.inspection.problem.method.has.non.standard.signature=ë©”ì„œë“œ {0} ì—? ì‹œê·¸ë‹ˆì²˜ {1} ì?´(ê°€) ìžˆì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.direct.assignment.to.atomic.value=atomic ê°’ì—? ì§?ì ‘ ëŒ€ìž…
go.inspection.problem.cannot.take.address.of.non.addressable.operand=ì£¼ì†Œë¥¼ ê°–ì§€ ì•ŠëŠ” í”¼ì—°ì‚°ìž?ì?˜ ì£¼ì†Œë¥¼ ì·¨í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.assignment.to.method.receiver.propagates.only.to.callees=ë©”ì„œë“œ ë¦¬ì‹œë²„ ëŒ€ìž…ì?€ í˜¸ì¶œìž?ê°€ ì•„ë‹Œ í”¼í˜¸ì¶œìž?ì—?ë§Œ ì „ë‹¬ë?©ë‹ˆë‹¤
go.inspection.problem.assignment.to.method.receiver.doesnt.propagate=ë©”ì„œë“œ ë¦¬ì‹œë²„ ëŒ€ìž…ì?€ ë‹¤ë¥¸ í˜¸ì¶œë¡œ ì „ë‹¬ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.expression.can.be.simplified.to.other={0} ì?„(ë¥¼) {1} (ìœ¼)ë¡œ ë‹¨ìˆœí™”í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.condition.is.always.true.or.false=ì¡°ê±´ {0} ì?´(ê°€) í•­ìƒ? {1} ìž…ë‹ˆë‹¤
go.inspection.problem.conversion.from.int.to.string={0} ì?„(ë¥¼) {1} (ìœ¼)ë¡œ ë³€í™˜í•˜ë©´ ì •ìˆ˜ ê°’ì?„ ì½”ë“œ í?¬ì?¸íŠ¸ë¡œ í•´ì„?í•©ë‹ˆë‹¤
go.inspection.problem.expression.is.always.true.or.false=í‘œí˜„ì‹? {0} ì?´(ê°€) í•­ìƒ? {1} ìž…ë‹ˆë‹¤
go.inspection.problem.expression.can.be.simplified=í‘œí˜„ì‹?ì?„ ë‹¨ìˆœí™”í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.inspection.problem.possible.malformed.build.comment=+build ì£¼ì„?ì?˜ í˜•ì‹?ì?´ ìž˜ëª»ë?˜ì—ˆì?„ ê°€ëŠ¥ì„±ì?´ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.wrong.location.of.build.comment=ë¹Œë“œ ì£¼ì„?ì?€ íŒ¨í‚¤ì§€ ì ˆ ì „ì—? ìœ„ì¹˜í•´ì•¼ í•˜ë©° ë‹¤ì?Œì—? ë¹ˆ ì¤„ì?´ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.usage.of.cgo.in.tests=í…ŒìŠ¤íŠ¸ì—?ì„œ cgo ì‚¬ìš©ì?´ ì§€ì›?ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.inspection.problem.comment.should.start.with.whitespace=ì£¼ì„?ì?€ ê³µë°±ìœ¼ë¡œ ì‹œìž‘í•´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.defer.is.called.in.a.for.loop=ë¦¬ì†ŒìŠ¤ ëˆ„ìˆ˜ê°€ ìžˆì?„ ê°€ëŠ¥ì„±ì?´ ìžˆìŠµë‹ˆë‹¤, {0} ì?´(ê°€) {1} ë£¨í”„ì—?ì„œ í˜¸ì¶œë?˜ì—ˆìŠµë‹ˆë‹¤
go.inspection.problem.deprecated.is.still.used=ë?” ì?´ìƒ? ì‚¬ìš©ë?˜ì§€ ì•ŠëŠ” {0} ì?´(ê°€) ì•„ì§?ë?„ ì‚¬ìš©ë?˜ì—ˆìŠµë‹ˆë‹¤
go.inspection.problem.reference.is.deprecated={0} ì?€(ëŠ”) ë?” ì?´ìƒ? ì‚¬ìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.division.by.zero=0ìœ¼ë¡œ ë‚˜ëˆ„ê¸°
go.inspection.problem.duplicate.case=case {0} ì¤‘ë³µ
go.inspection.problem.variable.repeated.on.left.side={0} ì?´(ê°€)\:\= ì™¼ìª½ì—? ë°˜ë³µë?©ë‹ˆë‹¤
go.inspection.problem.name.redeclared.as.imported.package={0} ì?´(ê°€) ê°€ì ¸ì˜¨ íŒ¨í‚¤ì§€ ì?´ë¦„ìœ¼ë¡œ ë‹¤ì‹œ ì„ ì–¸ë?¨
go.inspection.problem.name.collides.with.name.declared.in.this.package={0} ì?´(ê°€) ì?´ íŒ¨í‚¤ì§€ì—? ì„ ì–¸ë?œ ì?´ë¦„ê³¼ ì¶©ë?Œí•©ë‹ˆë‹¤
go.inspection.problem.label.already.defined=ë?¼ë²¨ {0} ì?´(ê°€) ì?´ë¯¸ ì •ì?˜ë?˜ì–´ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.duplicate.argument=ì?¸ìˆ˜ {0} ì¤‘ë³µ
go.inspection.problem.name.redeclared.in.this.function={0} ì?´(ê°€) ì?´ í•¨ìˆ˜ì—?ì„œ ë‹¤ì‹œ ì„ ì–¸ë?˜ì—ˆìŠµë‹ˆë‹¤
go.inspection.problem.duplicate.field=í•„ë“œ {0} ì¤‘ë³µ
go.inspection.problem.type.has.same.named.field.and.method=ìœ í˜• {0} ì—? ì?´ë¦„ì?´ {1} ì?¸ í•„ë“œ ë°? ë©”ì„œë“œ ë‘˜ ë‹¤ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.method.redeclared=ë©”ì„œë“œê°€ {0} ì?„(ë¥¼) ë‹¤ì‹œ ì„ ì–¸í•©ë‹ˆë‹¤
go.inspection.problem.type.has.both.field.and.method.with.name=ìœ í˜• {0} ì—? ì?´ë¦„ì?´ {1} ì?¸ í•„ë“œ ë°? ë©”ì„œë“œ ë‘˜ ë‹¤ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.duplicate.method=ë©”ì„œë“œ {0} ì¤‘ë³µ
go.inspection.problem.name.redeclared.in.this.package={0} ì?´(ê°€) ì?´ íŒ¨í‚¤ì§€ì—?ì„œ ë‹¤ì‹œ ì„ ì–¸ë?¨
go.inspection.problem.name.redeclared.in.this.block={0} ì?´(ê°€) ì?´ ë¸”ë¡?ì—?ì„œ ë‹¤ì‹œ ì„ ì–¸ë?¨
go.inspection.problem.bad.error.string=ì˜¤ë¥˜ ë¬¸ìž?ì—´ì?€ ëŒ€ë¬¸ìž?ë¡œ ì²˜ë¦¬ë?˜ê±°ë‚˜ ë¬¸ìž¥ ë¶€í˜¸ë¡œ ë??ë‚  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.inspection.problem.exported.element.should.have.comment=ë…¸ì¶œ {0} {1} ì—? ì£¼ì„?ì?´ ìžˆì–´ì•¼ í•˜ê±°ë‚˜ ë¹„ë…¸ì¶œì?´ì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.exported.function.with.unexported.return.type=ë¹„ë…¸ì¶œ ë°˜í™˜ ìœ í˜•ì?´ ìžˆëŠ” ë…¸ì¶œ {0}
go.inspection.problem.exported.var.should.have.its.own.declaration=ë…¸ì¶œ ë³€ìˆ˜ {0} ì—? ìž?ì²´ ì„ ì–¸ì?´ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.exported.const.should.have.its.own.declaration=ë…¸ì¶œ ìƒ?ìˆ˜ {0} ì—? ìž?ì²´ ì„ ì–¸ì?´ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.missing.argument.to.conversion={0} (ìœ¼)ë¡œì?˜ ë³€í™˜ ì?¸ìˆ˜ ëˆ„ë?½\: {1}
go.inspection.problem.too.many.arguments.to.conversion={0} (ìœ¼)ë¡œì?˜ ë³€í™˜ì—? ì?¸ìˆ˜ê°€ ë„ˆë¬´ ë§Žì?Œ\: {1}
go.inspection.problem.too.many.arguments.in.call={0} í˜¸ì¶œì—? ì?¸ìˆ˜ê°€ ë„ˆë¬´ ë§Žì?Œ
go.inspection.problem.not.enough.arguments.in.call={0} í˜¸ì¶œì—? ì?¸ìˆ˜ê°€ ë¶€ì¡±í•¨
go.inspection.problem.name.collides.with.imported.package={0} {1} ì?´(ê°€) ê°€ì ¸ì˜¨ íŒ¨í‚¤ì§€ ì?´ë¦„ê³¼ ì¶©ë?Œí•©ë‹ˆë‹¤
go.inspection.problem.impossible.type.assertion=ë¶ˆê°€ëŠ¥í•œ ìœ í˜• ì–´ì„¤ì…˜\: {0} ì?´(ê°€) {1} ì?„(ë¥¼) êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.impossible.interface.assertion={0} ì—?ì„œ {1} (ìœ¼)ë¡œì?˜ ì?¸í„°íŽ˜ì?´ìŠ¤ ì–´ì„¤ì…˜ì?€ ë¶ˆê°€ëŠ¥í•©ë‹ˆë‹¤. ëª¨í˜¸í•¨\: {2}
go.inspection.problem.impossible.type.switch.case=ë¶ˆê°€ëŠ¥í•œ ìœ í˜• switch case\: {0} ì?´(ê°€) {1} ì?„(ë¥¼) êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.infinite.for.loop=ë¬´í•œ {0} ë£¨í”„
go.inspection.problem.cannot.convert.expression=ìœ í˜• {0} í‘œí˜„ì‹?ì?„ ìœ í˜• {1} (ìœ¼)ë¡œ ë³€ê²½í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.cannot.convert.nil=''nil''ì?„ íƒ€ìž… {0}(ìœ¼)ë¡œ ë³€í™˜í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.inspection.problem.invalid.conversion=ìœ íš¨í•˜ì§€ ì•Šì?€ ë³€í™˜
go.inspection.problem.cannot.slice={0}(ìœ í˜• {1}) ì?„(ë¥¼) ìŠ¬ë?¼ì?´ìŠ¤í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.type.does.not.support.indexing=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ìœ í˜• {1} ì?´(ê°€) ìƒ‰ì?¸í™”ë¥¼ ì§€ì›?í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤)
go.inspection.problem.invalid.low.high.indices=ìœ íš¨í•˜ì§€ ì•Šì?€ ìƒ‰ì?¸ ê°’, low <\= highì—¬ì•¼ í•¨
go.inspection.problem.invalid.low.high.max.indices=ìœ íš¨í•˜ì§€ ì•Šì?€ ìƒ‰ì?¸ ê°’, ow <\= high <\= maxì—¬ì•¼ í•¨
go.inspection.problem.invalid.slice.index=ìœ íš¨í•˜ì§€ ìŠ¬ë?¼ì?´ìŠ¤ ìƒ‰ì?¸ {0}({1})
go.inspection.problem.invalid.iterable.index=ìž˜ëª»ë?œ {0} ìƒ‰ì?¸ {1}({2})
go.inspection.problem.must.be.representable.by.int=ê°’ì?„ 'int' íƒ€ìž…ìœ¼ë¡œ í‘œì‹œí•  ìˆ˜ ìžˆì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.must.be.of.integer.type=ì •ìˆ˜ íƒ€ìž…ì?´ì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.must.be.non.negative=ì?Œìˆ˜ê°€ ì•„ë‹ˆì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.out.of.bounds.for.string={0}ë°”ì?´íŠ¸ ë¬¸ìž?ì—´ ë²”ìœ„ë¥¼ ë²—ì–´ë‚©ë‹ˆë‹¤
go.inspection.problem.out.of.bounds.for.array={0}ìš”ì†Œ ë°°ì—´ ë²”ìœ„ë¥¼ ë²—ì–´ë‚©ë‹ˆë‹¤
go.inspection.problem.invalid.receiver.type=ìœ íš¨í•˜ì§€ ì•Šì?€ ë¦¬ì‹œë²„ ìœ í˜• {0} ({1} ì?€(ëŠ”) {2} ìž…ë‹ˆë‹¤)
go.inspection.problem.invalid.receiver.unnamed.type=ì?´ë¦„ ì—†ëŠ” ìœ í˜•
go.inspection.problem.invalid.receiver.interface.type=ì?¸í„°íŽ˜ì?´ìŠ¤ ìœ í˜•
go.inspection.problem.invalid.receiver.pointer.type=í?¬ì?¸í„° ìœ í˜•
go.inspection.problem.cannot.define.new.methods.on.non.local.type=ë¹„ ë¡œì»¬ ìœ í˜• {0} ì—?ì„œ ìƒˆ ë©”ì„œë“œë¥¼ ì •ì?˜í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.use.of.internal.package.is.not.allowed=ë‚´ë¶€ íŒ¨í‚¤ì§€ ì‚¬ìš©ì?€ í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.use.of.vendored.package.is.not.allowed=ë²¤ë?” íŒ¨í‚¤ì§€ ì‚¬ìš©ì?´ í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.must.be.imported.as={0} (ìœ¼)ë¡œ ê°€ì ¸ì™€ì•¼ í•¨
go.inspection.problem.at.is.not.allowed.in.import.paths=@ì?€ ê°€ì ¸ì˜¤ê¸° ê²½ë¡œì—?ì„œ í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.cannot.import.absolute.path=ì ˆëŒ€ ê²½ë¡œë¥¼ ê°€ì ¸ì˜¬ ìˆ˜ ì—†ì?Œ
go.inspection.problem.cannot.import.builtin.package=''builtin'' íŒ¨í‚¤ì§€ë¥¼ ê°€ì ¸ì˜¬ ìˆ˜ ì—†ì?Œ
go.inspection.problem.non.canonical.import.path=ë¹„í‘œì¤€ ê°€ì ¸ì˜¤ê¸° ê²½ë¡œ\: {0} ì?€(ëŠ”) {1} ì?´ì–´ì•¼/ì—¬ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.build.constraints.exclude.all.go.files=ë¹Œë“œ ì œì•½ì?´ {0} ë‚´ ëª¨ë“  Go íŒŒì?¼ì?„ ì œì™¸í•©ë‹ˆë‹¤
go.inspection.problem.path.is.a.program.not.an.importable.package={0} ì?€(ëŠ”) í”„ë¡œê·¸ëž¨ìœ¼ë¡œ ê°€ì ¸ì˜¬ ìˆ˜ ìžˆëŠ” íŒ¨í‚¤ì§€ê°€ ì•„ë‹™ë‹ˆë‹¤
go.inspection.problem.found.several.packages={1} ì—?ì„œ ì—¬ëŸ¬ íŒ¨í‚¤ì§€ [{0}] ë°œê²¬
go.inspection.problem.no.non.test.go.files={0} ë‚´ ë¹„ í…ŒìŠ¤íŠ¸ Go íŒŒì?¼ ì—†ì?Œ
go.inspection.problem.cannot.import={0} ì?„(ë¥¼) ê°€ì ¸ì˜¬ ìˆ˜ ì—†ì?Œ
go.inspection.problem.cannot.rename.import.c=import ''C''ì?˜ ì?´ë¦„ì?„ ë³€ê²½í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.path.imports.package.with.invalid.import.comment={0} ì?´(ê°€) ìœ íš¨í•˜ì§€ ì•Šì?€ ê°€ì ¸ì˜¤ê¸° ì£¼ì„?ì?´ ìžˆëŠ” íŒ¨í‚¤ì§€ë¥¼ ê°€ì ¸ì˜µë‹ˆë‹¤
go.inspection.problem.path.imports.package.that.expects.canonical.import={0} ì?´(ê°€) import "{1}" ì?„(ë¥¼) ìš”êµ¬í•˜ëŠ” íŒ¨í‚¤ì§€ë¥¼ ê°€ì ¸ì˜µë‹ˆë‹¤
go.inspection.problem.invalid.composite.literal.type=ìœ íš¨í•˜ì§€ ì•Šì?€ ë³µí•© ë¦¬í„°ëŸ´ ìœ í˜•\: {0}
go.inspection.problem.too.few.values=ê°’ì?´ ë„ˆë¬´ ì ?ìŠµë‹ˆë‹¤
go.inspection.problem.too.many.values=ê°’ì?´ ë„ˆë¬´ ë§Žì?Œ
go.inspection.problem.cannot.assign.value.to.blank.field=ê°’ì?„ ë¹ˆ í•„ë“œë¡œ í•„ë“œë¡œ í• ë‹¹í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.cannot.assign.value.to.unexported.field=ê°’ì?„ ë¹„ë…¸ì¶œ í•„ë“œ {0} (ìœ¼)ë¡œ í• ë‹¹í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.missing.type.in.composite.literal=ë³µí•© ë¦¬í„°ëŸ´ ë‚´ ìœ í˜• ëˆ„ë?½
go.inspection.problem.mixture.of.field=í•„ë“œ í˜¼í•©\: ê°’ ë°? ê°’ ì?´ë‹ˆì…œë?¼ì?´ì €
go.inspection.problem.invalid.field.name=ìœ íš¨í•˜ì§€ ì•Šì?€ í•„ë“œ ì?´ë¦„
go.inspection.problem.missing.expression=í‘œí˜„ ëˆ„ë?½
go.inspection.problem.missing.key.in.map.literal=map ë¦¬í„°ëŸ´ì?˜ ëˆ„ë?½ë?œ í‚¤
go.inspection.problem.duplicate.key.in.map.literal=ë§µ ë¦¬í„°ëŸ´ ë‚´ í‚¤ {0} ì¤‘ë³µ
go.inspection.problem.cannot.convert.known.value.to.type={0} ì?„(ë¥¼) {1} (ìœ¼)ë¡œ ë³€í™˜í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.cannot.convert.value.to.type=ê°’ì?„ {0} (ìœ¼)ë¡œ ë³€í™˜í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.index.must.be.a.non.negative.integer.constant=ìƒ‰ì?¸ {0} ì?´(ê°€) ì–‘ìˆ˜ integer ìƒ?ìˆ˜ì—¬ì•¼ í•©ë‹ˆë‹¤
go.inspection.problem.negative.index=ì?Œìˆ˜ ìƒ‰ì?¸\: {0}
go.inspection.problem.index.out.of.bounds=ìƒ‰ì?¸ì?´ ë²”ìœ„ë¥¼ ë²—ì–´ë‚¨\: {0}
go.inspection.problem.duplicate.index=ìƒ‰ì?¸ ì¤‘ë³µ\: {0}
go.inspection.problem.reference.jumps.over.declaration={0} ì?´(ê°€) {1} ì„ ì–¸ì?„ ê±´ë„ˆëœ?ë‹ˆë‹¤
go.inspection.problem.missing.return=í•¨ìˆ˜ ë??ì—? ë°˜í™˜ ëˆ„ë?½
go.inspection.problem.need.trailing.comma.in.composite.literal=ë³µí•© ë¦¬í„°ë„?ì—?ëŠ” ì¤„ ë°”ê¿ˆ ì „ í›„í–‰ ì‰¼í‘œê°€ í•„ìš”í•©ë‹ˆë‹¤
go.inspection.problem.need.trailing.comma.in.parameter.list=ë§¤ê°œë³€ìˆ˜ ëª©ë¡?ì—?ëŠ” ì¤„ ë°”ê¿ˆ ì „ í›„í–‰ ì‰¼í‘œê°€ í•„ìš”í•©ë‹ˆë‹¤
go.inspection.problem.need.trailing.comma.in.argument.list=ì?¸ìˆ˜ ëª©ë¡?ì—?ëŠ” ì¤„ ë°”ê¿ˆ ì „ í›„í–‰ ì‰¼í‘œê°€ í•„ìš”í•©ë‹ˆë‹¤
go.inspection.problem.multiple.packages.in.directory=ë””ë ‰í„°ë¦¬ ë‚´ ì—¬ëŸ¬ íŒ¨í‚¤ì§€\: {0}
go.inspection.problem.name.starts.with.package.name=ì?´ë¦„ì?€ íŒ¨í‚¤ì§€ ì?´ë¦„ìœ¼ë¡œ ì‹œìž‘ë?©ë‹ˆë‹¤.
go.inspection.problem.cannot.call.non.function=í•¨ìˆ˜ê°€ ì•„ë‹Œ {0}(ìœ í˜• {1}) ì?„(ë¥¼) í˜¸ì¶œí•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.empty.slice.declaration.via.literal=ë¦¬í„°ëŸ´ì?„ í†µí•œ ë¹ˆ ìŠ¬ë?¼ì?´ìŠ¤ ì„ ì–¸
go.inspection.problem.function.does.not.take.writer=í•¨ìˆ˜ëŠ” {0} ì?„(ë¥¼) ì·¨í•  ìˆ˜ ì—†ìœ¼ë‚˜ ì²« ë²ˆì§¸ ì?¸ìˆ˜ê°€ {1} ìž…ë‹ˆë‹¤
go.inspection.problem.possible.formatting.directive={0} ì—? ì„œì‹? ì§€ì • ì§€ì‹œë¬¸ì?´ ìžˆì?„ ê°€ëŠ¥ì„±ì?´ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.last.argument.ends.with.redundant.newline={0} ì?˜ ë§ˆì§€ë§‰ ì?¸ìˆ˜ê°€ ë¶ˆí•„ìš”í•œ ì¤„ ë°”ê¿ˆìœ¼ë¡œ ë??ë‚©ë‹ˆë‹¤
go.inspection.problem.return.value.has.a.function.type={0} ì?˜ ë°˜í™˜ ê°’ì—? í•¨ìˆ˜ ìœ í˜•ì?´ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.argument.is.not.a.function.call=ì?¸ìˆ˜ {0} ì?´(ê°€) í•¨ìˆ˜ í˜¸ì¶œì?´ ì•„ë‹™ë‹ˆë‹¤
go.inspection.problem.argument.causes.recursive.call.to.string.method=ì?¸ìˆ˜ {0} ì?´(ê°€) {1} ë©”ì„œë“œ ìž¬ê·€ í˜¸ì¶œì?„ ì?¼ìœ¼í‚µë‹ˆë‹¤
go.inspection.problem.receiver.has.generic.name=ë¦¬ì‹œë²„ì—? ì œë„¤ë¦­ ì?´ë¦„ì?´ í?¬í•¨ë?©ë‹ˆë‹¤.
go.inspection.problem.receiver.names.are.different=ë¦¬ì‹œë²„ ì?´ë¦„ì?´ ë‹¤ë¦…ë‹ˆë‹¤
go.inspection.problem.invalid.recursive.type=ìœ íš¨í•˜ì§€ ì•Šì?€ ìž¬ê·€ {0} {1}{2}
go.inspection.problem.redundant.blank.expression=ë¶ˆí•„ìš”í•œ {0} í‘œí˜„ì‹?
go.inspection.problem.redundant.comma=ì¤‘ë³µë?œ ì‰¼í‘œ
go.inspection.problem.possibly.redundant.type.conversion=ë¶ˆí•„ìš”í•œ ìœ í˜• ë³€í™˜ì?´ ìžˆì?„ ê°€ëŠ¥ì„±ì?´ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.redundant.type.conversion=ì¤‘ë³µ í˜•ì‹? ë³€í™˜
go.inspection.problem.redundant.alias=ë¶ˆí•„ìš”í•œ ë³„ì¹­
go.inspection.problem.redundant.parentheses=ë¶ˆí•„ìš”í•œ ì†Œê´„í˜¸
go.inspection.problem.redundant.index=ë¶ˆí•„ìš”í•œ ìƒ‰ì?¸ {0}
go.inspection.problem.redundant.semicolon=ì¤‘ë³µ ì„¸ë¯¸ì½œë¡ 
go.inspection.problem.redundant.type=ë¶ˆí•„ìš”í•œ ìœ í˜•
go.inspection.problem.name.collides.with.builtin={0} {1} ì?´(ê°€) ê¸°ë³¸ ì œê³µ {2} ì™€(ê³¼) ì¶©ë?Œí•©ë‹ˆë‹¤
go.inspection.problem.value.is.assigned.to.itself={0} ê°’ì?´ ìž?ì²´ í• ë‹¹ë?©ë‹ˆë‹¤
go.inspection.problem.self.import.is.not.allowed=ìž?ì²´ ê°€ì ¸ì˜¤ê¸°ê°€ í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.declaration.shadows.declaration={0} ì„ ì–¸ì?´ ì„ ì–¸ì?„ ê°€ë¦½ë‹ˆë‹¤
go.inspection.problem.declaration.shadows.declaration.at={0} ì„ ì–¸ì?´ {1} ì?˜ ì„ ì–¸ì?„ ê°€ë¦½ë‹ˆë‹¤
go.inspection.problem.eliminate.snake.case=ìŠ¤ë„¤ì?´í?¬ í‘œê¸°ë²• ì œê±°
go.inspection.problem.use.camelcase.instead.of.snake.case=ìŠ¤ë„¤ì?´í?¬ í‘œê¸°ë²• ëŒ€ì‹  ë‚™íƒ€ í‘œê¸°ë²• ì‚¬ìš©
go.inspection.problem.mismatched.types.byte.and.string=ì?¼ì¹˜í•˜ì§€ ì•ŠëŠ” ìœ í˜•\: ë°”ì?´íŠ¸ ë°? ë¬¸ìž?ì—´
go.inspection.problem.bad.count.argument.of.strings.replace={0} ì?˜ Count ì?¸ìˆ˜ëŠ” {1} ì?¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.inspection.problem.fields.are.assigned.without.explicit.names=í•„ë“œê°€ ëª…ì‹œì ? ì?´ë¦„ ì—†ì?´ í• ë‹¹ë?˜ì—ˆìŠµë‹ˆë‹¤
go.inspection.problem.wrong.example.signature=ìž˜ëª»ë?œ ì˜ˆì‹œ ì‹œê·¸ë‹ˆì²˜
go.inspection.problem.wrong.test.signature=ìž˜ëª»ë?œ í…ŒìŠ¤íŠ¸ ì‹œê·¸ë‹ˆì²˜
go.inspection.problem.cannot.use.underscore.as.value={0} ì?„(ë¥¼) ê°’ìœ¼ë¡œ ì‚¬ìš©í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.unhandled.error=ì²˜ë¦¬ë?˜ì§€ ì•ŠëŠ” ì˜¤ë¥˜
go.inspection.problem.unit.specific.suffix=ìœ ë‹› ì¤‘ì‹¬ ì ‘ë¯¸ì‚¬ {0}
go.inspection.problem.unnecessarily.exported.element=ë¶ˆí•„ìš”í•˜ê²Œ ë…¸ì¶œë?œ {0} {1}
go.inspection.problem.unreachable.code=ë?„ë‹¬í•  ìˆ˜ ì—†ëŠ” ì½”ë“œ
go.inspection.problem.imports.are.not.sorted=import ë¬¸ì?´ ì •ë ¬ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤
go.inspection.problem.unused.result=ì‚¬ìš©ë?˜ì§€ ì•ŠëŠ” ê²°ê³¼\: {0}
go.inspection.problem.unused.import=ì‚¬ìš©í•˜ì§€ ì•ŠëŠ” import
go.inspection.problem.assignment.used.as.value={0} ì?´(ê°€) ê°€ë°§ìœ¼ë¡œ ì‚¬ìš©ë?¨
go.inspection.problem.no.placeholders.in.format.string=ì„œì‹? ë¬¸ìž?ì—´ì—? ìž?ë¦¬í‘œì‹œìž?ê°€ ì—†ì?Œ
go.inspection.problem.too.many.arguments.for.format.string=ì„œì‹? ë¬¸ìž?ì—´ì—? ëŒ€í•œ ì?¸ìˆ˜ê°€ ë„ˆë¬´ ë§Žì?Œ\: í•„ìš” \={0}, ì‹¤ì œ \={1}
go.inspection.problem.verb.will.ignore.flag=ë?™ì‚¬ê°€ {0} í”Œëž˜ê·¸{1} ì?„(ë¥¼)ë¬´ì‹œí•©ë‹ˆë‹¤
go.inspection.problem.verb.will.ignore.flags=ë?™ì‚¬ê°€ {0} í”Œëž˜ê·¸{1} ì?„(ë¥¼) ë¬´ì‹œí•©ë‹ˆë‹¤
go.inspection.problem.placeholder.syntax.error=ìž?ë¦¬í‘œì‹œìž? êµ¬ë¬¸ ì˜¤ë¥˜{0}
go.inspection.problem.this.verb.can.be.used.only.in.fmt.errorf=ì?´ ë?™ì‚¬ëŠ” {0} í˜¸ì¶œ{1} ì—?ì„œ ì‚¬ìš©ë?  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.this.verb.can.be.used.only.once.in.a.format.string=ì?´ ë?™ì‚¬ëŠ” ì„œì‹? ë¬¸ìž?ì—´{0} ì—?ì„œ í•œ ë²ˆë§Œ ì‚¬ìš©ë?  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.fmt.parameter.with.non.integer.expression={0,choice,0\#ë„ˆë¹„|1\#ì •í™•ì„±|2\#ë?™ì‚¬}ì?´(ê°€) ì •ìˆ˜ê°€ ì•„ë‹Œ í‘œí˜„ì‹? {1}{2} (ìœ¼)ë¡œ ì§€ì •ë?˜ì—ˆìŠµë‹ˆë‹¤
go.inspection.problem.no.argument.for.placeholder.part={0,choice,0\#ë„ˆë¹„|1\#ì •í™•ì„±|2\#ë?™ì‚¬}ì—? ëŒ€í•œ ì?¸ìˆ˜ ì—†ì?Œ\: ì?¸ìˆ˜ ìƒ‰ì?¸ \={1}, ì?¸ìˆ˜ ê°œìˆ˜ \={2}{3}
go.inspection.problem.unknown.verb=ì•Œ ìˆ˜ ì—†ëŠ” ë?™ì‚¬ {0}{1}
go.inspection.problem.return.value.of.placeholder.argument.has.a.function.type=ìž?ë¦¬í‘œì‹œìž? ì?¸ìˆ˜ ë°˜í™˜ ê°’ì—? í•¨ìˆ˜ ìœ í˜•{0}ì?´ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.placeholder.argument.is.not.a.function.call=ìž?ë¦¬í‘œì‹œìž? ì?¸ìˆ˜ê°€ í•¨ìˆ˜ í˜¸ì¶œ{0} ì?´(ê°€) ì•„ë‹™ë‹ˆë‹¤
go.inspection.problem.placeholder.argument.has.wrong.type=ìž?ë¦¬í‘œì‹œìž? ì?¸ìˆ˜ {0} ì—? ìž˜ëª»ë?œ ìœ í˜• {1}{2} ì?´(ê°€) ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.placeholder.argument.causes.recursive.call.to.string=ìž?ë¦¬í‘œì‹œìž? ì?¸ìˆ˜ê°€ {0} ë©”ì„œë“œ{1} ìž¬ê·€ í˜¸ì¶œì?„ ì?¼ìœ¼í‚µë‹ˆë‹¤
go.inspection.problem.index.zero.is.illegal=ìƒ‰ì?¸ ê°’ [0] ì?´(ê°€) ìž˜ëª»ë?˜ì—ˆìŠµë‹ˆë‹¤{0}
go.inspection.problem.invalid.use.of.triple.dot=ìœ íš¨í•˜ì§€ ì•Šì?€... ì‚¬ìš©, í•´ë‹¹í•˜ëŠ” ë§¤ê°œë³€ìˆ˜ê°€ ë¹„ê°€ë³€ì ?ìž„ë‹ˆë‹¤
go.inspection.problem.too.many.arguments.to.return=ë°˜í™˜í•  ì?¸ìˆ˜ê°€ ë„ˆë¬´ ë§Žì?Œ
go.inspection.problem.not.enough.arguments.to.return=ë°˜í™˜í•  ì?¸ìˆ˜ê°€ ì¶©ë¶„í•˜ì§€ ì•Šì?Œ
go.inspection.problem.invalid.argument.must.be.complex.type=ìœ íš¨í•˜ì§€ ì•Šì?€ ì?¸ìˆ˜ {0}(ìœ í˜• {1})\: ë³µí•© ìœ í˜•ì?´ì–´ì•¼ í•¨
go.inspection.problem.expression.with.type={0}(ìœ í˜• {1})
go.inspection.problem.non.bool.used.as.condition=boolì?´ ì•„ë‹Œ {0} ì?´(ê°€) ì¡°ê±´ìœ¼ë¡œ ì‚¬ìš©ë?¨
go.inspection.problem.cannot.range=ë²”ìœ„ê°€ {0} ì?„(ë¥¼) ì´ˆê³¼í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.type.or.type={0} ë˜?ëŠ” {1}
go.inspection.problem.nil.is.not.allowed={0} ì?€(ëŠ”) í—ˆìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤. {1} ì?´ì–´ì•¼/ì—¬ì•¼ í•¨
go.inspection.problem.incompatible.types={0} ì?„(ë¥¼) ìœ í˜• {1} (ìœ¼)ë¡œ ì‚¬ìš©í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.incompatible.types.in.switch=switch{1} ë‚´ ìœ íš¨í•˜ì§€ ì•Šì?€ case {0}
go.inspection.problem.incompatible.types.in.switch.on.expression={1}{2} ì?˜ switch ë‚´ ìœ íš¨í•˜ì§€ ì•Šì?€ case {0}
go.inspection.problem.mismatched.types=\ (ì?¼ì¹˜í•˜ì§€ ì•ŠëŠ” ìœ í˜• {0} ë°? {1})
go.inspection.problem.incompatible.types.some.methods.are.missing=ì?¼ë¶€ ë©”ì„œë“œê°€ ëˆ„ë?½ë?˜ì—ˆê¸° ë•Œë¬¸ì—? ìœ í˜•ì?´ {0} {1} ì?„(ë¥¼) êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤\: {2}{3}
go.inspection.problem.incompatible.types.ambiguous.methods={1}{2} ì?´(ê°€) ëª¨í˜¸í•˜ê¸° ë•Œë¬¸ì—? ìœ í˜•ì?´ {0} ì?„(ë¥¼) êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤ {3}
go.inspection.problem.incompatible.method.has.pointer.receiver={1}{2} ë©”ì„œë“œê°€ í?¬ì?¸í„° ë¦¬ì‹œë²„ì?´ê¸° ë•Œë¬¸ì—? ìœ í˜•ì?´ {0} ì?„(ë¥¼) êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤ {3}
go.inspection.problem.incompatible.need.method.have.method=ìœ í˜•ì?´ {0}{1} ì?„(ë¥¼) êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤\: ë©”ì„œë“œ {2} í•„ìš”\: ë©”ì„œë“œ {3}{4} ìžˆì?Œ
go.inspection.problem.incompatible.unexported.method=ìœ í˜•{1}ì?´ ë‚´ë³´ë‚´ê¸°ë?˜ì§€ ì•Šì?€ ë©”ì„œë“œë¥¼ í?¬í•¨í•˜ë©° ë‹¤ë¥¸ íŒ¨í‚¤ì§€{2}ì—? ì •ì?˜ë?˜ì–´ ìžˆê¸°ë•Œë¬¸ì—? {0} ì?„(ë¥¼) êµ¬í˜„í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.inspection.problem.invalid.inc.dec.operation=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ë¹„ ìˆ«ìž? ìœ í˜• {1})
go.inspection.problem.cannot.assign.in.multiple.assignment=ì—¬ëŸ¬ ëŒ€ìž…ì—?ì„œ {0} ì?„(ë¥¼) {1} ì—? í• ë‹¹í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.cannot.convert.nil.to.type={0} ì?„(ë¥¼) ìœ í˜• {1} (ìœ¼)ë¡œ ë³€í™˜í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.invalid.unary.operation=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0}
go.inspection.problem.cannot.convert.constant=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ìƒ?ìˆ˜ {1} ì?„(ë¥¼) ìœ í˜• {2} (ìœ¼)ë¡œ ë³€í™˜í•  ìˆ˜ ì—†ì?Œ)
go.inspection.problem.operator.not.defined=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} ({2} ì—? ì—°ì‚°ìž? {1} ì?´(ê°€) ì •ì?˜ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤)
go.inspection.problem.receive.from.send.only.type=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ì „ì†¡ ì „ìš© ìœ í˜• {1} ìœ¼ë¡œë¶€í„° ìˆ˜ì‹ )
go.inspection.problem.receive.from.non.chan.type=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ë¹„ chan ìœ í˜• {1} ìœ¼ë¡œë¶€í„° ìˆ˜ì‹ )
go.inspection.problem.send.to.non.chan.type=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ë¹„ chan ìœ í˜• {1} (ìœ¼)ë¡œ ì „ì†¡)
go.inspection.problem.send.to.receive.only.type=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ìˆ˜ì‹  ì „ìš© ìœ í˜• {1} (ìœ¼)ë¡œ ì „ì†¡)
go.inspection.problem.invalid.operation.mismatched.types=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ì?¼ì¹˜í•˜ì§€ ì•ŠëŠ” ìœ í˜• {1} ì™€(ê³¼) {2})
go.inspection.problem.shift.count.must.be.unsigned.integer=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ì‹œí”„íŠ¸ ê°œìˆ˜ ìœ í˜• {1} ì?´(ê°€) ë¶€í˜¸ ì—†ëŠ” ì •ìˆ˜ì—¬ì•¼ í•¨)
go.inspection.problem.shift.count.must.be.integer=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ì‹œí”„íŠ¸ ê°œìˆ˜ ìœ í˜• {1} ì?´(ê°€) ì •ìˆ˜ì—¬ì•¼ í•¨)
go.inspection.problem.negative.shift.count=ìœ íš¨í•˜ì§€ ì•Šì?€ ì—°ì‚°\: {0} (ì?Œìˆ˜ ì‹œí”„íŠ¸ ê°œìˆ˜)
go.inspection.problem.receiver.may.be.nil.in.call=ë¦¬ì‹œë²„ {0} ì?´(ê°€) í˜¸ì¶œ ë‚´ {1} ì?¼ ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.method.call.may.lead.to.nil.pointer.dereference=ë©”ì„œë“œ í˜¸ì¶œ {0} ì?´(ê°€) nil í?¬ì?¸í„° ì—­ì°¸ì¡°ë¥¼ ì?¼ìœ¼í‚¬ ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.function.call.may.lead.to.nil.pointer.dereference=í•¨ìˆ˜ í˜¸ì¶œ {0} ì?´(ê°€) nil í?¬ì?¸í„° ì—­ì°¸ì¡°ë¥¼ ì?¼ìœ¼í‚¬ ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.accessing.field.may.lead.to.nil.pointer.dereference=í•„ë“œ {0} ì•¡ì„¸ìŠ¤ê°€ nil í?¬ì?¸í„° ì—­ì°¸ì¡°ë¥¼ ì?¼ìœ¼í‚¬ ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.send.may.block.because.of.nil.channel={0} ì±„ë„?ë¡œ ì?¸í•´ ì ‘ì†?ì?´ ì°¨ë‹¨ë?  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.receive.may.block.because.of.nil.channel={0} ì±„ë„?ë¡œ ì?¸í•´ ìˆ˜ì‹ ì?´ ì°¨ë‹¨ë?  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.potential.nil.pointer.dereference=ìž ìž¬ì ? nil í?¬ì?¸í„° ì—­ì°¸ì¡°
go.inspection.problem.assignment.to.entry.may.panic.because.of.nil.map={0} ë§µìœ¼ë¡œ ì?¸í•´ í•­ëª©ì—? ëŒ€ìž…í•˜ë©´ íŒ¨ë‹‰ì?´ ë°œìƒ?í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.indexing.may.panic.because.of.nil.slice={0} ìŠ¬ë?¼ì?´ìŠ¤ë¡œ ì?¸í•´ ìƒ‰ì?¸í™” ì‹œ íŒ¨ë‹‰ì?´ ë°œìƒ?í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.nil.loop.is.always.skipped={0} ì?´(ê°€) í•­ìƒ? {1} ì?´ê¸° ë•Œë¬¸ì—? ë£¨í”„ë¥¼ í•­ìƒ? ê±´ë„ˆëœ?ë‹ˆë‹¤
go.inspection.problem.corresponding.error.may.be.not.nil=í•´ë‹¹ ì˜¤ë¥˜ ë³€ìˆ˜ê°€ {2} ì?´(ê°€) ì•„ë‹? ìˆ˜ ìžˆìœ¼ë¯€ë¡œ {0} ì—? {1} ë˜?ëŠ” ë‹¤ë¥¸ ì˜ˆê¸°ì¹˜ ì•Šì?€ ê°’ì?´ ìžˆì?„ ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.inspection.problem.condition.is.always.true.or.false.because.of.nil={1} ì?´(ê°€) í•­ìƒ? {2} ì?´ê¸° ë•Œë¬¸ì—? ì¡°ê±´ì?´ í•­ìƒ? {0} ìž…ë‹ˆë‹¤
go.inspection.problem.condition.is.always.true.or.false.because.of.not.nil={1} ì?´(ê°€) í•­ìƒ? {2} ì?´(ê°€) ì•„ë‹ˆê¸° ë•Œë¬¸ì—? ì¡°ê±´ì?´ í•­ìƒ? {0} ìž…ë‹ˆë‹¤
go.inspection.problem.unused.dependency=ì‚¬ìš©ë?˜ì§€ ì•ŠëŠ” ì¢…ì†?ì„±
go.inspection.problem.contains=í?¬í•¨
go.inspection.problem.type.which.is.sync.locker=<code>sync.Locker</code> ìœ í˜• %s
go.inspection.problem.type.is.sync.locker=ìœ í˜• %s ì?´(ê°€) <code>sync.Locker</code> ìž…ë‹ˆë‹¤
go.module=ëª¨ë“ˆ
go.modules.scratch.file.notification.text=ëª¨ë“ˆ ì»¨í…?ìŠ¤íŠ¸ ì‚¬ìš© ì¤‘
go.run.target.executable.path.label=Go ì‹¤í–‰ íŒŒì?¼\:
go.run.target.gopath.label=GOPATH\:
go.run.target.version.label=ë²„ì „\:
go.run.target.configure.label=Go êµ¬ì„±
go.run.target.run.label=Go ì• í”Œë¦¬ì¼€ì?´ì…˜ ì‹¤í–‰
go.attach.directory.action.text=ë””ë ‰í„°ë¦¬ "{0}" ì—°ê²°
go.detach.directory.action.text=ë””ë ‰í„°ë¦¬ "{0}" ì—°ê²° í•´ì œ
go.remove.else=else ì œê±°
go.unwrap.else=else ì¤„ ë°”ê¿ˆ í•´ì œ
go.unwrap.for=ì¤„ ë°”ê¿ˆ í•´ì œ
go.unwrap.argument=ì?¸ìˆ˜ ì¤„ ë°”ê¿ˆ í•´ì œ
go.unwrap.argument.description={0} ëž˜í•‘ í•´ì œ
go.unwrap.if=if ì¤„ ë°”ê¿ˆ í•´ì œ
go.settings.global.gopath.group.name=ì „ì—­ GOPATH
go.settings.project.gopath.group.name=í”„ë¡œì ?íŠ¸ GOPATH
go.settings.module.gopath.group.name=ëª¨ë“ˆ GOPATH
go.quick.doc.package.label=íŒ¨í‚¤ì§€\:
go.quick.doc.resolved.value.label=í•´ê²°ë?œ ê°’\:
go.settings.folding.one.line.return.checkbox=í•œ ì¤„ ë°˜í™˜
go.settings.folding.one.line.panics.checkbox=í•œ ì¤„ íŒ¨ë‹‰
go.settings.folding.format.strings.checkbox=ì„œì‹? ë¬¸ìž?ì—´
go.settings.formatter.add.space.except.for.comments.label=ë‹¤ì?Œìœ¼ë¡œ ì‹œìž‘í•˜ëŠ” ì£¼ì„? ì œì™¸\:
go.settings.formatter.comment.prefix.cannot.be.empty.validation.message=ì£¼ì„? ì ‘ë‘?ì‚¬ê°€ ê³µë°±ì?¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.notification.go.root.is.not.defined.text=GOROOTê°€ ì •ì?˜ë?˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤
go.notification.go.root.is.incorrect.text=GOROOTê°€ ì˜¬ë°”ë¥´ì§€ ì•ŠìŠµë‹ˆë‹¤
go.refactoring.split.declarations.action.text=ì„ ì–¸ ë¶„í• 
go.refactoring.split.declarations.with.iota.warning=ì„ ì–¸ ì?´ë‹ˆì…œë?¼ì?´ì €ëŠ” `iota` ë•Œë¬¸ì—? ë¶„í•  í›„ ë‹¤ë¥¸ ê°’ì?´ ë?©ë‹ˆë‹¤.
go.refactoring.merge.declarations.action.text=ë³‘í•© ì„ ì–¸
go.refactoring.merge.declarations.with.iota.warning=ì„ ì–¸ ì?´ë‹ˆì…œë?¼ì?´ì €ëŠ” `iota` ë•Œë¬¸ì—? ë³‘í•© í›„ ë‹¤ë¥¸ ê°’ì?´ ë?©ë‹ˆë‹¤.
go.inlays.show.unnamed.fields.in.structure.values.option=êµ¬ì¡° ê°’ ë‚´ ì?´ë¦„ ì—†ëŠ” í•„ë“œ í‘œì‹œ
go.inlays.show.return.parameters.option=ë°˜í™˜ ë§¤ê°œë³€ìˆ˜ í‘œì‹œ
go.file.watcher.go.imports.description=Go íŒŒì?¼ì—?ì„œ `goimports` ì‹¤í–‰
go.file.watcher.go.fmt.description=Go íŒŒì?¼ì—?ì„œ `go fmt` ì‹¤í–‰
go.file.watcher.golangci.description=Go íŒŒì?¼ ë””ë ‰í„°ë¦¬ì—?ì„œ `golangci-lint` ì‹¤í–‰
go.before.check.in.show.fmt.error.button=ì„¸ë¶€ì‚¬í•­(&D)...
go.completion.fill.all.fields.lookup.string=ëª¨ë“  í•„ë“œ ì±„ìš°ê¸°...
go.completion.fill.selected.fields.lookup.string=ì„ íƒ?í•œ í•„ë“œ ì±„ìš°ê¸°...
go.modules.dependency.diagram=Go ëª¨ë“ˆ ì¢…ì†¡ì„± ë‹¤ì?´ì–´ê·¸ëž¨
go.converter.build.run.configuration.description=`Go Build` ì‹¤í–‰ êµ¬ì„±ì?´ ë³€ê²½ë?˜ì—ˆìŠµë‹ˆë‹¤. ê¸°ì¡´ êµ¬ì„±ì?€ ë³€í™˜ë?˜ì–´ì•¼ í•©ë‹ˆë‹¤.
go.converter.single.file.run.configuration.description=Go `Run single file` ì‹¤í–‰ êµ¬ì„±ì?´ ì œê±°ë?˜ì—ˆìŠµë‹ˆë‹¤. ê¸°ì¡´ êµ¬ì„±ì?€ ë³€í™˜ë?˜ì–´ì•¼ í•©ë‹ˆë‹¤.
go.converter.build.tags.description=Go í”„ë¡œì ?íŠ¸ ì„¤ì • ì €ìž¥ ë©”ì»¤ë‹ˆì¦˜ì?´ ë³€ê²½ë?˜ì—ˆìœ¼ë¯€ë¡œ í”„ë¡œì ?íŠ¸ì™€ ëª¨ë“ˆì?´ ì—…ë?°ì?´íŠ¸ë?˜ì–´ì•¼ í•©ë‹ˆë‹¤.
go.converter.sdk.description=Go í”„ë¡œì ?íŠ¸ ëª¨ë?¸ì?´ ë³€ê²½ë?˜ì—ˆìœ¼ë¯€ë¡œ í”„ë¡œì ?íŠ¸ì™€ ëª¨ë“ˆì?´ ì—…ë?°ì?´íŠ¸ë?˜ì–´ì•¼ í•©ë‹ˆë‹¤
go.converter.project.model.description=Go í”„ë¡œì ?íŠ¸ ëª¨ë?¸ì?´ ë³€ê²½ë?˜ì—ˆìœ¼ë¯€ë¡œ í”„ë¡œì ?íŠ¸ì™€ ëª¨ë“ˆì?´ ì—…ë?°ì?´íŠ¸ë?˜ì–´ì•¼ í•©ë‹ˆë‹¤
go.inspection.options.panel.import.path=ê°€ì ¸ì˜¤ê¸° ê²½ë¡œ
go.inspection.options.panel.function.name=í•¨ìˆ˜ ì?´ë¦„
go.inspection.options.panel.string.methods=ë¬¸ìž?ì—´ ë©”ì„œë“œ
go.inspection.options.panel.reported.functions=ë³´ê³ ë?œ í•¨ìˆ˜/ë©”ì„œë“œ\:
go.inspection.options.panel.receiver=ë¦¬ì‹œë²„
go.inspection.options.panel.method.name=ë©”ì„œë“œ ì?´ë¦„
go.inspection.options.panel.exclude=ì œì™¸\:
go.structure.view.show.package.structure.action.text=íŒ¨í‚¤ì§€ êµ¬ì¡° í‘œì‹œ
go.structure.view.private.members.filter.text=private ë©¤ë²„ í‘œì‹œ
go.structure.view.exportability.sorter.text=ë‚´ë³´ë‚´ê¸° ê°€ëŠ¥ ì—¬ë¶€ë¡œ ì •ë ¬
go.structure.view.method.location={0}
go.sum.generated.sources.filter.notification.text=í•´ë‹¹ íŒŒì?¼ì?€ Go ë?„êµ¬ì—?ì„œë§Œ ì‚¬ìš©í•˜ë?„ë¡? ë?˜ì–´ ìžˆìœ¼ë¯€ë¡œ íŽ¸ì§‘í•´ì„œëŠ” ì•ˆë?©ë‹ˆë‹¤. ë³€ê²½í•˜ë©´ ë¹Œë“œ í”„ë¡œì„¸ìŠ¤ê°€ ì¤‘ë‹¨ë?  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.modules.background.task.updating.dependencies.title=Go ëª¨ë“ˆ ì¢…ì†?ì„± ì—…ë?°ì?´íŠ¸ ì¤‘
go.modules.background.task.updating.dependencies.text=''go.mod'' {0,choice,0\#files|1\#file|2\#files}ì—?ì„œ {0} ''go list'' ì‹¤í–‰ ì¤‘
go.modules.unknown.dependencies.notification.text=ëª¨ë“ˆ ì¢…ì†?ì„± ì „ì²´ ì§‘í•©ì?„ ì•Œ ìˆ˜ ì—†ì?Œ, ì?¼ë¶€ Go ëª¨ë“ˆ íŠ¹ì • ê¸°ëŠ¥ì?´ ì œê³µë?˜ì§€ ì•Šì?„ ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.modules.unknown.dependencies.notification.tooltip=ë„¤íŠ¸ì›Œí?¬ ì—°ê²° ì?´ìŠˆ ë˜?ëŠ” ëª…ì‹œì ? GOPROXY\=offë¡œ ì?¸í•´ ë°œìƒ?í–ˆì?„ ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.modules.unknown.dependencies.notification.retry=''{0}'' ë‹¤ì‹œ ì‹¤í–‰
go.modules.tree.structure.replaced=(ëŒ€ì²´ë?¨)
go.modules.tree.structure.replacement=ëŒ€ì²´\: {0}
go.live.template.context.type.file.presentable.name=íŒŒì?¼
go.live.template.context.type.type.presentable.name=ìœ í˜•
go.live.template.context.type.block.presentable.name=ë¸”ë¡?
go.live.template.context.type.expression.presentable.name=í‘œí˜„ì‹?
go.live.template.context.type.tag.presentable.name=íƒœê·¸
go.live.template.context.type.tag.literal.presentable.name=íƒœê·¸ ë¦¬í„°ëŸ´
go.live.template.context.type.statement.presentable.name=êµ¬ë¬¸
go.sdk.no.version.text=<no version>
go.edit.settings.action.description=Go ì „ìš© {0} íŽ¸ì§‘
go.new.project.step.web.group.name=ì›¹
go.new.project.step.other.group.name=Otros
project.files.and.vendor.scope.name=í”„ë¡œì ?íŠ¸ íŒŒì?¼ ë°? ë²¤ë?”
go.project.configurable.name=Go
go.inspection.discarded.context.cancel.function=ì»¨í…?ìŠ¤íŠ¸ ëˆ„ìˆ˜ë¥¼ í”¼í•˜ê¸° ìœ„í•´ íŒŒê¸° í•¨ìˆ˜ê°€ ì•„ë‹Œ ì·¨ì†Œ í•¨ìˆ˜ë¥¼ í˜¸ì¶œí•´ì•¼ í•©ë‹ˆë‹¤
go.inspection.function.returns.without.calling.context.cancel.function=ì?´ ì·¨ì†Œ í•¨ìˆ˜ë¥¼ í˜¸ì¶œí•˜ì§€ ì•ŠëŠ” ì‹¤í–‰ ê²½ë¡œê°€ ìžˆìœ¼ë©°, ì?´ëŠ” ì»¨í…?ìŠ¤íŠ¸ ëˆ„ìˆ˜ë¥¼ ì´ˆëž˜í•©ë‹ˆë‹¤
go.inspection.execution.ends.without.context.cancel.function.after.instruction=''{0}'' í•¨ìˆ˜ë¥¼ í˜¸ì¶œí•˜ì§€ ì•Šê³  ì?´ ì§€ì¹¨ ì?´í›„ ì‹¤í–‰ì?´ ì¢…ë£Œë?  ìˆ˜ ìžˆìœ¼ë©°, ì?´ëŠ” ì»¨í…?ìŠ¤íŠ¸ ëˆ„ìˆ˜ë¥¼ ì´ˆëž˜í•©ë‹ˆë‹¤
go.inspection.execution.ends.without.context.cancel.function.after.statement=''{1}'' í•¨ìˆ˜ë¥¼ í˜¸ì¶œí•˜ì§€ ì•Šê³  ì?´ ''{0}'' ì§€ì¹¨ ì?´í›„ ì‹¤í–‰ì?´ ì¢…ë£Œë?  ìˆ˜ ìžˆìœ¼ë©°, ì?´ëŠ” ì»¨í…?ìŠ¤íŠ¸ ëˆ„ìˆ˜ë¥¼ ì´ˆëž˜í•©ë‹ˆë‹¤
go.inspection.problematic.execution.path.end=ë¬¸ì œê°€ ìžˆëŠ” ì‹¤í–‰ ê²½ë¡œì?˜ ë??
postfix.template.provider.name=Go
postfix.template.condition.error.name=ì˜¤ë¥˜
postfix.template.condition.error.expr.result.name=ì˜¤ë¥˜ ê²°ê³¼ë¥¼ í?¬í•¨í•˜ëŠ” í‘œí˜„ì‹?
postfix.template.condition.array.name=ë°°ì—´
postfix.template.condition.slice.name=ìŠ¬ë?¼ì?´ìŠ¤
postfix.template.condition.assignable.slice.name=í• ë‹¹ ê°€ëŠ¥í•œ ìŠ¬ë?¼ì?´ìŠ¤
postfix.template.condition.map.name=ë§µ
postfix.template.condition.channel.name=ì±„ë„?
postfix.template.condition.builtin.len.applicable.name=ê¸°ë³¸ ì œê³µ len ì ?ìš© ê°€ëŠ¥
postfix.template.condition.builtin.cap.applicable.name=ê¸°ë³¸ ì œê³µ cap ì ?ìš© ê°€ëŠ¥
postfix.template.condition.builtin.append.applicable.name=ê¸°ë³¸ ì œê³µ append ì ?ìš© ê°€ëŠ¥
postfix.template.condition.non.void.name=voidê°€ ì•„ë‹˜
postfix.template.condition.comparable.to.nil.name=nilê³¼ ë¹„êµ? ê°€ëŠ¥
postfix.template.condition.number.name=ìˆ«ìž?
postfix.template.condition.boolean.name=ë¶€ìš¸
postfix.template.condition.string.name=ë¬¸ìž?ì—´
postfix.template.condition.floats.slice.name=float64ì?˜ ìŠ¬ë?¼ì?´ìŠ¤
postfix.template.condition.ints.slice.name=intì?˜ ìŠ¬ë?¼ì?´ìŠ¤
postfix.template.condition.strings.slice.name=ë¬¸ìž?ì—´ì?˜ ìŠ¬ë?¼ì?´ìŠ¤
postfix.template.condition.interface.impls.slice.name=ì •ë ¬ ì?¸í„°íŽ˜ì?´ìŠ¤ êµ¬í˜„ì?˜ ìŠ¬ë?¼ì?´ìŠ¤
postfix.template.condition.expr.in.if.with.missing.block.name=ë¸”ë¡?ì?´ ëˆ„ë?½ë?œ if ì¡°ê±´ ë‚´ í‘œí˜„ì‹?
postfix.template.condition.slice.with.no.sort.name=ì „ìš© ì •ë ¬ ê¸°ëŠ¥ì?´ ì—†ëŠ” ìŠ¬ë?¼ì?´ìŠ¤
filetype.go.time.description=Go ì‹œê°„
filetype.go.tag.description=Go íƒœê·¸
go.cannot.be.represented.by.type={0}ì?€(ëŠ”) íƒ€ìž… {1}(ìœ¼)ë¡œ ë‚˜íƒ€ë‚¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.value.cannot.be.represented.by.type={0}ì?˜ ê°’ì?€ íƒ€ìž… {1}(ìœ¼)ë¡œ ë‚˜íƒ€ë‚¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.go.mod.retract.not.supported='retract'ëŠ” Go 1.16ë¶€í„° ì§€ì›?ë?©ë‹ˆë‹¤
go.error.go.embed.not.supported=go:embedëŠ” Go 1.16 ì?´í›„ ë²„ì „ì—?ì„œ ì§€ì›?ë?©ë‹ˆë‹¤
go.error.go.embed.invalid.syntax.of.paths=ê²½ë¡œ íŒ¨í„´ì?˜ ìž˜ëª»ë?œ êµ¬ë¬¸
go.error.go.embed.must.be.above.var.declaration=go:embedëŠ” ë‹¨ì?¼ ì „ì—­ ë³€ìˆ˜ì?˜ ì„ ì–¸ ìœ„ì—? ë°°ì¹˜í•´ì•¼ í•©ë‹ˆë‹¤
go.error.go.embed.var.has.wrong.type=go:embed ë³€ìˆ˜ëŠ” 'string', '[]byte' ë˜?ëŠ” 'embed.FS' íƒ€ìž…ì?´ì–´ì•¼ í•©ë‹ˆë‹¤
go.error.go.embed.invalid.path.elements=ê²½ë¡œëŠ” '.' ë˜?ëŠ” '..' ê²½ë¡œ ìš”ì†Œë¥¼ í?¬í•¨í•˜ê±°ë‚˜ ì„ í–‰ ìŠ¬ëž˜ì‹œë¡œ ì‹œìž‘í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.go.embed.unresolved.path=í•´ê²°ë?˜ì§€ ì•Šì?€ ê²½ë¡œ
go.error.go.embed.empty.directory=ë¹ˆ ë””ë ‰í„°ë¦¬ë¥¼ í?¬í•¨í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.go.embed.single.path.expected=íƒ€ìž… 'string' ë°? '[]byte'ì?˜ ë³€ìˆ˜ëŠ” ë‹¨ì?¼ ê²½ë¡œ íŒ¨í„´ë§Œ ê°€ì§ˆ ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.error.go.embed.path.must.resolve.to.file=íƒ€ìž… 'string' ë°? '[]byte'ì?˜ ë³€ìˆ˜ëŠ” ë‹¨ì?¼ íŒŒì?¼ë§Œ í?¬í•¨í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.error.go.embed.no.path.arguments=go:embed ë’¤ì—? ê²½ë¡œ íŒ¨í„´ì?´ í•„ìš”í•©ë‹ˆë‹¤
go.error.go.embed.file.must.import.embed=go:embedë¥¼ í?¬í•¨í•œ Go íŒŒì?¼ì?€ "embed" íŒ¨í‚¤ì§€ë¥¼ ê°€ì ¸ì™€ì•¼ í•©ë‹ˆë‹¤
go.error.go.embed.invalid.path.pattern=ìž˜ëª»ë?œ íŒŒì?¼ íŒ¨í„´
go.fix.import.embed.package="embed" ê°€ì ¸ì˜¤ê¸°
go.fix.wrap.error.handling.in.closure=í?´ë¡œì € ì•ˆì—? ì˜¤ë¥˜ ì²˜ë¦¬ ëž˜í•‘
go.fix.failed.to.handle.error=ì˜¤ë¥˜ë¥¼ ì²˜ë¦¬í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤
go.fix.failed.to.introduce.variables.from.call=í˜¸ì¶œì?˜ ë³€ìˆ˜ë¥¼ ì‚½ìž…í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤
go.fix.failed.to.resolve.called.function.signature=í˜¸ì¶œì?˜ ì‹œê·¸ë‹ˆì²˜ë¥¼ í•´ê²°í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤
go.fix.call.receiver.is.not.an.expression=ì˜ˆê¸°ì¹˜ ì•Šì?€ í˜¸ì¶œ ë¦¬ì‹œë²„. í‘œí˜„ì‹?ì?´ ì•„ë‹˜
go.inspection.fail.now.in.non.test.goroutine=ë¹„ í…ŒìŠ¤íŠ¸ ê³ ë£¨í‹´ ë‚´ 'FailNow'
go.inspection.fail.now.called.from.non.test.goroutine=ì?´ ë©”ì„œë“œëŠ” í…ŒìŠ¤íŠ¸ë‚˜ ë²¤ì¹˜ë§ˆí?¬ë¥¼ ì‹¤í–‰í•˜ëŠ” ê³ ë£¨í‹´ì—?ì„œ í˜¸ì¶œë?˜ì–´ì•¼ í•©ë‹ˆë‹¤
go.fix.replace.and.return=''{0}'' ë°? ''return''ìœ¼ë¡œ ë°”ê¾¸ê¸°
filetype.go.plus.build.description=Go +build ì œì•½
filetype.go.build.description=Go:build ì œì•½
go.error.go.build.after.package=go:build ì§€ì‹œë¬¸ì?€ íŒ¨í‚¤ì§€ ì ˆ ì•žì—? ì™€ì•¼ í•©ë‹ˆë‹¤
go.error.go.build.non.first.element=go:build ì§€ì‹œë¬¸ì?€ ì¤„ì?˜ ì²« ë²ˆì§¸ ìš”ì†Œì—¬ì•¼ í•©ë‹ˆë‹¤
go.error.go.build.without.plus.build=//+build ì£¼ì„? ì—†ëŠ” //go:build ì£¼ì„?
go.error.go.build.and.plus.build.lines.dont.match=//+build ì¤„ì?´ //go:build ì¡°ê±´ê³¼ ì?¼ì¹˜í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.error.go.build.only.one.allowed=íŒŒì?¼ë‹¹ í•œ ê°œì?˜ //go:build ì§€ì‹œë¬¸ë§Œ í—ˆìš©ë?©ë‹ˆë‹¤
go.error.go.build.expression.is.too.complex=//+build ì¤„ì—? ëŒ€í•œ í‘œí˜„ì‹?ì?´ ë„ˆë¬´ ë³µìž¡í•©ë‹ˆë‹¤
go.error.go.plus.build.can.be.removed=//+build ì£¼ì„?ì?„ ì œê±°í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.error.go.plus.build.can.be.converted.to.go.build=//+build ì£¼ì„?ì?„ //go:build ì§€ì‹œë¬¸ìœ¼ë¡œ ë³€í™˜í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.error.invalid.double.negation=ìž˜ëª»ë?œ ì?´ì¤‘ ë¶€ì •
go.error.invalid.non.alphanumeric.character=ì˜?ìˆ«ìž?ê°€ ì•„ë‹Œ ìž˜ëª»ë?œ ë¬¸ìž?
go.fix.place.go.build.before.package=íŒ¨í‚¤ì§€ ì•žì—? go:build ë°°ì¹˜
go.fix.add.plus.build.comments=//+build ì£¼ì„? ì¶”ê°€
go.fix.update.plus.build.comments=//+build ì£¼ì„? ì—…ë?°ì?´íŠ¸
go.fix.remove.plus.build.comments=//+build ì£¼ì„? ì œê±°
go.fix.convert.plus.build.comments.to.go.build.directive=//+build ì£¼ì„?ì?„ //go:build ì§€ì‹œë¬¸ìœ¼ë¡œ ë³€í™˜
go.fmt.formatting.service.error.title={0}ì—?ì„œ gofmtë¥¼ ì‹¤í–‰í•  ìˆ˜ ì—†ì?Œ
go.notification.file.is.ignored.because.cgo.mismatch.text=''{0}''ì?€(ëŠ”) cgo ì§€ì›? ë¶ˆì?¼ì¹˜ ë•Œë¬¸ì—? ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.is.ignored.because.os.mismatch.text=''{0}''ì?€(ëŠ”) OS ë¶ˆì?¼ì¹˜ ë•Œë¬¸ì—? ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.is.ignored.because.arch.mismatch.text=''{0}''ì?€(ëŠ”) ì•„í‚¤í…?ì²˜ ë¶ˆì?¼ì¹˜ ë•Œë¬¸ì—? ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.is.ignored.because.compiler.mismatch.text=''{0}''ì?€(ëŠ”) ì»´íŒŒì?¼ëŸ¬ ë¶ˆì?¼ì¹˜ ë•Œë¬¸ì—? ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.is.ignored.because.version.mismatch.text=''{0}''ì?€(ëŠ”) Go ë²„ì „ ë¶ˆì?¼ì¹˜ ë•Œë¬¸ì—? ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.is.ignored.because.custom.flag.text=''{0}''ì?€(ëŠ”) ì‚¬ìš©ìž? ì§€ì • í”Œëž˜ê·¸ ë•Œë¬¸ì—? ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.is.ignored.because.bad.syntax.text=''{0}''ì?€(ëŠ”) ìž˜ëª»ë?œ êµ¬ë¬¸ ë•Œë¬¸ì—? ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.is.ignored.because.non.go.file.text=''{0}''ì?€(ëŠ”) Go íŒŒì?¼ì?´ ì•„ë‹ˆê¸° ë•Œë¬¸ì—? ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.enable.cgo.support.action.text=cgo ì§€ì›? í™œì„±í™”
go.notification.disable.cgo.support.action.text=cgo ì§€ì›? ë¹„í™œì„±í™”
go.notification.file.starts.with.dot.text=''{0}''ì?€(ëŠ”) ì?´ë¦„ì?´ ''.''ë¡œ ì‹œìž‘í•˜ë¯€ë¡œ ë¹Œë“œ ë?„êµ¬ì—?ì„œ ë¬´ì‹œë?©ë‹ˆë‹¤
go.notification.file.ignore.navigate.to.build.constraints.action.text=ë¹Œë“œ ì œì•½ìœ¼ë¡œ ì?´ë?™
go.notification.file.ignore.navigate.to.cgo.import.action.text=cgo import ë¬¸ìœ¼ë¡œ ì?´ë?™
go.notification.rename.file.action.text=íŒŒì?¼ ì?´ë¦„ ë³€ê²½
vgo.intention.add.or.update.go.version.fix.text=''go.mod''ì?˜ Go ë²„ì „ì?„ {0}(ìœ¼)ë¡œ ì„¤ì •
vgo.intention.add.or.update.go.version.fix.family.name='go.mod'ì?˜ Go ë²„ì „ì?„ ì¶”ê°€ ë˜?ëŠ” ì—…ë?°ì?´íŠ¸
go.external.system.auto.import.is.disabled='external.system.auto.import.disabled' ë ˆì§€ìŠ¤íŠ¸ë¦¬ í‚¤ê°€ ì„¤ì •ë?˜ì–´ IDEê°€ ì˜¬ë°”ë¥´ê²Œ ìž‘ë?™í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤. ì?´ ì„¤ì •ì?„ ë¹„í™œì„±í™”í•˜ê³  IDEë¥¼ ë‹¤ì‹œ ì‹œìž‘í•˜ì„¸ìš”.
go.modules.wizard.name=Go
go.wizard.name=Go(GOPATH)
go.settings.sdk.download.progress.copying.status=SDK ë³µì‚¬ ì¤‘â€¦
go.settings.sdk.download.progress.copying.detailed.status={0} ë³µì‚¬ ì¤‘â€¦
go.debugger.custom.delve.notification=ì‚¬ìš©ìž? ì§€ì • Delveë¡œ ë””ë²„ê·¸ ì¤‘ìž…ë‹ˆë‹¤. {0}
go.debugger.custom.delve.extended.notification=ì‚¬ìš©ìž? ì§€ì • Delveë¡œ ë””ë²„ê·¸ ì¤‘ìž…ë‹ˆë‹¤. {0}. ë²ˆë“¤ë¡œ í?¬í•¨ë?œ Delveë¥¼ ì‚¬ìš©í•˜ë ¤ë©´ ''dlv.path'' <a href=''customProperties''>ì‚¬ìš©ìž? ì§€ì • í”„ë¡œí?¼í‹°</a>ë¥¼ ì‚­ì œí•˜ê³  IDEë¥¼ ë‹¤ì‹œ ì‹œìž‘í•˜ì„¸ìš”.
go.execution.test.collecting.build.tags.progress.title=ë¹Œë“œ íƒœê·¸ ìˆ˜ì§‘ ì¤‘â€¦
go.inspection.problem.possibly.unused.dependency=ì‚¬ìš©ë?˜ì§€ ì•Šì?„ ìˆ˜ ìžˆëŠ” ì¢…ì†?ì„±
go.refactoring.introduce.generating.code.template=ì½”ë“œ í…œí”Œë¦¿ ìƒ?ì„± ì¤‘â€¦
go.empty.element.text=<ë¹„ì–´ ìžˆì?Œ>
vgo.intention.run.why.command.fix.family.name='go mod why -m' ì‹¤í–‰
action.com.goide.vgo.actions.VgoVendorAction.description=ëª¨ë“ˆì—?ì„œ 'go mod vendor' ì‹¤í–‰
action.com.goide.vgo.actions.VgoVendorAction.text=Go Mod Vendor
go.test.generate.fuzz.text=í?¼ì§•
exportable.GoSdkList.presentable.name=ì•Œë ¤ì§„ Go SDK ê²½ë¡œ ëª©ë¡?
exportable.vgo.presentable.name=ì•Œë ¤ì§„ Go ê´€ë ¨ í™˜ê²½ ë³€ìˆ˜ ëª©ë¡?
go.error.wsl.project.windows.sdk=Windows SDKë¥¼ ì‚¬ìš©í•´ WSL í”„ë¡œì ?íŠ¸ë¥¼ ì»´íŒŒì?¼í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.windows.project.wsl.sdk=WSL SDKë¥¼ ì‚¬ìš©í•´ Windows í”„ë¡œì ?íŠ¸ë¥¼ ì»´íŒŒì?¼í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.wsl.attach.host.group.name=WSL
go.wsl.resolving.user.home=WSL ì‚¬ìš©ìž? í™ˆ ë””ë ‰í„°ë¦¬ í•´ê²° ì¤‘
go.wsl.sdk.unpack.error=íŒ¨í‚¹ í•´ì œ ëª…ë ¹ì–´ê°€ ì¢…ë£Œ ì½”ë“œ {0}(ìœ¼)ë¡œ ì‹¤íŒ¨í–ˆìŠµë‹ˆë‹¤
go.error.wsl.project.requires.wsl.sdk=WSLì?˜ í”„ë¡œì ?íŠ¸ì—?ëŠ” WSLì?˜ Go SDKê°€ í•„ìš”í•©ë‹ˆë‹¤
go.error.wsl.sdk.cannot.be.used.for.windows.project=WSLì?˜ Go SDKëŠ” Windows í”„ë¡œì ?íŠ¸ì—?ì„œ ì‚¬ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.wsl.project.requires.wsl.sdk.from.same.instance=WSLì?˜ í”„ë¡œì ?íŠ¸ì—?ëŠ” ê°™ì?€ WSL ì?¸ìŠ¤í„´ìŠ¤ì?˜ Go SDKê°€ í•„ìš”í•©ë‹ˆë‹¤
action.DlvShowPointerAddressesToggleAction.text=í?¬ì?¸í„° ì£¼ì†Œ í‘œì‹œ
go.settings.debugger.show.pointer.addresses=í?¬ì?¸í„° ì£¼ì†Œ í‘œì‹œ
action.DlvShowTypesToggleAction.text=íƒ€ìž… í‘œì‹œ
go.settings.debugger.show.types=íƒ€ìž… í‘œì‹œ
go.fix.error.string.format=ì˜¤ë¥˜ ë¬¸ìž?ì—´ í˜•ì‹? ìˆ˜ì •
vgo.fix.delete.replacement=ëŒ€ì²´ ì‚­ì œ
go.fix.export.text={0} ë‚´ë³´ë‚´ê¸°
go.fix.add.comment.name=ì£¼ì„? ì¶”ê°€
go.inspection.change.context.todo=ëª…í™•í•˜ê²Œ ì •ì?˜ë?œ ì»¨í…?ìŠ¤íŠ¸ ì‚¬ìš© ê³ ë ¤
go.inspection.usage.of.context.todo=context.TODO() ì‚¬ìš© ìœ„ì¹˜
go.refactoring.implement.methods.preparing.template.progress.title=í…œí”Œë¦¿ ì¤€ë¹„ ì¤‘â€¦
go.go.mod.retract.wrong.range.format=ë²„ì „ ë²”ìœ„ì?˜ í˜•ì‹?ì?€ ë‹¤ì?Œê³¼ ê°™ì•„ì•¼ í•©ë‹ˆë‹¤. '[start, end]'
go.fix.change.signature.to.expected.name=í•„ìš”í•œ ì‹œê·¸ë‹ˆì²˜ë¡œ ë³€ê²½
go.run.target.project.sources.directory.label=í”„ë¡œì ?íŠ¸ ì†ŒìŠ¤ ë””ë ‰í„°ë¦¬:
go.run.target.project.sources.directory.browsing.title=í”„ë¡œì ?íŠ¸ ì†ŒìŠ¤
go.run.target.project.sources.description=ëŒ€ìƒ?ì—?ì„œ í”„ë¡œì ?íŠ¸ ì†ŒìŠ¤ì?˜ ì¶œë ¥ ê²½ë¡œ
go.debugger.failed.to.create.breakpoint=ì¤‘ë‹¨ì ?ì?„ ìƒ?ì„±í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤
go.debugger.failed.to.run.to.position=ìœ„ì¹˜ê¹Œì§€ ì‹¤í–‰í•˜ì§€ ëª»í–ˆìŠµë‹ˆë‹¤
inlay.parameters.go.struct.unnamed.struct.fields=ì?µëª… í•„ë“œ ì?´ë¦„ì?„ í‘œì‹œí•©ë‹ˆë‹¤.
inlay.parameters.go.return.parameters=return ë¬¸ì?˜ ë§¤ê°œë³€ìˆ˜ ì?´ë¦„ì?„ í‘œì‹œí•©ë‹ˆë‹¤.
go.run.target.compiled.executables.directory.label=ì»´íŒŒì?¼ë?œ ì‹¤í–‰ íŒŒì?¼ ë””ë ‰í„°ë¦¬:
go.run.target.compiled.executables.directory.browsing.title=ì»´íŒŒì?¼ë?œ ì‹¤í–‰ íŒŒì?¼
go.run.target.compiled.executables.description=ëŒ€ìƒ?ì—?ì„œ ì»´íŒŒì?¼ë?œ ì‹¤í–‰ íŒŒì?¼ì?˜ ì¶œë ¥ ê²½ë¡œ
go.run.target.executable.path.title=Go ì‹¤í–‰ íŒŒì?¼
go.run.target.gopath.title=GOPATH
go.execution.dlv.not.found.for={0}/{1}ì—? ëŒ€í•œ Delve ì‹¤í–‰ íŒŒì?¼ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤. ''Help(ë?„ì›€ë§?) | Edit Custom Properties(ì‚¬ìš©ìž? ì§€ì • í”„ë¡œí?¼í‹° íŽ¸ì§‘)''ì—? ''dlv.path=/path/to/delve''ë¥¼ ì¶”ê°€í•˜ì—¬ Delve ìœ„ì¹˜ë¥¼ ì§€ì •í•˜ì„¸ìš”.
go.execution.dlv.not.found.for.target.platform=ëŒ€ìƒ? í”Œëž«í?¼ì—? ëŒ€í•œ Delve ì‹¤í–‰ íŒŒì?¼ì?„ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤. 'Help(ë?„ì›€ë§?) | Edit Custom Properties(ì‚¬ìš©ìž? ì§€ì • í”„ë¡œí?¼í‹° íŽ¸ì§‘)'ì—? 'dlv.path=/path/to/delve'ë¥¼ ì¶”ê°€í•˜ì—¬ Delve ìœ„ì¹˜ë¥¼ ì§€ì •í•˜ì„¸ìš”.
go.edit.actions.on.save.action.text=ì €ìž¥ ì‹œ ì•¡ì…˜â€¦
go.edit.actions.on.save.action.description=ì €ìž¥í•  ë•Œ ì‹¤í–‰í•  ìˆ˜ ìžˆëŠ” ì•¡ì…˜ì?„ íŽ¸ì§‘í•©ë‹ˆë‹¤
go.refactoring.inline.options.dialog.name.label=ì?¸ë?¼ì?¸ ë¦¬íŒ©í„°ë§?ì?„ ìˆ˜í–‰í•˜ëŠ” ë°©ë²•ì?€?
go.refactoring.inline.options.dialog.all.remove=ëª¨ë“  í˜¸ì¶œ ì?¸ë?¼ì?¸í™” ë°? ì„ ì–¸ ì œê±°(&A)
go.refactoring.inline.options.dialog.all.keep=ëª¨ë“  í˜¸ì¶œ ì?¸ë?¼ì?¸í™” ë°? ì„ ì–¸ ìœ ì§€(&K)
go.refactoring.inline.options.dialog.this.keep=ì?´ í˜¸ì¶œë§Œ ì?¸ë?¼ì?¸í™” ë°? ì„ ì–¸ ìœ ì§€(&T)
go.refactoring.inline.command.name=í•¨ìˆ˜/ë©”ì„œë“œ ì?¸ë?¼ì?¸í™”
go.refactoring.inline.cannot.inline.in.loop.condition=ë£¨í”„ ì¡°ê±´ì?˜ ì—¬ëŸ¬ ì¤„ í•¨ìˆ˜ ë˜?ëŠ” íŒ¨í‚¤ì§€ ìˆ˜ì¤€ì?˜ 'var' ë˜?ëŠ” 'const' ì„ ì–¸ì—? ì?¸ë?¼ì?¸ ë¦¬íŒ©í„°ë§?ì?„ ì ?ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.refactoring.inline.cannot.inline.call.from.defer='defer' ë¬¸ì?˜ í˜¸ì¶œì—? ì?¸ë?¼ì?¸ ë¦¬íŒ©í„°ë§?ì?„ ì ?ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.refactoring.inline.cannot.inline.call.from.go='go' ë¬¸ì?˜ í˜¸ì¶œì—? ì?¸ë?¼ì?¸ ë¦¬íŒ©í„°ë§?ì?„ ì ?ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.refactoring.inline.cannot.inline.recursive.functions=ìž¬ê·€ í•¨ìˆ˜ì—? ì?¸ë?¼ì?¸ ë¦¬íŒ©í„°ë§?ì?„ ì ?ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.refactoring.inline.cannot.inline.many.returns=ì—¬ëŸ¬ ë°˜í™˜ì?´ ìžˆëŠ” í•¨ìˆ˜ì—? ì?¸ë?¼ì?¸ ë¦¬íŒ©í„°ë§?ì?„ ì ?ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.refactoring.inline.cannot.inline.no.body=ë³¸ë¬¸ì?´ ì—†ëŠ” í•¨ìˆ˜ì—? ì?¸ë?¼ì?¸ ë¦¬íŒ©í„°ë§?ì?„ ì ?ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.refactoring.inline.defer.statements=ì?´ í•¨ìˆ˜ì—?ëŠ” ì£¼ë³€ í•¨ìˆ˜ í˜¸ì¶œ í›„ ì‹¤í–‰ë?˜ëŠ” defer ë¬¸ì?´ í?¬í•¨ë?©ë‹ˆë‹¤
go.notification.install.as.tool.action.text=ëª…ë ¹ì¤„ ë?„êµ¬ë¡œ ì„¤ì¹˜
go.error.annotator.method.cannot.have.type.parameters=ë©”ì„œë“œëŠ” íƒ€ìž… ë§¤ê°œë³€ìˆ˜ë¥¼ ê°€ì§ˆ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.terms.type.parameters=íƒ€ìž… ë§¤ê°œë³€ìˆ˜
go.error.annotator.constraint.outside.of.type.parameter=ì?¸í„°íŽ˜ì?´ìŠ¤ì—?ëŠ” ì œì•½ ìš”ì†Œê°€ í?¬í•¨ë?˜ë©° ì˜¤ì§? íƒ€ìž… ë§¤ê°œë³€ìˆ˜ì—?ì„œë§Œ ì‚¬ìš©í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.refactoring.introduce.collecting.free.vars=ë¹„ì–´ ìžˆëŠ” ë³€ìˆ˜ ìˆ˜ì§‘ ì¤‘â€¦
go.refactoring.introduce.analyzing.before.extraction=ì¶”ì¶œ ì „ ì½”ë“œ ë¶„ì„? ì¤‘â€¦
go.error.annotator.constraint.elements.outside.of.type.parameter=ì?¸í„°íŽ˜ì?´ìŠ¤ì—?ëŠ” ì œì•½ {0,choice,1#ìš”ì†Œ|2#ìš”ì†Œ} {1}ì?´(ê°€) í?¬í•¨ë?˜ë©° ì˜¤ì§? íƒ€ìž… ë§¤ê°œë³€ìˆ˜ì—?ì„œë§Œ ì‚¬ìš©í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤
go.error.annotator.constraint.term.on.interface=ìœ íš¨í•˜ì§€ ì•Šì?€ ~ì?˜ ì‚¬ìš©(''{0}''ì?€(ëŠ”) ì?¸í„°íŽ˜ì?´ìŠ¤ìž…ë‹ˆë‹¤)
go.error.annotator.constraint.term.underlying.type.is.not.self=ìœ íš¨í•˜ì§€ ì•Šì?€ ~ì?˜ ì‚¬ìš©(ê¸°ë³¸ ìœ í˜• ''{0}''ì?€(ëŠ”) ''{0}''ì?´(ê°€) ì•„ë‹™ë‹ˆë‹¤)
go.inspection.problem.duplicate.type.param=íƒ€ìž… ë§¤ê°œë³€ìˆ˜ ì¤‘ë³µ: {0}
go.inspection.problem.incompatible.empty.type.set=<b color={1}>ì œì•½ íƒ€ìž… ì„¸íŠ¸ê°€ ë¹„ì–´ ìžˆìœ¼ë¯€ë¡œ</b> íƒ€ìž…ì?´ {0} ì œì•½ì?„ êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.incompatible.not.comparable=<b color={1}>íƒ€ìž…ì?´ í˜¸í™˜ë?˜ì§€ ì•Šìœ¼ë¯€ë¡œ</b> {0} ì œì•½ì?„ êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.inspection.problem.incompatible.not.in.type.set=<b color={1}>íƒ€ìž…ì?´ íƒ€ìž… ì„¸íŠ¸({2})ì—? í?¬í•¨ë?˜ì§€ ì•Šìœ¼ë¯€ë¡œ</b> {0} ì œì•½ì?„ êµ¬í˜„í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤
go.error.annotator.cannot.make.type.no.single.underlying.type={0}ì?„(ë¥¼) ë§Œë“¤ ìˆ˜ ì—†ìŠµë‹ˆë‹¤. íƒ€ìž… ì„¸íŠ¸ì—? ë‹¨ì?¼í•œ ê¸°ë³¸ íƒ€ìž…ì?´ ì—†ìŠµë‹ˆë‹¤
action.GoToggleCachingAction.description=Go í”ŒëŸ¬ê·¸ì?¸ì—?ì„œ ìº?ì‹±ì?„ ì „í™˜í•©ë‹ˆë‹¤.
action.GoToggleCachingAction.text=Go í”ŒëŸ¬ê·¸ì?¸ ìº?ì‹± ì „í™˜
action.GoToggleCachingAction.enableCaching=Go í”ŒëŸ¬ê·¸ì?¸ ìº?ì‹œ í™œì„±í™”
action.GoToggleCachingAction.disableCaching=Go í”ŒëŸ¬ê·¸ì?¸ ìº?ì‹œ ë¹„í™œì„±í™”
action.GoToggleCachingAction.cachingEnabled=Go í”ŒëŸ¬ê·¸ì?¸ ìº?ì‹œê°€ í™œì„±í™”ë?¨
action.GoToggleCachingAction.cachingDisabled=Go í”ŒëŸ¬ê·¸ì?¸ ìº?ì‹œê°€ ë¹„í™œì„±í™”ë?¨
go.error.annotator.list.of.type.arguments.must.not.be.empty=ìœ í˜• ì?¸ìˆ˜ ëª©ë¡?ì?€ ë¹„ì–´ ìžˆì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.execution.duplicate.file.error=íŒŒì?¼ì?´ ì?´ë¯¸ ëª©ë¡?ì—? ìžˆìŠµë‹ˆë‹¤. {0}
go.inspection.problem.need.trailing.comma.in.type.parameters.list=ìœ í˜• ë§¤ê°œë³€ìˆ˜ ëª©ë¡?ì—?ëŠ” ì¤„ ë°”ê¿ˆ ì „ì—? í›„í–‰ ì‰¼í‘œê°€ í•„ìš”í•©ë‹ˆë‹¤
go.inspection.problem.need.trailing.comma.in.type.arguments.list=ìœ í˜• ì?¸ìˆ˜ ëª©ë¡?ì—?ëŠ” ì¤„ ë°”ê¿ˆ ì „ì—? í›„í–‰ ì‰¼í‘œê°€ í•„ìš”í•©ë‹ˆë‹¤
go.microservices.http.server.endpoint.title=Go HTTP-ì„œë²„
go.inspection.problem.need.trailing.comma.in.index.expression=ìƒ‰ì?¸ í‘œí˜„ì‹?ì—?ëŠ” ì¤„ ë°”ê¿ˆ ì „ì—? í›„í–‰ ì‰¼í‘œê°€ í•„ìš”í•©ë‹ˆë‹¤
go.inspection.problem.type.parameters.are.not.supported=ì§€ì›?ë?˜ì§€ ì•ŠëŠ” íƒ€ìž… ë§¤ê°œë³€ìˆ˜ ìž…ë‹ˆë‹¤
go.inspection.problem.invalid.argument.must.be.send.channel.type=ì–‘ë°©í–¥ì?´ê±°ë‚˜ ë³´ë‚´ê¸° ì „ìš© ì±„ë„?ì?´ì–´ì•¼ í•©ë‹ˆë‹¤
go.fix.delete.type.parameters.name=íƒ€ìž… ë§¤ê°œë³€ìˆ˜ë¥¼ ì œê±°í•©ë‹ˆë‹¤
go.error.annotator.function.type.cannot.have.type.parameters=í•¨ìˆ˜ íƒ€ìž…ì?€ íƒ€ìž… ë§¤ê°œë³€ìˆ˜ë¥¼ ê°€ì§ˆ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.annotator.cannot.use.generic.function.without.instantiation=ì œë„¤ë¦­ í•¨ìˆ˜ë¥¼ ì?¸ìŠ¤í„´ìŠ¤í™”í•˜ì§€ ì•Šê³  ì“¸ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.modules.unsupported.workspace.mode=Go SDK {0}ì?€(ëŠ”) ''go.work'' íŒŒì?¼ì?„ ì§€ì›?í•˜ì§€ ì•Ÿã„´ìŠµë‹ˆë‹¤. Go 1.18 ì?´ìƒ?ì?„ ì‚¬ìš©í•˜ì„¸ìš”
go.fix.add.square.brackets=ëŒ€ê´„í˜¸ ì¶”ê°€
go.error.annotator.use.of.generic.type.without.instantiation=ì?¸ìŠ¤í„´ìŠ¤í™” ì—†ì?´ ì œë„¤ë¦­ íƒ€ìž…ì?´ ì‚¬ìš©ë?¨
go.error.annotator.cannot.use.type.parameter.as.rhs.in.type.declaration=íƒ€ìž… ë§¤ê°œë³€ìˆ˜ë¥¼ íƒ€ìž… ì„ ì–¸ì—?ì„œ RHSë¡œ ì‚¬ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.annotator.got.n.arguments.but.m.type.parameters=ì?¸ìˆ˜ë¥¼ {0}ê°œ ë°›ì•˜ìœ¼ë‚˜ íƒ€ìž… ë§¤ê°œë³€ìˆ˜ëŠ” {1}ê°œìž…ë‹ˆë‹¤
go.go.mod.error.prohibited.directive=go.mod íŒŒì?¼ì—?ì„œ ì§€ì‹œë¬¸ì?€ ì“¸ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.go.work.error.prohibited.directive=go.work íŒŒì?¼ì—?ì„œ ì§€ì‹œë¬¸ì?€ ì“¸ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.go.embed.all.prefix.not.supported=ìœ íš¨í•˜ì§€ ì•Šì?€ ê²½ë¡œ íŒ¨í„´ìž…ë‹ˆë‹¤. 'all:' ì ‘ë‘?ì‚¬ëŠ” Go 1.18ì?´ í•„ìš”í•©ë‹ˆë‹¤
go.fix.configure.go.sdk.text=Go SDK êµ¬ì„±
go.quick.doc.keyword.resource.language.spec.label=Go ì–¸ì–´ ì‚¬ì–‘
go.quick.doc.keyword.resource.effective.go.label=Effective Go
go.quick.doc.keyword.resource.go.blog.label=Go ë¸”ë¡œê·¸
go.error.annotator.generic.type.cannot.be.alias=ì œë„¤ë¦­ íƒ€ìž…ì?€ ë³„ì¹­ì?¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.error.annotator.interface.method.must.have.no.type.parameters=Interface ë©”ì„œë“œëŠ” íƒ€ìž… ë§¤ê°œë³€ìˆ˜ë¥¼ ê°€ì§ˆ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.quick.doc.channel.direction.label=ì±„ë„? ë°©í–¥:
go.quick.doc.channel.send.label=ì±„ë„?ë¡œ ë³´ë‚´ê¸°
go.quick.doc.channel.receive.label=ì±„ë„?ë¡œë¶€í„° ë°›ê¸°
go.go.work.error.unresolved.path=í•´ê²°ë?˜ì§€ ì•Šì?€ ê²½ë¡œ
go.fix.delete.type.arguments.name=íƒ€ìž… ì?¸ìˆ˜ ì‚­ì œ
go.error.annotator.is.not.a.generic.type={0}ì?€(ëŠ”) ì œë„¤ë¦­ íƒ€ìž…ì?´ ì•„ë‹™ë‹ˆë‹¤.
go.error.annotator.list.of.type.parameters.must.not.be.empty=íƒ€ìž… ë§¤ê°œë³€ìˆ˜ ëª©ë¡?ì?€ ë¹„ì›Œ ë‘˜ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.type.constraint.is.missing=ìœ í˜• ì œì•½ ì¡°ê±´ì?´ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.func.literal.cannot.have.type.parameters=í•¨ìˆ˜ ë¦¬í„°ëŸ´ì—?ëŠ” íƒ€ìž… ë§¤ê°œë³€ìˆ˜ë¥¼ ì‚¬ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.cannot.use.type.assertion.on.type.parameter=íƒ€ìž… ë§¤ê°œë³€ìˆ˜ ê°’ {0}ì—? íƒ€ìž… ì–´ì„¤ì…˜ì?„ ì‚¬ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.cannot.use.type.switch.on.type.parameter=íƒ€ìž… ë§¤ê°œë³€ìˆ˜ ê°’ {0}ì—? íƒ€ìž… ìŠ¤ìœ„ì¹˜ë¥¼ ì‚¬ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.type.cannot.be.declared.in.generic.function=ì œë„¤ë¦­ í•¨ìˆ˜ì—?ì„œ íƒ€ìž…ì?„ ì„ ì–¸í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.type.cannot.be.declared.in.generic.method=ì œë„¤ë¦­ ë©”ì„œë“œì—?ëŠ” íƒ€ìž…ì?„ ì„ ì–¸í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.parser.expected.or=''{0}'' ë˜?ëŠ” ''{1}''ì?´(ê°€) í•„ìš”í•©ë‹ˆë‹¤.
go.inspection.problem.irregular.iota.usage='iota'ì?˜ ë³€ì¹™ì ? ì‚¬ìš© ìœ„ì¹˜
go.quick.doc.methods.on.label=ë©”ì„œë“œ:
go.quick.doc.iota.example=ì˜ˆë¥¼ ë“¤ì–´, 'const (C0 = iota; C1; C2)'ëŠ” '0', '1' ë°? '2'ë¥¼ ì?¸ì‡„í•©ë‹ˆë‹¤. ì½”ë“œì—?ì„œ 'const'ë¥¼ ì‚¬ìš©í•  ë•Œë§ˆë‹¤ ê°œìˆ˜ê°€ '0'ìœ¼ë¡œ ìž¬ì„¤ì •ë?©ë‹ˆë‹¤. 'iota' ëŒ€ìž…ë?œ ìƒ?ìˆ˜ ê°’ì?„ ë³´ë ¤ë©´ ìƒ?ìˆ˜ ì‚¬ì–‘ ìœ„ì—? ë§ˆìš°ìŠ¤ í?¬ì?¸í„°ë¥¼ ê°€ì ¸ë‹¤ ë†“ìŠµë‹ˆë‹¤.
go.inspection.mixed.receiver.types=êµ¬ì¡°ì²´ {0}ì—? ê°’ ë°? í?¬ì?¸í„° ë¦¬ì‹œë²„ì—? ëŒ€í•œ ë©”ì„œë“œê°€ ìžˆìŠµë‹ˆë‹¤. ì?´ëŸ¬í•œ ì‚¬ìš© ìœ„ì¹˜ëŠ” Go ë¬¸ì„œì—?ì„œ ê¶Œìž¥í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.inspection.mixed.receiver.types.display.name=í˜¼í•© ê°’ ë°? í?¬ì?¸í„° ë¦¬ì‹œë²„
go.inspection.unused.type.parameter.display.name=ì‚¬ìš©ë?˜ì§€ ì•ŠëŠ” ìœ í˜• ë§¤ê°œë³€ìˆ˜
go.inspection.unused.type.parameter.message=ì‚¬ìš©ë?˜ì§€ ì•ŠëŠ” ìœ í˜• ë§¤ê°œë³€ìˆ˜ {0}
go.error.annotator.cannot.embed.type.parameter=ìœ í˜• ë§¤ê°œë³€ìˆ˜ë¥¼ í?¬í•¨í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.embedded.type.cannot.be.a.type.parameter=í?¬í•¨ë?œ ìœ í˜•ì?€ ìœ í˜• ë§¤ê°œë³€ìˆ˜ì?¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.embedded.type.cannot.be.a.pointer.to.a.type.parameter=í?¬í•¨ë?œ ìœ í˜•ì?€ ìœ í˜• ë§¤ê°œë³€ìˆ˜ì—? ëŒ€í•œ í?¬ì?¸í„°ì?¼ ìˆ˜ ì—†ìŠµë‹ˆë‹¤.
go.error.annotator.cannot.use.interface.with.methods.in.union=ê³µìš©ì²´ì—?ì„œ ë©”ì„œë“œê°€ ìžˆëŠ” ì?¸í„°íŽ˜ì?´ìŠ¤ë¥¼ ì‚¬ìš©í•  ìˆ˜ ì—†ì?Œ
go.error.annotator.shadowed.receiver.is.not.a.generic.type={0}ì?€(ëŠ”) ì œë„¤ë¦­ íƒ€ìž…ì?´ ì•„ë‹™ë‹ˆë‹¤(íƒ€ìž… ë§¤ê°œë³€ìˆ˜ê°€ ë¦¬ì‹œë²„ë¥¼ ê°€ë¦½ë‹ˆë‹¤)
go.error.annotator.cannot.use.comparable.in.union=ê³µìš©ì²´ì—?ì„œ ë¹„êµ?í•  ìˆ˜ ì—†ì?Œ
go.error.annotator.cannot.use.type.embedding.comparable.in.union=''{0}''ì?„(ë¥¼) ê³µìš©ì²´ì—?ì„œ ì‚¬ìš©í•  ìˆ˜ ì—†ì?Œ( ''{0}''ì?€(ëŠ”) ë¹„êµ?í•  ìˆ˜ ìžˆëŠ” í•­ëª© í?¬í•¨)
go.error.annotator.cannot.use.type.parameter.as.constraint=íƒ€ìž… ë§¤ê°œë³€ìˆ˜ë¥¼ ì œì•½ìœ¼ë¡œ ì‚¬ìš©í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.inspection.problem.invalid.conversion.type.comparable=ë³€í™˜ì—?ì„œ ë¹„êµ?í•  ìˆ˜ ìžˆëŠ” ì?¸í„°íŽ˜ì?´ìŠ¤ë¥¼ ì‚¬ìš©í•  ìˆ˜ ì—†ì?Œ
go.inspection.problem.invalid.conversion.type.with.constraints=ë³€í™˜ì—?ì„œ ìœ í˜• ì œì•½ì?´ ìžˆëŠ” ì?¸í„°íŽ˜ì?´ìŠ¤ë¥¼ ì‚¬ìš©í•  ìˆ˜ ì—†ì?Œ
go.quick.doc.blank.identifier.hint=ë¹ˆ ì‹?ë³„ìž?('_')ëŠ” ëª¨ë“  ìœ í˜•ì?˜ ê°’ìœ¼ë¡œ ëŒ€ìž…í•˜ê±°ë‚˜ ì„ ì–¸í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤. ë¹ˆ ì‹?ë³„ìž?ëŠ” ì‚­ì œë?˜ê³  ì»´íŒŒì?¼ëŸ¬ì—?ì„œ ì‚¬ìš©ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤. ì˜ˆë¥¼ ë“¤ì–´, ë°˜í™˜ ê°’ì?„ catchí•˜ë ¤ë©´ ë¹ˆ ì‹?ë³„ìž?ë¥¼ ì‚¬ìš©í•˜ì§€ë§Œ, ë‚˜ì¤‘ì—? ì?´ ê°’ì?„ ì‚¬ìš©í•  ì?˜ë?„ëŠ” ì—†ìŠµë‹ˆë‹¤.
notification.group.general=Go
notification.group.tools=Go ë?„êµ¬ í†µí•©
notification.group.execution=Go ì‹¤í–‰
notification.group.debug=Go ë””ë²„ê·¸
notification.group.build=Go ë¹Œë“œ
notification.group.tools.sticky=Go ë?„êµ¬ í†µí•©(ì¤‘ìš”)
go.quick.doc.assign.iota='iota'ì—? ê°’ì?„ ëŒ€ìž…í•´ë?„ 'builtin.iota'ì?˜ ì¹´ìš´í„°ê°€ ë‹¤ì‹œ ì„¤ì •ë?˜ì§€ ì•ŠìŠµë‹ˆë‹¤. ëŒ€ì‹  ëŒ€ìž…ì?€ 'builtin.iota'ë¥¼ ìˆ¨ê¸°ëŠ” ìƒˆ ìƒ?ìˆ˜ 'iota'ë¥¼ ì •ì?˜í•©ë‹ˆë‹¤.
go.quick.doc.type.assertions.hint=íƒ€ìž… ì–´ì„¤ì…˜ì?€ ë³€ìˆ˜ê°€ ì?¼ë¶€ ìœ í˜•ì?¸ì§€ í™•ì?¸í•˜ê³  ê¸°ë³¸ ì?¸í„°íŽ˜ì?´ìŠ¤ ê°’ì?„ ë°˜í™˜í•˜ëŠ” ë?° ì‚¬ìš©ë?©ë‹ˆë‹¤. íƒ€ìž… ì–´ì„¤ì…˜ì?€ ì?¸í„°íŽ˜ì?´ìŠ¤ì—?ì„œë§Œ ìž‘ë?™í•©ë‹ˆë‹¤. ì˜ˆë¥¼ ë“¤ì–´, ë‹¤ì?Œ ì½”ë“œì—?ì„œ 'var x interface{} = 42 t := x.(int)', 'x'ì—?ëŠ” ë‚´ë¶€ int ê°’('42')ì?´ ìžˆëŠ” 'interface{}' ìœ í˜•ì?´ ìžˆê³  'int'ëŠ” í™•ì?¸í•  êµ¬ì²´ì ?ì?¸ ìœ í˜•ìž…ë‹ˆë‹¤. 't'ë¥¼ ì?¸ì‡„í•˜ë©´ ì¶œë ¥ì?€ '42'ê°€ ë?©ë‹ˆë‹¤. êµ¬ì²´ì ?ì?¸ ìœ í˜•ì?„ 'string' ('t := x.(string)')ìœ¼ë¡œ ë³€ê²½í•˜ë©´ ëŸ°íƒ€ìž„ íŒ¨ë‹‰ì?´ ë°œìƒ?í•©ë‹ˆë‹¤. íƒ€ìž… ì–´ì„¤ì…˜ì?€ ë‘? ê°’ì?„ ë°˜í™˜í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤. ì˜ˆë¥¼ ë“¤ì–´, 't, ok := x.(int)' í‘œí˜„ì‹?ì—? 'ok' ë¶€ìš¸ì?´ ìžˆìŠµë‹ˆë‹¤. ì?´ ë¶€ìš¸ì?€ ì–´ì„¤ì…˜ì?´ ì •í™•í•˜ë©´ 'true'ë¥¼ ë°˜í™˜í•©ë‹ˆë‹¤. 'ok'ê°€ 'false'ì?´ë©´ 't'ê°€ 0ìœ¼ë¡œ ì„¤ì •ë?˜ê³  íŒ¨ë‹‰ì?´ ë°œìƒ?í•˜ì§€ ì•ŠìŠµë‹ˆë‹¤.
go.quick.doc.composite.literal.hint=ì?´ ë³µí•© ë¦¬í„°ëŸ´ì?€ ì§€ì •ë?œ ê°’ìœ¼ë¡œ ìƒˆ {0} ì?¸ìŠ¤í„´ìŠ¤ë¥¼ í• ë‹¹í•©ë‹ˆë‹¤.
go.quick.doc.struct.literal.hint=í•„ë“œ ê°’ì?„ ìˆœì„œëŒ€ë¡œ ì§€ì •í•˜ê±°ë‚˜ í•„ë“œ ì?´ë¦„ì?„ ì‚¬ìš©í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.test.run.fuzzing.tooltip=í?¼ì§• ì‹¤í–‰
go.test.fuzzing.header.expected='go test fuzz v1' í—¤ë?” í•„ìš”
go.test.fuzzing.value.expected=ìµœì†Œ í•˜ë‚˜ì?˜ ê°’ì?´ í•„ìš”
go.test.fuzzing.duplicate.header=ì¤‘ë³µ í—¤ë?”
go.test.fuzzing.incorrect.header.position=í—¤ë?”ëŠ” íŒŒì?¼ì?˜ ì‹œìž‘ ë¶€ë¶„ì—? ìžˆì–´ì•¼ í•©ë‹ˆë‹¤
go.go.work.multiple.use.directives=ì—¬ëŸ¬ 'use' ì§€ì‹œë¬¸ì?„ í•˜ë‚˜ë¡œ ë³‘í•©í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
vgo.intention.merge.use.directives.family.name=ì—¬ëŸ¬ 'use' ì§€ì‹œë¬¸ì?„ í•˜ë‚˜ë¡œ ë³‘í•©
go.inspection.problem.empty.interface.usage='interface{}'ë¥¼ íƒ€ìž…ìœ¼ë¡œ ì‚¬ìš©
go.quick.doc.keyword.type.switch=switch íƒ€ìž…ì?€ ì?¸í„°íŽ˜ì?´ìŠ¤ ê°’ 'x'ì?˜ ë?™ì ? íƒ€ìž…ê³¼ ì?¼ì¹˜í•©ë‹ˆë‹¤. ë?™ì ? íƒ€ìž…ì?€ 'switch' caseì?˜ íƒ€ìž…ê³¼ ì?¼ì¹˜ë?©ë‹ˆë‹¤. 'v := x.(type)'ê³¼ ê°™ì?€ ì§§ì?€ ë³€ìˆ˜ ëŒ€ìž…ì?´ switch guardë¡œ ì‚¬ìš©ë?˜ê³  switch caseëŠ” ë‹¨ì?¼ íƒ€ìž…ì—?ë§Œ ì‚¬ìš©ë?˜ëŠ” ê²½ìš°, 'v'ëŠ” ì?¼ì¹˜í•˜ëŠ” switch caseì—? ì§€ì •ë?œ íƒ€ìž…ì?„ ê°–ê²Œ ë?©ë‹ˆë‹¤.
go.quick.doc.type.parameter.hint={0} ì„ ì–¸ì—?ì„œ ìœ í˜• ë§¤ê°œë³€ìˆ˜ë¥¼ ì„ ì–¸í•©ë‹ˆë‹¤. ì?´ëŸ¬í•œ ìœ í˜• ë§¤ê°œë³€ìˆ˜ëŠ” {0}ì?„(ë¥¼) ì œë„¤ë¦­ìœ¼ë¡œ ë§Œë“­ë‹ˆë‹¤. ì œë„¤ë¦­ {0}ì?€(ëŠ”) ì—¬ëŸ¬ ìœ í˜•ì?„ ì²˜ë¦¬í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤. ê°€ëŠ¥í•œ ìœ í˜• ì§‘í•©ì?€ ìœ í˜• ë§¤ê°œë³€ìˆ˜ì?˜ ì œì•½ì—? ì?˜í•´ ê´€ë¦¬ë?©ë‹ˆë‹¤. ì œë„¤ë¦­ì—? ëŒ€í•œ ìž?ì„¸í•œ ë‚´ìš©ì?€ {1}ì?„(ë¥¼) ì°¸ì¡°í•˜ì„¸ìš”.
go.quick.doc.type.parameter.hint.hyperlink.text=íŠœí† ë¦¬ì–¼: go.devì—?ì„œ ì œë„¤ë¦­ ì‹œìž‘í•˜ê¸°
go.inlays.display.constant.definition=ìƒ?ìˆ˜ ì •ì?˜ ê°’ í‘œì‹œ
inlay.go.inlays.display.constant.definition.description=ìƒ?ìˆ˜ ì •ì?˜ ê°’ì?„ í™•ì?¸í•©ë‹ˆë‹¤.
go.quick.doc.type.parameter.in.method.hint=ë¦¬ì‹œë²„ì?˜ ê¸°ë³¸ ìœ í˜•ì?´ ì œë„¤ë¦­ ìœ í˜•ì?´ë¯€ë¡œ ë©”ì„œë“œê°€ ì œë„¤ë¦­ìž…ë‹ˆë‹¤. ë©”ì„œë“œ ì‚¬ì–‘ì—?ì„œ ë¦¬ì‹œë²„ ê¸°ë³¸ ìœ í˜•ì?˜ ìœ í˜• ë§¤ê°œë³€ìˆ˜ì—? í•´ë‹¹í•˜ëŠ” ìœ í˜• ë§¤ê°œë³€ìˆ˜ë¥¼ ì„ ì–¸í•´ì•¼ í•©ë‹ˆë‹¤. ë©”ì„œë“œ ìœ í˜• ì?¸ìˆ˜ëŠ” ë¦¬ì‹œë²„ ê¸°ë³¸ ìœ í˜•ì—? ì‚¬ìš©ë?˜ëŠ” ìœ í˜• ì œì•½ì?„ ì‚¬ìš©í•´ì•¼ í•©ë‹ˆë‹¤. ì œë„¤ë¦­ì—? ëŒ€í•œ ìž?ì„¸í•œ ë‚´ìš©ì?€ {0}ì?„(ë¥¼) ì°¸ì¡°í•˜ì„¸ìš”.
go.usage.type.type.parameter.declaration=ìœ í˜• ë§¤ê°œë³€ìˆ˜ ì„ ì–¸
go.quick.doc.empty.interface.hint=ë¹ˆ ì?¸í„°íŽ˜ì?´ìŠ¤ì?¸ 'interface{}'ëŠ” ëª¨ë“  íƒ€ìž… ì„¸íŠ¸ë¥¼ ì?˜ë¯¸í•©ë‹ˆë‹¤. ë¹ˆ ì?¸í„°íŽ˜ì?´ìŠ¤ íƒ€ìž…ì?˜ ë³€ìˆ˜ëŠ” ëª¨ë“  íƒ€ìž…ì?˜ ê°’ì?„ ì €ìž¥í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.
go.quick.doc.type.alias.hint=íƒ€ìž… {0}ì?€(ëŠ”) íƒ€ìž… {1}ì?˜ ë³„ì¹­ìž…ë‹ˆë‹¤. ì?´ëŸ¬í•œ íƒ€ìž…ì?€ ì„œë¡œ ë?™ì?¼í•©ë‹ˆë‹¤. ìž?ì„¸í•œ ì •ë³´ëŠ” {2}ì?„(ë¥¼) ì°¸ì¡°í•˜ì„¸ìš”
go.quick.doc.type.definition.hint=íƒ€ìž… {0}ì?€(ëŠ”) ê¸°ë³¸ íƒ€ìž… {1}ì?„(ë¥¼) í?¬í•¨í•˜ëŠ” ìƒˆë¡œìš´ íƒ€ìž…ìž…ë‹ˆë‹¤. ì?´ëŸ¬í•œ íƒ€ìž…ì?€ ì„œë¡œ ë‹¤ë¦…ë‹ˆë‹¤. ìž?ì„¸í•œ ì •ë³´ëŠ” {2}ì?„(ë¥¼) ì°¸ì¡°í•˜ì„¸ìš”
go.quick.doc.type.alias.and.definition.hint.link.text=Go Spec: íƒ€ìž… ID
go.fix.multiple.packages.command.name=íŒ¨í‚¤ì§€ ì?´ë¦„ì?„ {0}(ìœ¼)ë¡œ ë³€ê²½
go.inspection.problem.fuzzing.is.not.supported=í?¼ì§•ì?€ Go 1.18ë¶€í„° ì§€ì›?ë?©ë‹ˆë‹¤
action.GoOpenSettings.description=í”„ë¡œì ?íŠ¸ì?˜ Go ì„¤ì •ì?„ ì—½ë‹ˆë‹¤
action.GoOpenSettings.text=Go ì„¤ì • ì—´ê¸°
vgo.intention.add.module.to.workspace.fix.text=ìž‘ì—…ê³µê°„ì—? ''{0}'' ëª¨ë“ˆ ì¶”ê°€
vgo.intention.add.module.to.workspace.fix.family.name=ìž‘ì—…ê³µê°„ì—? ëª¨ë“ˆ ì¶”ê°€
go.quick.doc.too.large.to.render=ë Œë?”í•˜ê¸°ì—?ëŠ” ë„ˆë¬´í?½ë‹ˆë‹¤
go.debugger.unsupported.wsl1=WSL1ì—?ì„œì?˜ ë””ë²„ê¹…ì?€ ì§€ì›?ë?˜ì§€ ì•Šìœ¼ë¯€ë¡œ WSL2ë¥¼ ì‚¬ìš©í•˜ì„¸ìš”
go.command.line.inspection.project.configurator.description=Go í”„ë¡œì ?íŠ¸ë¥¼ êµ¬ì„±í•©ë‹ˆë‹¤
go.command.line.inspection.project.configurator.download.dependencies=Go ëª¨ë“ˆ ì¢…ì†? ìš”ì†Œ ë‹¤ìš´ë¡œë“œ ì¤‘â€¦
go.test.creator.progress.title.searching.for.functions.for.test=í…ŒìŠ¤íŠ¸í•  í•¨ìˆ˜ ê²€ìƒ‰ ì¤‘â€¦
go.test.creator.progress.title.searching.for.tests.for.function=í•¨ìˆ˜ìš© í…ŒìŠ¤íŠ¸ ê²€ìƒ‰ ì¤‘...
action.Vgo.NewVgoWorkspaceFile.description=Go ì›Œí?¬ìŠ¤íŽ˜ì?´ìŠ¤ íŒŒì?¼ ìƒ?ì„±
action.Vgo.NewVgoWorkspaceFile.text=Go ì›Œí?¬ìŠ¤íŽ˜ì?´ìŠ¤ íŒŒì?¼
go.debugger.cannot.resolve.localhost=ë¡œì»¬ í˜¸ìŠ¤íŠ¸ ì£¼ì†Œë¥¼ í™•ì?¸í•  ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.debugger.cannot.find.free.port=ë””ë²„ê±°ì—? ëŒ€í•œ ë¹ˆ TCP í?¬íŠ¸ë¥¼ ì°¾ì?„ ìˆ˜ ì—†ìŠµë‹ˆë‹¤
go.code.vision.usages={0,choice, 0#0ê°œì?˜ ì‚¬ìš©ìœ„ì¹˜|1#1ê°œ ì‚¬ìš© ìœ„ì¹˜|2#{0,number}ê°œ ì‚¬ìš© ìœ„ì¹˜}
