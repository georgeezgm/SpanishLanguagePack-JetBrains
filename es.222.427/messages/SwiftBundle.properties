swift.name=Rápido
code.style.indent.group.title.directives=Directiva
code.style.indent.multiline.strings=Sangrar cadenas en varias líneas
code.style.indent.directives.as.code=Cumplir con la sangría del código
code.style.indent.directives.children=Subelementos de sangría
code.style.spaces.group.title.colon=Alrededor del colon
code.style.spaces.group.title.in.ternary=Dentro de operaciones condicionales ternarias
code.style.spaces.before.method.parentheses=Paréntesis de declaración de método/función
code.style.spaces.after.operator.in.function.declarations=Operadores en declaraciones de funciones
code.style.spaces.before.method.call.parentheses=Paréntesis de llamada a método/función
code.style.spaces.equality.operator=Operador de igualdad ''\=\=''
code.style.spaces.shift.operators=Operadores de turno (<<, >>)
code.style.spaces.around.range.operators=Operadores de rango (..., ..<)
code.style.spaces.closure.arrow=Flecha de cierre (->)
code.style.spaces.attribute.parameters=Parámetros de atributos
code.style.spaces.within.literal.brackets=Corchetes literales de matriz y diccionario
code.style.spaces.within.method.parentheses=Paréntesis de declaración de método/función
code.style.spaces.within.empty.method.parentheses=Paréntesis de declaración de método/función vacíos
code.style.spaces.within.method.call.parentheses=Paréntesis de llamada a método/función
code.style.spaces.within.empty.method.call.parentheses=Paréntesis de llamada de método/función vacíos
code.style.spaces.attribute.parentheses=Paréntesis de atributos
code.style.spaces.before.argument.colon=Antes de dos puntos dentro de la llamada a método/función
code.style.spaces.after.argument.colon=Después de dos puntos dentro de la llamada a método/función
code.style.spaces.before.type.colon=Antes de los dos puntos en la anotación de tipo
code.style.spaces.after.type.colon=Después de los dos puntos en la anotación de tipo
code.style.spaces.before.superclass.colon=Antes de dos puntos en la cláusula de herencia de tipo
code.style.spaces.after.superclass.colon=Después de dos puntos en la cláusula de herencia de tipo
code.style.spaces.before.dictionary.type.colon=Antes de dos puntos dentro del tipo de diccionario
code.style.spaces.after.dictionary.type.colon=Después de dos puntos dentro del tipo de diccionario
code.style.spaces.before.dictionary.literal.colon=Antes de dos puntos dentro del par literal ''clave\:valor'' del diccionario
code.style.spaces.after.dictionary.literal.colon=Después de los dos puntos dentro del par literal ''clave\:valor'' del diccionario
code.style.spaces.within.string.interpolations=Interpolación de cadenas
code.style.spaces.before.class.lbrace=La declaración de tipo está entre llaves izquierdas
code.style.spaces.before.method.lbrace=Método/función llave izquierda
code.style.spaces.before.semicolon=Antes del punto y coma
code.style.spaces.after.semicolon=Después del punto y coma
code.style.wrapping.group.title.method.parameters=Parámetros de declaración de método/función
code.style.wrapping.group.title.method.arguments=Argumentos de llamada a método/función
code.style.wrapping.group.title.closure=Cierre
code.style.wrapping.group.title.condition.clauses=Cláusula condicional
code.style.wrapping.group.title.if=Declaración ''si''
code.style.wrapping.group.title.guard=Declaración de ''guardia''
code.style.wrapping.group.title.do.while=''repetir... mientras'' declaración
code.style.wrapping.group.title.try=Declaración ''hacer''
code.style.wrapping.group.title.superclass.list=Lista de clases base y protocolos adoptados.
code.style.wrapping.group.title.ternary=Operaciones condicionales ternarias
code.style.wrapping.group.title.variable.groups=Grupo de variables
code.style.wrapping.align.when.multiline=Ordenar si hay varias líneas
code.style.wrapping.align.in.columns=Ordenar por columna
code.style.wrapping.keep.control.statement.in.one.line=Declaraciones de control en una línea
code.style.wrapping.keep.simple.methods.in.one.line=Métodos y funciones en una línea.
code.style.wrapping.keep.simple.blocks.in.one.line=Bloques y cierres (finales) en una línea
code.style.wrapping.keep.simple.argument.blocks.in.one.line=Coloque los argumentos de cierre en una línea
code.style.wrapping.structures.in.one.line=Declaración de tipo vacía en una línea
code.style.wrapping.method.brace.placement=Dentro de métodos y funciones
code.style.wrapping.array.literal=Matrices y literales de diccionario
code.style.wrapping.array.new.line.after.left.bracket=Nueva línea después de ''[''
code.style.wrapping.array.right.bracket.on.new.line=Coloque '']'' en una nueva línea
code.style.wrapping.classes.annotation=Propiedades de declaración de tipo
code.style.wrapping.methods.annotation=Propiedades del método
code.style.wrapping.fields.annotation=Atributo de propiedad
code.style.wrapping.parameters.annotation=Propiedades de los parámetros
code.style.wrapping.local.variables.annotation=Propiedades de variables locales
code.style.wrapping.closure.signature.on.next.line=Si hay varias líneas, coloque los parámetros en una nueva línea.
code.style.wrapping.brace.placement.class.declaration=Dentro de la declaración de tipo
code.style.blank.lines.around.class=Alrededor de la declaración de tipo\:
code.style.blank.lines.around.field.in.protocol=Alrededor de propiedades dentro del protocolo\:
code.style.blank.lines.around.field=Alrededor de la propiedad\:
code.style.blank.lines.around.method.in.protocol=Alrededor de métodos/funciones dentro del protocolo\:
code.style.blank.lines.around.method=Alrededor del método/función\:
code.style.blank.lines.before.method.body=Antes del cuerpo del método/función\:
code.style.code.generation.tab.title=Codigo de GENERACION
code.style.code.generation.prefer.void=Prefiero anular a ()
code.style.code.generation.prefer.explicit.return=Prefiero devolución explícita
color.settings.keyword=Palabras clave y directivas//Palabras clave
color.settings.property=Identificador//Propiedad
color.settings.colon=Paréntesis y operadores//dos puntos
color.settings.module.name=Tipo // nombre del módulo
color.settings.protocol=Tipo//protocolo
color.settings.class=Tipo//clase
color.settings.actor=Tipo//actor
color.settings.type.alias=Tipo // escriba alias
color.settings.struct.and.enum=Tipos//Estructuras y Enumeraciones
color.settings.operator.sign=Paréntesis y operadores//Símbolos de operador
color.settings.enum.case.value=Identificador//Valor de caso de enumeración
color.settings.self.and.super.keywords=Palabras clave y directivas // Palabras clave ''self'' y ''super''
color.settings.function.and.method.declaration=Funciones//Declaración de funciones y métodos
color.settings.function.and.method.call=Funciones//Llamadas a funciones y métodos
color.settings.nested.function.declaration=Función // Declaración de función anidada
color.settings.nested.function.call=Función // Llamadas a funciones anidadas
color.settings.external.parameter.name=Identificador//Nombre del parámetro externo
color.settings.inline.closure.parameter=Identificador // parámetro de cierre en línea
color.settings.anonymous.closure.parameter=Identificador // parámetro de cierre anónimo
color.settings.wildcard=Identificador//Comodín
color.settings.type.parameter=Tipo // parámetro genérico
color.settings.attribute.name=Propiedades//nombre de la propiedad
color.settings.attribute.argument=Propiedades//argumentos de propiedad
color.settings.inline.hints.type.hint=Sugerencias en línea // sugerencias de tipo
color.settings.inline.hints.error.hint=Sugerencia en línea//Sugerencia de error
color.conditionally.non.compiled=Código no compilado con palabras clave y directivas//condiciones
color.settings.directive=Palabras clave y directivas//Directivas
goto.super.action=Seleccione {0}
goto.super.menu.action=Padre {0}(_U)
goto.super.location={1} mi {0}
goto.super.typealias=Alias de tipo o tipo relacionado
goto.super.class=Clase o protocolo
goto.base.type=Tipo básico
goto.super.extension.of.0={0} expansión
inheritance.relation.overrides={0} cancelar
inheritance.relation.implements={0} implementación
inheritance.relation.is.implemented=Implementado
inheritance.relation.is.subclassed=Se convierte en una subclase
inheritance.relation.is.overridden=Anulado
find.usages.base.member.warning.title=Advertencia
find.usages.base.member.warning.message.implements.method={0} implementa el método declarado en {1}\n\n¿Le gustaría buscar el uso del protocolo {3,choice,1\#method|2\#method}?
find.usages.base.member.warning.message.implements.subscript={0} implementa el subíndice declarado en {1}\n\n¿Le gustaría buscar el uso del protocolo {3,choice,1\#subscript|2\#subscript}?
find.usages.base.member.warning.message.implements.property={0} implementa las propiedades declaradas en {1}\n\n¿Le gustaría buscar el uso del protocolo {3,choice,1\#property|2\#property}?
find.usages.base.member.warning.message.override.method={0} anula un método declarado en {2}\n\n¿Le gustaría buscar el uso del {3,choice,1\#method|2\#method} predeterminado?
find.usages.base.member.warning.message.override.subscript={0} anula el subíndice declarado en {2}\n\n¿Le gustaría buscar el uso del {3,choice,1\#subscript|2\#subscript} predeterminado?
find.usages.base.member.warning.message.override.property={0} anula una propiedad declarada en {2}\n\n¿Le gustaría buscar el uso de la {3,choice,1\#property|2\#property} predeterminada?
find.usages.base.member.warning.message.override.implemented.method={0} anula el método declarado en {2} e implementa el método declarado en {1}\n\nUso de valores predeterminados y protocolos {3,choice,1\#method|2\#method} ¿Le gustaría buscar un ¿ubicación?
find.usages.base.member.warning.message.override.implemented.subscript={0} anula el subíndice declarado en {2} e implementa el subíndice declarado en {1}\n\nValor predeterminado y protocolo {3,choice,1\#subscript|2\#sub ¿Le gustaría buscar el uso de {script? }?
find.usages.base.member.warning.message.override.implemented.property={0} anula la propiedad declarada en {2} e implementa la propiedad declarada en {1}\n\nUso del protocolo y predeterminado {3,choice,1\#property|2\#property} ¿Le gustaría buscar una ¿ubicación?
find.usages.base.member.warning.message.default.implementation.method={0} es la implementación predeterminada del método declarado en {1}\n\n¿Le gustaría buscar el uso del protocolo {3,choice,1\#method|2\#method}?
find.usages.base.member.warning.message.default.implementation.subscript={0} es la implementación predeterminada del subíndice declarado en {1}\n\n¿Le gustaría buscar el uso del protocolo {3,choice,1\#subscript|2\#subscript}?
find.usages.base.member.warning.message.default.implementation.property={0} es la implementación predeterminada de la propiedad declarada en {1}\n\n¿Le gustaría buscar ubicaciones de uso del protocolo {3,choice,1\#property|2\#property}?
usage.type.type.parameter=Tipo de parámetro
usage.type.extension=Expansión
usage.type.requirement=Dónde usarlo en mis requisitos
usage.type.type.alias=Escriba alias
usage.type.argument.label=Etiqueta de argumento
usage.type.key.path=Expresión de ruta clave
usage.type.function.declaration=Declaración de función
usage.type.operator.declaration=Declaración del operador
usage.type.precedence.group.declaration=Declaración de grupo prioritario
usage.type.raw.value=Valor bruto
call.hierarchy.usage.in=Dónde utilizar
action.SwiftToggleGlobalTypeHints.text=Mostrar sugerencias de tipo Swift
action.SwiftToggleTypeHints.text=Mostrar sugerencias de tipo
action.SwiftToggleGlobalErrorHints.text=Mostrar sugerencias de error de Swift
action.SwiftToggleErrorHints.text=Mostrar sugerencia de error
action.SwiftIntroduceClosureVariable.text=Cierre...
action.SwiftExtractFunction.text=Función de extracción...
action.SwiftGenerateDocComment.text=Crear comentarios de documentos
action.Swift.Generate.Init.text=Inicializador
action.Swift.Generate.Init.description=Crear un inicializador
action.Swift.Generate.Description.text=Explicación...
action.Swift.Generate.Description.description=Crear descripción
action.Swift.Generate.DebugDescription.text=Descripción de depuración...
action.Swift.Generate.DebugDescription.description=Generar descripción de depuración
action.Swift.Generate.EqualsHashValue.text=Es igual a hash
action.Swift.Generate.EqualsHashValue.description=Igualdad y generación de hash
create.file.title=Archivo rápido
create.file.dialog.title=Nuevo archivo Swift
create.file.description=Crea un nuevo archivo Swift.
create.file.action=Crear archivo Swift {0}
create.file.or.type.title=Archivo/tipo Swift
create.file.or.type.description=Cree un nuevo archivo Swift o escriba
create.file.type.title=Tipos veloces
create.file.type.dialog.title=Nuevos tipos de Swift
create.file.type.dialog.title.with.kind=Nuevo Swift {0}
create.file.type.description=Crea un nuevo tipo Swift.
create.file.kind=Tipo(&K)\:
create.file.kind.file=Archivo
override.implement.nothing.to.override=Nada que anular
override.implement.nothing.to.implement=Nada que implementar
override.implement.override.not.allowed=No se puede anular
override.implement.implement.not.allowed=No se puede implementar
override.implement.show.members.to.implement.title=Mostrar miembros para implementar
override.implement.elements.to.implement.chooser.title=Seleccionar miembros para implementar
override.implement.elements.to.override.chooser.title=Seleccionar miembro para anular
override.implement.elements.to.override.implement.chooser.title=Seleccionar miembro para anular/implementar
override.implement.progress=Procesando miembros para anular/implementar...
override.implement.show.optional.member=Marcar &O un miembro opcional
override.implement.show.optional.members=Marcar {0} miembros opcionales
override.implement.show.no.optional.members=Mostrar miembros opcionales (nada opcional)
override.implement.show.only.optional.members=Mostrar miembros opcionales (solo elementos opcionales)
generate.init.init.already.exists=El inicializador ya existe.
generate.init.choose.super.init=Seleccionar inicializador de clase principal
generate.init.choose.properties=Seleccione propiedades para inicializar
generate.0.title=Crear {0}
generate.description.single.string.template=Sola cuerda
generate.description.string.concatenation.template=Varias cadenas con concatenación (+)
generate.description.multi.string.template=Cadena de varias líneas
generate.template.title=Plan&tilla\:
generate.property.0.is.already.defined=La propiedad ''{0}'' ya está definida. ¿Le gustaría eliminar esta propiedad y continuar?
generate.method.0.is.already.defined=El método ''{0}'' ya está definido. ¿Le gustaría eliminar el método y continuar?
generate.operator.function.0.is.already.defined=La función del operador ''{0}'' ya está definida. ¿Le gustaría eliminar la función y continuar?
generate.method.0.and.property.1.are.already.defined=El método ''{0}'' y la propiedad ''{1}'' ya están definidos. ¿Le gustaría eliminar el método y la propiedad y continuar?
generate.method.0.and.operator.function.1.are.already.defined=El método ''{0}'' y la función del operador ''{1}'' ya están definidos. ¿Le gustaría eliminar esos métodos y funciones y continuar?
generate.property.0.and.operator.function.1.are.already.defined=La propiedad ''{0}'' y la función del operador ''{1}'' ya están definidas. ¿Le gustaría eliminar estas propiedades y funciones y continuar?
generate.method.0.property.1.and.operator.function.2.are.already.defined=El método ''{0}'', la propiedad ''{1}'' y la función del operador ''{2}'' ya están definidos. método correspondiente. ¿Quieres eliminar propiedades y funciones y continuar?
generate.equals.hash=Es igual a hash
generate.equals.hash.choose.in.0=Seleccione propiedades para incluir en {0}
generate.single.expression.equals.template=Expresión única
generate.if.statements.equals.template=Múltiples declaraciones if
generate.cannot.generate.0.for.1=No se puede generar {0} para {1}.
generate.preparing.generation.title=Preparándonos para crear...
create.from.usage.create.function.command=Crear una función en el punto de uso.
create.from.usage.create.init.command=Cree un inicializador en su ubicación
create.from.usage.create.variable.command=Crear variable en el punto de uso
create.from.usage.create.type.command=Crea un nuevo tipo Swift
create.from.usage.choose.target.type=Seleccione el tipo de destino
create.from.usage.location.new.file=Archivo nuevo
create.from.usage.location.this.file=Este archivo
create.from.usage.location.in={0} mi
sourcekit.fix.it=Aplicar Fix-it
sourcekit.inspections=Inspección del kit de origen
syntax.error.hashbang.line.is.allowed.only.in.the.first.line.of.the.main.file=Las líneas Hashbang sólo se permiten en la primera línea del archivo principal.
syntax.error.hashbang.line.is.allowed.only.in.the.first.line.of.the.file=Las líneas Hashbang solo se permiten en la primera línea del archivo.
syntax.error.hashbang.line.is.allowed.only.in.the.main.file=Las líneas Hashbang sólo se permiten en archivos principales.
syntax.error.unrecognized.platform.name.0=Nombre de plataforma no reconocido ''{0}''
syntax.error.missing.asterisk=Las plataformas que puedan aparecer en el futuro deben tratarse con ''*''.
syntax.error.missing.asterisk.fix=Añadir ''*''
syntax.error.duplicate.platform=La plataforma ''{0}'' ya está especificada
syntax.error.typealias.without.assignment=Falta la asignación en la declaración de alias de tipo.
syntax.error.variable.declaration.with.multiple.variables.cannot.have.explicit.getters.setters=El captador/definidor explícito no se puede utilizar en la declaración ''var'' con múltiples variables
syntax.error.variable.declaration.with.multiple.variables.cannot.have.implicit.getter.clause=La cláusula getter implícita no se puede utilizar en la declaración ''var'' con múltiples variables
syntax.error.variable.declaration.with.multiple.variables.cannot.have.willset.didset.clause=Las cláusulas willSet/didSet no se pueden utilizar en declaraciones ''var'' con múltiples variables.
syntax.error.rethrows.is.not.allowed.in.function.type.elements=Sólo las declaraciones de funciones se pueden marcar como "relanzamientos".
syntax.error.rethrows.is.not.allowed.in.subscripts=Los ''relanzamientos'' no están permitidos en los subíndices.
syntax.error.rethrows.is.not.allowed.in.closures=No se permiten ''relanzamientos'' en cierres.
syntax.error.rethrows.function.must.take.a.throwing.function.argument=La función ''rethrows'' debe tener un argumento de función de lanzamiento.
syntax.error.throws.is.not.allowed.in.subscripts=''lanzamientos'' no está permitido en los subíndices.
syntax.error.thrown.expression.type.0.does.not.conform.to.ErrorType=El tipo de expresión arrojada ''{0}'' no se ajusta a ''{1}''.
syntax.error.try.cannot.appear.to.the.right=''try'' no puede aparecer en el lado derecho de un operador no asignado.
syntax.error.try.cannot.appear.to.the.right.fix=Mueve ''intentar'' a la izquierda
syntax.error.call.can.throw.in.property.initializer=Los inicializadores de propiedades pueden generar llamadas, pero no pueden generar errores.
syntax.error.call.can.throw.in.default.argument=Las llamadas con argumentos predeterminados pueden generar errores, pero no.
syntax.error.call.can.throw.not.marked.with.try=La llamada puede ser rechazada, pero no se marcará como un "intento".
syntax.error.call.can.throw.not.marked.with.try.not.handled=Es posible que la llamada se produzca, pero no se marcará como un "intento" y no se gestionará ningún error.
syntax.error.call.can.throw.not.marked.with.try.not.exhaustive=La llamada puede lanzarse, pero no está marcada como un "intento" y la captura circundante está incompleta.
syntax.error.call.can.throw.but.it.is.executed.in.a.non.throwing.autoclosure=La llamada puede lanzarse, pero se ejecuta en un cierre automático sin lanzamiento.
syntax.error.call.can.throw.but.it.is.not.marked.with.try.and.it.is.executed.in.a.non.throwing.autoclosure=La llamada puede lanzarse, pero no se marca como "intento" y se ejecuta en un cierre automático sin lanzamiento.
syntax.error.operator.can.throw.not.marked.with.try=Se pueden lanzar operadores, pero las expresiones no están marcadas como "probar".
syntax.error.errors.are.not.handled=Los errores arrojados aquí no serán manejados.
syntax.error.errors.are.not.handled.not.exhaustive=Los errores arrojados aquí no se manejarán porque el mensaje adjunto está incompleto.
syntax.error.error.is.not.handled=El error no se maneja porque la función adjunta no "lanza".
syntax.error.error.is.not.handled.not.exhaustive=El error no se maneja porque la captura circundante está incompleta.
syntax.error.rethrows.function.can.only.throw.parameter.call=Una función declarada como ''rethrows'' solo se lanzará si su parámetro lo hace.
intention.mark.the.enclosing.function.as.throws=Agregue ''lanzamientos'' a la firma de función
intention.add.try.to.expression=Añadir ''try''
intention.suppress.call.error.with.try=Suprime errores con ''try\!''
intention.surround.with.do.catch=Rodear con ''hacer/atrapar''
intention.add.default.catch.clause=Agregar cláusula ''catch'' predeterminada
intention.add.catch.clause=Añadir cláusula ''catch''
intention.replace.rethrows.with.throws=Cambiar ''relanzamientos'' por ''lanzamientos''
intention.create.new.swift.type.in.a.new.file=Nuevo tipo Swift dentro de un archivo nuevo
intention.create.new.swift.declaration=Crear una nueva declaración Swift
intention.create.kind.{0}.from.usage.{1}=Crear {0} ''{1}''
intention.create.type.from.usage.{0}=Crear tipo ''{0}''
intention.create.initializer=Crear un inicializador
intention.create.location.in={0}
intention.create.location.in.a.new.file=Mi nuevo archivo
intention.create.location.in.type=Dentro de {0} ''{1}''
intention.create.location.nested.in.type={0} anidado en ''{1}''
intention.implement.members.error=El tipo {0} no se ajusta a {1}.
intention.implement.members.implement.missing={0} Implementación de {0,choice,1\#member|2\#member} faltante
intention.access.control.error.access=No se puede acceder a {0}. Los elementos son del {1} al {2}.
intention.access.control.error.access.dynamic=No se puede acceder a {0}. Los subíndices de miembros dinámicos son del {1} al {2}.
intention.access.control.error.override={0} no se puede redefinir. Los elementos son del {1} al {2}.
intention.access.control.fix=Crear {0} {1} en {2}
intention.access.control.remove.setter=Eliminar {1} de {0}
intention.wrong.return.type.error.void=La función nula tiene un valor de retorno no nulo innecesariamente.
intention.wrong.return.type.fix=Establezca ''{0}'' para devolver ''{1}''
inspection.redundant.attribute=Atributo duplicado
inspection.redundant.attribute.error=La propiedad @{0} está duplicada.
inspection.redundant.attribute.fix=Eliminar atributo duplicado @{0}
inspection.redundant.return=Declaración duplicada
inspection.redundant.return.error=Duplicado ''regreso''.
inspection.redundant.return.fix=Elimine el ''retorno'' redundante.
inspection.unnecessary.argument.list=Lista de argumentos innecesarios
inspection.unnecessary.argument.list.error=La lista de argumentos es innecesaria
inspection.unnecessary.argument.list.fix=Eliminar lista de argumentos innecesarios
inspection.unnecessary.parentheses=Paréntesis innecesarios
inspection.unnecessary.parentheses.error=Los paréntesis son innecesarios.
inspection.unnecessary.parentheses.fix=Elimine los paréntesis innecesarios.
inspection.unnecessary.self=Yo innecesario
inspection.unnecessary.self.error="yo" es innecesario
inspection.unnecessary.self.fix=Eliminar el "yo" innecesario
inspection.unnecessary.tuple.wrap=Alrededor de tuplas innecesarias
inspection.unnecessary.tuple.wrap.error=Las tuplas de un solo elemento se pueden convertir en tipos.
inspection.unnecessary.tuple.wrap.fix=Convertir tupla de un solo elemento a tipo
inspection.missing.localization=Falta el idioma de localización
inspection.missing.localization.all.languages.only=Informar solo las localizaciones que faltan en todos los idiomas
error.cannot.perform.refactoring=No se puede realizar la refactorización
error.no.expression.found=Expresión no encontrada
intention.replace.if.with.guard=Reemplace ''si'' con ''guardia''
intention.replace.guard.with.if=Reemplace ''guardia'' con ''si''
intention.add.explicit.type=Agregar tipos explícitos
intention.remove.explicit.type=Eliminar tipos explícitos
intention.add.explicit.qualifier=Agregar calificador explícito
intention.convert.to.multiline.string=Convertir a literal de cadena multilínea
intention.convert.to.string=Convertir a literal de cadena de una línea
intention.convert.to.decimal=Convertir a decimal
intention.convert.to.hex=Convertir a hexadecimal
intention.convert.to.octal=Convertir a octal
intention.convert.to.binary=Convertir a número binario
intention.convert.to.trailing.closure=Convertir a cierre final
intention.convert.to.closure.argument=Convertir a argumento de cierre
intention.increase.string.escape.level=Aumentar el nivel de escape de la cuerda
intention.decrease.string.escape.level=Nivel de escape de cuerda inferior
intention.add.digit.separators=Agregar separador de números
intention.remove.digit.separators=Quitar separador de números
intention.split.into.separate.declarations=Dividido en declaraciones individuales.
intention.split.declaration.and.assignment=División de declaraciones y asignaciones
intention.join.declaration.and.assignment=Combinando declaración y cesión
intention.merge.else.if=Fusionar declaraciones else if
intention.split.else.if=Dividir otra declaración si
intention.invert.if.statement=Frase inversa si
intention.demorganslaw=Ley de demorgan
intention.demorganslaw.format=Reemplace ''{0}'' con ''{1}''
intention.merge.nested.if=Fusionar declaraciones if anidadas
intention.split.nested.if=Dividir en condiciones anidadas
intention.merge.conditions=Condiciones de fusión
intention.split.condition=Dividido en condiciones individuales
intention.negate.comparison=Negar comparación
intention.negate.comparison.format=Negar ''{0}'' como ''{1}''
intention.flip.binary.expression=Invertir expresión binaria
intention.flip.binary.expression.format=Invertir ''{0}''
intention.flip.comparison=Invertir comparación.
intention.flip.comparison.format=Invertir ''{0}'' a ''{1}''
intention.localize.string=Localización de cadenas
intention.localize.string.title.case=Localización de cadenas
extract.method.title.method=Extracción del método
extract.method.title.function=Extracción de funciones
extract.method.title.closure=Extracción de cierre
extract.method.error.should.represent.expr.or.statements=El bloque seleccionado debe representar una declaración o colección de expresiones.
extract.method.error.cannot.determine.expr.type=No se puede determinar el tipo de expresión seleccionada.
extract.method.error.cannot.extract.expr.with.var.declarations=No se puede extraer de una expresión con declaración de variable.
extract.method.error.cannot.determine.function.result.type=No se puede determinar el tipo de resultado de la función.
extract.method.error.multiple.exit.points=El fragmento de código seleccionado tiene múltiples puntos de salida.
extract.method.error.cannot.extract.with.returns=No se puede extraer un método con una instrucción de retorno dentro de un fragmento de código.
extract.method.error.cannot.determine.parameters.type=No se puede determinar el tipo de parámetro.
extract.method.error.fragment.should.be.inside.code.block=El fragmento de código seleccionado debe estar dentro de un bloque de código.
extract.method.error.result.builder.block=No se puede extraer la función del cierre del generador de resultados
extract.method.function.0.will.conflict.with.1.2=La función ''{0}'' entra en conflicto con {1} {2}.
extract.method.method.0.will.conflict.with.1.in.2.3=El método ''{0}'' entra en conflicto con {1} en {2} ''{3}''.
extract.method.at.least.two.parameters.have.name.0=Hay más de dos parámetros con el nombre ''{0}''.
extract.method.variable.0.will.no.longer.be.accessible=Ya no se puede acceder a la variable ''{0}'' después de la refactorización
extract.method.cannot.extract.mutable.value=Los valores de las variables no se pueden extraer.
extract.method.0.1.will.be.shadowed.by.2.1={0} ''{1}'' está sombreado por {2} ''{1}''.
introduce.variable.declare.with.var=&Declarar con var
introduce.variable.specify.type.explicitly=Especificar el tipo explícitamente
introduce.variable.expression.will.be.ambiguous.without.explicit.type=Sin un tipo explícito, la expresión <br/> es ambigua.
rename.inheritors=Cambiar el nombre del heredero
rename.inheritors.to=Cambie el nombre del heredero a\:
rename.inheritor.entity.name=Heredero
rename.init.is.not.supported=No se admite el cambio de nombre de los inicializadores rápidos.
rename.self.is.not.supported=No se admite cambiar el nombre del parámetro self.
rename.title=Cambio de nombre rápido
rename.related.dialog.title=Cambiar el nombre de la declaración relacionada
rename.related.dialog.description=Cambie el nombre de la declaración asociada con el siguiente nombre\:
rename.related.entity.name=Declaración relevante
rename.containing.file.dialog.title=Cambiar el nombre del archivo que lo contiene
rename.containing.file.dialog.description=Cambie el nombre de los archivos incluidos con los siguientes nombres\:
rename.containing.file.entity.name=Archivos incluidos
rename.error.message.renaming.swift.member.elements.in.objective.c.code.is.not.supported=No se admite el cambio de nombre de los elementos miembros de Swift dentro del código Objective-C.
rename.error.title=Swift - cambiar el nombre
rename.error.dynamic.called.values=Los nombres de los valores llamados dinámicamente no se pueden cambiar.
change.signature.initializer.will.conflict.with.0.in.1.2=El inicializador entra en conflicto con {0} en {1} ''{2}''
change.signature.subscript.will.conflict.with.0.in.1.2=El subíndice entra en conflicto con {0} en {1} ''{2}''
change.signature.dialog.title=Cambio de firma
change.info.return.type.label=Tipo de retorno\:
change.info.name.label=Nombre\:
change.info.internal.name.label=Nombre interno\:
change.info.type.label=Categoría\:
change.info.optional.label=Opcional\:
change.info.default.value.label=Valor por defecto\:
change.signature.target.not.found=El cursor debe colocarse en una función, inicializador o subíndice.
change.signature.processed.elements.header=Elemento cuya firma desea cambiar
change.signature.title=Cambio de firma
change.signature.0.1.will.no.longer.be.visible.from.overriding.0.in.2.3={0} ''{1}'' ya no aparece en {0} anulación de {2} ''{3}''
change.signature.0.1.with.2.visibility.wont.be.accessible.from.3.4={0} ''{1}'' con visibilidad {2} no es accesible desde {3} ''{4}''
change.info.async.throws.label=Asíncrono/Lanzar:
change.info.throw.kind.label=Tipo de lanzamiento\:
change.signature.0.can.throw.but.thrown.errors.are.not.handled=''{0}'' se puede generar, pero el error generado no se manejará
change.signature.0.is.async.but.not.awaited=''{0}'' espera una llamada pero no está marcado como asíncrono
change.info.dialog.invalid.function.name.0=Nombre de función no válido\: ''{0}''
change.info.dialog.invalid.parameter.name.0=Nombre de parámetro no válido\: ''{0}''
change.info.dialog.invalid.parameter.internal.name.0=Nombre interno del parámetro no válido\: ''{0}''
change.info.dialog.no.function.name.specified=Nombre de función no especificado
change.info.dialog.parameter.after.variadic.should.have.nonempty.name=Los parámetros que siguen a un parámetro variable deben tener un nombre que no esté en blanco
change.info.dialog.rethrows.should.have.throwing.parameter=La función ''relanzamientos'' debe tomar un parámetro de función de lanzamiento
change.info.default.value.code.comment=Por defecto \={0}
refactor.base.declaration=Refactorizando el valor predeterminado {0,choice,1\#declaration|2\#declaration}
refactor.only.current.declaration=Refactorizar sólo la declaración actual
refactor.0.overrides.method.of.1={0} anula el método de {1}
refactor.0.overrides.property.of.1={0} anula las propiedades de {1}
refactor.0.overrides.initializer.of.1={0} anula el inicializador de {1}
refactor.0.overrides.subscript.of.1={0} anula el subíndice de {1}
refactor.0.overrides.associated.type.of.1={0} anula el tipo de asociación de {1}
refactor.0.overrides.declaration.in.1={0} anula mi declaración {1}
doc.comments.enable.markdown=Para formatear claramente los comentarios de su documento, active el complemento Markdown
editor.appearance.type.hints=Mostrar sugerencias de tipo Swift
editor.appearance.error.hints=Mostrar sugerencias de error de Swift
action.Swift.ShowSwiftIDETest.text=Ejecutar un informe en Swift IDE
context.declaration=Declaración
context.statement=Construcción
color.settings.argument.label=Identificador//etiqueta de argumento
color.settings.tuple.label=Identificador//etiqueta de tupla
color.settings.tuple.type.label=Identificador//Etiqueta de tipo tupla
command.name.extract.function=Extracción de funciones
color.settings.directive.condition=Palabras clave y directivas//Condiciones de la directiva
color.settings.directive.flag=Palabras clave y directivas//Marcas de directivas
intention.category.swift=Rápido
syntax.error.subscript.can.throw.in.property.initializer=Los inicializadores de propiedades pueden generar accesos de subíndice pero no errores
syntax.error.property.can.throw.in.property.initializer=Los inicializadores de propiedades pueden generar accesos a propiedades pero no errores
syntax.error.interpolation.can.throw.in.property.initializer=Los inicializadores de propiedades pueden generar interpolaciones pero no errores
syntax.error.subscript.can.throw.in.default.argument=Los accesos a subíndices en argumentos predeterminados pueden generar errores, pero no
syntax.error.property.can.throw.in.default.argument=Los accesos a propiedades en argumentos predeterminados pueden generar errores, pero no pueden generarlos.
syntax.error.interpolation.can.throw.in.default.argument=En los argumentos predeterminados, se pueden generar interpolaciones, pero no se pueden generar errores.
syntax.error.subscript.can.throw.not.marked.with.try=El acceso al subíndice se puede iniciar pero no marcar como 'intentar'
syntax.error.property.can.throw.not.marked.with.try=El acceso a la propiedad se puede descartar pero no marcar como 'probar'
syntax.error.interpolation.can.throw.not.marked.with.try=La interpolación se puede realizar pero no marcar como "intentar"
syntax.error.subscript.can.throw.not.marked.with.try.not.handled=El acceso al subíndice puede generar resultados, pero no se marcará como "intentar" y no se manejará ningún error.
syntax.error.property.can.throw.not.marked.with.try.not.handled=El acceso a la propiedad puede generarse, pero no se marcará como un "intento" y no se manejará ningún error.
syntax.error.interpolation.can.throw.not.marked.with.try.not.handled=La interpolación puede arrojar resultados, pero no se marcará como un "intento" y no se manejará ningún error.
syntax.error.subscript.can.throw.not.marked.with.try.not.exhaustive=El acceso al subíndice puede generar, pero no está marcado como "intentar" y la captura circundante está incompleta
syntax.error.property.can.throw.not.marked.with.try.not.exhaustive=El acceso a la propiedad puede arrojar, pero no está marcado como "intentar" y la captura circundante está incompleta
syntax.error.interpolation.can.throw.not.marked.with.try.not.exhaustive=La interpolación puede lanzar, pero no está marcada como 'intento' y la captura circundante no está completa.
syntax.error.subscript.can.throw.but.it.is.executed.in.a.non.throwing.autoclosure=Los accesos a subíndices se pueden lanzar, pero se ejecutan en un cierre automático que no se lanza
syntax.error.property.can.throw.but.it.is.executed.in.a.non.throwing.autoclosure=Los accesos a propiedades se ejecutan en cierres automáticos que pueden generar pero no generar
syntax.error.interpolation.can.throw.but.it.is.executed.in.a.non.throwing.autoclosure=La interpolación se ejecuta en un cierre automático que puede lanzar pero no lanza.
syntax.error.subscript.can.throw.but.it.is.not.marked.with.try.and.it.is.executed.in.a.non.throwing.autoclosure=Los accesos a subíndices pueden generar, pero no están marcados como 'intentar' y se ejecutan en un cierre automático que no permite generar
syntax.error.property.can.throw.but.it.is.not.marked.with.try.and.it.is.executed.in.a.non.throwing.autoclosure=Los accesos a la propiedad pueden generar, pero no están marcados como "intentar" y se ejecutan en un cierre automático que no permite generar
syntax.error.interpolation.can.throw.but.it.is.not.marked.with.try.and.it.is.executed.in.a.non.throwing.autoclosure=La interpolación puede arrojar, pero no está marcada como "intento" y se ejecuta en un cierre automático sin lanzamiento.
syntax.error.call.rethrows.function.can.only.throw.parameter.call.not.handled=Es posible que se realice la llamada, pero el error no se gestionará. Una función declarada como 'relanzamiento' solo se lanzará si su parámetro lo hace.
syntax.error.subscript.rethrows.function.can.only.throw.parameter.call.not.handled=El acceso al subíndice puede generar resultados, pero no se manejará ningún error. Una función declarada como 'relanzamiento' solo se lanzará si su parámetro lo hace.
syntax.error.property.rethrows.function.can.only.throw.parameter.call.not.handled=Los accesos a la propiedad pueden generar errores, pero no se manejarán. Una función declarada como 'relanzamiento' solo se lanzará si su parámetro lo hace.
syntax.error.interpolation.rethrows.function.can.only.throw.parameter.call.not.handled=La interpolación puede generar errores, pero no se manejarán. Una función declarada como 'relanzamiento' solo se lanzará si su parámetro lo hace.
syntax.error.call.rethrows.function.can.only.throw.parameter.call.not.marked.with.try.not.handled=Es posible que la llamada se produzca, pero no se marcará como un "intento" y no se gestionará ningún error. Una función declarada como 'relanzamiento' solo se lanzará si su parámetro lo hace.
syntax.error.subscript.rethrows.function.can.only.throw.parameter.call.not.marked.with.try.not.handled=El acceso al subíndice puede generar resultados, pero no se marcará como un "intento" y no se manejará ningún error. Una función declarada como 'relanzamiento' solo se lanzará si su parámetro lo hace.
syntax.error.property.rethrows.function.can.only.throw.parameter.call.not.marked.with.try.not.handled=El acceso a la propiedad puede generarse, pero no se marcará como un "intento" y no se manejará ningún error. Una función declarada como 'relanzamiento' solo se lanzará si su parámetro lo hace.
syntax.error.interpolation.rethrows.function.can.only.throw.parameter.call.not.marked.with.try.not.handled=La interpolación puede arrojar resultados, pero no se marcará como un "intento" y no se manejará ningún error. Una función declarada como 'relanzamiento' solo se lanzará si su parámetro lo hace.
searching.for.implementations=Buscando implementación...
searching.for.subclasses=Buscando subclases...
searching.for.overriders=Buscando anulación...
inspection.missing.doc.comment.parameter.item=Comentarios de documentación y firmas de funciones no coincidentes
inspection.missing.doc.comment.parameter.item.error=El parámetro {0} no se describe en los comentarios de la documentación.
inspection.missing.doc.comment.parameter.item.fix=Actualizar comentarios de documentación
intention.unwrap.with.if.let=Desenvolver opcional con 'if let'
intention.unwrap.with.guard.let=Desenvolver opcional con 'guard let'
code.style.indent.method.chain=Sangría del método de cadena:
syntax.error.iteration.can.throw.not.marked.with.try=La iteración se puede lanzar pero no marcar como 'intentar'
syntax.error.iteration.can.throw.not.marked.with.try.not.handled=La iteración puede arrojar resultados, pero no se marcará como un "intento" y no se manejará ningún error.
syntax.error.iteration.can.throw.not.marked.with.try.not.exhaustive=La iteración puede arrojar, pero no está marcada como "intento" y la captura adjunta no está completa
intention.add.try.to.iteration=Agregue 'intentar' a la iteración
code.style.wrapping.method.chain.dot.on.new.line='.' en una nueva línea.
intention.generate.documentation.comment=Agregar comentarios al documento
color.settings.associated.type=Tipo//Tipo relacionado
intention.swift.module.info=Mostrar información del módulo
goto.class.kind=Tipo
goto.class.kinds.title=Tipo
code.style.wrapping.guard.else=Else
code.style.wrapping.guard.else.always=Siempre salto de línea
code.style.wrapping.guard.else.wrapped=Envolver con condiciones
code.style.wrapping.guard.else.never=Sin envolver
intention.replace.if.else.with.single.return=Reemplazar si no con una sola devolución
