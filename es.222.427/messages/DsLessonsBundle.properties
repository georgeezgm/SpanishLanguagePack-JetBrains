jupyter.onboarding.module.name=온보딩 투어
jupyter.onboarding.module.description={0}의 주요 기능에 관한 간략한 개요입니다.
jupyter.onboarding.lesson.name={0} 알아보기
jupyter.onboarding.intro=DataSpell에서 제공하는 Jupyter Notebook 지원을 통해 로컬 Notebook을 생성 및 연결할 수 있으며, 원격으로 작업하고, 코드 셀을 실행 및 디버그할 수 있습니다.
jupyter.onboarding.balloon.workspace.view=줄 표시를 클릭하여 {0} 도구 창을 엽니다.
jupyter.onboarding.balloon.attach.button=이 아이콘을 클릭하여 디렉터리를 연결하고 {0} 디렉터리를 선택합니다.
jupyter.onboarding.balloon.add.notebook=새 Notebook을 추가해보겠습니다. {0}을(를) 마우스 오른쪽 버튼으로 클릭하고 {1}을(를) 선택합니다.
jupyter.onboarding.notebook.name={0}와 같은 아무 이름이나 입력하고 {1}을(를) 누르세요.
jupyter.onboarding.install.jupyter=IDE, 프로젝트 혹은 파일에서 문제가 발견되면 <ide/>이(가) 에디터 위에 특별한 알림을 표시하여 빠른 수정을 제안합니다. Python 인터프리터 중 하나에 Jupyter가 설치되지 않았기 때문에 이 알림을 받으셨습니다. 계속하려면 {0}을(를) 클릭하여 Jupyter 패키지를 설치하세요.
jupyter.onboarding.wait.jupyter.installed=설치가 완료될 때까지 기다립니다.
jupyter.onboarding.wait.indexing=이제 IDE이(가) 설치된 패키지의 데이터를 수집해야 합니다. 시간이 다소 소요됩니다.
jupyter.onboarding.install.pandas=<ide/>은(는) 에디터에서 바로 오류와 문제를 강조 표시합니다. 빨간색 줄은 {0} 패키지를 설치해야 한다는 의미입니다. 강조 표시된 단어 {1}(으)로 커서를 이동하고 놓고 {2}을(를) 누릅니다.
jupyter.onboarding.run.first.sample=이 수업을 위해 생성된 샘플 코드 셀입니다. {0}을(를) 눌러 실행하세요.
jupyter.onboarding.open.results.in.tab=출력 영역에서 셀 실행의 결과를 미리보기 할 수 있습니다. {0} 링크를 클릭하여 별도의 에디터 탭에서 데이터 프레임을 엽니다.
jupyter.onboarding.return.to.editor=Notebook으로 돌아갑시다.
jupyter.onboarding.second.cell.intro=Python 커널 데이터 프레임을 토대로 일부 matplotlib 그래프를 빌드해보겠습니다. 두 번째 셀에서 파이 차트에 필요한 첫 번째 열의 이름이 누락되었습니다.
jupyter.onboarding.install.matplotlib={0}을(를) 설치해보겠습니다. {1}을(를) 눌러서 컨텍스트 액션을 호출합니다.
jupyter.onboarding.insert.second.cell=이제 두 번째 셀을 추가합니다. {0}을(를) 클릭하거나 {1}을(를) 누릅니다.
jupyter.onboarding.start.completion=플롯에 포함하고자 하는 열의 이름을 빠르게 완성할 수 있습니다. {0} 입력을 시작하면 코드 완성 목록이 나타납니다. 또는 {1}을(를) 누르고 계속 입력하여 목록을 줄일 수도 있습니다.
jupyter.onboarding.finish.completion={0}이(가) 선택되었는지 확인하고 {1}을(를) 누르세요.
jupyter.onboarding.third.cell.intro=이제, 초기 데이터 세트를 수정하고 Python 3.4 및 3.5의 평균 커널 수를 계산해보겠습니다.
jupyter.onboarding.right.click.for.split=함수와 사용 위치를 다양한 셀에 두겠습니다. 마우스 오른쪽 버튼으로 클릭하고 컨텍스트 메뉴에서 {0}을(를) 선택합니다.
jupyter.onboarding.apply.split={0}을(를) 클릭하세요.
jupyter.onboarding.invoke.search.everywhere=현재의 셀과 그 아래의 모든 셀을 실행할 수 있습니다. {0}을(를) 두 번 눌러서 필요한 IDE 액션을 찾습니다.
jupyter.onboarding.start.typing.run.below={0} 대화상자를 기억하세요. 코드나 IDE에서 동작이나 설정과 관련된 엔티티를 찾는 데 도움을 줍니다. {1}을(를) 입력해 보세요.
jupyter.onboarding.press.run.below=필요한 항목을 선택할 때 {0}을(를) 누르세요. {1} 및 {2}을(를) 포함하고 잇는 몇 개의 다른 액션들이 있으므로 올바른 액션을 선택하세요.
jupyter.onboarding.debug.introduction=실행 오류가 발생한 것 같습니다. 기본적으로 출력 영역의 역추적은 접혀 있습니다. 펼치면 세부 정보를 미리 볼 수 있습니다.
jupyter.onboarding.debugging.workflow.description=함수 정의와 그 호출은 다양한 셀에 있으니 <strong>주의</strong>하세요. 이러한 상황에서 디버그를 수행하려면 먼저 모든 셀을 실행(이미 완료됨)해야 합니다. 그런 다음, 정의가 있는 셀을 디버그해야 합니다. 지금 시작해보겠습니다.
jupyter.onboarding.start.to.debug.call=이제 함수 호출이 있는 셀을 디버그할 수 있습니다.
jupyter.onboarding.fix.problem=탐지된 오류를 수정하려면 열 이름을 수정해야 합니다. {0}(하이픈을 가운데에 배치)을(를) {1}(밑줄 필요)(으)로 바꾸세요.
jupyter.onboarding.rerun.all=이제 수정된 셀을 다시 실행할 준비가 되었습니다. {0}을(를) 클릭하거나 {1}을(를) 누르세요.
jupyter.onboarding.congratulations=축하합니다! 수업을 완료하셨습니다.
jupyter.onboarding.confirm.package.installation={0}을(를) 눌러 설치를 호출합니다.
jupyter.onboarding.wait.pandas.installation=패키지가 설치될 때까지 기다리세요.
jupyter.onboarding.run.and.select.below=이 셀을 실행하고 아래의 셀을 추가합니다. {0} 액션으로 이를 수행할 수 있습니다. {1}을(를) 클릭하거나 {2}을(를) 누르세요.
jupyter.onboarding.cleaunup.informer={0} 디렉터리를 작업공간에서 제거하려면, {0}을(를) 오른쪽 클릭하고 컨텍스트 메뉴에서 <strong>디렉터리 분리...</strong>를 선택하세요. 혹은 정리 알림에서 링크를 클릭할 수도 있습니다.
jupyter.onboarding.cleanup.notification.title=학습 데이터로 작업 공간정리
jupyter.onboarding.cleanup.notification.description=작업공간에서 학습 파일이 있는 디렉터리를 분리하시겠어요?
jupyter.onboarding.cleanup.notification.action={0} 분리
jupyter.onboarding.promo.text=단 7분만에 {0}에 익숙해지고 Jupyter 노트북을 편집하는 법을 배우세요
dataspell.read.only.message=데모 학습 모듈입니다. 여기서 개인 작업을 수행하지 마십시오. IDE가 덮어 씌울 수도 있습니다. <a href="ift.allow">클릭</a>하여 학습 모듈 수정을 활성화하세요.
