configurable.naming.convention.header.guard.style=Estilo de protección de encabezado\:
configurable.naming.convention.several.rules.hint=Si hay varias reglas para un tipo de entidad, se utiliza la última regla de la lista.
inspection.clangd.general=Errores y advertencias de clangd
inspection.naming.convention.edit.settings.link=Editar la configuración de estilo de código
inspection.naming.convention.rename.fix=Cambiar nombre a {0}
inspection.naming.convention.rename.header.guard.fix=Cambiar el nombre del protector de encabezado a {0}
inspection.context.sensitive.analysis=Análisis basado en el contexto
inspection.global.unused.analysis=Análisis globales obsoletos
inspection.inconsistent.naming=Nomenclatura inconsistente
inspection.modern.syntax=Puede utilizar la sintaxis más reciente.
inspection.loop.condition.is.not.updated=La condición del bucle no se actualiza dentro del bucle.
inspection.arc.issues=Problemas con el arco
inspection.sending.dealloc=Enviando ''dealloc''
inspection.assign.in.condition.with.self=''\='' en expresión condicional con "self"
inspection.usage.of.api.unavailable=Dónde utilizar las API que no están disponibles en su destino de implementación
inspection.deprecated.api=Dónde utilizar API obsoletas
inspection.assign.in.condition=''\='' en expresión condicional
inspection.kr.unspecified.parameters=Pasar argumentos a una función con sintaxis de parámetros donde K y R no están especificados
inspection.hiding.non.virtual.function=Ocultar funciones no virtuales
inspection.constant.conditions=Condición constante
inspection.non.localized.string=Cadena no localizada
inspection.simplifiable.statement=Sintaxis simplificable
inspection.simplify={0} Simplificación
inspection.replace.enable_if.with.require=Cambie enable_if a requerido
inspection.simplify.condition=Simplifique la "condición \=\= verdadera"
inspection.simplify.ternary=Simplifique "condición1? verdadero\: condición2"
inspection.not.released.var=La liberación debe estar en dealloc o en uno de sus destinatarios.
unused.inspection.run.in.headers=Ejecutar comprobaciones en archivos de encabezado
clang.based.inspection.arc.and.properties=ARC y @properties
clang.based.inspection.lexical.or.preprocessor.issue=Problemas de vocabulario o preprocesador
clang.based.inspection.api.notes.issue=Problemas con las notas API
clang.based.inspection.openmp.issue=Problema con OpenMP
clang.based.inspection.vtable.issue=Problemas de ABI de VTable
clang.based.inspection.coroutines.issue=Problema de rutina
clang.based.inspection.concepts.issue=Cuestión de concepto
clang.based.inspection.dependency.directive.source.minimization.issue=Problema de minimización de fuente de directiva de dependencia
inspection.message.modern.syntax.can.be.used=Puedes usar la última sintaxis.
inspection.message.non.localized.string=Cadena no localizada\: {0}
inspection.message.not.released.in.dealloc.method={0} no se lanzó con el método ''dealloc''
inspection.message.misses.call.to.super.dealloc.at.last.statement=Falta la llamada [super dealloc] en la última declaración de {0}
intention.family.name.add.call.to.super.dealloc=Se agregó la llamada [super dealloc]
intention.family.name.delete.method=Eliminar método
inspection.message.never.used={0} es {1,choice, 0# asignado pero no se accede en absoluto|1# no se utiliza en absoluto}
inspection.display.name.simplifiable.statement=Sintaxis simplificable
checkbox.simplify.if.true.while.false=Si (verdadero)", "mientras (falso)
checkbox.simplify.condition.true=Simplifique la "condición \=\= verdadera"
checkbox.simplify.condition1.true.condition2=Simplifique "condición1? verdadero\: condición2"
checkbox.simplify.if.condition1.return.true.return.condition2="si (condición1) devuelve verdadero; devuelve condición2;" 단순화
intention.family.name.simplify={0} Simplificación
intention.family.name.simplify.expression=Simplificar expresiones
intention.name.simplify={0} Simplificación
inspection.name.unconstrained.variable.type=Tipos de variables sin restricciones
no.suggestions.for.properties.of.class=No hay sugerencias para propiedades de clase {0}
no.suggestions.for.members=No hay sugerencias para miembros de {0}
quick.fix.place.parentheses.around=Coloque paréntesis alrededor
quick.fix.send.release.message.instead.dealloc=Enviar mensaje de "liberación" en lugar de "dealloc"
quick.fix.append.nil.argument=Añadir argumento "nulo"
quick.fix.remove.extra.declarators=Eliminar declarador adicional
quick.fix.remove.statement=Eliminar sintaxis
quick.fix.remove.pure.specifier=Eliminar especificador puro
quick.fix.change.pure.specifier=Cambie el especificador puro a ''\= 0''
quick.fix.remove.from.base.classes.list=Eliminar ''{0}'' de la lista de clases base
quick.fix.remove.redundant.cast=Eliminar moldes redundantes
quick.fix.remove.initializer=Eliminar inicializador
quick.fix.insert.keyword=Insertar ''{0}''
quick.fix.remove.property=Quitar propiedad
quick.fix.remove.declaration=Eliminar declaración
inspection.message.unterminated.string.literal=Literal de cadena sin cerrar
inspection.message.invalid.suffix.on.raw.string=Sufijo incorrecto en cadena sin formato
quick.fix.remove.attribute=Eliminar atributo
quick.fix.remove.useless.import=Eliminar declaraciones de importación innecesarias
quick.fix.remove.useless.include=Eliminar inclusiones innecesarias
quick.fix.optimize.imports=Optimización de declaración import
quick.fix.optimize.includes=Incluir optimización
quick.fix.change.format.specifier=Cambiar especificador de formato
quick.fix.remove.arguments=Eliminar argumento
quick.fix.copy.superclass.from.interface=Copiar la clase principal desde la interfaz
quick.fix.copy.superclass.to.interface=Copiar la clase principal a la interfaz
quick.fix.remove.superclass=Eliminar clase principal
quick.fix.remove.user.defined.getter.method=Eliminar métodos getter definidos por el usuario
quick.fix.remove.user.defined.setter.method=Eliminar métodos de establecimiento definidos por el usuario
quick.fix.remove.superclass.reference=Eliminar referencia de clase principal
quick.fix.remove.instance.variable.list=Eliminar lista de variables de instancia
quick.fix.remove.protocols.list=Eliminar lista de protocolos
quick.fix.remove.method.body=Eliminar el cuerpo del método
quick.fix.remove.synthesize.dynamic.statement=Eliminar la sintaxis ''@synthesize''/''@dynamic''
quick.fix.remove.synthesize.statement=Eliminar la sintaxis ''@synthesize''
quick.fix.remove.accessor=Eliminar descriptor de acceso
inspection.message.error.after.macro.substitution=Se produjo un error después de la sustitución de macros\:
inspection.message.was.not.declared.in={0} no está declarado en {1}
inspection.message.hides.non.virtual.function={0} oculta la función no virtual en {1}
intention.name.make.function.const=Establezca {0} en {1,choice, 0\# constante|1\# no constante}
quick.fix.make_default=Establecer {0} como predeterminado
quick.fix.add_return_statement=Agregar declaración de devolución
intentions.add.constructor.initializer.for.field=Agregar inicializador de constructor para campos
intentions.add.initializer=Agregar inicializador
intentions.add.parameters.to.constructor=Agregue {0} como parámetro al constructor
intentions.add.parameter.initWith=Añadir a ''initWith...'' como parámetro...
intentions.check.raw.string=Inspección de cuerdas crudas
intentions.add.super.constructor.call=Agregar llamada de constructor predeterminada faltante
intentions.add.super.protocol.by.class=Adopción de protocolo específico de clase
intentions.add.super.protocol.by.private.category=Adopción de protocolos por categoría privada
intentions.add.modifier=Añadir ''{0}''
intentions.change.arc.attribute=Cambiar propiedades de arco
intentions.change.function.signature=Cambiar firma de función
intentions.change.type.capitalized=Tipo de cambio
intentions.change.type=Tipo de cambio
intentions.change.visibility=Cambiar visibilidad
intentions.convert.id.to.instance=Cambie el tipo de retorno ''id'' a ''tipo de instancia''
intentions.replace.if.else.with.ternary=Reemplace ''si más'' con ''?\:''
intentions.replace.ternary.with.if.else=Cambiar ''?\:'' a ''si no''
intentions.convert.objc.literal=Convertir a literales Objective-C
intentions.convert.to.instance.variable=Convertir a variable de instancia
intentions.convert.to.property=Convertir a atributo
intentions.convert.type=Conversión de tipo
intentions.create.matching.constructor=Crea un constructor que coincida con la clase base.
intentions.create.matching.constructor.in=Crear constructor predeterminado en {0}
intentions.create.new.matching.constructor=Crear un nuevo constructor a partir de {0} clases base coincidentes
intentions.create.new.constructor=Crea un nuevo constructor ''{0}()''
intentions.predeclare.function={0} declaración previa
intentions.create.interface=Crear interfaz para {0}
intentions.create.missing.default.switch.case=Crear caso predeterminado faltante
intentions.create.missing.switch.cases=Crear caja de interruptor faltante
intentions.declare.method.in.interface=Declaración de método dentro de la interfaz
intentions.declare.method.in.private.category=Declaración de método en categoría privada.
intentions.declare.method.in={0} mi declaración de método
intentions.declare.property.as.readwrite=Declarar propiedades en categorías privadas como ''lectura y escritura''
intentions.replace.and.with.or=Reemplazar ''\\&\\&'' con ''||''
intentions.replace.or.with.and=Cambie ''||'' a ''\\&\\&''
intentions.deMorgan.law=Ley de demorgan
intentions.declare.member.in=Declarado en\:
intentions.remove.private.category.message=¿Estás seguro de que deseas eliminar las categorías privadas vacías?
intentions.remove.private.category.title=Eliminar categorías privadas
intentions.extract.category=Extraer categorías para esta clase
intentions.extract.if=Extraer ''si''
intentions.extract.if.with.text=Extraer ''si ({0})''
intentions.extract.private.category=Extraer categorías privadas para esta clase
intentions.extract.protocol=Extracción de protocolo para esta clase.
intentions.extract.super.class=Extracción de clase principal
intentions.extract.super.protocol=Extracción del protocolo principal
intentions.flip.operator=Invertir {0}
intentions.flip.operator.to=Invertir {0} a {1}
intentions.flip.binary.operation=Invertir operaciones binarias
intentions.generate.property=Crear propiedad
intentions.implement.required.methods=Implementar métodos requeridos de la interfaz ''{0}''
intentions.create.implementation=Crear implementación de {0}
intentions.implement.method={0} implementación
intentions.implement.accessor.methods=Implementación del método de acceso
intentions.implement.accessor.methods.for=Implementando el método de acceso para {0}
intentions.cast.expression=Conversión de tipo de expresión
intentions.introduce.typedef=Insertar definición de tipo
intentions.introduce.typedef.for.type=Insertar typedef para el tipo {0}
intentions.invert.if.condition=Invertir la condición "si"
intentions.merge.if.else=Si no, fusionarse
intentions.merge.nested.ifs=Fusionar declaraciones if anidadas
intentions.add.braces.statement=Agregue llaves a la declaración ''{0}''
intentions.remove.braces.statement=Eliminar llaves de la declaración ''{0}''
intentions.migrate.to.arc=Migrar a ARC
intentions.move.instance.variables=Mover variables de instancia a la implementación
intentions.move.to.interface=Ir a la interfaz
intentions.move.to.private.category=Ir a categoría privada
intentions.import.predeclare.symbol=Importar/predeclarar símbolos
intentions.release.variables=Liberación variable
intentions.remove.suppression=Eliminar la inhibición
intentions.remove.subj=Eliminar ''{0}''
intentions.remove.unnecessary.parentheses=Eliminar paréntesis innecesarios
intentions.rename.reference=Cambiar nombre de referencia
intentions.rename.symbol=Cambiar nombre del símbolo
intentions.replace.type.with.auto=Cambiar tipo a ''auto''
intentions.reuse.declaration=Reutilización de declaraciones
intentions.change.superclass=Cambiar clase padre
intentions.split.declaration=Dividir en declaración y asignación
intentions.split.function=Dividir una función en declaración y definición
intentions.split.into.separate.declarations=Dividido en declaraciones individuales
intentions.suppress.for=Suprimir para {0}
intentions.suppress.option.for=Suprimir "{0}" sobre {1}
intentions.suppress.for.statement=Suprimir por sintaxis
intentions.suppress.for.method=Suprimir método/función
intentions.suppress.for.file=Suprimir para el archivo
intentions.suppress.all.for.file=Suprimir todos los diagnósticos para el archivo {0}
intentions.surround.with.if.responds=Envuélvalo con "if ([respondsToSelector\: ])"
intentions.switch.property.dot.method=Cambiar ''.'' y notación de método
intentions.switch.to.getter.notation=Cambiar a la notación del método getter
intentions.switch.to.setter.notation=Cambiar a la notación del método setter
intentions.switch.to.dot.notation=Cambiar a notación ''.''
intentions.synthesize.property=Integración de propiedades
intentions.wrap.with.stringFormat=Envolviendo con stringWithFormat
intentions.insert.cast.use.modern=Usar operadores de conversión de tipo C++
intentions.split.function.progress.text=Localizando definición...
intentions.change.function.const.action=Cambiar calificador constante
intentions.change.function.volatile.action=Cambiar calificador volátil
intentions.change.gcc.attribute.action=Cambiar propiedad ''{0}''
intentions.change.method.signature.add.parameters=Agregar parámetro
intentions.change.method.staticness.action=Crear instancia/clase de método
intentions.change.property.attribute.action=Cambiar atributos de propiedad
intention.name.make.function.volatile=Establezca {0} en {1,choice, 0\# volátil|1\# no volátil}
intention.name.change.type=Cambie el tipo {0,choice, 0\#return |1\#} de {1} a ''{2}''{3}
intention.name.initialize={0} restablecer
intention.name.remove.type.modifier=Establecer {0} como no-{1}
intention.name.add.constructor.initializer=Agregar inicializador de constructor para {0}
intention.name.change.superclass=Cambie la clase principal de {0} de ''{1}'' a ''{2}''
intention.name.add.last.parameter=Agregue el último parámetro ''{0}'' a {1}
intention.name.remove.last.parameter=Eliminar el último parámetro ''{0}'' de {1}
intention.name.change.signature=Cambiar la firma de {0} a ''{1}''
intention.dialog.message.existing.default.values.removed=Se eliminarán todos los valores predeterminados existentes para el parámetro en {0}. ¿Quieres continuar?
intention.family.name.remove.declaration=Eliminar {1,choice, 0\#{0}|1\#declaración siguiente}
intention.name.safe.delete={0} Eliminación segura
intention.family.name.safe.delete=Eliminación segura
intention.name.remove=Eliminar {0}
intention.family.name.remove=Eliminar {0}
intention.name.leave.initializer=Dejar inicializador después de {0}
intention.family.name.leave.initializer=Dejar inicializador después de {0}
intention.name.add.type.modifier=Establezca {0} en {1}
intention.name.reuse.previous.declaration=Reutilizar la declaración anterior de {0}
intention.name.rename={0} cambio de nombre
intention.name.rename.reference=Cambiar nombre de referencia
intention.name.predeclare.protocol.class={0,choice, 0\#Protocol ''|1\#Class ''|2\#Structure ''}{1}'' Predeclaración
intention.name.change.visibility=Establezca {0} en {1}
intention.name.cast.expression.to=Transmitir expresión a ''{0}''
intention.family.name.extract.assignment=Extracción por sustitución
intention.name.class=Clase
intention.name.static=Silencio
intention.name.cpp.class=Clase C ++
intention.name.create.new.category=Crear nueva categoría en {0} con {1}
intention.name.create.new=Crear nuevo {0}
intention.name.add.suffix=Agregar sufijo
intention.name.add.call.to.base.constructor=Agregar llamada de constructor predeterminada para ''{0}''
intention.name.make=Establezca {0} en {1}
intention.name.choice.enable.disable=''{1}{0,choice, 0\#'' habilitado|1\#'' deshabilitado para {2}}
intention.name.add.parameters=Agregar parámetro a {0}
intention.name.make.class.method.instance.method=Establezca ''{0}{1,choice, 0\#'' como método de clase|1\#'' como método de instancia}
intention.dialog.message.change.type.as.well=¿También deseas cambiar el tipo de ''{0}''?
intention.family.name.convert.literal.type=Conversión de tipo literal\: agregar ''@''
intention.name.call={0} llamada
intention.name.import.which={0,choice, 0\#cuál|1\#símbolo} ''{1}''
intention.name.import={0} importar
intention.name.import.from=Desde {0}
intention.import.popup.title=Símbolos para importar
intention.import.command.name={0} importar
intention.name.make.function.virtual=Establezca {0}\:\:{1} en {2,choice, 0\# virtual puro|1\# virtual}
intention.name.move.declaration=Ir a declaración de {0}{1}
intention.family.name.remove.extra.initializers=Eliminar inicializadores adicionales
intention.family.name.remove.initializer=Eliminar inicializador
intention.family.name.send.message=Enviar mensaje ''{0}''
intention.family.name.add.return.statement=Agregar declaración de devolución
intention.family.name.simplify.condition=Simplifique la condición para ''{0}''
intention.name.change.format.specifier=Cambiar el especificador de formato a ''{0}''
intention.family.name.remove.statement=Eliminar sintaxis
intention.family.name.remove.directive=Eliminar directiva
intention.family.name.simplify.choice=Simplifique {1,choice, 0\#expresión|1\#{0}}
intention.family.name.change.type.to.auto=Cambie el tipo ''{0}'' a ''auto''
intention.family.name.change.to.nil=Cambiar a ''nulo''
intention.name.use.constant=Usando la constante ''{0}''
intention.family.name.use.enum.constant=Usando constantes de enumeración
intention.name.add=Añadir "{0}"
intention.family.name.add.bridge.cast=Agregar transformación de tipo puente
intention.family.name.make.default=Establecer {0} como predeterminado
inspection.message.condition.always.true=La condición siempre es verdadera
inspection.message.condition.always.false=La condición siempre es falsa
inspection.message.condition.always.true.when.reached=Siempre es cierto cuando se cumple la condición
inspection.message.condition.always.false.when.reached=Cuando se alcanza la condición siempre es falsa.
inspection.message.reference.may.be.choice.null=La referencia puede ser {0,choice, 0\#nil|1\#null}
inspection.message.infinite.recursion=Recursividad infinita
inspection.message.value.never.used=El valor no se utiliza en absoluto.
inspection.message.file.too.complex.to.perform.context.sensitive.data.flow.analysis=El archivo es demasiado complejo para realizar un análisis de flujo de datos específico del contexto.
inspection.message.file.too.complex.to.perform.data.flow.analysis=El archivo es demasiado complejo para realizar un análisis de flujo de datos.
inspection.message.unreachable.code=Código inalcanzable
inspection.message.endless.loop=Bucle infinito
inspection.group.name.general=Común
progress.text.evaluating.unused.symbols=Evaluación de símbolos obsoletos
intention.name.delete={0} Eliminar
intention.name.choice.superclass={1,choice, 0\#{0} |1\#} superclase de {2}
intention.name.set.superclass=Establezca ''{0}'' en {1}
inspection.message.if.statement.has.identical.branches=La declaración ''if'' tiene la misma rama
inspection.message.statement.can.be.simplified=Puedes simplificar tu sintaxis.
inspection.message.expression.can.be.simplified.to=La expresión se puede simplificar a ''{0}''
inspection.option.unused.variable.initializers=Advertir sobre inicializador de variable no utilizado
intention.family.name.inline.parameter=Parámetros en línea
intention.name.inline={0} en línea
inspection.message.not.updated.in.loop={0} usado en una condición de bucle no se actualizará dentro del bucle
inspection.message.address.local.variable.may.escape.function=La dirección de una variable local puede escapar de una función.
inspection.message.may.point.to.out.of.scope.memory={0} puede indicar que la memoria está fuera de los límites
inspection.message.may.point.to.deallocated.memory={0} puede indicar memoria liberada
inspection.message.is.never.used={0} no se utiliza en absoluto
inspection.message.only.assigned.but.never.accessed={0} solo está asignado y nunca se accede a él
inspection.message.calls.unreachable=Todas las llamadas a {0} son inalcanzables
inspection.not.implements.protocol=Protocolo no implementado
inspection.not.in.hierarchy.message=Mensaje no en jerarquía
inspection.hides.class.scope=Alcance de clase oculto
inspection.method.is.later.in.the.scope=La declaración del método tiene un alcance tardío
inspection.accessors.were.overridden=Accesor redefinido
intentions.group=C y C++
intentions.group.definition=C y C++/Definición
intentions.group.declarations=C y C++/Declaración
intentions.group.operators=C y C++/Operadores
intentions.group.control.flow=C y C++/Flujo de control
intentions.group.objc=Objective-C
inspection.message.may.point.to.invalidated.memory={0} puede indicar memoria invalidada.
