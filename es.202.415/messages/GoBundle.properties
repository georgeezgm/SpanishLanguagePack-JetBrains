action.DlvDebugger.ViewAsGroup.text=다음으로 표시
action.DlvRewindAction.description=이전 중단점까지 프로그램 뒤로 실행
action.DlvRewindAction.text=되돌리기
action.DlvToggleThreadsAction.description=스레드 표시
action.DlvToggleThreadsAction.text=스레드 표시
action.Go.NewGoFile.description=새로운 Go 파일 생성
action.Go.NewGoFile.text=Go 파일
action.GoAddContentRootFromGopath.description=현재 프로젝트에 선택한 디렉토리 추가
action.GoAddContentRootFromGopath.text=현재 프로젝트에 디렉토리 추가
action.GoCallHierarchyPopupMenu.BaseOnThisDeclaration.text=이 선언에 기반
action.GoCoreDumpAction.text=코어 덤프 열기...
action.GoFmtFileAction.description=go fmt 유틸리티로 선택한 파일 서식 지정
action.GoFmtFileAction.text=Go Fmt 파일
action.GoFmtProjectAction.description=go fmt 유틸리티로 프로젝트 서식 지정
action.GoFmtProjectAction.text=Go Fmt 프로젝트
action.GoGenerateConstructorAction.description=구조체에 대한 생성자 함수 생성
action.GoGenerateConstructorAction.text=생성자
action.GoGenerateFileAction.description=선택한 파일에서 go generate 실행
action.GoGenerateFileAction.text=Go Generate 파일
action.GoGenerateGetterAction.description=필드의 getter 메소드 생성
action.GoGenerateGetterAction.text=Getter
action.GoGenerateGetterSetterAction.description=필드의 getter 및 setter 메소드 생성
action.GoGenerateGetterSetterAction.text=Getter 및 Setter
action.GoGenerateSetterAction.description=필드의 setter 메소드 생성
action.GoGenerateSetterAction.text=Setter
action.GoIdeNewProjectAction.text=프로젝트...
action.GoImportsFileAction.description=goimports 유틸리티로 선택한 파일에 대한 가져오기 최적화
action.GoImportsFileAction.text=Goimports 파일
action.GoOpenProjectFromGopath.description=선택한 디렉토리를 프로젝트로 열기
action.GoOpenProjectFromGopath.text=프로젝트로 디렉토리 열기
action.GoRemoveContentRootAction.description=현재 프로젝트에서 선택한 콘텐츠 루트 제거
action.GoRemoveContentRootAction.text=디렉토리 연결 해제...
action.GoReplayTraceAction.text=저장된 추적 디버그...
action.GoVetFileAction.description=go vet 도구로 선택한 파일 또는 디렉토리 린트
action.GoVetFileAction.text=Go Vet 파일
action.Vgo.NewVgoFile.description=새로운 Go 모듈 파일을 생성합니다
action.Vgo.NewVgoFile.text=Go 모듈 파일
action.SaveAs.text=다른 이름으로 저장...
action.WelcomeScreen.CreateDirectoryProject.text=새 프로젝트...
action.WelcomeScreen.OpenDirectoryProject.text=프로젝트 열기...
action.com.goide.vgo.actions.VgoSyncAction.description=go 모듈 동기화
action.com.goide.vgo.actions.VgoSyncAction.text=Go 모듈 동기화
action.com.goide.vgo.actions.VgoTidyAction.description=모듈에서 `go mod tidy` 실행
action.com.goide.vgo.actions.VgoTidyAction.text=Go Mod Tidy
action.go.fill.paragraph=단락 채우기
action.GoShareInPlaygroundAction.text=Playground에서 공유
action.GoShareInPlaygroundAction.description=Go Playground 에서 현재 파일을 공유합니다
action.GoShareInPlaygroundAction.error=Playground에서 파일을 공유하지 못했습니다. {0}
action.GoShareInPlaygroundAction.empty.id=Playground가 빈 ID를 반환합니다
action.GoShareInPlaygroundAction.confirmation=Do you want to upload {0} to Go playground and make it public?
action.GoShareInPlaygroundAction.notification.text=File shared in Go Playground\: <a href\="{0}">{0}</a>
action.GoShareInPlaygroundAction.notification.copyUrl=Copy url to clipboard
empty.text.go.to.type=유형으로 이동
empty.text.switch.view.or.keymap=뷰 또는 단축키 전환
go.app.engine.choose.file.action.text=파일 선택...
go.app.engine.not.gae.sdk.validation.message=선택한 SDK는 App Engine에 적합하지 않습니다다.<br>App Engine용 SDK는 다음 링크를 통해 확인하실 수 있습니다<a href\="https\://cloud.google.com/appengine/downloads">https\://cloud.google.com/appengine/downloads</a>
go.app.engine.run.confinguration.not.gae.sdk.validation.message=<code>{0}</code> 모듈의 Go SDK가 AppEngine식이 아닙니다
go.app.engine.run.configuraiton.sdk.is.not.set.validation.message=<code>{0}</code>모듈에 Go SDK가 지정되지 않았습니다.
go.app.engine.run.configuraiton.is.deprecated.validation.message=Go App Engine 실행 구성은 Go 1.11 이상 버전에서 더 이상 사용할 수 없습니다.<br/>대신 Use Go Build 실행 구성을 이용하십시오.
go.app.engine.run.configuration.admin.port.label=관리 포트(&D)\:
go.app.engine.run.configuration.name=Go App Engine
go.app.engine.run.configuration.description=Go 앱 엔진 웹 서버 러너
go.app.engine.run.configuration.config.files.label=구성 파일(&C)\:
go.app.engine.run.configuration.host.label=Nombre del &servidor\:
go.app.engine.run.configuration.server.port.label=&Puerto\:
go.app.engine.run.configuration.invalid.port.validation.message=유효하지 않은 포트
go.app.engine.run.configuration.invalid.admin.port.validation.message=유효하지 않은 관리자 포트
go.app.engine.wizard.description=\ Google App Engine을 사용하는 Go 애플리케이션을 개발을 위해 Go App Engine 프로젝트를 생성합니다.<br/>새 모듈에는 기본 설정과 Go 기본 핸들러가 포함됩니다.
go.app.engine.wizard.name=App Engine
go.modules.wizard.description=종송성 관리를 위해 Go 모듈을 사용하는 Go 애플리케이션 및 라이브러리를 개발하려면 Go 모듈 프로젝트를 생성하십시오.
go.wizard.description=애플리케이션 및 라이브러리를 개발하려면 Go 프로젝트를 생성하십시오.<br/>이 옵션은 빈 Go 프로젝트를 생성합니다.
go.background.task.running.title=실행 중...
go.background.task.compiling.title=컴파일 중...
go.cgo.file.type.description=Cgo 파일
go.checkin.factory.fmt.commit.anyway.question=그래도 커밋하시겠습니까?
go.checkin.factory.fmt.failed.message=일부 파일에서 GoFmt는 0이 아닌 코드를 반환합니다.
go.checkin.factory.fmt.not.started.message=go fmt. {0} 실행이 불가합니다.
go.colors.and.fonts.bad.character=잘못된 문자
go.colors.and.fonts.braces.and.operators.braces=중괄호
go.colors.and.fonts.braces.and.operators.brackets=대괄호
go.colors.and.fonts.braces.and.operators.colon=콜론
go.colors.and.fonts.braces.and.operators.comma=쉼표
go.colors.and.fonts.braces.and.operators.dot=마침표
go.colors.and.fonts.braces.and.operators.operator=연산자
go.colors.and.fonts.braces.and.operators.parentheses=소괄호
go.colors.and.fonts.braces.and.operators.semicolon=세미콜론
go.colors.and.fonts.braces.and.operators=중괄호 및 연산자
go.colors.and.fonts.comments.block.comment=블록 주석
go.colors.and.fonts.comments.comment.keyword=주석 키워드
go.colors.and.fonts.comments.comment.reference=주석 참조
go.colors.and.fonts.comments.line.comment=줄 주석
go.colors.and.fonts.comments=Comentario
go.colors.and.fonts.declarations.constants.builtin.constant=내장 상수
go.colors.and.fonts.declarations.constants.local.constant=로컬 상수
go.colors.and.fonts.declarations.constants.package.exported.constant=노출된 상수 패키징
go.colors.and.fonts.declarations.constants.package.local.constant=로컬 상수 패키징
go.colors.and.fonts.declarations.constants=상수
go.colors.and.fonts.declarations.function.parameter=함수 매개변수
go.colors.and.fonts.declarations.functions.builtin.function=내장 함수
go.colors.and.fonts.declarations.functions.exported.function=노출된 함수
go.colors.and.fonts.declarations.functions.package.local.function=로컬 함수 패키징
go.colors.and.fonts.declarations.functions=함수
go.colors.and.fonts.declarations.label=라벨
go.colors.and.fonts.declarations.method.receiver=메소드 리시버
go.colors.and.fonts.declarations.package=패키지
go.colors.and.fonts.declarations.types.package.exported.interface=노출된 인터페이스 패키징
go.colors.and.fonts.declarations.types.package.exported.struct=노출된 구조체 패키지
go.colors.and.fonts.declarations.types.package.local.interface=로컬 인터페이스 패키징
go.colors.and.fonts.declarations.types.package.local.struct=로컬 구조체 패키징
go.colors.and.fonts.declarations.types.type.specification=유형 사양
go.colors.and.fonts.declarations.types=유형
go.colors.and.fonts.declarations.variables.builtin.variable=내장 변수
go.colors.and.fonts.declarations.variables.local.variable=지역 변수
go.colors.and.fonts.declarations.variables.package.exported.variable=노출된 변수 패키징
go.colors.and.fonts.declarations.variables.package.local.variable=지역 변수 패키징
go.colors.and.fonts.declarations.variables.reassignment.in.short.variable.declaration=짧은 변수 선언 재할당
go.colors.and.fonts.declarations.variables.scope.declared.variable=선언된 변수 범위 지정
go.colors.and.fonts.declarations.variables.shadowing.variable=그림자 변수
go.colors.and.fonts.declarations.variables.struct.exported.member=비노출 멤버 구성
go.colors.and.fonts.declarations.variables.struct.local.member=로컬 멤버 구성
go.colors.and.fonts.declarations.variables=변수
go.colors.and.fonts.declarations=선언
go.colors.and.fonts.identifier=식별자
go.colors.and.fonts.keyword=키워드
go.colors.and.fonts.number=숫자
go.colors.and.fonts.references.function.calls.builtin.function.call=내장 함수 호출
go.colors.and.fonts.references.function.calls.exported.function.call=노출된 함수 호출
go.colors.and.fonts.references.function.calls.local.function.call=로컬 함수 호출
go.colors.and.fonts.references.function.calls=함수 호출
go.colors.and.fonts.references.type.references.builtin.type.reference=내장 유형 참조
go.colors.and.fonts.references.type.references.package.exported.interface=노출된 인터페이스 패키징
go.colors.and.fonts.references.type.references.package.exported.struct=노출된 구조체 패키징
go.colors.and.fonts.references.type.references.package.local.interface=로컬 인터페이스 패키징
go.colors.and.fonts.references.type.references.package.local.struct=로컬 구조체 패키징
go.colors.and.fonts.references.type.references.type.specification=유형 사양
go.colors.and.fonts.references.type.references=유형 참조
go.colors.and.fonts.references.variable.calls.exported.variable.call=노출된 변수 호출
go.colors.and.fonts.references.variable.calls.local.variable.call=지역 변수 호출
go.colors.and.fonts.references.variable.calls.package.local.variable.call=지역 변수 호출 패키징
go.colors.and.fonts.references.variable.calls.struct.exported.member.call=비노출 멤버 호출 구성
go.colors.and.fonts.references.variable.calls.struct.local.member.call=로컬 멤버 호출 구성
go.colors.and.fonts.references.variable.calls=변수 호출
go.colors.and.fonts.references=참조
go.colors.and.fonts.string.invalid.escape=잘못된 이스케이프
go.colors.and.fonts.string.text=텍스트
go.colors.and.fonts.string.valid.escape=유효한 이스케이프
go.colors.and.fonts.string=문자열
go.completion.insert.if.not.nil.statement.command.name=''if value \!\= nil {...}'' 구문 삽입
go.completion.insert.literal.command.name=Go 리터럴 삽입
go.completion.insert.type.name.command.name=유형 이름 삽입
go.completion.insert.return.statement.command.name=return 문 삽입
go.completion.method.like.completion.advertisement=첫 인수로 표현식을 허용하는 함수를 보려면 {0} 을(를) 누르세요
go.completion.method.like.completion.command.name=함수의 메소드식 코드 완성
go.core.dump.dialog.dump.path.label=코어 덤프(&C)\:
go.core.dump.dialog.executable.label=실행 파일(&E)\:
go.core.dump.dialog.invalid.core.dump.validation.message=유효한 코어 덤프 파일이 아닙니다.
go.core.dump.dialog.invalid.executable.validation.message=실행 가능한 파일이 아닙니다.
go.core.dump.dialog.specify.core.dump.validation.message=코어 덤프 지정
go.core.dump.dialog.specify.executable.validation.message=실행 파일 지정
go.core.dump.failed.to.start.error.message=코어 덤프 {0} 디버거를 시작하지 못했습니다\: {1}
go.core.dump.session.name=코어 덤프 {0}
go.create.new.file.action.command.name=Go 파일 {0} 생성
go.create.new.file.action.name=Go 파일
go.create.new.file.dialog.title=새 Go 파일
go.create.new.file.empty.file.kind.name=빈 파일
go.create.new.file.simple.application.kind.name=간단한 애플리케이션
go.debug.show.goroutines.action.name=Goroutines 표시
go.debug.show.threads.action.name=스레드 표시
go.declarations.intentions.category=Go/선언
go.dep.checking.dep.projects.task.name=Dep 프로젝트 검사
go.dep.enable.integration.checkbox=dep 통합 활성화
go.edit.auto.import.settings.action.name=자동 가져오기 설정 편집
go.auto.import.and.completion.title=자동 가져오기 및 코드 완성
go.auto.import.and.completion.add.exclude.label=자동 가져오기 및 코드 완성에서 제외할 가져오기 경로를 입력합니다.
go.element.is.not.go.expression.error.hint=선택 영역이 Go 표현식을 포함하지 않습니다.
go.exclude.import.path.dialog.empty.path.validation.message=가져오기 경로는 공백일 수 없습니다.
go.exclude.import.path.dialog.title=가져오기 경로 제외
go.exclude.import.path.from.completion.action.name=\ ''{0}'' 제외
go.feature.trainer.specify.sdk.to.continue.learning.title=학습을 계속하려면 Go SDK 지정
go.feature.trainer.too.old.go.sdk.notification.title=Go SDK이 너무 오래되었습니다
go.feature.trainer.too.old.go.sdk.notification.text=현재 프로젝트 SDK로 <b>{0}</b> 이(가) 설정되어 있습니다. 튜토리얼을 이용할 시 최상의 경험을 얻으려면 최소 <b>{1}</b> 버전의 Go SDK를 사용하는 것을 권장합니다.
go.file.type.description=Go 파일
go.fix.searching.for.usages.progress.title=사용 위치 검색 중...
go.fix.change.parameters.parameter={0,choice,0\#매개변수|1\#매개변수|2\#매개변수}
go.fix.add.missing.new.line.name=누락된 줄 바꿈 추가
go.fix.add.comma.name=쉼표 추가
go.fix.add.whitespace.name=공백 추가
go.fix.add.import.for.side.effects.name=부작용 가져오기
go.fix.add.prefix.to.comment.name=주석에 ''{0}'' 접두사 추가
go.fix.add.return.statement.name=return 문을 추가합니다.
go.fix.change.import.sorting.settings.name=정렬 설정 가져오기 변경
go.fix.change.result.parameters.result.parameter={0,choice,0\#결과 매개변수|1\#결과 매개변수|2\#결과 매개변수}
go.fix.create.directory.text={1}에 디렉토리 {0} 생성
go.fix.change.parameters.name=Cambiar parámetros
go.fix.change.result.parameters.in.assignment.name=할당에서 결과 매개변수 변경
go.fix.change.result.parameters.in.call.name=호출에서 결과 매개변수 변경
go.fix.change.result.parameters.in.return.name=반환에서 결과 매개변수 변경
go.fix.change.result.parameters.in.variable.specification.name=변수 사양에서 결과 매개변수 변경
go.fix.change.result.parameters.name=결과 매개변수 변경
go.fix.change.signature.from.function.type.name=함수 유형에서 시그니처 변경
go.fix.change.signature.from.usage.text=사용 위치에서 시그니처 변경
go.fix.change.signature.from.function.type.text={0}의 시그니처 ''{1}''을(를) ({2}) ({3})(으)로 변경
go.fix.change.signature.from.usage.add=''{0}''을(를) {1,number,ordinal}번째 {2}(으)로 {3} ''{4}''에 추가
go.fix.change.signature.from.usage.remove={2} ''{3}''에서 {0,number,ordinal}번째 {1}을(를) 제거
go.fix.change.signature.from.usage.change=\ {2} ''{3}''의 {0,number,ordinal} {1}을(를) ''{4}''에서 ''{5}''(으)로 변경
go.fix.change.signature.from.usage.mix={1} ''{2}''의 {0}을(를) ({3})(으)로 변경
go.fix.convert.to.is.equal.name=다음으로 변환 '\=\='
go.fix.delete.name={0} 삭제
go.fix.delete.text={0} ''{1}'' 삭제
go.fix.delete.range.name=요소 삭제
go.fix.delete.third.index.name=제3색인 삭제
go.fix.delete.blank.argument.name="빈 인수 삭제"
go.fix.export.name=내보내기
go.fix.export.field.name=필드 내보내기
go.fix.replace.tilda.with.hat.name='~'를 '^'로 교체
go.fix.replace.assign.with.equals.name='\:\='을 '\='로 교체
go.fix.replace.equals.with.assign.name=다음으로 교체 '\:\='
go.fix.replace.with.nil.with.side.effects.name=nil로 교체(의미 변경)
go.fix.replace.with.correct.defer.name=올바른 defer 구문으로 대체
go.fix.add.function.call.name=함수 호출 추가
go.fix.delete.redundant.index.name=불필요한 색인 삭제
go.fix.delete.conversion.name=변환 삭제
go.fix.delete.conversion.with.side.effects.name=변환 삭제(의미 변경)
go.fix.disable.vendoring.in.module.text=모듈 ''{0}''에서 벤더링 실험 지원 비활성화
go.fix.disable.vendoring.in.module.name=모듈에서 벤더링 실험 지원 비활성화
go.fix.drop.suffix.text=유닛 특정 접미사 ''{0}'' 삭제
go.fix.drop.suffix.name=유닛 특정 접미사 삭제
go.fix.multiple.packages.name=패키지 이름 변경
go.fix.multiple.packages.text=패키지 이름을 {0}(으)로 변경
go.fix.choose.package.name=패키지 이름 선택
go.fix.simplify.bool.expr.name=표현식 단순화
go.fix.failed.to.simplify.if.statement='if' 문을 단순화하지 못했습니다.
go.fix.view.all.duplicates.name=중복 이름 보기
go.fix.view.all.duplicates.text=''{0}''의 중복 이름 보기
go.fix.view.all.duplicates.targets.tab.text=''{0}'' 중복
go.fix.view.all.duplicates.targets.tool.window.title={1}의 {0}
go.fix.view.all.duplicates.targets.usages.word=중복
go.fix.view.all.duplicates.targets.code.usages.string=발견된 중복
go.fix.add.function.block.name=본문 추가
go.fix.add.keys.to.struct.literal.value.name=키 추가 및 제로 값 삭제
go.fix.add.local.var.for.expression.name=지역 변수 삽입
go.fix.add.missing.return.value.name=누락된 반환 값 추가
go.fix.add.pointer.name=포인터 추가
go.fix.add.explicit.dereference.name=명시적 역참조 추가
go.fix.always.false.if.name='if' 브랜치 제거
go.fix.always.true.if.name=나머지 브랜치 제거 및 현재 'if' 문 단순화
go.fix.convert.int.to.string.using.conversion.call={0} 호출을 사용해 정수를 문자열로 변환
go.fix.convert.string.to.byte.name=문자열을 바이트로 변환
go.fix.convert.to.expected.type.name=다음으로 변환
go.fix.convert.to.expected.type.text=''{0}''(으)로 변환
go.fix.create.wrapper.type.name=유형 생성
go.fix.delete.all.unused.parameters.name=사용되지 않는 매개변수 모두 삭제
go.fix.delete.ampersand.and.type.in.composite.lit.name=중복 유형 삭제
go.fix.delete.extra.expressions.name=추가 표현식 삭제
go.fix.delete.import.name=import 문 삭제
go.fix.delete.impossible.asserted.type=불가능한 어설션이 적용된 유형 삭제
go.fix.delete.parameter.names.name=매개변수 이름 삭제
go.fix.delete.unused.parameter.name=사용되지 않는 매개변수 삭제
go.fix.empty.signature.name=시그니처 수정
go.fix.exclude.from.unhandled.inspection.name=이제 이 메소드/함수를 보고하지 않음
go.fix.extract.empty.slice.to.var.declaration.name=nil 슬라이스 선언으로 교체(의미 변경)
go.fix.extract.to.own.declaration.name=자체 선언으로 추출
go.fix.finish.call.name=호출식 종료
go.fix.ignore.explicitly.name=명시적으로 무시
go.fix.ignore.unused.call.result.name=사용되지 않는 호출 결과 무시
go.fix.implement.missing.methods.name=누락된 메소드 구현
go.fix.insert.blank.identifiers.name=할당 문의 왼쪽에 빈 식별자 삽입
go.fix.navigate.to.name=다음으로 이동
go.fix.navigate.to.text={0}(으)로 이동
go.fix.optimize.imports.name=import 문 최적화
go.fix.place.build.tag.before.package.name=패키지 전 빌드 태그 배치
go.fix.remove.redundant.bool.literal.name=다음으로 단순화
go.fix.replace.with.name=다음으로 교체
go.fix.replace.with.text=''{0}''(으)로 교체
go.fix.rename.to.name=다음으로 이름 변경
go.fix.rename.to.text=''{0}''로 이름 바꾸기
go.fix.rename.all.receivers.name=모든 리시버 이름 변경
go.fix.rename.all.receivers.text=모든 리시버 이름을 ''{0}'' (으)로 변경
go.fix.replace.expression.name=앞에 추가 '\\&'
go.fix.signature.name=시그니처 수정
go.fix.sort.imports=가져오기 정렬
go.fix.simplify.expression.to.boolean.literal.name=조건 단순화
go.fix.simplify.to.text=\ ''{0}''(으)로 단순화
go.fix.simplify.something.to.text=''{0}''을(를) ''{1}''(으)로 단순화
go.fix.suppress.inspection.for.text={0} 억제
go.fix.suppress.all.inspections.for.text=모든 {0} 검사 억제
go.fix.unwrap.parens.name=소괄호 줄 바꿈 해제
go.fix.convert.to.format.function.name=서식 지정 함수로 변경
go.fix.convert.to.format.function.text=서식 지정 함수로 ''{0}'' 변경
go.fix.introduce.local.variable.for.expression=''{0}'' 지역 변수 삽입
go.fix.introduce.method.name=메소드 생성
go.fix.introduce.method.text=메소드 ''{0}''을(를) 생성합니다.
go.fix.introduce.function.name=함수 생성하기
go.fix.introduce.function.text=''{0}''함수 생성
go.fix.field.with.the.same.tag=''{1}'' 태그가 같은 필드 ''{0}''
go.fix.field.repeats.tag.with.value=필드 ''{1}'' 이(가) ''{3}'' 필드의 ''{2}'' 값을 가진 ''{1}'' 태그를 반복합니다
go.fix.export.field=필드 내보내기
go.fix.convert.int.to.rune=정수를 rune으로 변환
go.fix.unpack.slice.name=슬라이스 패킹 해제 중
go.fix.enable.gopath.indexing.name=GOPATH 색인화 활성화
go.fix.rename.file.to.go2.name=파일 이름을 .go2로 변경
go.fix.rename.file.to.go2.text=파일 이름을 ''{0}''(으)로 변경
go.get.package.fix.family.name='go get' 명령 실행
go.use.gopath.from.system.environment.checkbox=시스템 환경에 정의된 GOPATH 사용
go.index.entire.gopath.checkbox=전체 GOPATH 색인 생성
go.index.entire.gopath.tooltip=비활성화 상태에서는 프로젝트 및 벤더링된 패키지만 색인 생성됩니다.<br/>따라서 전반적인 성능이 향상되지만 GOPATH 패키지를 사용할 수 없습니다.
go.inspection.assignment.nil.without.explicit.type.display.name=명시적 유형이 없는 할당 nil
go.inspection.assignment.nil.without.explicit.type.message=명시적 유형이 없는 nil을 할당할 수 없음
go.inspection.assignment.to.receiver.display.name=리시버에 할당
go.inspection.binary.expressions.types.check.display.name=이항 표현식 입력 검사
go.inspection.bool.condition.display.name=bool 조건
go.inspection.comment.has.no.leading.space.display.name=주석에 선행 공간이 없습니다.
go.inspection.comment.of.exported.element.starts.with.incorrect.name.display.name=노출된 요소의 주석이 잘못된 이름으로 시작됩니다.
go.inspection.comment.should.have.package.prefix.message=패키지 주석이 ''Package {0}...'' 양식이어야 합니다
go.inspection.comment.should.be.without.article.message=주석 형식이 ''{0}...'' 이어야/여야 합니다(선택적으로 사설 포함)
go.inspection.comment.should.be.meaningful.message=주석이 의미있어야 하며 그렇지 않으면 제거되어야 합니다
go.inspection.defer.go.statement.calls.recover.or.panic.directly.display.name=Defer/go 문은 바로 recover 또는 panic 함수를 호출합니다
go.inspection.defer.or.go.should.not.call.function.message={0} 은(는) {1} 을(를) 직접 호출할 수 없습니다
go.inspection.defer.in.loop.display.name=루프 내 연기
go.inspection.deprecated.element.display.name=더 이상 사용되지 않는 요소
go.inspection.division.by.zero.display.name=0으로 나누기
go.inspection.duplicate.case.display.name=중복 case 문
go.inspection.duplicate.names.display.name=중복된 이름 
go.inspection.empty.declaration.display.name=빈 선언
go.inspection.empty.declaration.message=빈 선언 {0}
go.inspection.empty.slice.declared.via.literal.display.name=리터럴을 통해 선언된 빈 슬라이스
go.inspection.error.string.should.not.be.capitalized.or.end.with.punctuation.display.name=오류 문자열은 대문자로 처리되거나 문장 부호로 끝날 수 없습니다
go.inspection.exceeded.shift.expression.display.name=초과된 시프트 표현식
go.inspection.expected.equals.got.assign.display.name=기대\: '\=' , 결과\: '\:\='
go.inspection.explicit.dereference.required.display.name=명시적 역참조 필요
go.inspection.explicit.dereference.calling.method.with.receiver.message=리시버 {1}(유형 {2}) 이(가) 있는 메소드 {0} 을(를) 호출하려면 명시적 역참조가 필요합니다
go.inspection.explicit.dereference.accessing.field.message={1}(유형 {2}) 의 필드 {0} 에 액세스하려면 명시적 역참조가 필요합니다
go.inspection.exported.element.should.have.comment.display.name=노출된 요소에는 주석이 포함되어야 합니다.
go.inspection.exported.element.should.have.its.own.declaration.display.name=노출된 요소에는 자체 선언이 포함되어야 합니다.
go.inspection.extended.method.expression.syntax.before.go.1.10.display.name=Go 1.10 이전 확장된 메소드 표현식 구문
go.inspection.extended.method.expression.syntax.before.go.1.10.message=예기치 않은 리시버 유형, 확장된 메소드 표현식 구문은 Go 1.10부터 사용 가능합니다
go.inspection.function.call.display.name=함수 호출
go.inspection.imported.package.name.as.name.identifier.display.name=이름 식별자로서 가져온 패키지 이름
go.inspection.impossible.type.assertion.display.name=불가능한 유형 어설션
go.inspection.impossible.interface.type.assertion=불가능한 인터페이스 유형 어설션
go.inspection.incorrect.strings.replace.count.argument.display.name=잘못된 strings.Replace 계산 인수
go.inspection.incorrect.usage.of.println.display.name=Println/Printf-like 함수의 잘못된 사용
go.inspection.incorrect.usage.of.the.errors.as.function.display.name=errors.As 함수의 잘못된 사용
go.inspection.incorrect.usage.of.the.sync.display.name=sync/atomic 패키지의 잘못된 사용
go.inspection.locks.mistakenly.passed.by.value=값에 의해 실수로 전달된 잠금
go.inspection.possible.misuse.of.unsafe.pointer={0} 오용 가능성이 있습니다
go.inspection.invalid.conversions.of.uintptr.to.unsafe.Pointer=uintptr을 unsafe.Pointer로 변환할 수 없음
go.inspection.infinite.for.loop.display.name=무한 for 루프
go.inspection.invalid.composite.literals.display.name=잘못된 복합 리터럴
go.inspection.invalid.expression.conversion.display.name=잘못된 표현식 변환
go.inspection.invalid.index.or.slice.expression.display.name=잘못된 색인 또는 슬라이스 표현식
go.inspection.problem.cannot.take.address={0} 의 주소를 취할 수 없음
go.inspection.problem.invalid.indirect=잘못된 {0}({1} 유형) 간접 참조
go.inspection.invalid.package.import.display.name=패키지 가져오기 오류
go.inspection.invalid.receiver.type.display.name=잘못된 리시버 유형
go.inspection.invalid.recursive.type.display.name=잘못된 재귀 유형
go.inspection.int.to.string.conversion=정수에서 문자열로 유형 변환
go.inspection.jump.over.declaration.display.name=선언 건너뛰기
go.inspection.loop.closure.display.name=함수 리터널에 의해 캡쳐된 루프 변수
go.inspection.loop.closure.message=함수 리터널 {1} 에 의해 캡쳐된 루프 변수 {0}
go.inspection.malformed.build.tag.display.name=잘못된 빌드 태그
go.inspection.malformed.struct.tag.display.name=잘못된 구조체 태그
go.inspection.mismatched.byte.and.string.display.name=일치하지 않는 유형\: 바이트 및 문자열
go.inspection.missing.trailing.comma.before.newline.in.composite.literal.display.name=복합 리터럴의 줄 바꿈 앞에서 후행 쉼표 누락
go.inspection.multiple.packages.in.directory.declaration.display.name=디렉토리 선언의 여러 패키지
go.inspection.name.starts.with.package.name.display.name=이름은 패키지 이름으로 시작됩니다.
go.inspection.nilness.analyzer.display.name=Nilness Analyzer
go.inspection.non-function.call.display.name=비함수 호출
go.inspection.non-standard.signature.for.well.known.function.names.display.name=잘 알려진 함수 이름의 비표준 시그니처
go.inspection.receiver.has.generic.name.display.name=리시버에 제네릭 이름이 포함됩니다.
go.inspection.redundant.blank.argument.in.range.display.name=범위 내의 중복된 빈 인수
go.inspection.redundant.comma.display.name=중복된 쉼표
go.inspection.redundant.import.alias.display.name=중복된 import 별칭
go.inspection.redundant.parentheses.display.name=중복 소괄호
go.inspection.redundant.second.index.in.slices.display.name=슬라이스의 중복된 두 번째 색인
go.inspection.redundant.semicolon.display.name=중복 세미콜론
go.inspection.redundant.type.conversion.display.name=중복 형식 변환
go.inspection.redundant.types.in.composite.literals.display.name=복합 리터럴의 중복 유형
go.inspection.reserved.word.used.as.name.display.name=이름으로 사용되는 예약 단어
go.inspection.self.assignment.display.name=자체 할당
go.inspection.self.import.display.name=자체 import 문
go.inspection.shadowing.variable.display.name=그림자 변수
go.inspection.struct.initialization.without.field.names.display.name=필드 이름 없이 구조체 초기화
go.inspection.struct.initialization.settings.report.for.local.type.checkbox=지역 유형 정의 또한 보고
go.inspection.struct.initialization.settings.report.for.literals.without.type.checkbox=유형 없는 구조체 리터럴 보고
go.inspection.struct.field.has.tag.but.is.not.exported=Struct field ''{0}'' has ''{1}'' tag but is not exported
go.inspection.type.can.be.omitted.display.name=유형 생략 가능
go.inspection.type.can.be.omitted.message=유형 생략 가능
go.inspection.types.compatibility.check.display.name=유형 호환성 검사
go.inspection.underscore.used.as.value.display.name=값으로 사용되는 밑줄
go.inspection.unexpected.tilda.display.name=예기치 않은 '~'
go.inspection.unexported.return.type.of.exported.function.display.name=노출된 함수의 비노출 반환 유형
go.inspection.unhandled.error.display.name=처리되지 않는 오류
go.inspection.unit.specific.suffix.for.time.duration.display.name=time.Duration 유닛 전용 접미사
go.inspection.unnecessarily.exported.identifier.display.name=불필요하게 노출된 식별자
go.inspection.unreachable.code.display.name=도달할 수 없는 코드
go.inspection.unknown.field.message=구조체 리터럴 내 알 수 없는 필드 {0}
go.inspection.ambiguous.reference.message=모호한 참조 {0}
go.inspection.unresolved.reference.message=해결되지 않은 참조 {0}
go.inspection.unresolved.type.message=해결되지 않은 유형 {0}
go.inspection.unresolved.label.message=해결되지 않은 라벨 {0}
go.inspection.unresolved.reference.display.name=해결되지 않는 참조
go.inspection.unresolved.disabled.gopath.indexing.display.name=비활성화된 GOPATH 색인화
go.inspection.unresolved.disabled.gopath.indexing.message=비활성화된 GOPATH 색인화가 적절한 참조 해결을 방지할 수 있습니다
go.inspection.unsorted.imports.display.name=정렬되지 않는 import 문
go.inspection.unused.constant.display.name=사용되지 않는 상수
go.inspection.unused.constant.message=사용되지 않은 상수 {0}
go.inspection.unused.exported.function.display.name=사용되지 않는 노출 함수
go.inspection.unused.function.message=사용되지 않은 함수 {0}
go.inspection.unused.label.message=사용되지 않은 라벨 {0}
go.inspection.unused.exported.type.display.name=사용되지 않는 노출 유형
go.inspection.unused.function.display.name=사용되지 않는 함수
go.inspection.unused.function.or.method.call.result.display.name=사용되지 않는 함수 또는 메소드 호출 결과
go.inspection.unused.global.variable.display.name=사용되지 않는 전역 변수
go.inspection.unused.import.display.name=Declaración import obsoleta
go.inspection.unused.parameter.display.name=사용되지 않는 매개변수
go.inspection.unused.parameter.message=사용되지 않은 매개변수 {0}
go.inspection.unused.type.display.name=사용되지 않는 유형
go.inspection.unused.type.message=사용되지 않은 유형 {0}
go.inspection.unused.variable.display.name=사용되지 않는 변수
go.inspection.unused.variable.message=사용되지 않는 변수 {0}
go.inspection.usage.of.cgo.in.tests.is.not.supported.display.name=테스트에서 cgo 사용이 지원되지 않습니다.
go.inspection.usage.of.snake.case.display.name=Snake_Case 표기법 사용
go.inspection.used.as.value.in.condition.display.name=조건에서 값으로 사용됨
go.inspection.wrong.test.declaration.display.name=잘못된 테스트 선언
go.inspection.incorrect.call.to.unmarshal.display.name=Unmarshal이 올바르지 않은 인수와 함께 호출되었습니다
go.inspection.struct.tag.value.consists.only.of.spaces=구조체 태그 값이 공백만을 포함합니다
go.inspection.suspicious.space.in.the.beginning.of.the.struct.tag.value=구조체 태그값 시작 부분의 의심스러운 공백
go.inspection.suspicious.space.in.the.end.of.the.struct.tag.value=구조체 태그값 끝 부분의 의심스러운 공백
go.inspection.suspicious.extra.space.in.struct.tag.value=구조체 태그값 내 추가 공백
go.inspection.suspicious.space.in.struct.tag.value=구조체 태그값 내 의심스러운 공백
go.inspection.missing.closing.double.quote.character.in.value=값 내 닫는 큰따옴표 문자 누락
go.inspection.expected.opening.double.quote.character.after.colon='\:' 뒤에 여는 큰따옴표 문자 필요
go.inspection.expected.colon.after.key=키 뒤에 '\:' 필요
go.inspection.key.is.empty.or.starts.from.incorrect.symbol=키가 비어 있거나 올바르지 않은 심볼에서 시작합니다
go.inspection.key.is.not.separated.by.space.from.previous.pair=키가 이전 쌍과 공백으로 구분되어 있지 않습니다
go.inspection.test.name.display.name=형식이 잘못된 함수 이름
go.inspection.problem.malformed.test.name=형식이 잘못된 테스트 이름\: 'Test' 뒤 첫 문자는 소문자여야 합니다
go.inspection.problem.malformed.benchmark.name=형식이 잘못된 벤치마크 이름\: Benchmark' 뒤 첫 문자는 소문자여야 합니다
go.inspection.problem.malformed.example.suffix=형식이 잘못된 예시 이름\: 접미사 {0} 이(가) 소문자로 시작해야 합니다
go.inspection.problem.example.for.unknown.identifier=예시가 알 수 없는 식별자를 참조합니다\: {0}
go.inspection.problem.example.for.unknown.field.or.method=예시가 알 수 없는 필드 또는 메소드를 참조합니다\: {0}.{1}
go.intention.add.comment.name=주석 추가
go.intention.add.declaration.parens.name=선언에 소괄호 추가
go.intention.add.dot.import.alias.name=마침표(.) import 문 별칭 추가
go.intention.add.fmt.string.argument.name=형식 문자열 인수 추가
go.intention.add.import.alias.name=import 문 별칭 추가
go.intention.convert.to.short.var.declaration.name=짧은 var 선언으로 변환
go.intention.convert.to.var.declaration.name=짧은 선언으로 변환
go.intention.create.field.getter.and.setter.name=getter 및 setter 생성
go.intention.create.field.getter.and.setter.command.name=필드 접근자 생성
go.intention.create.field.getter.and.setter.already.exists.error.hint=이미 존재합니다
go.intention.create.field.getter.name=getter 생성
go.intention.create.field.setter.name=setter 생성
go.intention.expand.signature.types.name=시그니처 유형 확장
go.intention.export.name=내보내기
go.intention.fill.all.fields.name=모든 필드 채우기
go.intention.fill.all.fields.recursively.checkbox=재귀적
go.intention.fill.all.fields.enforce.multiline.checkbox=여러 줄 실행
go.intention.fill.all.fields.command.name=구조체 채우기
go.intention.fill.all.fields.recursively.name=재귀적으로 모든 필드 채우기
go.intention.fill.fields.name=필드 채우기...
go.intention.flip.binary.operator.changes.operator.text=Invertir ''{0}'' a ''{1}''
go.intention.flip.binary.operator.changes.semantics.text=Invertir ''{0}''(Cambio semántico)
go.intention.flip.binary.operator.name=이진 연산자 반전
go.intention.flip.binary.operator.text=Invertir ''{0}''
go.intention.fmt.string.argument.bad.position.error.message=잘못된 위치
go.intention.fmt.string.argument.explicit.indices.error.message=문자열에 명시적 색인이 포함됩니다.
go.intention.fmt.string.argument.percent.with.args.error.message=문자열에 인수가 있는 %%이(가) 포함됩니다.
go.intention.fmt.string.argument.syntax.error.message=문제열에 구문 오류가 포함됩니다.
go.intention.fmt.string.argument.too.few.arguments.error.message=문자열에 포함된 인수가 너무 적습니다.
go.intention.fmt.string.argument.variadic.arg.error.message=문자열에...인수가 포함됩니다.
go.intention.fmt.string.title.error.message=Fmt 문자열 인수를 추가할 수 없습니다
go.intention.generate.constructor.name=생성자 생성
go.intention.getter.already.exists.error.message=getter가 이미 존재합니다(생성되지 않음)
go.intention.getter.and.setter.already.exist.error.message=getter와 setter가 모두 이미 존재합니다
go.intention.go.to.implementation.name=구현으로 이동
go.intention.go.to.implementation.text=구현으로 이동...
go.intention.go.to.super.name=인터페이스로 이동
go.intention.go.to.super.text=인터페이스로 이동...
go.intention.implement.interface.name=인터페이스 구현
go.intention.implement.interface.text=인터페이스 구현...
go.intention.invert.if.name=Invertir if
go.intention.merge.all.declarations.name=모든 선언 병합
go.intention.merge.declaration.up.name=선언 병합
go.intention.merge.declarations.by.comma.name=쉼표를 통해 선언 병합
go.intention.move.to.struct.initialization.name=필드 할당을 구조체 초기화로 이동
go.intention.negate.boolean.expression.name.recursively.suffix=재귀적으로
go.intention.negate.boolean.expression.name=표현식 부정
go.intention.negate.boolean.expression.text=Negar ''{0}'' como ''{1}''
go.intention.negate.boolean.topmost.expression.name=최상위 표현식 부정
go.intention.negate.boolean.topmost.expression.text=최상위 ''{0}''을(를) ''{1}''(으)로 부정
go.intention.remove.declaration.parens.name=선언에서 소괄호 제거
go.intention.remove.dot.import.alias.name=마침표(.) import 문 별칭 제거
go.intention.remove.keys.from.struct.literal.value.name=\ struct 리터럴에서 키 제거
go.intention.reuse.signature.types.name=시그니처 유형 재사용
go.intention.run.go.generate.name=주석에서 go 생성 실행
go.intention.run.go.generate.on.file.name=파일에서 go 생성 실행
go.intention.run.go.generate.on.package.name=패키지에서 go 생성 실행
go.intention.run.go.generate.text=''{0}'' Go 생성
go.intention.select.fields.dialog.title=필드 선택
go.intention.setter.already.exists.error.message=setter가 이미 존재합니다(생성되지 않음)
go.intention.specify.type.name=명시적으로 유형 지정
go.intention.split.all.declarations.name=모든 선언 분할
go.intention.split.declarations.by.comma.name=쉼표로 선언 분할
go.intention.split.declarations.name=선언을 두 그룹으로 분할
go.intention.chop.arguments=인수를 별도의 줄에 배치
go.intention.chop.parameters=매개변수를 별도의 줄에 배치
go.intention.chop.composite.literal.elements=별도의 줄에 요소 배치
go.intention.join.arguments=인수를 한 줄에 배치
go.intention.join.parameters=매개변수를 한 줄에 배치
go.intention.join.composite.literal.elements=한 줄에 인수 배치
go.intention.experimental.support.for.type.parameters.family.name=제네릭(유형 매개변수에 대한 실험적 지원)
go.intention.experimental.support.for.type.parameters.enable.name=제네릭 활성화(유형 매개변수에 대한 실험적 지원)
go.intention.experimental.support.for.type.parameters.disable.name=제네릭 비활성화(유형 매개변수에 대한 실험적 지원)
go.intentions.category=Go
go.macro.bin.dirs.description=Go 도구가 있는 bin 디렉토리 경로
go.macro.executable.path.description=Go 실행 파일 경로
go.macro.file.import.path.description=현재 파일의 가져오기 경로
go.macro.file.go.path.description=GOPATH 값
go.macro.file.go.root.description=프로젝트 SDK 경로
go.mozilla.rr.dialog.specify.trace.directory.validation.message=추적 디렉토리 지정
go.mozilla.rr.dialog.trace.directory.label=추적 디렉토리(&T)\:
go.mozilla.rr.failed.to.start.error.message=rr trace {0} 디버거를 시작하지 못했습니다\: {1}
go.mozilla.rr.session.name={0} 추적
go.navigation.progress.title={0} 검색 중...
go.navigation.shadowed.method.usages.title={0} 의 그림자 메소드
go.navigation.go.to.shadowed.method.popup.title=메소드 {0} 이(가) {1} {1,choice,0\#유형|1\#유형|2\#유형}의 메소드를 가립니다
go.navigation.go.to.shadowed.method=그림자 메소드로 이동
go.navigation.go.to.super.method.popup.title=메소드 {0} 이(가) {1} {1,choice,0\#인터페이스|1\#인터페이스|2\#인터페이스}의 메소드를 구현합니다
go.navigation.go.to.super.method.find.usages.title.kind={0} 의 구현된 메소드 사양
go.navigation.go.to.super.method=메소드 사양으로 이동
go.navigation.go.to.super.popup.title=유형 {0} 이(가) {1} {1,choice,0\#인터페이스|1\#인터페이스|2\#인터페이스}를 구현합니다
go.navigation.go.to.super.find.usages.title={0}의 구현된 인터페이스
go.navigation.go.to.super=인터페이스로 이동
go.navigation.go.to.type.implementation.popup.title=유형 {0} 이(가) {1} {1,choice,0\#유형|1\#유형|2\#유형}에서 구현됨
go.navigation.go.to.method.implementation.popup.title=메소드 {0} 이(가) {1} {1,choice,0\#유형|1\#유형|2\#유형}에서 구현됨
go.navigation.go.to.implementation.find.usages.title={0}의 구현
go.navigation.go.to.implementation=구현으로 이동
go.navigation.go.to.shadowing.method.popup.title=메소드 {0} 이(가) {1} 개 {1,choice,0\#유형|1\#유형|2\#유형}에서 가려짐
go.navigation.go.to.shadowing.method.find.usages.title={0} 의 그림자 메소드
go.navigation.go.to.shadowing.method=그림자 메소드로 이동
go.navigation.recursive.call=재귀적 호출
go.notification.dep.project.out.of.sync.text=Dep 프로젝트 {0} 이(가) 일치하지 않습니다
go.notification.gokpg.toml.modified.text={0} 의 Gopkg.toml이 수정되었습니다.
go.notification.go.edit.project.settings.action.text=Go 프로젝트 설정 편집
go.notification.go.support.is.disabled.in.module.text=모듈 ''{0}'' 에서 Go 지원이 비활성화되어 있습니다
go.notification.go.support.enable.action.text=Go 지원 활성화
go.notification.go.setup.action.text=GOROOT 설정
go.notification.gopath.is.empty.text=GOPATH가 비어 있습니다
go.notification.gopath.configure.action.text=GOPATH 구성
go.notification.gopath.detected.title=GOPATH가 탐지되었습니다
go.notification.gopath.detected.text=GOPATH에서 라이브러리를 탐지했습니다. GOPATH 설정에 추가 라이브러리를 추가하십시오.
go.notification.gopath.detected.configure.gopath.action.text=GOPATH 구성
go.notification.vendoring.detected.title=벤더링 사용 위치가 탐지되었습니다
go.notification.vendoring.detected.text=<strong>벤더</strong> 디렉토리는 보통 프로젝트가 Go Vendor Experiment를 사용한다는 것을 의미합니다. 선택한 Go SDK 버전은 벤더링을 지원하지만 디폴트로 비활성화되어 있습니다. 프로젝트 설정에서 명시적으로 Go Vendor Experiment를 활성화하십시오.
go.notification.vendoring.detected.configure.go.vendor.experiment.action.text=Go Vendor Experiment 구성
go.notification.go.tool.is.missing.text=실행 파일 ''{0}'' 이(가) GOPATH에서 누락되었습니다. 해당 실행 파일을 설치하시겠습니까?
go.notification.go.tool.is.missing.run.go.get.text=GOPATH에서 ''{0}'' 을(를) 찾을 수 없음  
go.notification.go.tool.is.missing.run.go.get.invoke.go.get.action.text=''go get {0}'' 호출
go.notification.install.go.tool.action.text=Go 도구 설치
go.notification.enable.gopath.indexing.action.text=GOPATH 색인화 활성화
go.notification.gopath.indexing.disabled.text=GOPATH 색인화가 비활성화되어 있습니다
go.notification.gopath.indexing.disabled.content=프로젝트가 {0} 을(를) 사용하므로 불필요합니다.\n그래도 활성화할 수 있습니다.
go.notification.no.dependency.manager.configured.text=프로젝트에 종속성 관리자가 구성되지 않았습니다.
go.notification.dependency.manager.integration.enabled.text=Integration is enabled.
go.notification.dependency.manager.enable.integration.action.text=통합 활성화
go.notification.dependency.manager.open.settings.action.text=설정 열기
go.notification.add.to.gopath.action.text=GOPATH에 추가
go.notification.add.to.module.action.text=모듈에 추가
go.notification.create.go.mod.file.action.text=go.mod 파일 생성
go.notification.customize.ide.with.status.bar.widget.title=상태 표시줄의 스패너 아이콘으로 프로젝트 및 애플리케이션 {0} 편집
go.notification.dep.integration.title=Dep 통합
go.notification.dep.init.failed.title=Dep Init 실패
go.notification.dep.init.failed.configure.dep.action.text=Dep 구성 
go.notification.go.modules.detected.text=Go module is detected
go.notification.go.modules.detected.module.path=Module path is ''{0}''.
go.notification.disable.go.modules.integration.action.text=Disable Go modules integration
go.notification.do.not.show.action.text=Nunca ver otra vez
go.notification.cgo.optimizations.are.not.disabled=CGO_CFLAGS가 '-O0 -g'로 설정되지 않았으므로, Cgo 코드가 최적화될 수 있습니다.
go.notification.install.package.action.text={0} 설치
go.notification.modules.file.is.absent.title=go.mod 파일이 없습니다.
go.notification.obsolete.imports.code.style.detected.title=사용되지 않는 import 코드 스타일 설정이 탐지되었습니다.
go.notification.review.code.style.settings.action.text=코드 스타일 설정 검토
go.notification.run.dep.ensure.action.text=dep ensure 실행
go.notification.file.starts.with.underscore.text=''{0}'' 은(는) 이름이 ''{1}'' (으)로 시작하므로 빌드 도구에 의해 무시됩니다
go.notification.file.does.not.match.target.system.text=''{0}'' 이(가) 대상 시스템과 일치하지 않습니다. 파일이 빌드 도구에 의해 무시됩니다.
go.notification.inspections.are.disabled.text=파일에서 검사가 비활성화되어 있습니다.
go.notification.inspections.are.disabled.enabled.action.text=검사 활성화
go.notification.code.insight.features.are.disabled.text=코드 분석 기능을 사용할 수 없습니다.
go.notification.file.exceeds.size.limit.text="파일 크기({0})가 구성된 제한({1})을 초과합니다. {2}
go.notification.code.insight.disabled.for.vendored.files.text=라이브러리 내 벤더 파일에서 코드 분석 기능 편집이 비활성되었습니다
go.notification.add.vendored.package.to.project.action.text=프로젝트에 ''{0}'' 추가;
go.profiler.profile.fraction.comment.text=프로파일에 보고된 mutex 경합 이벤트의 프랙션(fraction)을 제어합니다. 평균적으로 1/프랙션 이벤트가 보고됩니다. 디폴트 프랙션 1을 사용하려면 공백으로 남겨 둡니다.
go.profiler.profile.fraction.label.text=프로파일 프랙션\:
go.profiler.profile.rate.cpu.comment.text=프로파일에 보고된 goroutine 차단 이벤트의 프랙션을 제어합니다. 프로파일러는 프로그램이 차단에 소요된 나노초마다 평균 1개의 차단 이벤트를 샘플링하는 것을 목표로 합니다. 프로파일에 모든 차단 이벤트를 포함하려면 속도를 1로 설정합니다. 디폴트 속도 1을 사용하려면 공백으로 남겨 둡니다.
go.profiler.profile.rate.label.text=프로파일 속도\:
go.profiler.profile.illegal.rate.validation.message=잘못된 프로파일 속도\: {0}
go.profiler.profile.illegal.profile.fraction.validation.message=잘못된 프로파일 비율\: {0}
go.profiler.profile.rate.memory.comment.text=프로파일에 기록 및 보고된 메모리 할당을 제어합니다. 프로파일러는 할당된 바이트 속도마다 평균 1개의 할당을 샘플링하는 것을 목표로 합니다. 프로파일에 할당된 모든 차단을 포함하려면 속도를 1로 설정합니다. 디폴트 속도 512Kb를 사용하려면 공백으로 남겨 둡니다.
go.profiler.blocking.profiler.name=프로파일러 차단 중
go.profiler.blocking.profile.prefix=프로파일러 차단 중
go.profiler.cpu.profiler.name=Perfilador de CPU
go.profiler.cpu.profile.prefix=CPU 프로파일
go.profiler.memory.profiler.name=메모리 프로파일러
go.profiler.memory.profile.prefix=메모리 프로파일
go.profiler.mutex.profiler.name=Perfilador de Mutex
go.profiler.mutex.profile.prefix=Mutex 프로파일
go.project.sdk.label=프로젝트 SDK\:
go.run.configuration.environment.label=환경(&V)\:
go.run.configuration.go.tool.arguments.label=Go 도구 인수(&G)\:
go.run.configuration.module.label=모듈(&M)\:
go.run.configuration.output.directory.label=출력 디렉토리(&O)\:
go.run.configuration.program.arguments.label=Argumento del &programa\:
go.run.configuration.run.after.build.checkbox=빌드 후 실행(&R)\:
go.run.configuration.build.on.remote.target.checkbox=원격 대상에서 빌드(&B)
go.run.configuration.run.kind.label=실행 종류(&K)\:
go.run.configuration.run.with.sudo.label=sudo로 실행(&I) 
go.run.configuration.run.with.sudo.tooltip=상위 사용자 권한으로 구성 실행
go.run.configuration.run.with.sudo.mnemonic=높은 권한으로 실행(&I)
go.run.configuration.add.go.tool.argument.label=Añadir
go.run.configuration.target.directory.label=디렉토리(&D)\:
go.run.configuration.target.files.label=파일(&F)\:
go.run.configuration.target.package.label=패키지 경로(&E)\:
go.run.configuration.test.framework=테스트 프레임워크(&R)\:
go.run.configuration.test.kind.label=테스트 종류(&K)\:
go.run.configuration.test.kind.directory=경로
go.run.configuration.test.kind.package=패키지
go.run.configuration.test.kind.file=파일
go.run.configuration.application.kind.directory=경로
go.run.configuration.application.kind.package=패키지
go.run.configuration.application.kind.file=파일
go.run.configuration.test.pattern.label=패턴(&T)\:
go.run.configuration.use.all.custom.build.tags.label=모든 사용자 지정 빌드 태그 사용(&L)
go.run.configuration.use.all.custom.build.tags.tooltip=빌드하는 동안 설정의 모든 사용자 지정 빌드 태그가 추가됩니다.
go.settings.build.tags.arch.label=Arch
go.settings.build.tags.cgo.support.label=CGO 지원
go.settings.build.tags.compiler.label=컴파일러
go.settings.build.tags.custom.tags.hint=공백을 사용하여 태그 분리
go.settings.build.tags.custom.tags.label=사용자 지정 태그
go.settings.build.tags.description=<html>\n  <head>\n    \n</head>\n  <body>\n    <p>\n      다음 옵션은 프로젝트의 대상 시스템을 설명합니다. IDE는 \n      이러한 값을 활용해 유효성 검사 중 무시해야 하는 파일을 결정하며\n      심볼을 해결하고 제안할 수 있습니다. 자세한 내용은<a href\="https\://golang.org/pkg/go/build/\#hdr-Build_Constraints">Go  \n      제약 조건 문서</a>를 참조하세요.\n   </p>\n </body>\n</html>
go.settings.build.tags.display.name=태그 빌드 및 벤더링
go.settings.build.tags.group.name=태그 빌드
go.settings.build.tags.os.label=OS
go.settings.build.tags.version.label=Go 버전
go.settings.build.tags.any.sdk.value=임의
go.settings.default.value=Valor por defecto({0})
go.settings.project.sdk.value=프로젝트 SDK({0})
go.settings.default.for.project.sdk.value=SDK ({0}) 디폴트 값
go.settings.enabled=사용
go.settings.disabled=사용 안함
go.settings.common.suggest.parameter.names.checkbox=코드 완성 시 매개변수 이름 제안
go.settings.common.show.auto.import.in.completion.popup.checkbox=입력 시 추가 가져오기가 필요한 항목 제안
go.settings.common.indent.on.enter.in.raw.strings.checkbox=원시 문자열에서 Enter 입력 시 들여쓰기
go.settings.common.show.documentation.in.parameter.info.checkbox=매개변수 정보에 문서 표시
go.settings.common.detect.go.packages.from.clipboard.checkbox=클립보드에서 Go 패키지 탐지
go.settings.common.enable.experimental.support.for.type.parameters=제네릭 활성화(유형 매개변수에 대한 실험적 지원)
go.settings.common.enable.experimental.support.for.type.parameters.tooltip=현재 구현은 Ian Lance Taylor와 Robert Griesemer가 2020년 6월 16일에 공개한 초안 설계인 유형 매개변수를 기반으로 합니다.
go.settings.common.enable.experimental.support.for.type.parameters.link.title=더보기
go.settings.common.confirmation.show.options.option=옵션 보기
go.settings.common.package.rename.rename.directory.option=디렉토리 이름 변경
go.settings.common.package.rename.do.not.rename.directory.option=디렉토리 이름 변경 안 함
go.settings.common.directory.rename.rename.package.option=패키지 이름 변경
go.settings.common.directory.rename.do.not.rename.package.option=패키지 이름 변경 안 함
go.settings.common.test.rename.corresponding.file.option=해당하는 테스트 또는 프로덕션 파일 이름 변경
go.settings.common.test.do.not.rename.corresponding.file.option=해당하는 테스트 또는 프로덕션 파일 이름 변경 안 함
go.settings.common.directory.rename.option=디렉토리 이름이 변경된 경우
go.settings.common.package.rename.option=패키지 이름이 변경된 경우
go.settings.common.test.rename.option=파일 이름이 변경된 경우
go.settings.debugger.stack.depth.name=스택 깊이
go.settings.debugger.goroutines.limit.name=Goroutines 제한
go.settings.debugger.rebuild.transitive.packages.checkbox=이행적 패키지 재구성(&R)
go.settings.debugger.rebuild.transitive.packages.description=더 나은 디버그 경험을 위해 Delve에서 $GOROOT/pkg의 최적화된 모듈을 다시 컴파일해야 합니다.
go.settings.imports.display.name=가져오기
go.settings.modules.display.title=Go 모듈
go.settings.modules.display.name=Go modules
go.settings.sdk.unknown.version.at.path={0} 의 알 수 없는 Go 버전
go.settings.sdk.detected.notification.title=GOROOT가 탐지되었습니다
go.settings.sdk.detected.notification.text=<b>{0}</b> 이(가) 프로젝트 <b>{0}</b>로 자동 설정되었습니다. GOROOT 설정에서 이를 변경할 수 있습니다.
go.settings.sdk.detected.notification.configure.go.sdk.action.text=Go SDK 구성
go.settings.sdk.enable.integration.label=모듈에서 Go 지원 활성화\:
go.settings.sdk.combo.tooltip=SDK 추가...
go.settings.sdk.add.button=SDK 추가...
go.settings.sdk.add.action.name=로컬...
go.settings.sdk.add.local.title=Go SDK 홈 디렉토리 선택
go.settings.sdk.add.button.tooltip=SDK({0}) 추가
go.settings.sdk.download.action.name=Descargar...
go.settings.sdk.download.dialog.title=Go SDK 다운로드
go.settings.sdk.download.dialog.version.label=버전\:
go.settings.sdk.download.dialog.location.label=위치\:
go.settings.sdk.download.dialog.reload.versions.action.name=다시 불러오기
go.settings.sdk.download.dialog.cannot.load.go.versions.validation.message=Go 버전을 로드할 수 없습니다. {0}
go.settings.sdk.download.dialog.version.is.not.specified.validation.message=버전을 지정하십시오.
go.settings.sdk.download.dialog.location.is.not.specified.validation.message=대상 디렉토리를 지정하십시오.
go.settings.sdk.download.dialog.cannot.create.directory.validation.message=주어진 경로에 디렉토리를 생성할 수 없습니다.
go.settings.sdk.download.progress.downloading.status=Go {0} 다운로드 중
go.settings.sdk.download.progress.verifying.status=다운로드 아카이브 검사 중...
go.settings.sdk.download.progress.unpacking.status=SDK 패킹 해제 중...
go.settings.sdk.download.unpacked.sdk.is.corrupted.error=패킹 해제된 SDK가 손상되었습니다
go.settings.sdk.download.checksum.of.downloaded.file.mismatched.error=다운로드한 파일의 검사합이 일치하지 않음
go.settings.sdk.download.could.not.get.checksum.error=검사합을 구하지 못했습니다\: {0}
go.settings.sdk.download.could.not.find.go.directory.in.downloaded.file.error=다운로드한 파일에서 Go 디렉토리를 찾지 못했습니다
go.settings.sdk.download.could.not.unpack.downloaded.file.error=다운로드한 파일을 패킹 해제하지 못했습니다
go.settings.sdk.download.could.not.copy.unpacked.sdk.error=패킹 해제된 SDK를 복사하지 못했습니다
go.settings.sdk.download.could.not.create.target.directory.error=대상 디렉토리를 생성하지 못했습니다
go.settings.sdk.download.installed.notification.title=Go {0} 설치 완료
go.settings.sdk.download.failed.to.download.notification.title=SDK 다운로드 실패
go.settings.modules.enable.integration.checkbox=Enable Go modules integration
go.settings.modules.choose.module.dialog.title=Go 모듈 선택
go.settings.modules.choose.module.validation.message=하나 이상의 모듈을 선택해야 합니다.
go.settings.modules.dependency.file.type.description=Go modules dependency file
go.settings.modules.goproxy.documentation.link.title=모듈 다운로드 및 검증
go.settings.modules.goproxy.tooltip=GOPROXY는 종속 요소 다운로드 시 go 명령어가 특정 프록시 서버를 사용하도록 지시합니다.
go.settings.modules.environment.label=환경\:
go.settings.modules.environment.context.help=GOPROXY, GOPRIVATE 등
go.settings.modules.sync.dependencies.fix.family.name=종속 요소 동기화
go.settings.modules.sync.dependencies.fix.text={0}의 종속 요소 동기화
go.settings.modules.vendoring.checkbox=벤더링 지원 지동 활성화
go.settings.modules.vendoring.checkbox.tooltip=Go 1.14 이후 무시됨.<br>Go 1.14 이전 버전에서는 공급업체 디렉토리가 모듈에 포함될 때마다 벤더링 지원이 활성화됩니다. 특히 IDE는 -mod\=vendor 플래그로 go 도구를 실행합니다.
go.settings.modules.vendoring.documentation.link.title=모듈과 함께 벤더링을 사용하는 방법
go.settings.run.configuration.invalid.env.name=환경 변수의 비정규 이름\: ''{0}''
go.settings.run.configuration.invalid.env.value=환경 변수 값 ''{0}''의 비정규 값\: ''{1}''
go.settings.modules.explain.environment.variable=변수 설명
go.settings.modules.add.other.environment.variable=기타
go.settings.modules.gosumdb.description=GOSUMDB는 검사합 데이터베이스 이름을 나타냅니다. Go 명령어가 다운로드된 종속 요소의 검사합이 변경된 것을 확인하기 위해 이 값을 사용합니다.
go.settings.modules.gosumdb.documentation.link.title=모듈 인증 실패
go.settings.modules.goprivate.description=GOPRIVATE는 private으로 간주되는 패키지를 나열합니다. 이 패키지를 다운로드하거나 유효성 검사를 실행하는 도중에는 Go 명령어가 프록시나 검사합 데이터베이스를 사용하지 않습니다.
go.settings.modules.goprivate.documentation.link.title=비 public 모듈에 대한 모듈 구성
go.settings.modules.gonoproxy.description=GONOPROXY는 private으로 간주되는 패키지를 나열합니다. 이 패키지를 다운로드하는 도중에는 Go 명령어가 프록시를 사용하지 않습니다. GOPRIVATE을 재정의합니다.
go.settings.modules.gonosumdb.description=GONOSUMDB는 private으로 간주되는 패키지를 나열합니다. 이 패키지에 대해 유효성 검사를 실행하는 도중에는 Go 명령어가 검사합 데이터베이스를 사용하지 않습니다. GOPRIVATE을 재정의합니다.
go.settings.modules.gomodcache.description=GOMODCACHE은 모듈 캐시 위치를 설정합니다.
go.settings.modules.gomodcache.documentation.link.title=Go 1.15 릴리즈 노트
go.settings.postfix.enter.type.import.path.label=가져오기 경로(&I)\:
go.settings.postfix.enter.type.name.label=유형 이름(&T)\:
go.settings.postfix.enter.type.empty.type.validation.message=유형 이름을 지정하십시오
go.settings.postfix.enter.type.action.name=유형 이름 입력...
go.settings.postfix.choose.type.action.name=유형 선택...
go.settings.postfix.choose.type.prompt.text=유형 선택
go.settings.vendoring.cannot.be.disabled.error.message=Go {0}에서는 벤더 실험 비활성화가 지원되지 않습니다.
go.settings.vendoring.description=<html>\n  <head>\n    \n</head>\n  <body>\n    <p>\n      이 옵션을 사용하면 활성화된 IDE에서 다음 문서에 따라 심볼을 해결하고 \n      완성합니다. <a href\="https\://golang.org/s/go15vendor">Go 벤더링 실험 \n      제안</a>.\n   </p>\n    <p>\n      또한 이에 상응하는 <strong>GO15VENDORExperiment</strong>\n      환경 변수 값은 IDE의 모든 go 실행에 맞춰 설정됩니다.\n   </p>\n </body>\n</html>
go.settings.vendoring.enable.vendoring.checkbox=벤더링 활성화
go.settings.vendoring.group.name=벤더 실험
go.settings.vendoring.is.not.supported.error.message=Go {0}에서는 벤더 실험이 지원되지 않습니다.
go.template.intention.add.type.hint.name=마침표 유형 지정
go.unknown.type.information.hint=<알 수 없음>
group.GoTools.description=Herramientas externas Go
group.GoTools.text=Go 도구
go.call.hierarchy.respect.interface.calls.action.name=인터페이스 호출에 따름
go.call.hierarchy.respect.interface.calls.description=인터페이스 호출에 따름
go.settings.formatter.no.exceptions.empty.text=예외 없음
go.settings.formatter.comment.prefix.dialog.title=주석 접두사
go.settings.formatter.wrap.call.arguments=함수 호출 인수
go.settings.formatter.wrap.comp.lit=복합 리터럴
go.settings.formatter.wrap.func.params=함수 매개변수
go.settings.formatter.wrap.func.result=함수 결과 매개변수
go.settings.diff.ignore.imports.and.formatting.description=import 문 및 서식 지정 무시
go.settings.debugger.default.integer.format.label=디폴트 정수 형식\:
go.status.bar.configure.project.widget=IDE 및 프로젝트 {0}
go.executable.file.chooser.title={0} 선택 
go.executable.file.process.icon.tooltip={0} 발견
go.executable.file.invalid.path.text=경로가 올바르지 않습니다
go.executable.file.cannot.retrieve.version=버전을 가져올 수 없음
go.executable.file.empty.value=<Empty>
go.fmt.add.leading.space.to.comments=주석에 선행 공간 추가
go.fmt.add.parentheses.for.single.import=단일 import 문에 소괄호 추가
go.fmt.group.current.project.imports=현재 프로젝트 import 문 그룹 지정
go.fmt.group.stdlib.imports=stdlib import 문 그룹 지정
go.fmt.imports.tab.title=가져오기
go.fmt.move.all.imports.in.single.declaration=단일 선언의 모든 import 문 이동
go.fmt.move.all.stdlib.imports.in.single.group=단일 그룹의 모든 stdlib import 문 이동
go.fmt.other.tab.title=기타
go.fmt.remove.redundant.import.aliases=중복된 import 별칭 제거
go.fmt.import.sorting.type=정렬 유형
go.fmt.use.back.quotes.for.imports=import 문에 역따옴표 사용
go.fmt.fill.paragraph.width.label=단락 너비 채우기\:
go.debugger.disconnected.unexpectedly=디버거 연결이 예기치 않게 해제됨
go.debugger.failed.to.compute.node.presentation=노드 프레젠테이션 계산 실패
go.debugger.connection.failed.generic.message={0}에 연결 실패
go.debugger.connecting.to.address.message={0} 연결 중...
go.debugger.connecting.to.unknown.address.message=원격 주소 연결 중...
go.debugger.cannot.retrieve.go.processes=Go 프로세스를 검색할 수 없습니다.
go.debugger.install.gops.to.attach.to.go.processes={0} 설치하여 Go 프로세스에 연결
go.debugger.local.attach.group.name=Go
go.debugger.breakpoint.title=Go 중단점
go.debugger.error.breakpoint.title=Go 오류 중단점
go.debugger.error.breakpoint.display.text=치명적인 오류
go.debugger.missing.function.name=<missed>
go.debugger.record.and.debug.action.name=기록 및 디버그
go.debugger.record.and.debug.description=기록 및 디버그
go.debugger.record.and.debug.start.action.text=기록 및 디버그
go.debugger.record.and.debug.cannot.find.rr.message=<html><a href\="https\://rr-project.org">mozilla rr</a> 실행 파일을 찾을 수 없습니다. 해당 파일을 설치하고 경로에 추가하세요.</html>
go.debugger.internal.messaging.error=내부 메시징 오류
go.debugger.cannot.connect.twice=Delve 프로세스는 두 번 연결될 수 없습니다.
go.debugger.cannot.connect.non.remote=원격 연결이 아닌 것을 사용하기 때문에 Delve 프로세스 연결이 불가합니다.
go.debugger.cannot.evaluate.expression=\ ''{0}'' 표현식을 평가할 수 없습니다\: {1}
go.debugger.cannot.get.current.goroutine=현재 goroutine을 받을 수 없습니다.
go.debugger.go.version.is.not.officially.supported=Go {0} 버전에는 공식적인 디버거 지원이 없으며 일부 기능에서 오류가 발생할 수 있습니다. go {1} 또는 최신 버전으로 업데이트하세요.
go.debugger.go.version.is.not.supported=Go {0} 버전에는 공식적인 디버거 지원이 없습니다. go {1} 또는 최신 버전으로 업데이트하세요.
go.debugger.no.debug.information.for.file=실행 파일은 {0}에 대한 디버그 정보를 포함하지 않습니다.
go.debugger.cannot.pause=일시 중단 불가
go.debugger.recording.in.progress=프로그램 실행을 기록합니다. 기록을 디버그하려면 프로그램 종료를 기다리거나 <a href\=''{0}''>기록을 중단</a>하세요.
go.debugger.failed.to.stop.mozilla.rr.recording=mozilla rr 기록 중지 실패
go.debugger.failed.to.stop.mozilla.rr.recording.details=mozilla rr 기록 중지 실패\: {0}
go.debugger.cannot.evaluate.call=호출 평가 불가\: {0}
go.debugger.non.top.frame.selected=최상위가 아닌 프레임이 선택되었습니다.
go.debugger.missing.current.function=현재 함수 누락
go.debugger.unused.functions.are.not.included.message=" (사용하지 않는 기능은 실행 파일에 포함되지 않습니다)"
go.debugger.unused.methods.are.not.included.message=" (사용하지 않는 메소드는 실행 파일에 포함되지 않습니다)"
go.debugger.smart.step.into.failed=스마트 스텝인투 실패\: {0}
go.debugger.expression.is.not.a.function=''{0}''은(는) 기능이 아닙니다.
go.debugger.expression.is.nil=''{0}''은(는) nil입니다.
go.debugger.cannot.retrieve.interface.value.type=인터페이스 값의 형식을 검색할 수 없습니다.
go.debugger.cannot.get.current.stack=현재 스택을 받을 수 없습니다.
go.debugger.smart.step.into.popup.title=스텝인투 기능
go.debugger.renderers.binary.name=2진
go.debugger.renderers.decimal.name=10진수
go.debugger.renderers.hex.name=16진수
go.debugger.renderers.default.renderer.name=디폴트 렌더러
go.debugger.computing.full.value.of.call.results.is.not.supported=호출 결과의 전체 값 계산이 지원되지 않습니다.
go.debugger.cannot.calculate.value=값을 계산할 수 없습니다.
go.debugger.obsolete.value=<obsolete>
go.debugger.cannot.calculate.string.presentation=문자열 프리젠테이션 계산불가\: {0}
go.debugger.unsupported.type=<unsupported type\: {0}>
go.debugger.cannot.load.remaining.call.result.children=남은 호출 결과의 하위 항목을 로드할 수 없습니다.
go.debugger.unreadable.error=\ 가독성 저하\: {0}
go.debugger.fmt.sprintf.unsupported.format=(지원되지 않는 형식)
go.debugger.fmt.sprintf.unsupported.verb=(지원되지 않는 동사)
go.debugger.fmt.sprintf.cannot.format.value=(값 서식 지정 불가)
go.debugger.async.stacktrace.caption=비동기 스택 추적
go.debugger.thread=스레드
go.debugger.goroutine=Goroutine
go.debugger.unsupported.architecture.error=디버그는 64비트 시스템 및 32비트 리눅스에서만 지원됩니다
go.debugger.only.first.goroutines.are.shown=첫 번째 {0} goroutines만 표시됩니다
go.settings.debugger.general.section.name=Go
go.settings.debugger.dataViews.section.name=Go
go.execution.package.is.not.specified.error=패키지가 지정되지 않습니다.
go.execution.cannot.find.package.error=<code>{0}</code> 패키지를 찾을 수 없습니다. 
go.execution.package.contains.several.mains.error=<code>{0}</code> 패키지에는 하나 이상의 <code>메인</code>기능이 포함됩니다.<br>대신 파일 종류를 사용하시길 권장해 드립니다.
go.execution.cannot.find.directory.error=<code>{0}</code> 디렉토리를 찾을 수 없습니다.
go.execution.run.after.build.is.not.possible.incompatible.os.error=빌드 후 실행이 불가합니다.<br>결과 바이너리가 OS와 호환되지 않을 것입니다.
go.execution.run.after.build.is.not.possible.main.not.found.single.file.error=빌드 후 실행이 불가합니다.<br>메인 파일에 메인이 아닌 패키지가 포함되거나 메인 기능이 포함되지 않습니다.
go.execution.run.after.build.is.not.possible.main.not.found.many.files.error=빌드 후 실행이 불가합니다.<br>선택한 파일 중 어디에도 기본 패키지와 메인 기능이 포함되지 않습니다.
go.execution.file.not.found.error=파일을 찾을 수 없습니다\: <code>{0}</code>
go.execution.files.must.be.in.one.directory.error=이름이 지정된 파일은 모두 하나의 디렉토리에 있어야 합니다.
go.execution.not.go.file.error=파일이 Go 파일이 아닙니다\: {0}
go.execution.application.run.configuration.display.name=Go 빌드
go.execution.application.run.configuration.description=Go 빌드 실행 구성
go.execution.before.run.task.name=Run Go command
go.execution.before.run.task.description=''{0}'' 실행
go.execution.before.run.task.supports.only.go.run.configurations.error=Go command task supports only Go run configurations
go.execution.before.run.task.supports.only.go.modules.error=Go command task supports only modules with enabled Go integration
go.execution.before.run.task.executing.presentable.name=`{0}` 실행 중
go.execution.before.run.task.error.dialog.title=Go 명령어 작업
go.execution.before.run.task.edit.go.command.dialog.title=Go 명령어 작업 편집
go.execution.before.run.task.empty.command.error=빈 Go 명령어는 허용되지 않습니다.
go.execution.before.run.task.command.should.not.start.with.go.error=Go 명령어는 'go'로 시작되면 안 됩니다.
go.execution.extension.failed.to.patch.command.line.error=명령줄을 패치하지 못했습니다.
go.execution.coverage.percent.statements=% 구문
go.execution.coverage.percent.files=% 파일
go.execution.coverage.covered=지원됨
go.execution.coverage.engine.name=Go 커버리지
go.execution.coverage.cannot.run.coverage.on.directory.kind.run.configurations.error=디렉토리 종류 실행 구성에서 커버리지를 실행할 수 없습니다.
go.execution.coverage.loading.coverage.data=커버리지 데이터 로드 중...
go.execution.coverage.runner.name=Go
go.test.creator.empty.test.file.name=빈 테스트 파일
go.test.creator.test.for.function.name=함수 테스트
go.test.creator.test.for.file.name=파일 테스트
go.test.creator.test.for.package.name=패키지 테스트
go.test.creator.test.for.selection.name=선택 항목 테스트
go.test.creator.gotests.download.gotests.dialog.title=gotests
go.test.creator.gotests.generation.name=테스트 생성
go.test.creator.gotests.no.tests.generated=생성된 테스트가 없습니다.
go.test.creator.gotests.failed.to.create.test.file=테스트 파일 ''{0}''을(를) 생성하지 못했습니다.
go.test.creator.gotests.generation.failed.notification.title=테스트 생성 실패
go.test.creator.cannot.find.test.package.name=테스트 패키지 이름을 찾을 수 없습니다.
go.test.creator.cannot.find.test.import.path=테스트 가져오기 경로를 찾을 수 없습니다.
go.test.creator.cannot.find.function.signature=함수 시그니처를 찾을 수 없습니다.
go.test.creator.cannot.find.method.receiver={0}에 대한 메소드 리시버를 찾을 수 없습니다.
go.test.creator.cannot.find.method.receiver.type={0}에 대한 메소드 리시버 유형을 찾을 수 없습니다.
go.test.creator.cannot.find.field.type={0}에 대한 필드 유형을 찾을 수 없습니다.
go.test.generate.table.benchmark.text=테이블 벤치마크
go.test.generate.table.benchmark.description=테이블 벤치마크 함수 생성
go.test.generate.table.test.text=테이블 테스트
go.test.generate.table.test.description=테이블 테스트 함수 생성
go.test.generate.function.description={0} 함수 생성
go.test.generate.test.text=테스트
go.test.generate.test.main.text=Test_main
go.test.generate.benchmark.text=벤치마크
go.test.generate.example.text=Example
go.test.testify.run.configuration.name={1}의 {0}
go.test.testify.unknown.target.name=알 수 없음
go.test.framework.not.available.in.module.error=<code>{0}</code> 프레임워크는 선택한 모듈에서 지원되지 않습니다.
go.test.working.directory.should.be.ancestor.of.testing.directory.error=작업 디렉토리는 테스트 디렉토리의 상위 디렉토리여야 합니다.
go.test.testing.directory.does.not.exist.error=테스트 디렉토리가 없습니다.
go.test.non.a.package.error=<code>{0}</code>은(는) 패키지가 아닙니다.<br>디렉토리 종류 실행 구성을 사용하여 디렉토리에서 재귀적으로 테스트가 실행됩니다.
go.test.cannot.find.files.compatible.with.framework.error=<code>{0}</code>에서 <code>{1}</code> 프레임워크와 호환 가능한 Go 테스트 파일을 찾을 수 없습니다.
go.test.file.does.not.exist.error=파일이 없습니다\: {0}
go.test.not.go.file.error=''{0}'' 파일은 Go 파일이 아닙니다.
go.test.framework.is.not.available.on.files.error=<code>{0}</code> 프레임워크는 모든 <code>{1}</code> 파일에서 지원되지 않습니다.
go.test.suggested.run.configuration.name={1}의 {0}
go.test.run.configuration.name=Go 테스트
go.test.run.configuration.description=Go 테스트 실행 구성
go.test.template.run.configuration.name=Go 테스트
go.test.run.test.tooltip=테스트 실행
go.test.no.tests.were.run=실행된 테스트가 없습니다.
go.test.cannot.run.compiling.on.directory.kind.run.configurations.error=디렉토리 종류 실행 구성에서 컴파일을  실행할 수 없습니다.
go.execution.cannot.find.target.to.compile.error=컴파일 대상을 찾을 수 없습니다.
go.execution.cannot.create.temp.output.file.error=임시 출력 파일을 생성할 수 없습니다.
go.execution.cannot.create.output.file.error={0} 출력 파일을 생성할 수 없습니다.
go.execution.cannot.create.output.file.in.error={0}에서 출력 파일을 생성할 수 없습니다.
go.execution.cannot.make.temporary.file.executable.error={0} 임시 실행 파일을 생성할 수 없습니다.
go.execution.outdated.go.notification.title=Your version of Go is outdated
go.execution.outdated.go.notification.text=모든 디버그 기능을 완벽하게 지원하려면 Go 버전을 업데이트하세요.
go.execution.change.goroot.action.name=GOROOT 변경
go.execution.compilation.finished.with.exit.code=$EXIT_CODE$ 종료 코드로 완료된 컴파일
go.execution.compiled.binary.cannot.be.executed=컴파일된 바이너리를 실행할 수 없습니다.
go.execution.compilation.failed.notification.title=컴파일 실패
go.execution.install.lldb.notification.text=xcode-select --install을 활용하여 lldb 설치
go.execution.go.setup.folding.placeholder=<{0} go 설정 {0,choice,1\#호출|2\#호출}>
go.execution.remote.run.configuration.display.name=Go Remote
go.execution.remote.run.configuration.description=Go Remote
go.execution.remote.run.configuration.start.delve.text=이 구성을 실행하기 전에 아래 설명대로 애플리케이션 및 Delve를 시작하십시오.<br><br>Delve가 애플리케이션을 컴파일하도록 하세요\:<br><pre>dlv debug --headless --listen\=\:{0} --api-version\=2 --accept-multiclient</pre><br>아니면 Go {3} 이상을 사용하여 애플리케이션를 컴파일하세요\:\:<br><pre>go build -gcflags \"all\=-N -l\" github.com/app/demo</pre><br>그리고 다음 Delve 명령를 통해 애플리케이션을 실행하세요\:<br><pre>dlv --listen\=\:{1} --headless\=true --api-version\=2 --accept-multiclient exec ./{2}</pre>
go.execution.remote.run.configuration.host.label=Nombre del &servidor\:
go.execution.remote.run.configuration.port.label=&Puerto\:
go.execution.sdk.is.not.specified.error=<code>{0}</code>모듈에 Go SDK가 지정되지 않았습니다.
go.execution.module.does.not.exist.error=프로젝트에 <code>{0}</code> 모듈이 없습니다.
go.execution.working.directory.is.not.specified.error=작업 디렉토리가 지정되지 않았습니다.
go.execution.cannot.find.working.directory.error=<code>{0}</code> 작업 디렉토리를 찾을 수 없습니다.
go.execution.go.is.not.configured.error=실행 구성에서 Go는 구성되지 않았습니다\: {0}
go.execution.run.application.tooltip=애플리케이션 실행
go.execution.process.finished.with.exit.code={1} 종료 코드로 완료된 {0}
go.execution.application.process.name=프로세스
go.execution.debugger.process.name=디버거
go.execution.unknown.target.delve.socket.error=Delve를 실행할 수 없습니다. 대상 소켓을 알 수 없습니다. RunState\: {0}
go.execution.process.interrupted=중단됨
go.execution.process.cancelled=Cancelado
go.execution.go.sdk.is.not.downloaded.yet=Go SDK가 아직 다운로드되지 않았습니다
go.execution.process.finished.successfully=성공적으로 완료함
go.execution.process.failed.to.run=실행 실패
go.execution.unknown.error=알 수 없는 오류, 세부 사항 로그 보기
go.execution.sdk.is.not.set=모듈에 대해 SDK가 설정되어 있지 않거나 SDK 홈 경로가 비어 있습니다
go.execution.enter.sudo=sudo 비밀번호를 입력하십시오\:
go.import.optimizer.removed.imports={0} 개의 {0,choice,1\#import 문|2\#import 문}이 제거되었습니다
go.import.optimizer.removed.aliases={0} 개의 {0,choice,1\#별칭|2\#별칭}이 제거되었습니다
go.import.optimizer.removed.imports.and.aliases={0} 개의 {0,choice,1\#import 문|2\#import 문} 및 {1} 개의 {0,choice,1\#별칭|2\#별칭}이 제거되었습니다
go.import.package.fix.family.name=패키지 가져오기
go.import.package.fix.text=패키지 가져오기
go.import.package.fix.text.no.variants=패키지 가져오기?
go.import.package.fix.text.single.variant={0} 가져오기?
go.import.package.fix.text.many.variants={0} 가져오기?(다중 선택...)
go.import.package.popup.title=가져올 패키지
go.import.package.cannot.invoke.fix.with.ambiguous.imports.error={0}에디터에서 모호한 import 문으로 수정을 호출할 수 없습니다. 패키지\: {1}
go.create.intermediate.variable.declaration.fix.name=중간 변수 생성
go.add.import.command.name=가져오기 추가
go.add.import.with.alias.presentation=\ {1} (으)로서의 {0}
go.error.parser.expected=''{0}'' 필요
go.error.parser.expected.got=''{0}'' 이(가) 필요하나 ''{1}'' 발견
go.error.parser.unexpected=예기치 않은 ''{0}''
go.error.annotator.invalid.package.name=잘못된 패키지 이름
go.error.annotator.continue.statement.not.inside.a.for.loop=for 루프에 포함되지 않는 continue 문
go.error.annotator.break.statement.not.inside.a.for.loop.select.or.switch=for 루프 내부에 없는 break 문, 선택 또는 전환
go.error.annotator.unexported.field.usage.in.struct.literal=struct 리터럴의 비노출 필드 ''{0}'' 사용 위치
go.error.annotator.unexported.reference.usage=비노출 {0} ''{1}'' 사용 위치
go.error.annotator.type.is.not.an.expression={0} 유형은 표현식이 아닙니다.
go.error.annotator.unexported.type.usage=비노출 유형 ''{0}'' 사용 위치
go.error.annotator.reference.is.not.a.type={0} 은(는) 유형이 아닙니다.
go.error.annotator.missing.key.in.map.literal=map 리터럴의 누락된 키
go.error.annotator.use.of.type.outside.type.switch=유형 전환 외부의 .(type) 사용
go.error.annotator.invalid.type.assertion=잘못된 유형 어설션\: {0} (왼쪽의 비 인터페이스 유형 {1})
go.error.annotator.invalid.type.switch.guard=잘못된 유형 전환 보호\: {0} (왼쪽의 비 인터페이스 유형 {1})
go.error.annotator.map.key.type.is.not.comparable=잘못된 map 키 유형\: 비교 연산자 \=\= 및 \!\=의 경우 키 유형으로 완전히 정의되어야 합니다.
go.error.annotator.call.used.as.value.but.it.returns.nothing={0} 은(는) 값으로 사용되지만 아무것도 반환하지 않습니다.
go.error.annotator.multiple.value.in.single.value.context=단일 값 컨텍스트의 다중 값 {0}
go.error.annotator.type.aliases.are.available.since.go.1.9=유형 선언의 예기치 않은 \=. 유형 별칭은 Go 1.9부터 지원됩니다.
go.error.annotator.missing.function.body=누락된 {0} 본문
go.error.annotator.main.or.init.has.invalid.signature={0} 함수에는 인수와 반환 값이 포함될 수 없습니다.
go.error.annotator.invalid.index.or.slice.operation=잘못된 연산 {0}(문자열의 3-색인 슬라이스)
go.error.annotator.unexpected.end.of.statement=구문 오류\: 예기치 않은 구문 끝,\:\=, \= 또는 쉼표 기대
go.error.annotator.unexpected.newline.after.if=예기치 않은 줄 바꿈, 'if' 절 뒤에 '{' 기대
go.error.annotator.missing.condition.in.if.statement='if' 문의 누락된 조건
go.error.annotator.semicolon.is.missing=; 누락
go.error.annotator.fallthrough.statement.out.of.place=부적절한 폴스루(Fallthrough) 구문
go.error.annotator.cannot.fallthrough.final.case.in.switch=switch 문의 마지막 case에 fallthrough를 입력할 수 없습니다
go.error.annotator.cannot.fallthrough.in.type.switch=유형 전환에서 폴스루(Fallthrough)가 허용되지 않습니다.
go.error.annotator.end.of.file.in.comment=주석에 포함된 파일의 끝
go.error.annotator.array.bound.must.be.a.constant.expression=잘못된 배열 바운드 ''{0}'', 상수식이어야 합니다.
go.error.annotator.array.bound.must.be.non.negative=잘못된 배열 바운드 ''{0}'', 음수 값은 허용되지 않습니다.
go.error.annotator.array.bound.must.be.representable.by.int.type=잘못된 배열 바운드 ''{0}'', 값은 ''int'' 유형으로 표시될 수 있어야 합니다.
go.error.annotator.invalid.argument.for.len=잘못된 len 인수
go.error.annotator.invalid.argument.for.cap=잘못된 cap 인수
go.error.annotator.cannot.declare.init.must.be.a.function=init을 선언이 불가하며 함수여야 합니다.
go.error.annotator.too.many.arguments.to.new=새로운 인수가 너무 많음
go.error.annotator.cannot.make.type={0} 생성 불가
go.error.annotator.argument.is.not.a.type={0} 은(는) 유형이 아닙니다.
go.error.annotator.missing.argument.to.make=생성할 인수 누락
go.error.annotator.non.integer.size.argument.to.make=생성할 정수가 아닌 크기 인수
go.error.annotator.non.integer.capacity.argument.to.make=생성할 정수가 아닌 용량 인수
go.error.annotator.missing.len.argument.to.make=생성할 len 인수 누락
go.error.annotator.too.many.arguments.to.make=생성할 인수가 너무 많음
go.error.annotator.cyclic.definition.detected=탐지된 순환 정의
go.error.annotator.use.of.package.without.selector=선택자 없는 패키지 {0} 사용
go.error.annotator.unexpected.assign.operator=예기치 않은 {0},\:\=, \= 또는 쉼표 예상
go.error.annotator.invalid.constant.type=잘못된 상수 유형
go.error.annotator.const.initializer.is.not.a.constant=const 이니셜라이저 ''{0}''은(는) 상수가 아닙니다.
go.error.annotator.missing.value.in.const.declaration=const 선언에서 누락된 값
go.error.annotator.extra.expression.in.const.declaration=const 선언의 추가 표현식
go.error.annotator.conversion.in.defer.or.go={0} 에는 변환이 아닌 함수 호출이 필요합니다
go.error.annotator.function.not.permitted.in.defer.or.go=이 함수는 {0} 구문에서 호출될 수 없습니다.
go.error.annotator.parenthesized.expression.in.defer.or.go={0} 표현식은 소괄호 안에 포함되어야 합니다.
go.error.annotator.defer.or.go.requires.function.call={0} 표현식은 함수 호출이어야 합니다.
go.error.annotator.evaluated.but.not.used=평가되었지만 사용되지 않는 {0}
go.error.annotator.cannot.declare.in.post.statement.of.for.loop=for 루프의 후행 문에서 선언할 수 없습니다.
go.error.annotator.too.many.variables.in.range=범위 안에 변수가 너무 많습니다.
go.error.annotator.named.and.unnamed.parameters={0} 이(가) 이름이 지정된 매개변수 ''{1}'' 및 이름 없는 매개변수 ''{1}'' 모두 포함합니다.
go.error.annotator.named.and.unnamed.return.parameters={0} 이(가) 이름이 지정된 매개변수 ''{1}'' 및 이름 없는 반환 매개변수 ''{1}'' 모두 포함합니다.
go.error.annotator.can.only.use.triple.dot.as.final.argument=목록에서 마지막 인수로 '...' 만 사용 가능합니다
go.error.annotator.cannot.use.triple.dot.for.output.arguments=출력 인수 목록에서 '...'는 사용 불가합니다.
go.error.annotator.method.name.in.interface.cannot.be.blank=인터페이스의 메소드 이름을 공백으로 둘 수 없습니다.
go.error.annotator.digit.separator.is.not.supported=자릿수 분리자는 Go {0}부터 지원됩니다.
go.error.annotator.binary.digits.are.not.supported=2진수는 Go {0}부터 지원됩니다.
go.error.annotator.octal.prefix.is.not.supported=8진수 접두사는 Go {0}부터 지원됩니다.
go.error.annotator.hex.floats.are.not.supported=16진수 부동소수점은 Go {0}부터 지원됩니다.
go.error.annotator.closing.single.quote.expected=닫기 ' 기대
go.error.annotator.empty.rune.literal=빈 rune 리터럴
go.error.annotator.too.many.characters.in.rune.literal=rune 리터럴에 문자가 너무 많습니다
go.error.annotator.invalid.select.assignment=선택 할당은 오른쪽에서 수신해야 합니다.
go.error.annotator.invalid.select.case=선택 case 문은 receive 문이거나 receive 문을 전송 또는 할당해야 합니다. 
go.error.annotator.cannot.reassign.a.constant=상수를 다시 할당할 수 없습니다.
go.error.annotator.no.new.variables=\:\= 왼쪽에 새 변수가 없습니다.
go.error.annotator.assignment.count.mismatch=할당 count 문 불일치\: {0} \={1}
go.error.annotator.cannot.assign.to.expression={0}에 할당할 수 없습니다.
go.error.annotator.multiple.defaults={0}의 여러 디폴트 값
go.error.annotator.new.line.in.string=문자열의 새 줄
go.error.annotator.bad.octal.escape=8진 이스케이프 세 개의 8진수를 포함해야 하며 첫 번째 8진수는 3 이하의 값이어야 합니다.
go.error.annotator.invalid.hex.escape.sequence.syntax=\\x 다음에 16진수 2개가 있어야 합니다.
go.error.annotator.invalid.unicode.escape.sequence.syntax=\\u 다음에 16진수 4개가 있어야 합니다.
go.error.annotator.invalid.long.unicode.escape.sequence.syntax=\\U 다음에 16진수 8개가 있어야 합니다.
go.error.annotator.invalid.escape.sequence=잘못된 이스케이프 시퀀스
go.error.annotator.invalid.unicode.code.point=잘못된 유니코드 코드포인트
go.error.annotator.invalid.embedded.type=잘못된 유형 {0}\: typeName 또는 *typeName이어야 합니다.
go.error.annotator.embedded.type.cannot.be.a.pointer=임베디드 유형은 포인터가 될 수 없습니다.
go.error.annotator.embedded.type.cannot.be.a.pointer.to.interface=임베디드 유형은 인터페이스의 포인터가 될 수 없습니다.
go.error.annotator.cannot.call.pointer.method=''{0}'' 에서 포인터 메소드를 호출할 수 없음
go.error.annotator.type.parameters.are.not.supported=제네릭(유형 매개변수에 대한 실험적 지원)이 비활성화되었습니다
go.error.annotator.type.parameters.are.supported.only.in.go2.files=제네릭(유형 매개변수에 대한 실험적 지원)은 .go2 파일에서만 작동합니다
go.go.mod.error.annotator.no.module.statement=파일에 모듈 구문이 없습니다.
go.go.mod.error.annotator.multiple.module.statements=파일의 여러 모듈 구문
go.go.mod.error.annotator.multiple.version.statements=파일의 여러 go 버전 구문
go.go.mod.error.annotator.missing.dependency=종속성 누락
go.go.mod.error.annotator.unresolved.dependency=해결되지 않는 종속 요소
go.go.mod.error.module.version.expected=모듈 버전이 필요합니다
go.terms.duplicate=중복
go.terms.duplicated.case=case 중복
go.terms.duplicated.default=default 중복
go.terms.version.statement=버전 구문
go.terms.module.statement=모듈 구문
go.terms.empty.declaration=빈 선언
go.terms.shadowed.declaration=가려진 선언
go.terms.comment=Comentario
go.terms.variable=변수
go.terms.method=메소드
go.terms.closure=클로저
go.terms.import=가져오기
go.terms.parameter=매개 변수
go.terms.receiver=리시버
go.terms.import.alias=import 문 별칭
go.terms.label=라벨
go.terms.package=패키지
go.terms.package.statement=패키지 구문
go.terms.package.capitalized=패키지
go.terms.map=맵
go.terms.chan=chan
go.terms.string=문자열
go.terms.array=배열
go.terms.declaration=선언
go.terms.statement=구문
go.terms.semicolon=세미콜론
go.terms.comma=쉼표
go.terms.go.statement=go 구문
go.terms.case=케이스
go.terms.slice=슬라이스
go.terms.pointer=포인터
go.terms.struct=struct
go.terms.anonymous.field=익명 필드
go.terms.type.alias=유형 별칭
go.terms.global.variable=전역 변수
go.terms.constant=상수
go.terms.global.constant=전역 상수
go.terms.field=필드
go.terms.type=유형
go.terms.type.pluralized=유형
go.terms.interface=인터페이스
go.terms.function=함수
go.terms.method.specification=메소드 사양
go.refactoring.implement.methods.command={0} 구현
go.refactoring.implement.methods.prompt=구현할 인터페이스 선택\:
go.refactoring.implement.methods.checkbox=비-&&프로젝트(&N)
go.refactoring.implement.methods.dummy.background.updater.task.title=작업 중...
go.refactoring.implement.methods.create.type.name=유형 생성...
go.refactoring.extract.interface.caret.should.be.inside.type.error.message=캐럿이 리팩토링할 유형 내부에 있어야 합니다.
go.refactoring.unexported.validation.message=더 이상 {1}에서 비노출 {0}(으)로 액세스할 수 없습니다.
go.refactoring.redeclare.validation.message={0}에서 동일한 이름의 {1}을(를) 다시 선언합니다.
go.refactoring.less.than.one.declaration.validation.message=하나 이상의 선언을 선택해야 합니다.
go.refactoring.empty.target.directory.path.validation.message=대상 디렉토리 경로는 공백으로 둘 수 없습니다.
go.refactoring.empty.target.file.name.validation.message=대상 파일 이름은 공백으로 둘 수 없습니다.
go.refactoring.incorrect.file.name.validation.message=대상 파일 이름이 올바르지 않습니다.
go.refactoring.empty.target.package.validation.message=대상 패키지 이름은 공백으로 둘 수 없습니다.
go.refactoring.incorrect.package.name.validation.message=대상 패키지 이름이 올바르지 않습니다.
go.refactoring.non.writable.directory.validation.message=대상 디렉토리는 쓰기 가능하지 않습니다.
go.refactoring.non.writeable.file.validation.message=대상 파일은 쓰기 가능한 파일이 아닙니다.
go.refactoring.different.package.name.validation.message=패키지 이름은 기존 파일과 다를 수 없습니다.
go.refactoring.non.go.file.validation.message=대상 파일은 Go 파일이어야 합니다.
go.refactoring.file.chooser.dialog.title=대상 디렉토리 또는 파일 선택
go.refactoring.file.label=파일로\:
go.refactoring.failed.to.create.directory.error.message=''{0}'' 디렉토리를 찾거나 생성할 수 없습니다.
go.refactoring.failed.to.create.file.for.package.error.message=\ ''{1}'' 패키지용 ''{0}'' 파일을 찾거나 생성할 수 없습니다.
go.refactoring.refactor.action=리팩토링
go.refactoring.rename.action=이름 바꾸기
go.refactoring.inline.defined.in.goroot.error.message=GOROOT에 정의된 변수 {0}
go.refactoring.inline.no.initializer.error.message={0} {1}에 이니셜라이저가 없습니다
go.refactoring.inline.defined.in.multi.value.context.error.message=다중 값 컨텍스트로 정의된 {0} {1}
go.refactoring.inline.found.usages.in.goroot.message=GOROOT에서 ''{1}''의 {0, choice,1\#1개 사용 위치|2\#{0}개 사용 위치} 발견.
go.refactoring.inline.kept.definition.and.inlined.message=정의를 유지했습니다{0, choice, 0\#|1\# 그리고 프로젝트와 GOPATH에서 1개의 사용위치를 인라인했습니다|2\# 그리고 프로젝트와 GOPATH에서 {0}개의 사용 위치를 인라인했습니다.} 
go.refactoring.change.signature.reuse.types.checkbox=재사용 유형
go.refactoring.change.signature.result.parameters.tab.title=결과 매개변수
go.refactoring.change.signature.not.legal.identifier.validation.message=''{0}''은(는) 정규 식별자가 아닙니다.
go.refactoring.change.signature.named.and.unnamed.parameters.validation.message=이름이 지정된 매개변수와 이름 없는 매개변수는 동시에 허용되지 않습니다.
go.refactoring.change.signature.parameter.without.type.validation.message={0,number,ordinal} 매개변수에는 유형이 포함되어야 합니다.
go.refactoring.change.signature.used.multiple.times.validation.message=''{0}''이(가) 여러 번 사용됩니다.
go.refactoring.change.signature.variadic.parameter.in.result.validation.message=가변 매개변수는 결과에 허용되지 않습니다.
go.refactoring.change.signature.variadic.is.not.last.validation.message=가변 매개변수는 항상 마지막이어야 합니다.
go.refactoring.change.signature.method.specification.and.implementations.option=메소드 사양 및 모든 구현 {0}
go.refactoring.change.signature.current.method.option=현재 메소드만 {0}
go.refactoring.change.signature.target.not.found.error.message=캐럿이 리팩토링할 함수 또는 메소드 이름의 위치에 있어야 합니다.
go.refactoring.change.signature.function.will.not.start.application.validation.message=이제 {0} 함수는 애플리케이션을 시작하지 않습니다.
go.refactoring.change.signature.function.will.not.perform.initialization.validation.message=이제 {0} 함수는 초기화를 수행하지 않습니다.
go.refactoring.change.signature.renamed.parameter.validation.message.part=이름이 변경된 매개변수
go.refactoring.change.signature.new.parameter.validation.message.part=새 매개변수
go.refactoring.extract.interface.rename.type.and.use.interface.radio.button=원본 유형 이름 변경 및 가능한 경우 인터페이스 사용(&E)
go.refactoring.extract.interface.rename.type.spec.label=유형 사양의 이름을 다음으로 변경\:
go.refactoring.extract.interface.unexported.method.specification.validation.message={0} {1} 은(는) 비노출 메소드 사양을 구현하지 않습니다.
go.refactoring.extract.interface.unexported.not.be.accessible.validation.message={1}에서 비노출 {0}(으)로 액세스할 수 없습니다.
go.refactoring.extract.interface.empty.type.name.validation.message=유형 이름은 공백으로 둘 수 없습니다.
go.refactoring.extract.interface.incorrect.type.name.validation.message=유형 이름이 올바르지 않습니다.
go.refactoring.introduce.extract.title=추출
go.refactoring.introduce.extract.function.title=함수 추출
go.refactoring.introduce.extract.function.command=함수 추출
go.refactoring.introduce.extract.method.command=메소드 추출
go.refactoring.introduce.extract.variable.command=변수 추출
go.refactoring.introduce.extract.method.or.function.title=메소드 또는 함수 추출
go.refactoring.introduce.write.command=함수 추출 중 명령어 작성
go.refactoring.introduce.range.contains.defer.message=선택한 범위에는 추출 중 순서가 다시 정렬될 수 있는 'defer' 문이 포함되어 있습니다.
go.refactoring.introduce.receiver.without.name.error.message=리시버에는 이름이 있어야 합니다.
go.refactoring.introduce.continue.statement.interrupts.execution.flow.error.message=continue 구문이 실행 흐름을 방해할 때  리팩토링이 지원되지 않습니다.
go.refactoring.introduce.label.reference.interrupts.execution.flow.error.message=라벨 참조가 실행 흐름을 방해할 때  리팩토링이 지원되지 않습니다.
go.refactoring.introduce.label.definition.selected.with.all.references.error.message=라벨 정의가 모든 참조와 함께 선택된 경우에만 리팩토링이 지원됩니다.
go.refactoring.introduce.does.not.return.value.error.message={0} 표현식은 값을 반환하지 않습니다.
go.refactoring.introduce.not.constant.value.error.message=표현식 {0} 이(가) 상수 값이 아닙니다.
go.refactoring.introduce.method.with.receiver.renderer={0} receiver가 있는 메소드
go.refactoring.move.affect.initialization.order.validation.message={0} 함수 이동이 애플리케이션 초기화 순서에 영향을 줄 수 있습니다.
go.refactoring.move.break.initialization.validation.message={0} 변수 이동은 {1} 변수 초기화를 중단합니다.
go.refactoring.move.value.will.change.validation.message={1}을(를) 통해 선언될 때 {0} 상수 값이 변경됩니다.
go.refactoring.move.function.will.not.start.application.validation.message=이제 {1} 패키지 외부의 {0} 함수는 애플리케이션을 시작하지 않습니다.
go.refactoring.move.type.will.not.implement.interface.validation.message=이제 {0} 유형은 {1} 인터페이스를 구현하지 않습니다.
go.refactoring.move.exported.function.will.not.start.application.validation.message=이제 비노출 함수 {0} 은(는) 애플리케이션을 시작하지 않습니다.
go.refactoring.move.exported.function.will.not.perform.initialization.validation.message=이제 노출 함수 {0} 은(는) 초기화를 수행하지 않습니다.
go.refactoring.move.type.will.become.non.local.for.method.validation.message={0} 유형이 {1} 메소드에 대한 비 로컬 유형이 됩니다.
go.refactoring.move.required.by.validation.message={0}에 필요
go.refactoring.move.file.should.differ.validation.message=대상 파일은 소스 파일과 다를 수 있습니다.
go.refactoring.rename.looking.for.anonymous.field.usages.progress.title=익명 필드의 사용 위치 검색 중
go.refactoring.rename.looking.for.method.usages.progress.title=메소드 사용 위치 검색 중
go.refactoring.rename.package.title=패키지 이름도 ''{0}''에서 ''{1}''(으)로 변경하시겠습니까?
go.refactoring.rename.file.title=파일 이름도 ''{0}''에서 ''{1}''(으)로 변경하시겠습니까?
go.refactoring.rename.directory.message=패키지 디렉토리 ''{0}'' 이름도 변경하시겠습니까?
go.refactoring.rename.current.receiver.option=현재 리시버 이름만 변경
go.refactoring.rename.all.receivers.option=모든 리시버 이름 변경
go.find.usages.of.interface.methods.dialog.base.methods.checkbox=기본 메소드(&B)
go.find.usages.of.interface.methods.dialog.title=인터페이스 메소드의 사용 위치를 검색하시겠습니까?
go.find.usages.of.interface.methods.dialog.message=''{0}'' 유형은 인터페이스를 구현하며 ''{1}'' 메소드는 메소드를 재정의합니다. 인터페이스 메소드의 사용 위치를 검색하시겠습니까?
go.find.usages.of.interface.methods.notification.title=인터페이스 메소드의 사용 위치를 검색 중
go.find.usages.of.interface.methods.notification.show.options.text={0} 옵션 표시
go.find.usages.show.usages.in.comments.text=Show Usages In Comments
go.find.usages.show.usages.in.comments.description=Show usages of the element in comments
go.code.smells.commit.local.paths=로컬 경로 커밋은 이식이 불가능할 수도 있습니다.
go.init.with.zero.value=제로 값으로 초기화
go.usage.type.return.type=반환 유형
go.usage.type.parameter.declaration=매개변수 선언
go.usage.type.struct.initialization=구조체 초기화
go.usage.type.import=가져오기
go.usage.type.variable.declaration=변수 선언
go.usage.type.field.declaration=필드 선언
go.usage.type.const.declaration=상수 선언
go.usage.type.receiver=리시버
go.usage.type.type.assertion=유형 어설션
go.usage.type.type.alias=유형 별칭
go.usage.type.type.conversion=유형 변환
go.inspection.problem.unmarshal.argument.must.be.a.pointer=이 인수에 포인터 유형이 있어야 합니다
go.enable.template.plugin.notification.text=html/templates 패키지에서 강조 표시, 코드 완성 기능, 탐색 기능을 향상시키려면 Go 템플릿을 활성화하세요
go.enable.template.plugin.action.text=플러그인 활성화
go.install.template.plugin.notification.text=html/templates 패키지에서 강조 표시, 코드 완성 기능, 탐색 기능을 향상시키려면 Go 템플릿을 설치하세요
go.install.template.plugin.action.text=플러그인 설치
go.ignore.template.plugin.action.text=이 프로젝트에서 플러그인 무시
go.inspection.problem.range.var.copies.lock=범위 변수 {0} 이(가) 잠금을 복사합니다\: {1}
go.inspection.problem.function.passes.lock.by.value={0} 이(가) 값으로 잠금을 전달합니다\: {1}
go.inspection.problem.return.copies.lock.value=반환이 lock 값을 복사합니다\: {0}
go.inspection.problem.call.copies.lock.value={0} 호출이 lock 값을 복사합니다\: {1}
go.inspection.problem.literal.copies.lock.value=리터럴이 lock 값을 {0} 에 복사합니다\: {1}
go.inspection.problem.assignment.copies.lock.value=대입이 lock 값을 {0} 에 복사합니다\: {1}
go.inspection.problem.variable.declaration.copies.lock.value=변수 선언이 lock 값을 {0} 에 복사합니다\: {1}
go.inspection.problem.invalid.second.argument.to.errors.as={0} 의 두 번째 인수가 인터페이스 또는 오류를 구현하는 유형을 가르키는 포인터여야 합니다
go.inspection.problem.expression.is.too.small.for.shift={0}({1} 비트) 이(가) {2} 시프트로 너무 작음
go.inspection.problem.method.has.non.standard.signature=메소드 {0} 에 시그니처 {1} 이(가) 있어야 합니다
go.inspection.problem.direct.assignment.to.atomic.value=atomic 값에 직접 대입
go.inspection.problem.cannot.take.address.of.non.addressable.operand=주소를 갖지 않는 피연산자의 주소를 취할 수 없음
go.inspection.problem.assignment.to.method.receiver.propagates.only.to.callees=메소드 리시버 대입은 호출자가 아닌 피호출자에만 전달됩니다
go.inspection.problem.assignment.to.method.receiver.doesnt.propagate=메소드 리시버 대입은 다른 호출로 전달되지 않습니다
go.inspection.problem.expression.can.be.simplified.to.other={0} 을(를) {1} (으)로 단순화할 수 있습니다
go.inspection.problem.condition.is.always.true.or.false=조건 {0} 이(가) 항상 {1} 입니다
go.inspection.problem.conversion.from.int.to.string={0} 을(를) {1} (으)로 변환하면 정수 값을 코드 포인트로 해석합니다
go.inspection.problem.expression.is.always.true.or.false=표현식 {0} 이(가) 항상 {1} 입니다
go.inspection.problem.expression.can.be.simplified=표현식을 단순화할 수 있습니다.
go.inspection.problem.possible.malformed.build.comment=+build 주석의 형식이 잘못되었을 가능성이 있습니다
go.inspection.problem.wrong.location.of.build.comment=빌드 주석은 패키지 절 전에 위치해야 하며 다음에 빈 줄이 있어야 합니다
go.inspection.problem.invalid.double.negative.in.build.constraint=빌드 제약 내 유효하지 않은 double 음수\: {0}
go.inspection.problem.invalid.non.alphanumeric.build.constraint=유효하지 않은 영숫자가 아닌 빌드 제약\: {0}
go.inspection.problem.usage.of.cgo.in.tests=테스트에서 cgo 사용이 지원되지 않습니다.
go.inspection.problem.comment.should.start.with.whitespace=주석은 공백으로 시작해야 합니다
go.inspection.problem.defer.is.called.in.a.for.loop=리소스 누수가 있을 가능성이 있습니다, {0} 이(가) {1} 루프에서 호출되었습니다
go.inspection.problem.deprecated.is.still.used=더 이상 사용되지 않는 {0} 이(가) 아직도 사용되었습니다
go.inspection.problem.reference.is.deprecated={0} 은(는) 더 이상 사용되지 않습니다
go.inspection.problem.division.by.zero=0으로 나누기
go.inspection.problem.duplicate.case=case {0} 중복
go.inspection.problem.variable.repeated.on.left.side={0} 이(가)\:\= 왼쪽에 반복됩니다
go.inspection.problem.name.redeclared.as.imported.package={0} 이(가) 가져온 패키지 이름으로 다시 선언됨
go.inspection.problem.name.collides.with.name.declared.in.this.package={0} 이(가) 이 패키지에 선언된 이름과 충돌합니다
go.inspection.problem.label.already.defined=라벨 {0} 이(가) 이미 정의되어 있습니다
go.inspection.problem.duplicate.argument=인수 {0} 중복
go.inspection.problem.name.redeclared.in.this.function={0} 이(가) 이 함수에서 다시 선언되었습니다
go.inspection.problem.duplicate.field=필드 {0} 중복
go.inspection.problem.type.has.same.named.field.and.method=유형 {0} 에 이름이 {1} 인 필드 및 메소드 둘 다 있습니다
go.inspection.problem.method.redeclared=메소드가 {0} 을(를) 다시 선언합니다
go.inspection.problem.type.has.both.field.and.method.with.name=유형 {0} 에 이름이 {1} 인 필드 및 메소드 둘 다 있습니다
go.inspection.problem.duplicate.method=메소드 {0} 중복
go.inspection.problem.name.redeclared.in.this.package={0} 이(가) 이 패키지에서 다시 선언됨
go.inspection.problem.name.redeclared.in.this.block={0} 이(가) 이 블록에서 다시 선언됨
go.inspection.problem.bad.error.string=오류 문자열은 대문자로 처리되거나 문장 부호로 끝날 수 없습니다
go.inspection.problem.exported.element.should.have.comment=노출 {0} {1} 에 주석이 있어야 하거나 비노출이어야 합니다
go.inspection.problem.exported.function.with.unexported.return.type=비노출 반환 유형이 있는 노출 {0}
go.inspection.problem.exported.var.should.have.its.own.declaration=노출 변수 {0} 에 자체 선언이 있어야 합니다
go.inspection.problem.exported.const.should.have.its.own.declaration=노출 상수 {0} 에 자체 선언이 있어야 합니다
go.inspection.problem.missing.argument.to.conversion={0} (으)로의 변환 인수 누락\: {1}
go.inspection.problem.too.many.arguments.to.conversion={0} (으)로의 변환에 인수가 너무 많음\: {1}
go.inspection.problem.too.many.arguments.in.call={0} 호출에 인수가 너무 많음
go.inspection.problem.not.enough.arguments.in.call={0} 호출에 인수가 부족함
go.inspection.problem.name.collides.with.imported.package={0} {1} 이(가) 가져온 패키지 이름과 충돌합니다
go.inspection.problem.impossible.type.assertion=불가능한 유형 어설션\: {0} 이(가) {1} 을(를) 구현하지 않습니다
go.inspection.problem.impossible.interface.assertion={0} 에서 {1} (으)로의 인터페이스 어설션은 불가능합니다. 모호함\: {2}
go.inspection.problem.impossible.type.switch.case=불가능한 유형 switch case\: {0} 이(가) {1} 을(를) 구현하지 않습니다
go.inspection.problem.infinite.for.loop=무한 {0} 루프
go.inspection.problem.cannot.convert.expression=유형 {0} 표현식을 유형 {1} (으)로 변경할 수 없음
go.inspection.problem.invalid.conversion=유효하지 않은 변환
go.inspection.problem.cannot.slice={0}(유형 {1}) 을(를) 슬라이스할 수 없음
go.inspection.problem.type.does.not.support.indexing=유효하지 않은 연산\: {0} (유형 {1} 이(가) 색인화를 지원하지 않습니다)
go.inspection.problem.cannot.use.expression.in.map.index=맵 색인에서 {0}(유형 {1}) 을(를) 유형 {2} (으)로 사용할 수 없습니다
go.inspection.problem.invalid.low.high.indices=유효하지 않은 색인 값, low <\= high여야 함
go.inspection.problem.invalid.low.high.max.indices=유효하지 않은 색인 값, ow <\= high <\= max여야 함
go.inspection.problem.non.integer.slice.index=Integer가 아닌 슬라이스 색인 {0}
go.inspection.problem.non.integer.iterable.index=Integer가 아닌 {0} 색인 {1}
go.inspection.problem.slice.index.must.be.non.negative=Integer가 아닌 슬라이스 색인 {1} (색인은 양수여야 합니다)
go.inspection.problem.iterable.index.must.be.non.negative=유효하지 않은 {0} 색인 {1} (색인은 양수여야 합니다)
go.inspection.problem.slice.index.out.of.bounds.for.string=유효하지 않은 슬라이스 색인 {0} ({1} 바이트 문자열 범위를 벗어남)
go.inspection.problem.string.index.out.of.bounds.for.string=유효하지 않은 문자열 색인 {0} ({1} 바이트 문자열 범위를 벗어남)
go.inspection.problem.slice.index.out.of.bounds.for.array=유효하지 않은 슬라이스 색인 {0} ({1} 요소 배열 범위를 벗어남)
go.inspection.problem.iterable.index.out.of.bounds.for.array=유효하지 않은 {0} 색인 {1} ({2} 요소 배열 범위를 벗어남)
go.inspection.problem.invalid.receiver.type=유효하지 않은 리시버 유형 {0} ({1} 은(는) {2} 입니다)
go.inspection.problem.invalid.receiver.unnamed.type=이름 없는 유형
go.inspection.problem.invalid.receiver.interface.type=인터페이스 유형
go.inspection.problem.invalid.receiver.pointer.type=포인터 유형
go.inspection.problem.cannot.define.new.methods.on.non.local.type=비 로컬 유형 {0} 에서 새 메소드를 정의할 수 없음
go.inspection.problem.use.of.internal.package.is.not.allowed=내부 패키지 사용은 허용되지 않습니다
go.inspection.problem.use.of.vendored.package.is.not.allowed=벤더 패키지 사용이 허용되지 않습니다
go.inspection.problem.must.be.imported.as={0} (으)로 가져와야 함
go.inspection.problem.at.is.not.allowed.in.import.paths=@은 가져오기 경로에서 허용되지 않습니다
go.inspection.problem.cannot.import.absolute.path=절대 경로를 가져올 수 없음
go.inspection.problem.cannot.import.builtin.package='builtin' 패키지를 가져올 수 없음
go.inspection.problem.non.canonical.import.path=비표준 가져오기 경로\: {0} 은(는) {1} 이어야/여야 합니다
go.inspection.problem.build.constraints.exclude.all.go.files=빌드 제약이 {0} 내 모든 Go 파일을 제외합니다
go.inspection.problem.path.is.a.program.not.an.importable.package={0} 은(는) 프로그램으로 가져올 수 있는 패키지가 아닙니다
go.inspection.problem.found.several.packages={1} 에서 여러 패키지 [{0}] 발견
go.inspection.problem.no.non.test.go.files={0} 내 비 테스트 Go 파일 없음
go.inspection.problem.cannot.import={0} 을(를) 가져올 수 없음
go.inspection.problem.cannot.rename.import.c=import 'C'의 이름을 변경할 수 없음
go.inspection.problem.path.imports.package.with.invalid.import.comment={0} 이(가) 유효하지 않은 가져오기 주석이 있는 패키지를 가져옵니다
go.inspection.problem.path.imports.package.that.expects.canonical.import={0} 이(가) import "{1}" 을(를) 요구하는 패키지를 가져옵니다
go.inspection.problem.cannot.truncate=자를 수 없음\: 유형 {1} (으)로 {0}
go.inspection.problem.invalid.composite.literal.type=유효하지 않은 복합 리터럴 유형\: {0}
go.inspection.problem.too.few.values=값이 너무 적습니다
go.inspection.problem.too.many.values=값이 너무 많음
go.inspection.problem.cannot.assign.value.to.blank.field=값을 빈 필드로 필드로 할당할 수 없음
go.inspection.problem.cannot.assign.value.to.unexported.field=값을 비노출 필드 {0} (으)로 할당할 수 없음
go.inspection.problem.missing.type.in.composite.literal=복합 리터럴 내 유형 누락
go.inspection.problem.mixture.of.field=필드 혼합\: 값 및 값 이니셜라이저
go.inspection.problem.invalid.field.name=유효하지 않은 필드 이름
go.inspection.problem.missing.expression=표현 누락
go.inspection.problem.missing.key.in.map.literal=map 리터럴의 누락된 키
go.inspection.problem.duplicate.key.in.map.literal=맵 리터럴 내 키 {0} 중복 
go.inspection.problem.cannot.convert.known.value.to.type={0} 을(를) {1} (으)로 변환할 수 없음
go.inspection.problem.cannot.convert.value.to.type=값을 {0} (으)로 변환할 수 없음
go.inspection.problem.index.must.be.a.non.negative.integer.constant=색인 {0} 이(가) 양수 integer 상수여야 합니다
go.inspection.problem.negative.index=음수 색인\: {0}
go.inspection.problem.index.out.of.bounds=색인이 범위를 벗어남\: {0}
go.inspection.problem.duplicate.index=색인 중복\: {0}
go.inspection.problem.reference.jumps.over.declaration={0} 이(가) {1} 선언을 건너뜁니다
go.inspection.problem.missing.return=함수 끝에 반환 누락
go.inspection.problem.need.trailing.comma.in.composite.literal=복합 리터널에는 줄 바꿈 전 후행 쉼표가 필요합니다
go.inspection.problem.need.trailing.comma.in.parameter.list=매개변수 목록에는 줄 바꿈 전 후행 쉼표가 필요합니다
go.inspection.problem.need.trailing.comma.in.argument.list=인수 목록에는 줄 바꿈 전 후행 쉼표가 필요합니다
go.inspection.problem.multiple.packages.in.directory=디렉토리 내 여러 패키지\: {0}
go.inspection.problem.name.starts.with.package.name=이름은 패키지 이름으로 시작됩니다.
go.inspection.problem.cannot.call.non.function=함수가 아닌 {0}(유형 {1}) 을(를) 호출할 수 없음
go.inspection.problem.empty.slice.declaration.via.literal=리터럴을 통한 빈 슬라이스 선언
go.inspection.problem.function.does.not.take.writer=함수는 {0} 을(를) 취할 수 없으나 첫 번째 인수가 {1} 입니다
go.inspection.problem.possible.formatting.directive={0} 에 서식 지정 지시문이 있을 가능성이 있습니다
go.inspection.problem.last.argument.ends.with.redundant.newline={0} 의 마지막 인수가 불필요한 줄 바꿈으로 끝납니다
go.inspection.problem.return.value.has.a.function.type={0} 의 반환 값에 함수 유형이 있습니다
go.inspection.problem.argument.is.not.a.function.call=인수 {0} 이(가) 함수 호출이 아닙니다
go.inspection.problem.argument.causes.recursive.call.to.string.method=인수 {0} 이(가) {1} 메소드 재귀 호출을 일으킵니다
go.inspection.problem.receiver.has.generic.name=리시버에 제네릭 이름이 포함됩니다.
go.inspection.problem.receiver.names.are.different=리시버 이름이 다릅니다
go.inspection.problem.invalid.recursive.type=유효하지 않은 재귀 {0} {1}{2}
go.inspection.problem.redundant.blank.expression=불필요한 {0} 표현식
go.inspection.problem.redundant.comma=중복된 쉼표
go.inspection.problem.possibly.redundant.type.conversion=불필요한 유형 변환이 있을 가능성이 있습니다
go.inspection.problem.redundant.type.conversion=중복 형식 변환
go.inspection.problem.redundant.alias=불필요한 별칭
go.inspection.problem.redundant.parentheses=불필요한 소괄호
go.inspection.problem.redundant.index=불필요한 색인 {0}
go.inspection.problem.redundant.semicolon=중복 세미콜론
go.inspection.problem.redundant.type=불필요한 유형
go.inspection.problem.name.collides.with.builtin={0} {1} 이(가) 내장 {2} 와(과) 충돌합니다
go.inspection.problem.value.is.assigned.to.itself={0} 값이 자체 할당됩니다
go.inspection.problem.self.import.is.not.allowed=자체 가져오기가 허용되지 않습니다
go.inspection.problem.declaration.shadows.declaration={0} 선언이 선언을 가립니다
go.inspection.problem.declaration.shadows.declaration.at={0} 선언이 {1} 의 선언을 가립니다
go.inspection.problem.eliminate.snake.case=스네이크 표기법 제거
go.inspection.problem.use.camelcase.instead.of.snake.case=스네이크 표기법 대신 낙타 표기법 사용
go.inspection.problem.mismatched.types.byte.and.string=일치하지 않는 유형\: 바이트 및 문자열
go.inspection.problem.bad.count.argument.of.strings.replace={0} 의 Count 인수는 {1} 일 수 없습니다
go.inspection.problem.fields.are.assigned.without.explicit.names=필드가 명시적 이름 없이 할당되었습니다
go.inspection.problem.wrong.example.signature=잘못된 예시 시그니처
go.inspection.problem.wrong.test.signature=잘못된 테스트 시그니처
go.inspection.problem.cannot.use.underscore.as.value={0} 을(를) 값으로 사용할 수 없음
go.inspection.problem.unhandled.error=처리되지 않는 오류
go.inspection.problem.unit.specific.suffix=유닛 중심 접미사 {0}
go.inspection.problem.unnecessarily.exported.element=불필요하게 노출된 {0} {1}
go.inspection.problem.unreachable.code=도달할 수 없는 코드
go.inspection.problem.imports.are.not.sorted=import 문이 정렬되지 않았습니다
go.inspection.problem.unused.result=사용되지 않는 결과\: {0}
go.inspection.problem.unused.import=사용하지 않는 import
go.inspection.problem.assignment.used.as.value={0} 이(가) 가밧으로 사용됨
go.inspection.problem.no.placeholders.in.format.string=서식 문자열에 자리표시자가 없음
go.inspection.problem.too.many.arguments.for.format.string=서식 문자열에 대한 인수가 너무 많음\: 필요 \={0}, 실제 \={1}
go.inspection.problem.verb.will.ignore.flag=동사가 {0} 플래그{1} 을(를)무시합니다
go.inspection.problem.verb.will.ignore.flags=동사가 {0} 플래그{1} 을(를) 무시합니다
go.inspection.problem.placeholder.syntax.error=자리표시자 구문 오류{0}
go.inspection.problem.this.verb.can.be.used.only.in.fmt.errorf=이 동사는 {0} 호출{1} 에서 사용될 수 있습니다
go.inspection.problem.this.verb.can.be.used.only.once.in.a.format.string=이 동사는 서식 문자열{0} 에서 한 번만 사용될 수 있습니다
go.inspection.problem.fmt.parameter.with.non.integer.expression={0,choice,0\#너비|1\#정확성|2\#동사}이(가) 정수가 아닌 표현식 {1}{2} (으)로 지정되었습니다
go.inspection.problem.no.argument.for.placeholder.part={0,choice,0\#너비|1\#정확성|2\#동사}에 대한 인수 없음\: 인수 색인 \={1}, 인수 개수 \={2}{3}
go.inspection.problem.unknown.verb=알 수 없는 동사 {0}{1}
go.inspection.problem.return.value.of.placeholder.argument.has.a.function.type=자리표시자 인수 반환 값에 함수 유형{0}이 있습니다
go.inspection.problem.placeholder.argument.is.not.a.function.call=자리표시자 인수가 함수 호출{0} 이(가) 아닙니다
go.inspection.problem.placeholder.argument.has.wrong.type=자리표시자 인수 {0} 에 잘못된 유형 {1}{2} 이(가) 있습니다
go.inspection.problem.placeholder.argument.causes.recursive.call.to.string=자리표시자 인수가 {0} 메소드{1} 재귀 호출을 일으킵니다
go.inspection.problem.index.zero.is.illegal=색인 값 [0] 이(가) 잘못되었습니다{0}
go.inspection.problem.invalid.use.of.triple.dot=유효하지 않은... 사용, 해당하는 매개변수가 비가변적임니다
go.inspection.problem.too.many.arguments.to.return=반환할 인수가 너무 많음
go.inspection.problem.not.enough.arguments.to.return=반환할 인수가 충분하지 않음
go.inspection.problem.invalid.argument.must.be.complex.type=유효하지 않은 인수 {0}(유형 {1})\: 복합 유형이어야 함
go.inspection.problem.expression.with.type={0}(유형 {1})
go.inspection.problem.non.bool.used.as.condition=bool이 아닌 {0} 이(가) 조건으로 사용됨
go.inspection.problem.cannot.range=범위가 {0} 을(를) 초과할 수 없음
go.inspection.problem.type.or.type={0} 또는 {1}
go.inspection.problem.nil.is.not.allowed={0} 은(는) 허용되지 않습니다. {1} 이어야/여야 함
go.inspection.problem.incompatible.types={0} 을(를) 유형 {1} (으)로 사용할 수 없음
go.inspection.problem.incompatible.types.in.switch=switch{1} 내 유효하지 않은 case {0}
go.inspection.problem.incompatible.types.in.switch.on.expression={1}{2} 의 switch 내 유효하지 않은 case {0}
go.inspection.problem.mismatched.types=\ (일치하지 않는 유형 {0} 및 {1})
go.inspection.problem.incompatible.types.some.methods.are.missing=일부 메소드가 누락되었기 때문에 유형이 {0} {1} 을(를) 구현하지 않습니다\: {2}{3}
go.inspection.problem.incompatible.types.ambiguous.methods={1}{2} 이(가) 모호하기 때문에 유형이 {0} 을(를) 구현하지 않습니다 {3}
go.inspection.problem.incompatible.method.has.pointer.receiver={1}{2} 메소드가 포인터 리시버이기 때문에 유형이 {0} 을(를) 구현하지 않습니다 {3}
go.inspection.problem.incompatible.need.method.have.method=유형이 {0}{1} 을(를) 구현하지 않습니다\: 메소드 {2} 필요\: 메소드 {3}{4} 있음
go.inspection.problem.incompatible.unexported.method=유형{1}이 내보내기되지 않은 메소드를 포함하며 다른 패키지{2}에 정의되어 있기때문에 {0} 을(를) 구현할 수 없습니다
go.inspection.problem.invalid.inc.dec.operation=유효하지 않은 연산\: {0} (비 숫자 유형 {1})
go.inspection.problem.cannot.assign.in.multiple.assignment=여러 대입에서 {0} 을(를) {1} 에 할당할 수 없음
go.inspection.problem.cannot.convert.nil.to.type={0} 을(를) 유형 {1} (으)로 변환할 수 없음
go.inspection.problem.invalid.unary.operation=유효하지 않은 연산\: {0}
go.inspection.problem.cannot.convert.constant=유효하지 않은 연산\: {0} (상수 {1} 을(를) 유형 {2} (으)로 변환할 수 없음)
go.inspection.problem.operator.not.defined=유효하지 않은 연산\: {0} ({2} 에 연산자 {1} 이(가) 정의되지 않았습니다)
go.inspection.problem.receive.from.send.only.type=유효하지 않은 연산\: {0} (전송 전용 유형 {1} 으로부터 수신)
go.inspection.problem.receive.from.non.chan.type=유효하지 않은 연산\: {0} (비 chan 유형 {1} 으로부터 수신)
go.inspection.problem.send.to.non.chan.type=유효하지 않은 연산\: {0} (비 chan 유형 {1} (으)로 전송)
go.inspection.problem.send.to.receive.only.type=유효하지 않은 연산\: {0} (수신 전용 유형 {1} (으)로 전송)
go.inspection.problem.invalid.operation.mismatched.types=유효하지 않은 연산\: {0} (일치하지 않는 유형 {1} 와(과) {2})
go.inspection.problem.shift.count.must.be.unsigned.integer=유효하지 않은 연산\: {0} (시프트 개수 유형 {1} 이(가) 부호 없는 정수여야 함)
go.inspection.problem.shift.count.must.be.integer=유효하지 않은 연산\: {0} (시프트 개수 유형 {1} 이(가) 정수여야 함)
go.inspection.problem.negative.shift.count=유효하지 않은 연산\: {0} (음수 시프트 개수)
go.inspection.problem.receiver.may.be.nil.in.call=리시버 {0} 이(가) 호출 내 {1} 일 수 있습니다
go.inspection.problem.method.call.may.lead.to.nil.pointer.dereference=메소드 호출 {0} 이(가) nil 포인터 역참조를 일으킬 수 있습니다
go.inspection.problem.function.call.may.lead.to.nil.pointer.dereference=함수 호출 {0} 이(가) nil 포인터 역참조를 일으킬 수 있습니다
go.inspection.problem.accessing.field.may.lead.to.nil.pointer.dereference=필드 {0} 액세스가 nil 포인터 역참조를 일으킬 수 있습니다
go.inspection.problem.send.may.block.because.of.nil.channel={0} 채널로 인해 접속이 차단될 수 있습니다
go.inspection.problem.receive.may.block.because.of.nil.channel={0} 채널로 인해 수신이 차단될 수 있습니다
go.inspection.problem.potential.nil.pointer.dereference=잠재적 nil 포인터 역참조
go.inspection.problem.assignment.to.entry.may.panic.because.of.nil.map={0} 맵으로 인해 항목에 대입하면 패닉이 발생할 수 있습니다
go.inspection.problem.indexing.may.panic.because.of.nil.slice={0} 슬라이스로 인해 색인화 시 패닉이 발생할 수 있습니다
go.inspection.problem.nil.loop.is.always.skipped={0} 이(가) 항상 {1} 이기 때문에 루프를 항상 건너뜁니다
go.inspection.problem.corresponding.error.may.be.not.nil=해당 오류 변수가 {2} 이(가) 아닐 수 있으므로 {0} 에 {1} 또는 다른 예기치 않은 값이 있을 수 있습니다
go.inspection.problem.condition.is.always.true.or.false.because.of.nil={1} 이(가) 항상 {2} 이기 때문에 조건이 항상 {0} 입니다
go.inspection.problem.condition.is.always.true.or.false.because.of.not.nil={1} 이(가) 항상 {2} 이(가) 아니기 때문에 조건이 항상 {0} 입니다
go.inspection.problem.unused.dependency=사용되지 않는 종속 요소
go.inspection.problem.contains=포함
go.inspection.problem.type.which.is.sync.locker=<code>sync.Locker</code> 유형 %s
go.inspection.problem.type.is.sync.locker=유형 %s 이(가) <code>sync.Locker</code> 입니다
go.modules.scratch.file.notification.text=모듈 컨텍스트 사용 중
go.version.does.not.support.go.modules.validation.message={0} 이(가) Go 모듈을 지원하지 않습니다
go.run.target.executable.path.label=Go 실행 파일\:
go.run.target.gopath.label=GOPATH\:
go.run.target.version.label=버전\:
go.run.target.configure.label=Go 구성
go.run.target.run.label=Go 애플리케이션 실행
go.vgo.executable.path.label=Vgo 실행 파일
go.vgo.executable.project.label=프로젝트 SDK
go.attach.directory.action.text=디렉토리 "{0}" 연결
go.detach.directory.action.text=디렉토리 "{0}" 연결 해제
go.remove.else=else 제거
go.unwrap.else=else 줄 바꿈 해제
go.unwrap.for=줄 바꿈 해제
go.unwrap.argument=인수 줄 바꿈 해제
go.unwrap.if=if 줄 바꿈 해제
go.settings.global.gopath.group.name=전역 GOPATH
go.settings.project.gopath.group.name=프로젝트 GOPATH
go.settings.module.gopath.group.name=모듈 GOPATH
go.notification.dep.projects.are.detected.text=Dep 프로젝트가 탐지되었습니다
go.dep.executable.path.label=Dep 실행 파일
go.quick.doc.package.label=패키지\:
go.quick.doc.resolved.value.label=해결된 값\:
go.quick.doc.methods.label=메소드\:
go.settings.folding.one.line.return.checkbox=한 줄 반환
go.settings.folding.one.line.panics.checkbox=한 줄 패닉
go.settings.folding.format.strings.checkbox=서식 문자열
go.settings.formatter.add.space.except.for.comments.label=다음으로 시작하는 주석 제외\:
go.settings.formatter.comment.prefix.cannot.be.empty.validation.message=주석 접두사가 공백일 수 없습니다
go.notification.go.root.is.not.defined.text=GOROOT가 정의되지 않았습니다
go.notification.go.root.is.incorrect.text=GOROOT가 올바르지 않습니다
go.refactoring.split.declarations.action.text=선언 분할
go.refactoring.merge.declarations.action.text=병합 선언
go.inlays.show.unnamed.fields.in.structure.values.option=구조 값 내 이름 없는 필드 표시
go.inlays.show.return.parameters.option=반환 매개변수 표시
go.quick.settings.file.watchers.text=액션 저장 시...
go.quick.settings.file.watchers.description=go fmt, goimports 및 다른 명령 줄 도구 편집
go.file.watcher.go.imports.description=Go 파일에서 `goimports` 실행
go.file.watcher.go.fmt.description=Go 파일에서 `go fmt` 실행
go.file.watcher.golangci.description=Go 파일 디렉토리에서 `golangci-lint` 실행
go.before.check.in.show.fmt.error.button=세부사항(&D)...
go.completion.fill.all.fields.lookup.string=모든 필드 채우기...
go.completion.fill.selected.fields.lookup.string=선택한 필드 채우기...
go.modules.dependency.diagram=Go modules dependency diagram
go.converter.build.run.configuration.description=`Go Build` 실행 구성이 변경되었습니다. 기존 구성은 변환되어야 합니다.
go.converter.single.file.run.configuration.description=Go `Run single file` 실행 구성이 제거되었습니다. 기존 구성은 변환되어야 합니다.
go.converter.build.tags.description=Go 프로젝트 설정 저장 메커니즘이 변경되었으므로 프로젝트와 모듈이 업데이트되어야 합니다.
go.converter.sdk.description=Go 프로젝트 모델이 변경되었으므로 프로젝트와 모듈이 업데이트되어야 합니다
go.converter.project.model.description=Go 프로젝트 모델이 변경되었으므로 프로젝트와 모듈이 업데이트되어야 합니다
go.inspection.options.panel.import.path=가져오기 경로
go.inspection.options.panel.function.name=함수 이름
go.inspection.options.panel.string.methods=문자열 메소드
go.inspection.options.panel.reported.functions=보고된 함수/메소드\:
go.inspection.options.panel.receiver=리시버
go.inspection.options.panel.method.name=메소드 이름
go.inspection.options.panel.exclude=제외\:
go.structure.view.show.package.structure.action.text=패키지 구조 표시
go.structure.view.private.members.filter.text=private 멤버 표시
go.structure.view.exportability.sorter.text=내보내기 가능 여부로 정렬
go.structure.view.method.location={0}
go.sum.generated.sources.filter.notification.text=해당 파일은 Go 도구에서만 사용하도록 되어 있으므로 편집해서는 안됩니다. 변경하면 빌드 프로세스가 중단될 수 있습니다.
go.modules.background.task.updating.dependencies.title=Updating Go modules dependencies
go.modules.background.task.updating.dependencies.text=Executing ''go list'' on {0} ''go.mod'' files...
go.modules.unknown.dependencies.notification.text=모듈 종속 요소 전체 집합을 알 수 없음, 일부 Go 모듈 특정 기능이 제공되지 않을 수 있습니다.
go.modules.unknown.dependencies.notification.tooltip=네트워크 연결 이슈 또는 명시적 GOPROXY\=off로 인해 발생했을 수 있습니다
go.modules.unknown.dependencies.notification.retry=''{0}'' 다시 실행
go.modules.tree.structure.replaced=(replaced)
go.modules.tree.structure.original.version=Original version\: {0}
go.modules.tree.structure.replacement=Replacement\: {0}
