plugin.JSIntentionPowerPack.name       =JSIntentionPowerPack
plugin.JSIntentionPowerPack.description=40개가 넘는 새로운 JavaScript 인텐션 액션을 추가합니다.
plugin.test.processing                 =인텐션 처리 중\: {0}
plugin.test.title                      =JSIntentionPowerPack 플러그인 테스트 중...
plugin.test.summary                    ={0}개 완료, {1}개 실패(탐지로 인해 {2}개, 수정으로 인해 {3}개)
plugin.intention.untested              =인텐션 {0}이(가) 테스트되지 않았습니다.

plugin.category.numbers     =JavaScript/숫자
plugin.category.boolean     =JavaScript/부울
plugin.category.conditional =JavaScript/조건 연산자
plugin.category.shift       =JavaScript/시프트 연산
plugin.category.declaration =JavaScript/선언
plugin.category.comments    =JavaScript/주석
plugin.category.control-flow=JavaScript/제어 흐름
plugin.category.other       =JavaScript/Etc.
plugin.category.typescript  =TypeScript
plugin.category.flowjs  =Flow JS
plugin.category.javascript.jsx  =JavaScript/JSX

number.flip-arithmetic-operation.display-name                              =Invertir {0}
number.flip-arithmetic-operation.family-name                               =Invertir operando de operación aritmética

bool.de-morgans-law.display-name.ANDAND                         =\\&\\&를 ||로 교체
bool.de-morgans-law.display-name.OROR                           =||를 \\&\\&로 교체
bool.de-morgans-law.family-name                                 =드모르간 법칙
bool.flip-comparison.display-name.equals                        =Invertir {0}
bool.flip-comparison.display-name.not-equals                    =Invertir {0} a {1}
bool.flip-comparison.display-name.unknown                       =Invertir comparación
bool.flip-comparison.family-name                                =Invertir comparación
bool.flip-conjunction.display-name                              =Invertir {0}
bool.flip-conjunction.family-name                               =Invertir operandos concatenados
bool.negate-comparison.display-name.equals                      =Negar {0}
bool.negate-comparison.display-name.not-equals                  =Negar {0} como {1}
bool.negate-comparison.family-name                              =Negar comparación
bool.remove-boolean-equality.display-name                       =Simplificar {0}
bool.remove-boolean-equality.family-name                        =부울 상등 제거
braces.add-braces.display-name                                  =Agregar llaves a {0}
braces.add-braces.family-name                                   =중괄호 추가
braces.remove-braces.display-name                               =Quitar llaves a ''{0}''.
braces.remove-braces.family-name                                =중괄호 제거
comment.change-to-cstyle-comment.display-name                   =블록 주석으로 교체
comment.change-to-cstyle-comment.family-name                    =블록 주석으로 교체
comment.change-to-end-of-line-comment.display-name              =end-of-line 주석으로 교체
comment.change-to-end-of-line-comment.family-name               =end-of-line 주석으로 교체
comment.move-comment-to-separate-line.display-name              =주석을 별도의 줄로 이동
comment.move-comment-to-separate-line.family-name               =주석을 별도의 줄로 이동
conditional.flip-conditional.display-name                       =Invertir ?\:
conditional.flip-conditional.family-name                        =Invertir condicional
conditional.flip-if.display-name                                =Invertir if-else
conditional.flip-if.family-name                                 =Invertir if
conditional.replace-conditional-with-if.display-name            =?\:을 if-else로 교체
conditional.replace-conditional-with-if.let.display-name        ='let'으로 교체하고 ?\:을 if-else로 변경
conditional.replace-conditional-with-if.family-name             =조건식을 if-else로 교체
constant.constant-expression.display-name                       =상수값 계산
constant.constant-expression.family-name                        =상수값 계산
constant.constant-subexpression.display-name                    ={0} {1} {2}의 상수값 계산
constant.constant-subexpression.family-name                     =하위 표현식의 상수값 계산
increment.extract-increment.display-name                        ={0} 추출
increment.extract-increment.family-name                         =증분 추출
initialization.merge-declaration-and-initialization.display-name=Combinar declaración e inicializador
initialization.merge-declaration-and-initialization.family-name =Combinar declaración e inicializador
initialization.split-declaration-and-initialization.display-name=Dividir en declaración e inicializador
initialization.split-declaration-and-initialization.let.display-name=Reemplazar con 'let' y dividir en declaración e inicializador
initialization.split-declaration-and-initialization.family-name =Dividir declaración e inicializador
initialization.split-declaration-and-move-to-scope-start.display-name=Dividir en declaracióne e inicializador y vaya al principio del alcance
initialization.split-declaration-and-move-to-scope-start.family-name =Dividir por declaración e ir al inicio del alcance

initialization.flow-correct-annotation.family-name=올바른 flow 어노테이션 제공
initialization.flow-correct-annotation.display-name=올바른 flow 어노테이션 제공

initialization.flow-type-explicitly.family-name=변수 유형을 명시적으로 지정
initialization.flow-type-explicitly.display-name =변수 유형을 명시적으로 지정

loop.merge-parallel-for-loops.display-name                      ='for' 루프 병합
loop.merge-parallel-for-loops.family-name                       =병렬 for 루프 병합
loop.merge-parallel-for-in-loops.display-name                   ='for-in' 루프 병합
loop.merge-parallel-for-in-loops.family-name                    =병렬 for-in 루프 병합
number.convert-integer-to-decimal.display-name                  =10진수로 변환
number.convert-integer-to-decimal.family-name                   =10진수로 변환
number.convert-integer-to-hex.display-name                      =16진수로 변환
number.convert-integer-to-hex.family-name                       =16진수로 변환
number.convert-integer-to-octal.display-name                    =8진수로 변환
number.convert-integer-to-octal.family-name                     =8진수로 변환
number.convert-integer-to-binary.family-name                     =2진수로 변환
number.convert-integer-to-binary.display-name                    =2진수로 변환
number.replace-multiply-with-shift.display-name                 ={0}을(를) {1}(으)로 교체
number.replace-multiply-with-shift.family-name                  =멀티플라이를 시프트로 교체
number.replace-shift-with-multiply.display-name                 ={0}을(를) {1}(으)로 교체
number.replace-shift-with-multiply.family-name                  =시프트를 멀티플라이로 교체
opassign.replace-with-operator-assignment.display-name          =\=를 {0}\=로 교체
opassign.replace-with-operator-assignment.family-name           =대입을 연산자 대입으로 교체
parenthesis.remove-unnecessary-parentheses.display-name         =불필요한 소괄호를 제거합니다.
parenthesis.remove-unnecessary-parentheses.family-name          =불필요한 소괄호를 제거합니다.
string.double-to-single-quoted-string.display-name              =Reemplazar cadena entre comillas dobles por cadena entre comillas simples
string.double-to-single-quoted-string.family-name               =Reemplazar cadena entre comillas dobles por cadena entre comillas simples
string.join-concatenated-string-literals.display-name           =Literal de cadena concatenado
string.join-concatenated-string-literals.family-name            =연결된 문자열 리터럴 결합
string.single-to-double-quoted-string.display-name              =Reemplazar cadena entre comillas simples por cadena entre comillas dobles
string.single-to-double-quoted-string.family-name               =Reemplazar cadena entre comillas simples por cadena entre comillas dobles
switchtoif.replace-if-with-switch.display-name                  =if를 switch로 교체
switchtoif.replace-if-with-switch.family-name                   =if를 switch로 교체
switchtoif.replace-switch-with-if.display-name                  ='switch' 문을 'if' 문으로 교체
switchtoif.replace-switch-with-if.family-name                   =switch 문을 if 문으로 교체
trivialif.merge-else-if.display-name                            =else-if 병합
trivialif.merge-else-if.family-name                             =else-if 병합
trivialif.merge-if-and.display-name                             ='if' 문 병합
trivialif.merge-if-and.family-name                              =중첩된 if를 AND 조건으로 병합
trivialif.merge-if-or.display-name                              ='if' 문 병합
trivialif.merge-if-or.family-name                               =동등한 if를 OR 조건으로 병합
trivialif.merge-parallel-ifs.display-name                       ='if' 문 병합
trivialif.merge-parallel-ifs.family-name                        =병렬 if 문 병합
trivialif.remove-redundant-else.display-name                    ='else' 줄 바꿈 해제
trivialif.remove-redundant-else.family-name                     =else 줄 바꿈 해제
trivialif.replace-if-with-conditional.display-name              =if-else를 ?\:으로 교체
trivialif.replace-if-with-conditional.family-name               ='if else'를 조건식으로 교체
trivialif.split-else-if.display-name                            =else-if 분할
trivialif.split-else-if.family-name                             =else-if 분할
trivialif.split-if-and.display-name                             =AND로 연결된 if 분할
trivialif.split-if-and.family-name                              =Dividir ifs conectados por AND
trivialif.split-if-or.display-name                              =OR로 연결된 if 분할
trivialif.split-if-or.family-name                               =OR로 연결된 조건을 동등 if로 분할
jsx.attribute.value.remove.braces.family-name                   =중괄호 제거
jsx.attribute.value.remove.braces.replace.display-name          =다음으로 교체 ""
jsx.attribute.value.wrap.with.braces.family-name                =값을 {}로 래핑
jsx.attribute.value.wrap.with.braces.replace.display-name       =다음으로 교체 {}

