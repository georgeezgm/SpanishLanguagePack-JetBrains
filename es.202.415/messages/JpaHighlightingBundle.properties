persistent.object.class.should.be.top.level=지속성 객체 클래스 ''{0}''의 경우 최상위 클래스여야 합니다.
persistent.object.class.0.is.already.annotated=지속성 객체 클래스 ''{0}''의 경우 이미 어노테이션 처리되었습니다.
persistent.object.class.0.should.not.be.final=지속성 객체 클래스 ''{0}''의 경우 final일 수 없습니다.
persistent.entity.0.should.have.id=지속성 엔티티 ''{0}''에는 기본 키가 포함되어야 합니다.
method.0.should.take.parameter.of.type.1.here=''{0}'' 메소드는 ''{1}'' 유형의 매개변수만 취해야 합니다.
method.0.should.take.1.parameters.only=''{0}'' 메소드는 오직 {1} 매개변수만 취해야 합니다.
method.0.should.return.1=''{0}'' 메소드는 ''{1}''''을(를) 반환해야 합니다.
class.0.should.have.1.no.arg.constructor=클래스 ''{0}''에는 {1} no-arg 생성자가 포함되어야 합니다.
quick.fix.family.remove.annotation=어노테이션 제거
quick.fix.name.remove.annotation.0.from.1=''{1}''''에서 ''{0}'' 어노테이션 제거
class.both.persistent.and.entity.listener=''{0}'' 클래스는 지속성 및 엔티티 리스너 클래스로 동시에 정의될 수 없습니다.
more.than.one.method.defined.for.entity.listener.method.type=''{0}'' 엔티티 리스너 메소드는 ''{1}'' 클래스에 이미 정의되어 있습니다.
intention.family.remove.entity.listener.method.metadata=EntityListener 메소드 설정 제거
entity.listener.class.has.no.annotated.methods=EntityListener 클래스 ''{0}''는 EntityListener 메소드가 포함되지 않습니다.
intention.family.generate.entity.listener.methods=EntityListener 메소드 생성
unable.to.resolve.reference=참조를 확인할 수 없음
unable.to.resolve=\ ''{0}'' 확인 불가
title.tooltip.associated.with=연결 대상\:
title.popup.choose.psi.target=대상 선택
persistent.attribute=지속성 속성
intention.family.remove.attribute=메타데이터 제거
text.remove.0=''{0}'' 제거
entity.class.not.mapped=엔티티 클래스 ''{0}''의 경우 테이블에 매핑되지 않음
attribute.not.mapped=지속성 속성 ''{0}''의 경우 매핑되지 않음
more.than.one.attribute.configured.for.method=메소드 ''{0}''에 대해 구성된 하나 이상의 속성
more.than.one.attribute.configured.for.field=필드 ''{0}''에 대해 구성된 하나 이상의 속성
attribute.should.be.valid.lob.type=''{0}'' 속성 유형은 유효한 Lob 유형이어야 합니다.
attribute.should.be.collection=''{0}'' 속성 유형은 컨테이너여야 합니다.
attribute.should.not.be.map=''{0}'' 속성 유형은 맵일 수 없습니다.
attribute.should.be.valid.collection=''{0}'' 속성 컨테이너 유형이 올바르지 않습니다.
attribute.should.not.be.collection=''{0}'' 속성 유형은 컨테이너일 수 없습니다.
attribute.should.be.entity=''{0}'' 속성 대상은 엔티티여야 합니다.
attribute.types.should.be.compatible=''{0}''을(를) ''{1}''에 할당할 수 없습니다.
attribute.should.not.reference.mapped.classes=''{0}'' 속성 유형은 매핑된 클래스를 참조할 수 없습니다.
attribute.should.be.embeddable=''{0}'' 속성 유형은 Embeddable 유형이어야 합니다.
attribute.should.not.be.embeddable=''{0}'' 속성 유형은 Embeddable 유형일 수 없습니다.
attribute.0.component.1.should.be.2=''{0}'' 속성 {1}유형은 {2}일 수 없습니다.
attribute.0.component.1.should.not.be.2=''{0}'' 속성 {1}유형은 ''{2}''일 수 없습니다.
attribute.0.type.should.be.1=''{0}'' 속성 유형은 {1}일 수 없습니다.
attribute.0.type.should.not.be.array=''{0}'' 속성 유형은 배열일 수 없습니다.
attribute.with.wrong.collection.type=잘못된 컬렉션 유형에는 어노테이션이 적용됩니다.
attribute.mapkeyclass.with.mapkey.conflict=@MapKeyClass 어노테이션은 @MapKey와 함께 사용될 수 없습니다.
attribute.invalid.type=''{0}'' 속성 유형은 올바르지 않습니다.
attribute.member.should.be.field.or.getter=지속성 속성 메타데이터는 필드 또는 프로퍼티 getter에 지정되어야 합니다
attribute.definition.lacks.setter=프로퍼티 기반 액세스에는 setter와 getter가 모두 있어야 합니다
attribute.type.not.valid.for.embeddable=''{0}'' 속성은 Embeddable 객체에서 사용할 수 없습니다.
attribute.opposite.type.incorrect=''{0}'' 속성에는 잘못된 반대쪽 ''{1}'' 속성 ''{2}'' 이(가) 포함됩니다.
attribute.should.be.interface.or.serializable=속성 ''{0}"의 경우 인터페이스 또는 serializable 속성이어야 합니다.
fix.edit.unit.datasource.name=데이터 소스 할당
fix.edit.unit.datasource.family.name=지속성 유닛 데이터 소스 할당
fix.refresh.datasource.name=데이터 소스 ''{0}'' 새로고침
fix.refresh.datasource.family.name=데이터 소스 테이블 새로고침
quick.fix.family.add.persistence.attribute=지속성 속성 추가
quick.fix.name.add.id.attribute=ID 속성 추가
quick.fix.name.add.persistence.attribute=''{1}'' 클래스에 ''{0}'' 추가
quick.fix.family.add.facet=JPA 패싯 추가
quick.fix.name.add.facet.to.0.module=''{0}'' 모듈에 JPA 패싯 추가

interface.should.extend=''{0}'' 인터페이스는 ''{1}''을(를) 확장해야 합니다.
interface.should.not.extend=''{0}'' 인터페이스는 ''{1}''을(를) 확장할 수 없습니다.
class.should.extend=''{0}'' 클래스는 ''{1}''을(를) 확장해야 합니다.
class.should.not.extend=''{0}'' 클래스는 ''{1}''을(를) 확장할 수 없습니다.
class.should.implement=''{0}'' 클래스는 ''{1}''을(를) 구현해야 합니다.
class.should.not.implement=''{0}'' 클래스는 ''{1}''을(를) 구현할 수 없습니다.
