find.inline.calls.task.compute.names=선언 {0}에 대한 클래스 이름을 계산합니다.
find.inline.calls.task.cancelled=클래스 이름 계산이 중단되어 디버거가 {0}의 일부 실행을 건너뛸 수 있습니다.

alternative.sources.notification.title=파일 {0}에 사용할 수 있는 대체 소스
alternative.sources.notification.disable=비활성화

function.breakpoint.tab.title=Kotlin 함수 중단점
function.breakpoint.initialize=함수 중단점을 초기화합니다.
function.breakpoint.cancel.emulation=에뮬레이션 취소

line.breakpoint.tab.title=Kotlin 줄 중단점
line.breakpoint=줄 중단점
line.and.lambda.breakpoint=줄 및 {0,choice,1\#람다|2\#람다} 중단점

filter.ignore.internal.classes=Kotlin 런타임 라이브러리 구현 클래스로 스텝인투 안 함
variables.calculate.delegated.property.values=위임된 프로퍼티값을 계산합니다(프로그램 실행에 영향을 줄 수 있음).
variables.disable.coroutine.agent.values=Disable coroutine agent
variables.disable.coroutine.agent.tooltip=Disables coroutine agent for Gradle and Java run configurations

field.watchpoint.tab.title=Kotlin 필드 감시점
field.watchpoint.properties.access=필드 액세스(&A)
field.watchpoint.properties.modification=필드 수정(&M)
field.watchpoint.properties.initialization=필드 초기화(&I)
couldn.t.find.0.class=''{0}'' 클래스를 찾을 수 없습니다
process.resumed=프로세스가 다시 시작되었습니다
stepping.over.inline=인라인 스텝오버

breakpoint.properties.panel.option.pass.count=&Pass count\:
breakpoint.properties.panel.option.class.filters=C&lass filters\:
breakpoint.properties.panel.option.instance.filters=&Instance filters\:
label.breakpoint.properties.panel.group.conditions=Filters

label.add.field.breakpoint.dialog.fq.name=Fully qualified name of a class\:
label.add.field.breakpoint.dialog.field.name=Field name\:
