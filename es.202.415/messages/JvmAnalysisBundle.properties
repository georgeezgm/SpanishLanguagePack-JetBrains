jvm.inspections.group.name=lenguaje JVM
jvm.inspections.unstable.api.usage.display.name=Uso de API inestable
jvm.inspections.unstable.api.usage.annotations.list=Anotaciones de API inestables
jvm.inspections.unstable.api.usage.ignore.inside.imports=Ignorado en declaraciones de importación
jvm.inspections.unstable.api.usage.api.is.marked.unstable.itself=''{0}'' está marcado como inestable en @{1}.
jvm.inspections.unstable.api.usage.api.is.declared.in.unstable.api=''{0}'' declarado en {1} inestable ''{2}'' marcado @{3}.
jvm.inspections.unstable.api.usage.overridden.method.is.marked.unstable.itself=El método anulado ''{0}'' está marcado como inestable en @{1}.
jvm.inspections.unstable.api.usage.overridden.method.is.declared.in.unstable.api=El método anulado ''{0}'' se declaró en inestable {1} ''{2}'', marcado @{3}.
jvm.inspections.unstable.api.usage.unstable.type.is.used.in.signature.of.referenced.api=''{0}'' es inestable porque su firma hace referencia a un {1} ''{2}'' inestable marcado como @{3}
jvm.inspections.scheduled.for.removal.future.version=versión futura
jvm.inspections.scheduled.for.removal.predefined.version=Versión {0}
jvm.inspections.scheduled.for.removal.api.is.marked.itself=''{0}'' se eliminará de {1}.
jvm.inspections.scheduled.for.removal.api.is.declared.in.marked.api=''{0}'' fue declarado en {1} ''{2}'', y su eliminación está programada para {3}.
jvm.inspections.scheduled.for.removal.method.overridden.marked.itself=El método anulado ''{0}'' se eliminará de {1}.
jvm.inspections.scheduled.for.removal.method.overridden.declared.in.marked.api=El método anulado ''{0}'' se declaró en {1} ''{2}'', y su eliminación está programada para {3}.
jvm.inspections.scheduled.for.removal.scheduled.for.removal.type.is.used.in.signature.of.referenced.api=''{0}'' se eliminará porque su firma hace referencia a {1} ''{2}'', que se eliminará de {3}
jvm.inspections.unstable.type.used.in.signature.display.name=Tipo inestable utilizado en la firma.
jvm.inspections.unstable.type.used.in.class.signature.description=La clase debe marcarse con la anotación ''@{0}'' porque hace referencia al tipo inestable ''{1}'' en su declaración.
jvm.inspections.unstable.type.used.in.method.signature.description=El método debe estar marcado con la anotación ''@{0}'' porque su firma hace referencia al tipo inestable ''{1}''
jvm.inspections.unstable.type.used.in.field.signature.description=El campo debe estar marcado con la anotación ''@{0}'' porque el campo hace referencia al tipo inestable ''{1}'' en ese tipo.
jvm.inspections.missing.deprecated.annotation.on.scheduled.for.removal.api.display.name=Falta la anotación '@Deprecated' en la API programada para eliminación
jvm.inspections.missing.deprecated.annotation.on.scheduled.for.removal.api.description=Las API programadas para su desuso también deben marcarse con la anotación '@Deprecated'.
jvm.inspections.must.already.be.removed.api.display.name=La API ya ha sido eliminada.
jvm.inspections.must.already.be.removed.api.earlier.version.description=La API se eliminó de {0}, pero la versión actual es {1}.
jvm.inspections.must.already.be.removed.api.current.version.description=La API se ha eliminado de la versión actual {0}.
jvm.inspections.blocking.method.problem.descriptor=Llamada a un método de bloqueo inadecuado.
jvm.inspections.blocking.method.display.name=Llamada incorrecta al método de bloqueo de subprocesos
jvm.inspections.blocking.method.annotation.blocking=Anotación de bloqueo
jvm.inspections.blocking.method.annotation.non-blocking=Anotación sin bloqueo
jvm.inspections.blocking.method.annotation.configure.add.blocking.title=Agregar anotación de bloqueo
jvm.inspections.blocking.method.annotation.configure.add.non-blocking.title=Agregar anotación sin bloqueo
jvm.inspections.blocking.method.annotation.configure.empty.text=No hay anotaciones agregadas.
jvm.inspections.blocking.method.annotation.configure.add.text=Agregar anotación
jvm.inspections.api.no.extension.display.name=Las clases, interfaces o métodos no deben ampliarse.
jvm.inspections.api.no.extension.class.description=La clase ''{0}'' no debe ampliarse.
jvm.inspections.api.no.extension.interface.implement.description=La interfaz ''{0}'' no debe implementarse.
jvm.inspections.api.no.extension.interface.extend.description=La interfaz ''{0}'' no debe ampliarse.
jvm.inspections.api.no.extension.method.overriding.description=El método ''{0}'' no se debe redefinir.
jvm.inspections.api.override.only.display.name=Los métodos sólo se pueden anular
jvm.inspections.api.override.only.description=El método ''{0}'' sólo se puede anular.
jvm.inspections.string.touppercase.tolowercase.without.locale.display.name=Llamar a 'String.toUpperCase()' o 'toLowerCase()' sin configuración regional
jvm.inspections.string.touppercase.tolowercase.without.locale.description=<code>String.{0}()</code> se llama sin especificar una configuración regional utilizando una cadena internacionalizada. \#loc
can.t.build.uast.tree.for.file=No se puede crear el árbol UAST para el archivo.
title.uast=UAST
current.version=versión actual
