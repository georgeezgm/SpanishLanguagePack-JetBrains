ruby.docker.compose.sdk.bundle.install.quick.fix.title=Ejecute 'compilación docker-compose'
ruby.docker.sdk.bundle.install.quickfix.title='construcción acoplable.' ejecución
ruby.sdk.bundle.install.quick.display.name=Reconstruir la imagen de Docker
ruby.sdk.bundle.install.and.docker.build.quick.display.name=Ejecute la 'instalación del paquete' en el contenedor en ejecución y reconstruya la imagen de Docker.
ruby.docker.compose.sdk.precheck.message=Comprobando el servicio Docker-Compose
ruby.docker.no.execution.result=No se pudo ejecutar la configuración de inicio.
ruby.docker.sdk.downloading=Descargando\: {0}
ruby.docker.run.configuration.settings.pane.title=Docker
ruby.docker.compose.up.project=docker-compose up
ruby.docker.compose.command.type.run.name=docker-compose run
ruby.docker.compose.command.type.up.name=docker-compose up
ruby.docker.compose.command.type.exec.name=docker-compose exec
configurable.name=Integración de Ruby Docker
configurable.internal.command.mode.caption=Interactúe con el entorno Ruby desde Docker a través de:
configurable.internal.command.mode.description=Al analizar en Docker, se requieren comandos ejecutables como 'what ruby', 'gem env' y 'rbconfig'.
configurable.internal.command.mode.mixed='docker-compose exec' si el proyecto está en la parte superior; de lo contrario, 'docker-compose run'
configurable.internal.command.mode.run=docker-compose run
configurable.internal.command.mode.sdk.container='docker exec' en el contenedor SDK, creando el contenedor SDK si es necesario
configurable.internal.command.mode.exec=Ejecute el proyecto con `docker-compose exec` y, si es necesario, `docker-compose up`
configurable.gems.copy.mode.caption=Copie el SDK de Ruby y Gems a su caché local mediante\:
configurable.gems.copy.docker.dp.mode.caption=Docker cp
configurable.gems.copy.docker.api.caption=API del complemento Docker
border.title.docker.compose=docker-compose
