action.invalid.for.selection=현재 선택 항목에 대한 액션이 잘못되었습니다.
action.create.new.file=Nuevo {0}
action.new.file.creation=새 파일 생성
annotator.type.literals.are.not.supported={0} 리터럴은 컴파일러에서 지원되지 않습니다.
extract.category.dialog=카테고리 추출
extract.category.unable.create.file=파일을 생성할 수 없습니다.
extract.unavailable.for.protocols=이 액션은 프로토콜에 사용할 수 없습니다.
extract.method.selected.block.hint=선택한 블록은 구문 또는 표현식 모음을 나타내야 합니다.
extract.method.cannot.determine.hint=선택한 표현식의 유형을 파악할 수 없습니다.
extract.class.use.protocol.instead=대신 "상위 프로토콜 추출" 사용
extract.class.element.not.located.hint=선택된 요소는 프로젝트 내부에 없는 클래스의 카테고리입니다.
extract.subclass.dialog.title=하위 클래스 추출
extract.symbol.already.exist={0} 이(가) 이미 존재합니다
create.file.title=파일
create.file.description=새 파일을 생성합니다.
create.field.name=이름(&N)\:
create.field.name.category=카테고리 이름(&N)\:
create.field.location=폴더(&F)\:
create.field.language=&Lenguaje\:
create.field.class=클래스(&C)\:
create.field.type=Ti&po\:
create.checkbox.targets=대상에 추가(&A)
create.tooltip.no.targets=적합한 대상이 없습니다.
create.error.invalid.name=이름 ''{0}''(이)가 잘못되었습니다.
create.error.missing.target.dir=대상 디렉토리를 찾을 수 없습니다.
create.error.dir.exists=이름이 ''{0}''인 디렉토리가 이미 있습니다.
create.error.file.exists=이름이 ''{0}''인 파일이 이미 있습니다.
create.error.files.in.directory=디렉토리 ''{1}''에서 파일 ''{0}''을(를) 생성할 수 없습니다.
create.folder.dialog.title=대상 폴더 선택
create.folder.dialog.description=대상 폴더 선택
create.tooltip.arrows.type=에디터에서 위쪽 또는 아랫쪽 방향키를 누르면 유형이 변경됩니다.
create.class.title=Objective-C 클래스
create.class.dialog.title=새 Objective-C 클래스
create.cpp.class.title=C++ 클래스
create.cpp.class.description=새 C++ 클래스를 생성합니다.
create.cpp.class.dialog.title=새 C++ 클래스
create.checkbox.cpp.class.header=헤더만 생성(&H)
create.cpp.source.title=C/C++ 소스 파일
create.cpp.header.title=C/C++ 헤더 파일
create.checkbox.source.associated.header=관련 헤더 생성(&H)
create.class.description=새 Objective-C 클래스 및 헤더 파일을 생성합니다.
create.protocol.title=Objective-C 프로토콜
create.protocol.description=새 Objective-C 프로토콜을 생성합니다.
create.protocol.dialog.title=새 Objective-C 프로토콜
create.category.title=Objective-C 카테고리
create.category.description=새 Objective-C 카테고리를 생성합니다.
create.category.dialog.title=새 Objective-C 카테고리
create.checkbox.category.interface=인터페이스 파일 생성(&I)
create.category.no.class.dialog=클래스 ''{0}''을(를) 찾을 수 없습니다.\n카테고리를 생성하시겠어요?
create.category.no.class.dialog.title=잘못된 클래스
create.implementation.title=구현
create.implementation.description=새 구현을 생성합니다.
create.interface.title=인터페이스
create.interface.description=새 인터페이스를 생성합니다.
create.class.error=새 Objective-C 클래스를 생성할 수 없습니다.
create.protocol.error=새 Objective-C 프로토콜을 생성할 수 없습니다.
create.category.error=새 Objective-C 카테고리를 생성할 수 없습니다.
create.class.file.exist.error.title=파일을 생성할 수 없음
create.class.file.exist.error.message=선택한 위치에 파일 ''{0}''이(가) 이미 있습니다. 다른 이름을 선택하세요.
create.directory.failed=디렉토리를 생성할 수 없습니다.
create.directory.failed.message=디렉토리 ''{0}''을(를) 생성할 수 없습니다.
create.strings.title=문자열 파일
create.strings.description=새 문자열 파일을 생성합니다.
create.strings.dialog.title=새 문자열 파일
codeassists.quickFix=빠른 수정
codeassists.altInsert=코드 생성
codeassists.parameterInfo=파라미터 정보
codeassists.liveTemplates=라이브 템플릿
codeassists.surroundwith.expression=다음으로 둘러싸기
copy.files.handler.fail=파일을 ''{0}''(으)로 복사하지 못했습니다.
code.style.remember.choice=선택 항목 기억
refactoring.localize=문자열 로컬화
refactoring.categoryElement.not.in.project=선택된 요소는 프로젝트 내부에 없는 클래스의 카테고리입니다.
refactoring.category.not.in.project=선택된 요소는 프로젝트 내부에 없는 클래스의 카테고리입니다.
navigation.class.hierarchy=클래스 계층 구조
navigation.import.hierarchy.including.title={0} 포함 파일
navigation.import.hierarchy.including.action=계층 구조 포함
navigation.import.hierarchy.including.action.description=계층 구조 포함으로 전환합니다.
navigation.import.hierarchy.included.title={0}(으)로 포함된 파일
navigation.import.hierarchy.included.action=포함된 계층 구조
navigation.import.hierarchy.included.action.description=포함된 계층 구조으로 전환합니다.
navigation.import.hierarchy.next.occurence=다음 파일로 이동
navigation.import.hierarchy.previous.occurence=이전 파일로 이동
navigation.goto.please.wait=기다려주세요...
navigation.goto.resolving.target=대상 해결 중...
naming.convention.title=이름 지정 규칙
naming.convention.header.guard.style.help=다음과 같은 <br><b>${PROJECT_NAME}</b>, <b>${PROJECT_REL_PATH}</b>, <b>${FILE_NAME}</b>, <b>${EXT}</b>, <b>${UUID}</b> 등의 사전 정의된 변수를 사용할 수 있습니다.<br><i>에디터/파일 및 코드 템플릿</i>(<i>파일 탭</i>)<br>에서 사전 정의된 변수도 모두 사용할 수 있습니다(예\: <b>${USER}</b>, <b>${DATE}</b> 등)
naming.convention.entity.kind=엔티티 종류
naming.convention.visibility=가시성
naming.convention.specifier=지정자
naming.convention.entity.any=임의
naming.convention.entity.namespace=Espacio de nombres
naming.convention.entity.macro=매크로
naming.convention.entity.class=클래스
naming.convention.entity.struct=구조체
naming.convention.entity.enumeration=열거형
naming.convention.entity.union=공용체
naming.convention.entity.typedef=Typedef
naming.convention.entity.global.function=전역 함수
naming.convention.entity.global.variable=전역 변수
naming.convention.entity.class.member.function=클래스 멤버 함수
naming.convention.entity.struct.member.function=구조체 멤버 함수
naming.convention.entity.class.member.field=클래스 멤버 필드
naming.convention.entity.struct.member.field=구조체 멤버 필드
naming.convention.entity.enumerator=열거자
naming.convention.entity.parameter=매개변수
naming.convention.entity.local.variable=지역 변수
naming.convention.prefix=접두사
naming.convention.suffix=접미사
refactoring.changeSignature=시그니처 변경
refactoring.inlineConst=상수 인라인화
refactoring.inlineLocalVar=변수 인라인화
refactoring.inlineMacro=매크로 인라인화
refactoring.inlineMethod=인라인 메소드
refactoring.inlineParameter=매개변수 인라인화
refactoring.inlineTypedef=Typedef 인라인화
refactoring.introduceDefine=정의 삽입
refactoring.introduceConstant=상수 삽입
refactoring.introduceIvar=Ivar 삽입
refactoring.introduceParameter=매개변수 삽입
refactoring.introduceProperty=프로퍼티 삽입
refactoring.introduceTypedef=Typedef 삽입
refactoring.appCodeIntroduceVariable=변수 삽입
refactoring.convertToProperty=프로퍼티로 변환
refactoring.convertToIvar=Ivar로 변환
refactoring.convertToMethod=메소드/함수로 변환
refactoring.convertIvarUsagesToProperties=ivar 사용 위치를 프로퍼티로 변환(&C)
refactoring.convertToLiteral=Objective-C 리터럴 삽입
refactoring.extractSubclass=하위 클래스 추출
refactoring.extractSuperclass=상위 클래스 추출
refactoring.extractSuperProtocol=프로토콜 추출
refactoring.extractCategory=카테고리 추출
refactoring.extractMethod=메소드/함수 추출
refactoring.extractBlockParameter=블록 매개변수 추출
refactoring.moveMembers=멤버 이동
refactoring.moveTopLevel=최상위 수준 선언 이동
refactoring.pullUp=멤버를 위로 이동
refactoring.pushDown=멤버를 아래로 이동
refactoring.ambiguous=모호한 함수는 리팩토링할 수 없습니다.
title.function.return.type.group=함수 반환 유형 뒤
title.function.top.return.type=전역 및 네임스페이스 범위 내
title.function.nontop.return.type=클래스 범위 내
title.function.parameters.group=함수 선언 매개변수
title.function.call.arguments.group=함수 호출 인수
title.template.decl.class.group=템플릿 클래스 선언
title.template.decl.func.group=템플릿 함수 선언
title.template.parameters.group=템플릿 선언 매개변수
title.template.call.arguments.group=템플릿 인스턴스화 인수
title.ctor.init.list.group=생성자 초기화 목록
title.superclass.list.group=기본 클레스 목록
title.shift.operators.group='<<', '>>' 연산자
title.capture.list.group=람다 캡처 목록
wrapping.new.line.after.lt='<' 뒤에 새 줄
wrapping.gt.on.new.line=새 줄에 '>' 배치
wrapping.align.multiline.parentheses=여러 줄의 소괄호 정렬
wrapping.align.multiline.brackets=여러 줄의 대괄호 정렬
wrapping.align.multiline.lt.gt=여러 줄 정렬 '<','>'
wrapping.keep.simple.case.inline=간단한 case를 한 줄로 유지
wrapping.keep.simple.methods.in.one.line=간단한 함수를 한 줄로
wrapping.keep.simple.methods.in.one.line.oc=간단한 메소드 및 함수를 한 줄로
wrapping.keep.simple.blocks.in.one.line=한 줄의 간단한 람다
wrapping.keep.simple.blocks.in.one.line.oc=간단한 블록 및 람다를 한 줄로
wrapping.keep.nested.namespaces.in.one.line=중첩된 네임스페이스를 한 줄로 유지
wrapping.keep.directive.at.first.column=지시문을 첫 번째 열에
wrapping.brace.placement.class.declaration=클래스 및 구조 내
wrapping.property.declaration.oc=@property 선언
wrapping.try.statement='try' 문
wrapping.catch.on.new.line=새 줄에 'catch'
wrapping.array.initializer=이니셜라이저 목록
wrapping.array.initializer.oc=컬렉션 리터럴 및 이니셜라이저 목록
wrapping.align.multiline.fields.groups=변수 그룹
wrapping.align.in.columns=열에 정렬
wrapping.structures.in.one.line=클래스 및 구조를 한 줄로
wrapping.before.brace.namespace=네임스페이스 내
wrapping.ternary.short.inline='a ?\: b'에서 줄 바꿈 없는 '?\:'
wrapping.try.statement.oc='@try' 문
wrapping.catch.on.new.line.oc=새 줄에 '@catch'
wrapping.finally.on.new.line.oc=새 줄에 '@finally'
wrapping.array.initializer.lbrace.on.next.line.oc='{', '[' 뒤에 새 줄
wrapping.array.initializer.rbrace.on.next.line.oc=새 줄에 '}', ']' 배치
wrapping.method.brace.placement=메소드 내
wrapping.function.brace.placement=함수 내
wrapping.block.brace.placement=람다 내
wrapping.block.brace.placement.oc=블록 및 람다 내
wrapping.method.parameters.align.by.colons=콜론으로 정렬
wrapping.method.call.arguments.special.dictionary.pairs.treatment=특별 NSDictionary 초기화 처리
wrapping.indent.template.body.if.wrapped=줄 바꿈 시 템플릿 본문 들여쓰기
wrapping.new.line.after.colon='\:' 뒤에 새 줄
wrapping.new.line.before.colon=새 줄에 '\:' 배치
wrapping.new.line.never=안 함
wrapping.new.line.always=Siempre
wrapping.new.line.if.long=긴 경우
align.dictionary.values=열에 사전 값 정렬
align.init.list.values=열에 이니셜라이저 목록 값 정렬
space.within.empty.code.blocks=빈 코드 중괄호
space.within.template=범위 <...>
space.within.empty.diamond=빈 <> 내
space.within.template.double.gt=템플릿에서 >> 연결 방지
space.within.bracket=배열 대괄호
space.within.array.initializer.braces=이니셜라이저 목록 중괄호
space.within.array.empty.initializer.braces=빈 이니셜라이저 목록 중괄호
space.within.array.initializer.braces.oc=컬렉션 리터럴 및 이니셜라이저 목록 중괄호
space.within.array.empty.initializer.braces.oc=빈 컬렉션 리터럴 및 이니셜라이저 목록 중괄호
space.within.function.declaration.parentheses=함수 선언 소괄호
space.within.empty.function.declaration.parentheses=빈 함수 선언 소괄호
space.within.function.call.parentheses=함수 호출 소괄호
space.within.empty.function.call.parentheses=빈 함수 호출 소괄호
space.within.lambda.capture.list.brackets=람다 캡처 목록 대괄호
space.within.empty.lambda.capture.list.brackets=빈 람다 캡처 목록 대괄호
space.within.catch.parentheses.oc='@catch' 소괄호
space.within.synchronized.parentheses.oc='@synchronized' 소괄호
space.within.protocols.brackets.oc=프로토콜 목록 대괄호
space.within.property.attributes.parentheses.oc='@property' 속성 소괄호
space.within.method.return.type.parentheses.oc=메소드 반환 유형 소괄호
space.within.method.parameter.type.parentheses.oc=메소드 매개변수 유형 소괄호
space.within.send.message.brackets.oc=메시지 전송 대괄호
space.within.template.declaration=클래스 선언 내
space.within.template.inst=템플릿 인스턴스화 내
space.within.class=클래스/구조 내
space.before.initialization.lists.colon=생성자 초기화 목록 콜론 앞
space.after.initialization.lists.colon=생성자 초기화 목록 콜론 뒤
space.before.lt.template='<' 이전
space.before.function.call.parentheses=함수 호출 소괄호
space.before.function.parentheses=함수 선언 소괄호
space.before.class.lbrace=클래스/구조 왼쪽 중괄호
space.before.method.lbrace=함수 왼쪽 중괄호
space.before.method.lbrace.oc=메소드/함수 왼쪽 중괄호
space.before.namespace.lbrace=네임스페이스 왼쪽 중괄호
space.before.init.list.lbrace=이니셜라이저 목록 왼쪽 중괄호
space.before.superclass.colon=기본 클래스 콜론 앞
space.before.pointer.in.declaration=선언 내 '*' 앞
space.before.reference.in.declaration=선언 내 '\\&' 앞
space.before.catch.parentheses.oc='@catch' 소괄호
space.before.try.lbrace.oc='@try' 왼쪽 중괄호
space.before.catch.lbrace.oc='@catch' 왼쪽 중괄호
space.before.finally.lbrace.oc='@finally' 왼쪽 중괄호
space.before.synchronized.lbrace.oc='@synchronized' 왼쪽 중괄호
space.before.catch.keyword.oc='@catch' 키워드
space.before.finally.keyword.oc='@finally' 키워드
space.before.synchronized.parentheses.oc='@synchronized' 소괄호
space.before.autorelease.pool.lbrace.oc='@autoreleasepool' 왼쪽 중괄호
space.before.category.parentheses.oc=카테고리 소괄호 앞
space.before.protocols.brackets.oc=프로토콜 목록 대괄호 앞
space.before.chained.send.message.oc=체인 메시지 전송 앞
space.before.property.attributes.parentheses.oc='@property' 속성 소괄호
space.before.dictionary.literal.colon=비트 필드 내 콜론 앞
space.before.dictionary.literal.colon.oc=사전 리터럴 'key\:value' 쌍 및 비트 필드 내 콜론 앞
space.after.superclass.colon=기본 클래스 콜론 뒤
space.after.structures.rbrace=구조 내 오른쪽 중괄호 뒤
space.after.pointer.in.declaration=선언 내 '*' 뒤
space.after.reference.in.declaration=선언 내 '\\&' 뒤
space.after.reference.in.rvalue=역참조 및 address-of 뒤
space.after.method.return.type.parentheses.oc=메소드 반환 유형 소괄호 뒤
space.after.method.parameter.type.parentheses.oc=메소드 매개변수 유형 소괄호 뒤
space.after.visibility.sign.in.method.declaration.oc=메소드 선언 내 +/- 뒤
space.after.colon.in.selector.oc=셀렉터 내 콜론 뒤
space.after.cup.in.blocks.oc=블록 내 '^' 뒤
space.after.dictionary.literal.colon=비트 필드 내 콜론 뒤
space.after.dictionary.literal.colon.oc=사전 리터럴 'key\:value' 쌍 및 비트 필드 내 콜론 뒤
space.between.adjacent.brackets=동일한 유형의 대괄호 사이에 공백 유지
space.between.operator.punctuator='operator' 키워드 및 구두점 사이
space.discharged.short.ternary.operator='a ?\: b' 내 '?' 및 '\:' 사이에 공백
space.around.relational.operators=관계형 연산자 (<, >, <\=, >\=, <\=>)
space.around.shift.operators=시프트 연산자(<<, >>)
space.around.lambda.arrow=반환 유형 내 '->'
space.around.pm.operators=멤버를 가리키는 포인터 연산자(->, ., ->*, .*)
blank.lines.before.includes=include 앞\:
blank.lines.after.includes=include 뒤\:
blank.lines.around.classes=클래스/구조 주위\:
blank.lines.after.class.header=클래스/구조 헤더 뒤\:
blank.lines.around.member.variable=주변 영역\:
blank.lines.around.member.variable.oc=인스턴스 변수/필드 주위\:
blank.lines.around.global.variable=전역 변수 주위\:
blank.lines.around.function.declaration=함수 선언 주위\:
blank.lines.around.function.declaration.oc=메소드/함수 선언 주위\:
blank.lines.around.function.definition=함수 정의 주위\:
blank.lines.around.function.definition.oc=메소드/함수 정의 주위\:
blank.lines.before.function.body=함수 본문 앞\:
blank.lines.before.function.body.oc=메소드/함수 본문 앞\:
completion.press.keyboard.shortcut.for.all.methods.selectors=전체 메소드 셀렉터를 확인하려면 {0}을(를) 다시 누릅니다.
completion.press.keyboard.shortcut.to.filter.results.by.type=결과를 유형별로 필터링하려면 {0}을(를) 누릅니다.
completion.press.keyboard.shortcut.for.non.imported.symbols=가져오지 않은 심볼을 확인하려면 {0}을(를) 다시 누릅니다.
completion.press.keyboard.shortcut.for.global.symbols=전역 심볼을 확인하려면 {0}을(를) 다시 누릅니다.
collapse.ivars=인스턴스 변수
collapse.synthesizes=통합 구문
collapse.localized.strings=로컬화된 문자열
collapse.multiline.comments=여러 줄 주석
collapse.block.expressions.oc=블록 및 람다
collapse.block.expressions=람다
collapse.conditionally.non-compiled=조건적으로 컴파일되지 않은 코드
collapse.template.param.list=템플릿 매개변수
collapse.new.line.before.lbrace=접힌 경우 '{' 앞에 새 줄 대신 공백
color.this.keywords='this' 키워드
color.preprocessor.directive=전처리기//지시문
color.preprocessor.path=전처리기//헤더 경로
color.format.string.token=문자열 인수 내 서식 지정자
color.conditionally.non-compiled=조건적으로 컴파일되지 않은 코드
color.macro.name=매크로 이름
color.macro.parameter=매크로 매개변수
color.global.variable=전역 변수
color.extern.variable=Extern 변수
color.struct.union.oc=구조체/열거형/공용체
color.struct.union=클래스/구조체/열거형/공용체
color.struct.field=구조체 필드
color.concept=컨셉
color.template.type=Tipo de plantilla
color.template.value=템플릿 값
color.namespace=Espacio de nombres
color.enum.const=열거형 상수
color.function.declaration=함수 선언
color.function.call=함수 호출
color.overloaded.operator=괄호 및 연산자//오버로드된 연산자
color.typedef=Typedef
color.label=라벨
color.dependent_code=종속 코드
color.this.keywords.oc='self', 'super', 'this' 키워드
color.instance.variable.oc=인스턴스 변수
color.method.declaration.oc=메소드 선언
color.method.call.oc=메소드 호출
color.property.oc=프로퍼티
color.property.attribute.oc=프로퍼티 속성
color.class.reference.oc=클래스
color.protocol.reference.oc=프로토콜
color.generic.parameter.oc=제네릭 매개변수
indent.namespace=네임스페이스 멤버 들여쓰기
indent.interface.protocol='@interface' 및 '@protocol'의 멤버 들여쓰기
indent.not.ivar=인스턴스 변수 목록 제외
indent.implementation='@implementation'의 멤버 들여쓰기
indent.visibility.keywords=클래스/구조 내 가시성 키워드 들여쓰기
indent.block=람다 내 들여쓰기
indent.block.oc=블록 및 람다 내 들여쓰기
indent.c.struct=일반 구조의 멤버 들여쓰기
indent.class=클래스 멤버 들여쓰기
indent.class.oc=C++ 클래스 멤버 들여쓰기
indent.preprocessor.directive=전처리기 지시문 들여쓰기
indent.preprocessor.directive.as.code=코드 들여쓰기 준수
indent.preprocessor.directive.after.hash=\# 뒤에 들여쓰기
inline.handler.check.for.validness=유효성 검사 중
checkbox.block.comment.indent=블록 주석 내 새 줄 들여쓰기
fileExtensions.tabName=새 파일 확장자
fileExtensions.extensionPair=확장자 쌍
fileExtensions.error=Error
fileExtensions.noExtensionsError=1개 이상의 확장자 쌍을 정의하세요.
fileExtensions.sourceExtension=소스 확장자\:
fileExtensions.headerExtension=헤더 확장자\:
fileExtensions.fileNamingConvention=파일 이름 지정 규칙\:
fileExtensions.editFileTypesTooltip=Editar tipo de archivo
fileExtensions.no.extensions=확장자 없음
fileExtensions.noCompatibleTypes=호환되는 파일 형식을 찾을 수 없습니다.
override.implement.show.optional.members=선택적 멤버 표시(&O)
override.implement.show.no.optional.members=선택적 멤버 표시(선택적 항목 없음)
override.implement.show.only.optional.members=선택적 멤버 표시(선택적 항목만)
override.implement.show.synthesized.accessors=통합된 접근자 표시
override.implement.show.no.synthesized.accessors=통합된 접근자 표시(접근자 없음)
override.implement.show.only.synthesized.accessors=통합된 접근자 표시(접근자만)
override.implement.cpp.action.title=함수 재정의/구현
override.implement.cpp.action.name=함수 재정의...
override.implement.cpp.action.memberChooserTitle=재정의/구현할 함수 선택
override.implement.cpp.action.noMember={0}에 재정의/구현할 함수가 없습니다.
override.implement.cpp.action.noParent=재정의/구현할 함수가 없습니다.
override.implement.cpp.action.insertOverride="override" 속성 삽입
override.implement.cpp.action.showNonVirtual=가상이 아닌 함수 표시
override.implement.cpp.action.insertVirtualWithOverride="virtual"과 "override" 속성을 함께 삽입
implement.cpp.action.name=함수 구현...
implement.cpp.action.memberChooserTitle=구현할 함수 선택
implement.cpp.action.noMember={0}에 구현할 함수가 없습니다.
implement.cpp.action.noParent=구현할 함수가 없습니다.
changeSignature.usages.cantBeUnnamed=매개변수 {0}이(가) 사용 중이므로 이름을 변경할 수 없습니다.
changeSignature.usages.cantBeRemoved=매개변수 {0}이(가) 사용 중이므로 제거할 수 없습니다.
changeSignature.usages.cantConvertSelectorToFuncBlock=셀렉터 표현식을 함수/블록으로 변환할 수 없습니다.
changeSignature.usages.cantConvertToBlock=블록으로 변환할 수 없습니다.
changeSignature.usages.cantConvertLanguage={0} 코드 내 사용 위치를 변환할 수 없습니다.
changeSignature.usages.ambiguousReference=함수 {0}이(가) 모호하게 참조되어 있습니다.
changeSignature.usages.noUsagesFound=사용 위치를 찾을 수 없습니다.
changeSignature.usages.moreThan1Found=2개 이상의 사용 위치가 발견되었습니다.
changeSignature.usages.usageInsideFunction=사용 위치가 함수/메소드 내에 있습니다.
changeSignature.usages.functionHasSeveralDefinitions=함수 ''{0}''에 여러 개의 정의가 있습니다.
changeSignature.usages.atLeasTwoParams=이름이 ''{0}''인 매개변수가 2개 이상입니다.
changeSignature.usages.conflictsWithNewParameter={0}이(가) 새 매개변수와 충돌합니다.
changeSignature.usages.unrelatedSelector=이름이 같지만 관계없을 가능성이 있는 셀렉터의 이름이 변경됩니다.
changeSignature.usages.willConflictWith={0}이(가) {1}와(과) 충돌합니다.
changeSignature.usages.willConflictWithMethod={0}이(가) {1}의 메소드와 충돌합니다.
changeSignature.targetNotFound=캐럿은 함수, 메소드 또는 블록의 위치에 있어야 합니다.
changeSignature.dialog.containing.class=포함 클래스\:
changeSignature.dialog.callable.type=호출 가능 유형\:
changeSignature.parameter.selector.part=선택자 부문\:
rename.renameAssociatedFiles=관련 파일 이름도 변경하시겠습니까?
rename.renameAssociatedClass=관련 클래스/구조체 이름도 변경
find.existing.operators.progress.title=기존 연산자 검색 중
generate.inplace.option=그 자리에 생성(&P)
generate.cpp.progress.title=생성 중
generate.cpp.replace.button=기존 항목 교체(&R)
generate.cpp.add.missing.button=누락된 항목 추가(&A)
generate.cpp.show.existing.button=기존 항목 표시(&S)
generate.cpp.usages.string=사용 위치
generate.cpp.usages.word=사용 위치
generate.cpp.usages.cannot.make=일부 파일이 변경되어 생성을 완료할 수 없습니다.
generate.definitions=정의 생성
generate.definitions.commandName=정의 생성
generate.definitions.intention.familyName=정의 생성
generate.definitions.intention.outsideText=정의 생성
generate.definitions.intention.inlineText=그 자리에서 정의 생성
generate.definitions.action.name=정의 생성...
generate.definitions.action.title=정의 생성
generate.definitions.action.memberChooserTitle=정의를 생성할 함수 선택
generate.definitions.action.noParent=정의를 생성할 함수가 없습니다.
generate.definitions.action.noMembers={0}에 정의를 생성할 함수가 없습니다.
generate.definitions.quickfix.inlineText=그 자리에서 {0}의 정의 생성
generate.definitions.quickfix.outsideText={0}의 정의 생성
generate.definitions.progress.text=기존 정의 검색 중...
generate.comparison.operators.action.title=비교 연산자 생성
generate.comparison.operators.action.title.eq=상등 연산자 생성
generate.comparison.operators.action.title.rel=관계 연산자 생성
generate.comparison.operators.member.chooser.title=사용할 필드 선택
generate.comparison.operators.as.member.option=클래스 멤버로서 생성(&M)
generate.comparison.operators.use.std.tie=std\:\:&tie 사용
generate.comparison.operators.as.member.option.desc=연산자를 클래스 멤버로서 생성
generate.comparison.operators.additional.eq.option=\=\=와 함께 \!\= 생성(&W)
generate.comparison.operators.additional.eq.option.desc=\=\=와 함께 \!\= 생성
generate.comparison.operators.additional.rel.option=<와 함께 >, <\=, >\= 생성(&W)
generate.comparison.operators.additional.rel.option.desc=<와 함께 >, <\=, >\= 생성
generate.comparison.operators.usages.all.defined=모든 연산자가 이미 정의되어 있습니다.
generate.comparison.operators.usages.some.defined=일부 연산자가 이미 정의되어 있습니다.
generate.comparison.operators.usages.existing.text=기존 연산자
generate.getter.add.prefix=get/is 접두사를 getter에 추가
generate.setter.add.prefix=set 접두사를 setter에 추가
generate.stream.output.action.title=스트림 출력 연산자 생성
generate.stream.output.member.chooser.title=사용할 필드 선택
generate.stream.output.usages.all.defined=스트림 출력 연산자가 이미 정의되어 있습니다.
generate.stream.output.usages.existing.text=기존 연산자
generate.configurable.retain.parameters=initWith 내 객체 매개변수 보존...
generate.configurable.use.property.setters=initWith에서 프로퍼티 setter 사용...
generate.configurable.put.ivars=가능한 경우 ivars를 구현에 배치
generate.configurable.semicolon.after.method=구현 내 메소드 시그니처 뒤에 세미콜론
generate.configurable.use.nsinteger.and.cgfloat=변수 삽입에서 NSInteger 및 CGFloat 사용
generate.configurable.instance.variable.prefix=인스턴스 변수의 접두사\:
generate.configurable.instance.variable.suffix=인스턴스 변수의 접미사\:
generate.configurable.add.brief.tag=@brief 태그 추가
generate.configurable.const.volatile.placement=const/volatile 한정자 배치
generate.configurable.top.level.declarations.order=최상위 수준 선언 순서
generate.configurable.ivars.release.style=Ivars 릴리스 스타일('dealloc'용)
generate.configurable.ivars.generation=프로퍼티용 ivar 선언 생성
generate.configurable.ivars.generation.always=항상 생성
generate.configurable.ivars.generation.never=생성 안 함
generate.configurable.ivars.generation.ask=확인하기
generate.configurable.tag.prefix.comments=줄 주석 내 태그 접두사
generate.configuralble.tag.prefix.block.comments=블록 주석 내 태그 접두사
generate.choose.base.class.constructor=기본 클래스 생성자 선택
generate.configurable.documentation.title=문서 주석
inspections.templateArguments.tooFew=템플릿 인수 개수가 너무 적습니다. 필요한 수는 {0}개입니다.
inspections.templateArguments.tooFewAtLeast=템플릿 인수 개수가 너무 적습니다. 필요한 수는 최소 {0}개입니다.
inspections.templateArguments.tooMany=템플릿 인수 개수가 너무 많습니다. 필요한 수는 {0}개입니다.
inspections.templateArguments.tooManyAtMost=템플릿 인수 개수가 너무 많습니다. 필요한 수는 최대 {0}개입니다.
inspections.templateArguments.valueInsteadOfType=유형 대신 값이 필요합니다.
inspections.templateArguments.typeInsteadOfValue=값 대신 유형이 필요합니다.
inspections.typeChecks.volatileConflict=volatile이 아닌 구조를 volatile 구조에 대입
inspections.duplicate.explicitInstantiation=명시적 인스턴스화 중복
inspections.typeChecks.neitherNumericNorPointer=유형 ''{0}''의 표현식이 숫자나 포인터가 아닙니다.
inspections.typeChecks.notNumeric=유형 ''{0}''의 표현식이 숫자가 아닙니다.
inspections.fileChecks.outOfProject=이 파일은 프로젝트 대상에 속하지 않으며 코드 분석 기능이 제대로 작동하지 않을 수 있습니다.
inspections.fileChecks.allContextsUnloaded=이 대상의 {0}에서 색인 생성을 비활성화하면 코드 분석 기능이 제대로 작동하지 않을 수 있습니다.
inspections.fileChecks.sourceTooLarge=파일 크기({0})가 {1}에 대해 구성된 한도({1})를 초과합니다. 코드 분석 기능을 이용할 수 없습니다.
inspections.fileChecks.headerTooLarge={1} ({2})에 대해 구성된 한도를 초과하는 길이({0})의 인라인 헤더({3})가 파일에 포함되어 있습니다. 헤더가 분석되지 않습니다.
inspections.fileChecks.headerTooLargePlatform=구성된 한도{1})를 초과하는 길이({0})의 인라인 헤더({2})가 파일에 포함되어 있습니다. 헤더가 분석되지 않습니다.
checkbox.allow.import.in.completion=코드 완성에서 자동 가져오기
progressbar.long.resolve.description=해결 작업에 더 많은 시간이 필요합니다.\n취소하면 해결에 의존하는 에디터 액션을 사용할 수 없게 됩니다.
intentions.add.constructor.initializer.for.field=필드에 대한 생성자 이니셜라이저 추가
intentions.add.initializer=이니셜라이저 추가
intentions.add.parameters.to.constructor={0}을(를) 매개변수로서 생성자에 추가
intentions.add.parameter.initWith=매개변수로서 'initWith...'에 추가...
intentions.check.raw.string=원시 문자열 검사
intentions.add.super.constructor.call=누락된 기본 생성자 호출 추가
intentions.add.super.protocol.by.class=클래스별 프로토콜 채택
intentions.add.super.protocol.by.private.category=비공개 카테고리별 프로토콜 채택
intentions.add.mofifier=''{0}''을(를) 추가합니다.
intentions.change.arc.attribute=ARC 속성 변경
intentions.change.function.signature=함수 시그니처 변경
intentions.change.type.capitalized=유형 변경
intentions.change.type=유형 변경
intentions.change.visibility=가시성 변경
intentions.convert.id.to.instance='id' 반환 유형을 'instancetype'으로 교체
intentions.replace.if.else.with.ternary='if else'를 '?\:'으로 교체
intentions.replace.ternary.with.if.else='?\:'을 'if else'로 교체
intentions.convert.objc.literal=Objective-C 리터럴로 전환
intentions.convert.to.instance.variable=인스턴스 변수로 변환
intentions.convert.to.property=속성으로 변환
intentions.convert.type=변환 유형
intentions.create.matching.constructor=기본 클래스와 일치하는 생성자 생성
intentions.create.matching.constructor.in={0}에서 디폴트 생성자 생성
intentions.create.new.matching.constructor={0}개의 일치하는 기본 클래스에서 새로운 생성자 생성
intentions.create.new.constructor=새 생성자 ''{0}()'' 생성
intentions.predeclare.function={0} 사전 선언
intentions.create.interface={0}에 대한 인터페이스 생성
action.invalid.title=올바르지 않음
intentions.create.missing.default.switch.case=누락된 디폴트 case 생성
intentions.create.missing.switch.cases=누락된 switch case 생성
intentions.declare.method.in.interface=인터페이스 내 메소드 선언\:
intentions.declare.method.in.private.category=비공개 카테고리에서 메소드 선언
intentions.declare.method.in={0} 내 메소드 선언
intentions.declare.property.as.readwrite=비공개 카테고리에서 프로퍼티를 'readwrite'로서 선언
intentions.replace.and.with.or='\\&\\&'를 '||'로 교체
intentions.replace.or.with.and='||'를 '\\&\\&'로 교체
intentions.deMorgan.law=드모르간 법칙
intentions.declare.member.in=다음에서 선언\: 
intentions.remove.private.category.message=빈 비공개 카테고리를 제거하시겠어요?
intentions.remove.private.category.title=비공개 카테고리 제거
intentions.extract.category=이 클래스의 카테고리 추출
intentions.extract.if='if' 추출
intentions.extract.if.with.text=''if ({0})'' 추출
intentions.extract.private.category=이 클래스의 비공개 카테고리 추출
intentions.extract.protocol=이 클래스의 프로토콜 추출
intentions.extract.super.class=상위 클래스 추출
intentions.extract.super.protocol=상위 프로토콜 추출
intentions.flip.operator=Invertir {0}
intentions.flip.operator.to=Invertir {0} a {1}
intentions.flip.binary.operation=Invertir operaciones binarias
intentions.generate.property=프로퍼티 생성
intentions.implement.required.methods=Implementar métodos requeridos de la interfaz ''{0}''
intentions.create.implementation={0}의 구현 생성
intentions.implement.method={0} 구현
intentions.implement.accessor.methods=접근자 메소드 구현
intentions.implement.accessor.methods.for={0}에 대한 접근자 메소드 구현
intentions.cast.expression=표현식 변환
intentions.introduce.typedef=typedef 삽입
intentions.introduce.typedef.for.type=유형 {0}에 대한 typedef 삽입
intentions.invert.if.condition='if' 조건을 반전시킵니다.
intentions.merge.if.else=If else 병합
intentions.merge.nested.ifs=중첩된 'if' 문 병합
intentions.migrate.to.arc=ARC로 마이그레이션
intentions.move.instance.variables=인스턴스 변수를 구현으로 이동
intentions.move.to.interface=인터페이스로 이동
intentions.move.to.private.category=비공개 카테고리로 이동
intentions.import.predeclare.symbol=심볼 가져오기/사전 선언
intentions.provide.localization=로컬라이제이션 제공
intentions.release.variables=변수 릴리스
intentions.remove.suppression=숨기기 제거
intentions.remove.type.modifier=''{0}'' 제거
intentions.remove.unnecessary.parentheses=불필요한 소괄호를 제거합니다.
intentions.rename.reference=참조 이름 변경
intentions.rename.symbol=심볼 이름 변경
intentions.replace.type.with.auto=유형을 'auto'로 교체
intentions.reuse.declaration=재사용 선언
intentions.change.superclass=상위 클래스 변경
intentions.split.declaration=선언 및 할당 분할
intentions.split.function=함수를 선언 및 정의로 분할
intentions.split.into.separate.declarations=개별 선언으로 분할합니다.
intentions.suppress.for={0} 억제
intentions.suppress.option.for={1}에 대한 "{0}" 억제
intentions.suppress.for.statement=구문 억제
intentions.suppress.for.method=메소드/함수 억제
intentions.suppress.for.file=파일 억제
intentions.surround.with.if.responds="if ([ respondsToSelector\: ])"로 감싸기
intentions.switch.property.dot.method='.' 및 메소드 표기 전환
intentions.switch.to.getter.notation=getter 메소드 표기로 전환
intentions.switch.to.setter.notation=setter 메소드 표기로 전환
intentions.switch.to.dot.notation='.' 표기로 전환
intentions.synthesize.property=프로퍼티 통합
intentions.wrap.with.stringFormat=stringWithFormat으로 감싸기
change.function.const.action=const 한정자 변경
change.function.volatile.action=volatile 한정자 변경
change.gcc.attribute.action=속성 ''{0}'' 변경
change.method.signature.add.parameters=매개변수 추가
change.method.staticness.action=메소드 인스턴스/클래스 생성
change.property.attribute.action=프로퍼티 속성 변경
change.signature.convert.action={0}(으)로 변환할 구현 선택
intentions.insert.cast.use.modern=C++ 형 변환 연산자 사용
intentions.split.function.progress.text=정의 위치 파악 중...
header.source.looking.for.the.best.file=연결된 파일 검색 중
collect.compiler.info.error.message=컴파일러 정보를 가져올 수 없습니다.
collect.compiler.info.cancelled.message=컴파일러 정보 수집을 취소했습니다.
collect.compiler.info.warning.message=컴파일러 정보를 수집하는 동안 문제가 발생했습니다.
resolve.contexts.select.automatically=자동 선택
oc.inlay.hints.blacklist.pattern.explanation=<html>메소드 힌트를 비활성화하려면 다음과 같은 적절한 패턴을 사용하세요. <p><code><b>(*info)<b></code> - 매개변수 이름이 info로 끝나는 단일 매개변수 메소드<br><code><b>(key, value)<b></code> - 키 및 값 매개변수를 가진 메소드<br><code><b>*\:\:put(key, value)<b></code> - 키 및 값 매개변수를 가진 put 메소드<br></p></html>
include.cpp.message='\#include <C++>'는 C++에 관심이 있는 개발자를 위한 포괄적이며 다양성을 지닌 글로벌 커뮤니티입니다.
include.cpp.url=https\://www.includecpp.org/
include.cpp.intention.text=더 알아보기
usage.superclass=상위 클래스 참조
usage.protocol=프로토콜 참조
usage.message.receiver=메시지 리시버
usage.qualifier=한정자
usage.member.access=멤버 액세스
usage.variable.declaration=변수 선언
usage.parameter.declaration=매개변수 선언
usage.method.call=메소드 호출
usage.in.property.attribute=프로퍼티 속성 내 사용 위치
usage.selector.expression=셀렉터 표현식
usage.in.synthesize.statement=통합 구문 내 사용 위치
usage.class.predeclaration=클래스 사전 선언
usage.protocol.predeclaration=프로토콜 사전 선언
usage.namespace.qualifier=네임스페이스 한정자
usage.in.using.statement=using 구문 내 사용 위치
usage.in.macro.substitution=매크로 치환 내 사용 위치
usage.in.macro.arguments.list=매크로 인수 목록 내 사용 위치
usage.in.expression=표현식 내 사용 위치
usage.in.declaration=선언 또는 사전 선언 내사용 위치
usage.in.template.argument.list=템플릿 인수 목록 내 사용 위치
usage.properties.search.message={1}도 {0}하시겠어요?
usage.properties.search.title=프로퍼티 검색
usage.instance.variables.search.message={1}도 {0}하시겠어요?
usage.instance.variables.search.title=인스턴스 변수 검색
usage.method.search.title=메소드 검색
usage.method.search.message={0}\n\n기본 {2}을(를) {1}하시겠어요?
usage.delete.out.of.project.title=경고
usage.delete.out.of.project.message={0} 리팩토링을 계속 진행하시겠어요?
usage.overrides.message={0}이(가) {2}에서 {1}을(를) 재정의합니다.
usage.overrides.out.of.project.message={0}이(가) 프로젝트 외부의 {2}에서 {1}을(를) 재정의합니다.
usage.include.property.checkbox.text={0} 포함
usage.include.ivar.checkbox.text={0} 포함
usage.include.derived.classes.checkbox.text=파생 클래스 포함
switch.header.source.popup.title=헤더/소스로 이동
switch.header.source.no.results=관계없는 파일
switch.header.source.new.scheme.name={0}을(를) 헤더/소스로 이동으로 다시 매핑
switch.header.source.new.scheme.yes=다시 매핑
switch.header.source.new.scheme.no=그대로 유지
switch.header.source.new.scheme.explanation.title=헤더/소스로 이동 단축키
switch.header.source.new.scheme.explanation.text=헤더와 소스 사이를 전환하는 전용 액션이 있습니다({0}).\n\n이 단축키({1})를 "관련 심볼로 이동" 액션에서 새로운 액션으로 다시 매핑하시겠어요?
command.line.parser.unknown.exception=명령줄 구문 분석 중 문제가 발생했습니다.
command.line.parser.cancellation.exception=명령줄 구문 분석이 중단되었습니다.
command.line.parser.invalid.exception=명령줄을 분석할 수 없습니다.\n{0}\n옵션 \#{1} 내 오류\: ''{2}''
configurable.ClangdConfigurable.display.name=Clangd
configurable.OCGenerateCodeConfigurable.display.name=코드 생성
abstract.extract.dialog.class.name={0} 이름\:
abstract.extract.dialog.unable.create.file=파일을 생성할 수 없습니다.
browse.include.hierarchy.action=Jerarquía de importación
escalate.visibility=가시성 에스컬레이션
escalate.visibility.description=다음 멤버의 가시성을 에스컬레이션하시겠어요?
dump.file.symbol.stats=파일 심볼 통계
dump.symbol.stats=심볼 통계
highlighter.change.file.length.limit=최대 파일 길이 변경
highlighter.change.file.length.limit.input={0} 파일의 새로운 최대 길이를 문자로 입력하세요.
highlighter.max.file.length.title=최대 파일 길이
if.responds.to.surround.error.hint=선택한 코드에 메시지 전송 표현식이 없습니다.
quickfixes.implement.missing.getter=누락된 getter 메소드 구현
quickfixes.implement.missing.setter=누락된 setter 메소드 구현
quickfixes.import.symbol=심볼 가져오기
quickfixes.make.function.virtual=함수를 가상으로 설정
quickfixes.make.property.dynamic={0}을(를) @dynamic으로 설정
quickfixes.synthesize=통합 {0}
move.dialog.move.members.to.class=멤버를 클래스로 이동(기존 또는 신규)\:
move.dialog.move.declarations.to.file=선언을 파일로 이동(기존 또는 신규)\:
move.dialog.put.to.namespace=네임스페이스에 배치(기존 또는 신규)\:
move.dialog.move.declarations=선언 이동
move.dialog.destination=Objetivo\:
move.dialog.target.file.does.not.exist=대상 파일 ''{0}''이(가) 아직 없습니다.
move.dialog.create.new.file=새 파일 작성
move.dialog.create.new.class=새 클래스 생성
move.processor.skip=건너뛰기
push.down.members.dialog={0}의 멤버를 아래로 이동\:
push.down.dialog.searching.inheritors=상속자 검색 중
resolve.show.related.contexts=관련 컨텍스트만 표시
resolve.show.all.contexts=모든 컨텍스트 표시…
symbol.table.activity.building.symbols=심볼 빌드 중...
symbol.table.activity.loading.symbols=심볼 로드 중...
symbol.table.activity.updating.symbols=심볼 업데이트 중...
symbol.table.activity.loading.header.maps=헤더 맵 로드 중...
symbol.table.dump.stats.action={0}에 쓰기된 통계
symbol.is.never.used={0} 은(는) 전혀 사용되지 않습니다
# action names
action.CIDR.DebugDumpBuildingSymbols.text=C/C++\: 심볼 빌드 상태 덤프
action.CIDR.ShowTestList.text=테스트 목록 표시
action.CIDR.ShowCompilerInfo.text=컴파일러 정보 표시
action.CIDR.Lang.Format.Extractor.text=코드 서식 추출
action.CIDR.Lang.DropPsiForOpenedFiles.text=열린 파일 PSI 삭제
action.CIDR.Lang.RemoveBodiesAndComments.text=함수 본문 및 주석 제거
action.CIDR.Lang.DumpFileSymbolStats.text=파일 심볼 통계 덤프
action.CIDR.Lang.DumpSymbolStats.text=일반 심볼 통계 덤프
action.CIDR.Lang.CompactSymbols.text=심볼 업데이트/컴팩트
action.CIDR.Lang.ImportsHierarchy.text=Jerarquía de importación
action.CIDR.Lang.ObjC.GenerateSharedInstance.text=+sharedInstance
action.CIDR.Lang.ObjC.GenerateSharedInstance.description=공유 인스턴스 생성
action.CIDR.Lang.ObjC.GenerateDescription.text=-설명...
action.CIDR.Lang.ObjC.GenerateDescription.description=클래스 멤버에서 설명 생성(-D)
action.CIDR.Lang.ObjC.GenerateIsEqualAndHash.text=-isEqual\: 및 -hash...
action.CIDR.Lang.ObjC.GenerateIsEqualAndHash.description=클래스 멤버에서 -isEqual\: 및  -hash 생성
action.CIDR.Lang.ObjC.GenerateCopy.text=-copyWithZone\:...
action.CIDR.Lang.ObjC.GenerateCopy.description=클래스 멤버에서 -copyWithZone\: 생성 
action.CIDR.Lang.ObjC.GenerateEncode.text=-init/encodeWithCoder\:...
action.CIDR.Lang.ObjC.GenerateEncode.description=클래스 멤버에서 -encodeWithCoder\: 및 initWithCoder\: 생성 
action.CIDR.Lang.ObjC.GenerateInitWith.text=-initWith...
action.CIDR.Lang.ObjC.GenerateInitWith.description=클래스 멤버에서 -initWith... 생성
action.CIDR.Lang.Cpp.GenerateDefinitions.text=정의 생성...
action.CIDR.Lang.Cpp.GenerateDefinitions.description=정의 생성
action.CIDR.Lang.Cpp.GenerateStreamOutputOperator.text=스트림 출력 연산자
action.CIDR.Lang.Cpp.GenerateStreamOutputOperator.description=스트림 출력 연산자 생성
action.CIDR.Lang.Cpp.GenerateRelationalOperators.text=관계형 연산자
action.CIDR.Lang.Cpp.GenerateRelationalOperators.description=관계 연산자 생성
action.CIDR.Lang.Cpp.GenerateEqualityOperators.text=상등 연산자
action.CIDR.Lang.Cpp.GenerateEqualityOperators.description=상등 연산자 생성
action.CIDR.Lang.Cpp.GenerateGetterAndSetter.text=Getter 및 Setter
action.CIDR.Lang.Cpp.GenerateGetterAndSetter.description=필드에 대한 getter 및 setter 함수 생성
action.CIDR.Lang.Cpp.GenerateSetter.text=Setter
action.CIDR.Lang.Cpp.GenerateSetter.description=필드에 대한 setter 함수 생성
action.CIDR.Lang.Cpp.GenerateGetter.text=Getter
action.CIDR.Lang.Cpp.GenerateGetter.description=필드에 대한 getter 함수 생성
action.CIDR.Lang.Cpp.GenerateDestructor.text=소멸자
action.CIDR.Lang.Cpp.GenerateDestructor.description=소멸자 생성
action.CIDR.Lang.Cpp.GenerateConstructor.text=생성자
action.CIDR.Lang.Cpp.GenerateConstructor.description=클래스 멤버에서 생성자 생성
action.CIDR.Lang.ObjC.Synthesize.text=@synthesize...
action.CIDR.Lang.ObjC.Synthesize.description=합성 및 인스턴스 변수 생성(선택 사항)
action.CIDR.Lang.ObjC.DeclareMembers.text=멤버 선언...
action.CIDR.Lang.ObjC.DeclareMembers.description=인터페이스 또는 개인 카테고리에서 클래스 멤버 선언
action.CIDR.Lang.ObjC.ConvertToIvar.text=인스턴스 변수로 변환...
action.CIDR.Lang.ObjC.ConvertToIvar.description=프로퍼티를 인스턴스 변수로 변환
action.CIDR.Lang.ObjC.ConvertToProperty.text=프로퍼티로 변환...
action.CIDR.Lang.ObjC.ConvertToProperty.description=인스턴스 변수를 프로퍼티로 변환
action.CIDR.Lang.ObjC.ConvertToBlock.text=블록으로 변환...
action.CIDR.Lang.ObjC.ConvertToBlock.description=블록으로 변환
action.CIDR.Lang.ObjC.ConvertToFunction.text=함수로 변환...
action.CIDR.Lang.ObjC.ConvertToFunction.description=함수로 변환
action.CIDR.Lang.ObjC.ConvertToMethod.text=메소드로 변환...
action.CIDR.Lang.ObjC.ConvertToMethod.description=메소드로 변환
action.CIDR.Lang.ObjC.ExtractCategory.text=카테고리...
action.CIDR.Lang.ObjC.ExtractCategory.description=새 카테고리로 멤버 추출
action.CIDR.Lang.ObjC.ExtractProtocol.text=프로토콜...
action.CIDR.Lang.ObjC.ExtractProtocol.description=새 프로토콜로 멤버 추출
action.CIDR.Lang.ObjC.ExtractSubclass.text=하위 클래스...
action.CIDR.Lang.ObjC.ExtractSubclass.description=새 하위 클래스로 멤버 추출
action.CIDR.Lang.ObjC.ExtractBlock.text=블록 매개변수...
action.CIDR.Lang.ObjC.ExtractBlock.description=블록 매개변수 추출
action.CIDR.Lang.IntroduceTypedef.text=Typedef...
action.CIDR.Lang.IntroduceTypedef.description=Typedef 삽입
action.CIDR.Lang.IntroduceDefine.text=정의...
action.CIDR.Lang.IntroduceDefine.description=정의 삽입
action.CIDR.Lang.IntroduceParameter.text=Parámetro...
action.CIDR.Lang.IntroduceParameter.description=매개변수 삽입
action.CIDR.Lang.ObjC.IntroduceProperty.text=프로퍼티...
action.CIDR.Lang.ObjC.IntroduceProperty.description=프로퍼티 삽입
action.CIDR.Lang.ObjC.IntroduceIvar.text=인스턴스 변수...
action.CIDR.Lang.ObjC.IntroduceIvar.description=인스턴스 변수 삽입
action.CIDR.Lang.IntroduceConstant.text=상수...
action.CIDR.Lang.IntroduceConstant.description=상수 삽입
action.CIDR.Lang.IntroduceVariable.text=변수...
action.CIDR.Lang.IntroduceVariable.description=변수 삽입
action.CIDR.Lang.SwitchHeaderSourceDebug.text=헤더/소스 디버그
action.CIDR.Lang.SwitchHeaderSource.text=Cabecera/origen
action.CIDR.Lang.Wrap.By.Pragma.Region=\#pragma region...endregion
loading.module.maps=모듈 맵 로드 중...
saving.module.maps=모듈 맵 저장 중...
building.module.maps=모듈 맵 빌드 중
processing.module.maps=모듈 맵 처리 중
loading.headers.search.roots=헤더 검색 루트 로드 중
goto.definition.settings.title=선언 또는 사용 위치로 이동
goto.definition.settings.toggle.assoc.title=사전 선언된 심볼에서 호출된 경우\:
goto.definition.settings.toggle.assoc.on=사전 선언으로 건너뛰기
goto.definition.settings.toggle.assoc.off=사용 위치 팝업 표시
strings.file.display.name=문자열
strings.file.description=문자열 파일
