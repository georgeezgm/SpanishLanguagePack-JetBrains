0.is.not.an.identifier=''{0}'' no es un identificador.
annotation.name.is.missing=Las propiedades de anotación deben tener el formato 'nombre\=valor'.
anonymous.class.context.display=Anónimo de {0}
anonymous.class.derived.display=Clase anónima derivada de {0}
aux.context.display=(dentro de {0})
bound.not.expected=rebote inesperado
catch.without.try='atrapar' sin 'intentar'
class.context.display={0} de {1}
class.literal.expected=.se requiere clase
context.type.java.comment=Comentario
context.type.string=cadena
default.language.level.description=Valores predeterminados del SDK
element.abstract_method=método abstracto
element.annotation=anotación
element.class=clase
element.constant=campo constante
element.constructor=constructor
element.enum=enumeración
element.enum_constant=constantes de enumeración
element.expression=expresión
element.field=campo
element.initializer=iniciador
element.interface=interfaz
element.local_variable=variable local
element.method=método
element.module=módulo
element.package=paquete
element.parameter=parámetro
element.pattern_variable=variable de patrón
element.record=registro
element.record_component=componente de historia
element.statement=construcción
element.unknown=Elemento
element.variable=variable
else.without.if='si no' sin 'si'
enum.constant.context=Constante de enumeración ''{0}' de '{1}''
expected.array.initializer=Expectativa del inicializador de matriz
expected.boolean.expression=expresión booleana esperar
expected.catch.or.finally=Esperando "atrapar" o "finalmente"
expected.class.or.interface=Se requiere 'clase' o 'interfaz'
expected.class.reference=Se requiere una referencia de clase.
expected.colon='\:' expectativa
expected.comma=',' expectativa
expected.comma.or.rparen=Espere ',' o ')'
expected.comma.or.semicolon=',' o ';' es obligatorio.
expected.dot='.' expectativa
expected.eq='\=' esperado
expected.expression=expectativa de expresión
expected.gt='>' Se esperaba.
expected.gt.or.comma=Espere ''>'' o '''',''
expected.identifier=identificador esperado
expected.identifier.or.type=Esperando identificador o tipo
expected.lbrace='{' expectativa
expected.lbrace.or.semicolon='{' o ';' es obligatorio.
expected.lbracket='[' expectativa
expected.lparen='(' expectativa
expected.lparen.or.lbracket=Espere '(' o ']'
expected.lt.or.lparen='<' o '(' es obligatorio.
expected.module.declaration=Se requiere una declaración de módulo
expected.module.statement=Se requiere una directiva de módulo
expected.package.reference=Se requiere la referencia del paquete
expected.parameter=Expectativas de parámetros
expected.rbrace='}' expectativa
expected.rbracket=']' expectativa
expected.resource=Se requiere una definición de recurso
expected.rparen=')' expectativa
expected.semicolon=';' expectativa
expected.statement=Expectativa de declaración
expected.string=Se requiere un literal de cadena
expected.switch.label=Espera 'caso', 'predeterminado' o '}'
expected.switch.rule=Esperando una expresión, bloqueo o declaración de lanzamiento
expected.type=se requiere tipo
expected.type.parameter=El parámetro de tipo es obligatorio
expected.value=Se requiere valor
expected.while=expectativa 'mientras'
expected.with=Se requiere 'con'
filetype.description.class=clase java
filetype.description.java=Java
filetype.description.jshell=Fragmento de JShell
finally.without.try='finalmente' sin 'intentar'
import.statement.identifier.or.asterisk.expected.=Requiere identificador o '*'
java.terms.anonymous.class=clase anónima
java.terms.anonymous.class.base.ref=Anónimo {0}
java.terms.class=clase
java.terms.field=campo
java.terms.interface=interfaz
java.terms.method=método
java.terms.package=paquete
java.terms.parameter=parámetro
java.terms.variable=variable
javadoc.exception.tag.class.is.not.throwable=La clase {0} no es descendiente de Throwable.
javadoc.exception.tag.exception.is.not.thrown={0} no está declarado para incluirse en el método {1}.
javadoc.exception.tag.wrong.tag.value=Valor de etiqueta no válido
javadoc.param.tag.parameter.name.expected=El nombre del parámetro es obligatorio.
javadoc.param.tag.type.parameter.gt.expected='>' esperado
javadoc.param.tag.type.parameter.name.expected=El nombre del parámetro de tipo es obligatorio
javadoc.ref.tag.class.ref.expected=Se requiere una referencia de clase.
javadoc.value.field.required=Las etiquetas @value deben hacer referencia a campos.
javadoc.value.field.with.initializer.required=La etiqueta @value debe hacer referencia a un campo que contenga un inicializador constante.
javadoc.value.static.field.required=Las etiquetas @value deben hacer referencia a campos estáticos.
javadoc.value.tag.jdk15.required=Cuando se utiliza JDK 1.4 o anterior, es posible que la etiqueta @value no contenga ningún argumento.
jdk.1.3.language.level.description=1.3 - Java antiguo y sencillo
jdk.1.4.language.level.description=1.4 - palabra clave 'afirmar'
jdk.1.5.language.level.description=5 - palabra clave 'enum', genéricos, autoboxing, etc.
jdk.1.6.language.level.description=6 - Etiqueta @Override en la interfaz
jdk.1.7.language.level.description=7 - Diamante, ARM, captura múltiple, etc.
jdk.1.8.language.level.description=8 - Lambdas, anotaciones de tipo, etc.
jdk.1.9.language.level.description=9 - Métodos privados en módulos, interfaces, etc.
jdk.10.language.level.description=10 - Inferencia de tipo de variable local
jdk.11.language.level.description=11 - Sintaxis de variable local para parámetros lambda
jdk.12.language.level.description=12 - No hay nuevas funciones de idioma
jdk.13.language.level.description=13 - No hay nuevas funciones de idioma
jdk.14.language.level.description=14 - Cambiar expresión
jdk.14.preview.language.level.description=14 (Vista previa) - Registros, patrones, bloques de texto
jdk.15.language.level.description=15 - Bloque de texto
jdk.15.preview.language.level.description=15 (Vista previa): tipos sellados, historial, patrones, enumeraciones locales e interfaces.
jdk.X.language.level.description=X - función experimental
local.class.preposition=local
method.context.display={0}() de {1}
node.abstract.flag.tooltip=Abstract
node.annotation.tooltip=anotación
node.anonymous.class.tooltip=clase anónima
node.class.tooltip=clase
node.enum.tooltip=enumeración
node.exception.tooltip=excepción
node.field.tooltip=campo
node.final.flag.tooltip=Final
node.interface.tooltip=interfaz
node.junit.test.tooltip=Pruebas unitarias
node.method.tooltip=método
node.record.tooltip=Grabar (función de vista previa)
node.runnable.class.tooltip=clase ejecutable
node.static.flag.tooltip=silencio
psi.error.attempt.to.edit.class.file=No se pueden modificar los elementos compilados en el archivo ''{0}''
task.background.title.maven=Maven
unexpected.identifier=Identificador inesperado
unexpected.token=símbolo inesperado
unexpected.tokens=símbolo inesperado
visibility.presentation.abstract=abstract
visibility.presentation.default=default
visibility.presentation.final=final
visibility.presentation.native=native
visibility.presentation.open=Abrir
visibility.presentation.packageLocal=package-private
visibility.presentation.private=private
visibility.presentation.protected=protected
visibility.presentation.public=public
visibility.presentation.static=silencio
visibility.presentation.strictfp=strictfp
visibility.presentation.synchronized=sincronizado
visibility.presentation.transient=transient
visibility.presentation.transitive=transitive
visibility.presentation.volatile=volatile
visibility.presentation.sealed=Sellado
visibility.presentation.non-sealed=no sellado
error.message.wildcard.not.expected=comodín inesperado
bad.return.type.in.method.reference=Tipo de retorno no válido en la referencia del método: {0} no se puede convertir a {1}
bad.return.type.in.lambda.expression=Tipo de retorno no válido en expresión lambda: {0} no se puede convertir a {1}
bad.return.type.in.lambda.expression1=Tipo de retorno no válido en expresión lambda\: {0} no se puede convertir en nulo
missing.return.value.lambda=Valor de retorno faltante
unexpected.return.value=valor de retorno inesperado
lambda.body.must.be.a.statement.expression=El cuerpo lambda debe ser una expresión de sintaxis.
