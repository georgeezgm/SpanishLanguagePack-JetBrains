uml.class.diagram.file.name=''{0}'' 클래스 다이어그램
building.diagram={0} 빌드 중
error=오류
new.class=새 클래스
new.enum=새 열거형
new.record=새 레코드
new.interface=새 인터페이스
cant.create.element={1} 디렉토리의 {0} 을(를) 생성할 수 없습니다
add.new.field.title={0}에 새 필드 또는 상수 추가
add.new.enum.constant.title={0}에 새 열거형 상수 추가
create.new.method.dialog.title=새 메소드 생성
create.new.constructor.dialog.title=새 생성자 생성
create.method=생성(&C)
final.class.cant.be.inherited={0} 클래스는 final 클래스입니다.
node.is.interface=인터페이스는 인터페이스만 확장할 수 있습니다
error.cant.create.edge=관계 링크를 생성할 수 없습니다
preview=미리보기
this.will.remove.relationship.link.between.classes=클래스 간 관계 링크를 제거하고 {0} 클래스를 수정합니다. 계속하시겠습니까?
remove.relationship.link=관계 링크 제거
class.must.be.abstract.or.implement.methods=''{0}'' 클래스는 추상으로 선언되거나 추상 메소드를 구현해야 합니다
class.must.be.abstract.title=메소드 구현 또는 클래스를 추상으로 선언
generate.methods=메소드 생성
make.abstract=추상으로 만들기
initializer.is.empty=이니셜라이저가 공백입니다
constant.in.interface.must.have.initializer=인터페이스 상수는 이니셜라이저를 포함해야 합니다
class.is.readonly={0} 클래스는 읽기 전용입니다
file.is.readonly=파일 ''{0}'' 은 읽기 전용입니다
annotation.class.cant.be.extended.or.implemented=어노테이션은 다른 클래스/인터페이스를 확장/구현할 수 없습니다
remove.annotation.from.class=''{1}''에서 @{0} 어노테이션 제거
relationship.already.exists={0} 및 {1} 간 관계가 이미 존재합니다
show.supers.for={0}의 상위 클래스
UML=UML
uml.change.list.name=변경
uml.file.name.for.changes=''{0}'' 변경
other=기타
select.uml.provider=다이어그램 유형 선택
dependencies=종속성
uml.structure.view=다이어그램 요소
abstract=추상(&B)
set.up.jdk=JDK가 설정되지 않습니다
make.class.abstract=클래스를 추상으로 설정
change.visibility.group.text=가시성 수준 변경
change.scope.group.text=범위 변경
modules.diagram.presentable.name=프로젝트 모듈
uml.java.presentable.name=Java 클래스
uml.jigsaw.presentable.name=Java 모듈
diff.presentable.name=변경점 보이기
add.modules.libraries=모듈 및 라이브러리 추가...
looking.for.dependencies=종속 요소 검색 중
dependencies.for.module=모듈 ''{0}'' 종속 요소
show.modules.dependencies=모듈 종속 요소 표시
fit.content.after.layout=레이아웃 적용 후 콘텐츠 맞춤(&F)
do.relayout.when.new.elements.were.added=새 요소가 추가되었을 시 레이아웃 재설정(&R)
default.layout=디폴트 레이아웃(&L)\:
default.scope=디폴트 범위(&S)\:
change.list.contains.too.many.files=변경 목록 ''{0}''에는 {1}개 이상의 파일이 포함됩니다
show.categories.title=카테고리 표시
uml.java.calculating.dependencies=종속 요소 계산 중
uml.java.package.title=패키지 {0}
uml.java.default.package.title=최상위 패키지
action.UML.Find.text=요소 다이어그램 찾기
action.UML.ShowStructure.text=구조 보기
action.UML.SaveDiagram.text=UML 다이어그램 저장
action.Uml.ShowDiff.text=UML로 Diff 표시
action.Uml.ExpandNodes.text=노드 확장
action.Uml.CollapseNodes.text=노드 접기
action.Diagram.DeselectAll.text=모두 선택 해제
action.Diagram.SelectAll.text=모두 선택
action.UML.ShowChanges.text=로컬 변경 내용을 UML로 표시
action.ShowUmlDiagramPopup.text=UML 팝업 표시
action.ShowUmlDiagram.text=UML 다이어그램 표시
action.Uml.NewElement.text=새로 만들기
group.Uml.NewGroup.text=다이어그램
group.UML.Group.text=다이어그램
group.UML.Group.description=다이어그램
group.UML.Group.Simple.text=다이어그램
group.UML.Group.Simple.description=다이어그램
group.UML.EditorGroup.text=다이어그램
group.UML.EditorGroup.description=다이어그램
configurable.UmlConfigurable.display.name=다이어그램
settings.select.categories.text=다이어그램이 나타날 때마다 디폴트로 활성화되는 카테고리 선택
color.descriptor.node.header=노드 헤더
color.descriptor.node.background=노드 배경
color.descriptor.realization.edge=실행 에지
color.descriptor.generalization.edge=일반화 에지
color.descriptor.default.edge=디폴트 에지
color.descriptor.annotation.edge=디폴트 에지
color.descriptor.inner.class.edge=내부 클래스 에지
color.descriptor.note.background=노트 배경
color.descriptor.note.border=노트 경계
dialog.message.can.t.save.converted.content.into.file.check.read.only.status=파일로 변환된 콘텐츠를 저장할 수 없습니다. 읽기 전용 상태를 확인하세요.
dialog.title.old.diagram.format=이전 다이어그램 형식
dialog.message.this.file.has.old.format.would.you.like.to.convert.it=파일의 형식이 이전 형식입니다. 변환하시겠습니까?
action.text.show.0.1={0}{1} 표시...
dialog.description.save.uml.class.diagram.as.uml=UML 클래스 다이어그램을 .uml로 저장
dialog.title.save.file=파일 저장
configurable.display.name.diagrams=다이어그램
group.action.text.new=새로 만들기
dialog.title.edit.note=노트 편집
dialog.message.note.text=노트 텍스트
popup.title.select.target.node=대상 노드 선택                         
goto.class.prompt.text.enter.class.name.to.add=추가할 클래스 이름 입력
dialog.title.add.a.note=노트 추가
popup.title.select.change.list=변경 목록 선택
file.type.description.diagram=다이어그램
task.title.calculating.paths=경로 계산 중
dialog.message.can.t.show.more.than.0.changes.at.one.diagram=다이어그램 1개에서 {0}개 이상의 변경 사항을 표시할 수 없습니다.
action.name.show.diagram.structure=다이어그램 구조 표시
action.name.set.edge.creation.mode=에지 생성 모드 설정
action.name.select.all=모두 선택
command.edit.note=노트 편집
notification.message.scope.has.been.changed.to.b.all.b=범위가 <b>전체</b>로 변경되었습니다
action.name.change.visibility.to.0=가시성 수준을 {0}(으)로 변경
action.name.safe.delete=안전한 삭제
action.name.show.dependencies=종속 요소 표시
action.name.collapse.nodes=노드 접기
action.name.expand.nodes=노드 확장
action.name.change.scope.to.0=범위를 {0}(으)로 변경
command.add.elements=요소 추가
action.name.create.line=줄 생성
action.name.add.note=노트 추가
action.name.save.diagram=다이어그램 저장
action.name.deselect.all=모두 선택 해제
action.name.add.elements2=요소 추가
action.name.enable.category={0} 활성화
action.name.disable.category={0} 비활성화
show.intentions.for.node=노드 인텐션 표시
add.class.to.diagram=다이어그램에 클래스 추가...
show.parents=상위 항목 표시
show.implementations=구현 표시
creates.a.relationship.between.nodes=노드 간 관계 생성
line.to=줄...
searching.for.elements=요소 검색
can.t.save.diagram.to.0=다이어그램을 {0}에 저장할 수 없습니다
edge.creation.mode=에지 생성 모드
changes.for.revision.0=리비전 {0} 변경
add.note.action.title=참고
uml.dependencies.settings.group.title=종속성
category.name.show.neighbours.of.selected.nodes=선택한 노드의 인접 항목 표시
category.name.show.paths.root.selection=경로 표시\: 루트 -> 선택
category.name.borderless=보더리스 뷰
category.name.fields=필드
category.name.constructors=생성자
category.name.methods=메소드
category.name.properties=프로퍼티
category.name.inner.classes=내부 클래스
category.name.dependencies=종속성
category.name.all=모두
category.name.constants=상수
category.name.details=세부사항
uml.action.name=다이어그램
visibility.level.all=모두
delete.selection.command.name=선택 항목 제거
add.element.to.diagram=다이어그램에 요소 추가
unknown.uml.file=알 수 없는 UML 파일
show.diagram.popup.title={1} 의 {0}
unknown.uml.action=알 수 없는 UML 액션