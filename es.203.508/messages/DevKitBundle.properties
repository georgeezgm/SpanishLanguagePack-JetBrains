#module type
module.title=IntelliJ 플랫폼 플러그인
module.description=플러그인 모듈이 <b>IntelliJ 플랫폼</b> 기반 IDE 플러그인 개발에 사용됩니다.<br>이 모듈은 <b>IntelliJ 플랫폼 플러그인 SDK</b> 및 IDE 내 플러그인 실행 및 디버그를 위한 <b>실행 구성</b>을 제공합니다.
plugin.descriptor=IntelliJ 플랫폼 플러그인 설명자

#Gradle wizard
module.wizard.gradle.presentable.name=IntelliJ 플랫폼 플러그인
module.wizard.gradle.learn.title=<a>Gradle을 사용해 플러그인을 빌드</a>하는 방법을 알아보십시오
module.wizard.gradle.plugin.xml.template.display.name=Gradle 기반 프로젝트 내 plugin.xml

module.wizard.devkit.simple.plugin.label=이 프로젝트 유형은 사용자 지정 UI 테마 등 단순한 플러그인에 권장됩니다. 더 복잡한 플러그인의 경우, Gradle 기반의 프로젝트가 <a>권장</a>됩니다.

convert.devkit.to.gradle.notification=DevKit 플러그인을 Gradle로 마이그레이션
convert.devkit.to.gradle.notification.content=이 프로젝트에서는 Gradle 기반 설정을 권장합니다
convert.devkit.to.gradle.notification.link.title=마이그레이션 가이드
convert.devkit.to.gradle.notification.do.not.show.again=다시 표시 안 함

group.PluginDeployActions.text=플러그인 배포 액션

#Module Editor - Deployment
deployment.title=플러그인 배포
deployment.cleanup={0} 디렉토리 정리
deployment.directory.location={0} 디렉토리 위치 선택
deployment.view.select={0} 선택
manifest.settings=매니페스트 설정
manifest.selection=선택한 {0} 이(가) 결과 배포에 포함됩니다
manifest.use.user.defined=사용자 매니페스트 사용\:
deployment.view.delete={0} 삭제?
deployment.view.meta-inf.label={0} 경로
suggest.to.delete=''{0}'' 을(를) 삭제하시겠습니까?
vm.parameters=VM 옵션(&V)
program.parameters=프로그램 인수(&P)

#Prepare for deployment action
action.MakeJarAction.text=배포 준비
action.MakeAllJarsAction.text=배포할 모든 플러그인 준비
select.plugin.modules.title=모듈 선택
select.plugin.modules.description=배포 준비할 모듈 선택
prepare.for.deployment.task=배포할 플러그인 모듈 ''{0}'' 준비
prepare.for.deployment.task.progress=배포 준비 중
prepare.for.deployment=배포할 플러그인 모듈 ''{0}'' 준비
prepare.for.deployment.all=배포할 모든 플러그인 모듈 준비
saved.message.common=선택한 디렉토리에서 {0} 이(가) 저장됩니다
saved.message= 모듈 ''{1}'' 의 {0, choice, 1\#Zip|2\#JAR} 파일이 {2} 에 저장되었습니다
success.deployment.message=플러그인 모듈 ''{0}'' 배포 준비 완료
success.deployment.message.all=모든 플러그인 배포 준비 완료

##Idea Sdk
sdk.title=IntelliJ 플랫폼 플러그인 SDK
sdk.select.java.sdk=IntelliJ 플랫폼 플러그인 SDK에 사용될 Java SDK 선택
sdk.select.java.sdk.label=내붙 Java 플랫폼\:
sdk.select.java.sdk.title=내부 Java 플랫폼 선택
sdk.no.java.sdk.for.idea.sdk.found=적절한 버전의 Java SDK를 찾을 수 없습니다. IntelliJ 플랫폼 플러그인 플러그인 SDK와 더불어 동일한 Java 버전({0})의 JDK를 정의해야 합니다.
sdk.no.idea.sdk.version.found=IntelliJ 플랫폼 플러그인 SDK에 필요한 JDK 버전을 탐지하지 못했습니다.
sdk.no.java.sdk.for.idea.sdk.found.title=Java JDK를 찾을 수 없음
sdk.from.sources.scanning.roots=루트 검사 중

sandbox.specification=샌드박스를 구성해주십시오
sandbox.home=샌드박스 홈
sandbox.home.label=샌드박스 홈\:
sandbox.no.configured=IntelliJ 플랫폼 플러그인 SDK에 지정된 샌드박스 없음
sandbox.no.sdk=JDK를 구성하십시오
sandbox.purpose=대상 IDE 설정, 시스템, 플러그인을 저장할 폴더 찾아보기

#errors
error.occurred=오류 발생
sdk.no.specified=플러그인 모듈 ''{0}'' 에 지정된 SDK 없음
sdk.type.incorrect=플러그인 모듈 ''{0}'' 의 SDK 유형이 잘못되었습니다.
sdk.type.incorrect.common=플러그인 모듈의 잘못된 SDK 유형
error.file.not.found=파일을 찾을 수 없음
error.file.not.found.message=파일 ''{0}''을(를) 찾을 수 없습니다
error.no.plugin.xml=plugin.xml 파일을 찾을 수 없음
error.plugin.xml.readonly=읽기 전용 plugin.xml 파일을 처리할 수 없습니다\: {0}
error.plugin.xml.tag.invalid=<Invalid>
error.cannot.process.plugin.xml=플러그인 설명자 파일을 처리할 수 없음\: {0}
error.cannot.create.service.class=서비스 클래스를 생성할 수 없음

#run configurations
run.configuration.no.module.specified=설정을 위해 지정된 플러그인 모듈 없음
run.configuration.title=플러그인
run.configuration.type.description=플러그인 샌드박스 환경

#Test Data
testdata.create.dialog.title=Testdata 파일 생성
testdata.file.doesn.not.exist=<html>참조된 testdata 파일 {0} 이(가) 존재하지 않습니다. 해당 파일을 생성하시겠습니까?</html>
testdata.create.missing.files=누락된 파일 생성
testdata.confirm.create.missing.files.dialog.message=다음 testdata 파일을 생성합니다\:\n{0}
testdata.searching=데스트 데이터 파일 검색 중
testdata.goto.test.data.action.text={0} (으)로 이동
testdata.notification.no.test.datafiles.title=데스트 데이터 파일을 찾을 수 없음
testdata.notification.no.test.datafiles.content=클래스의 데스트 데이터 파일을 찾을 수 없음
testdata.progress.text.searching.for.test.data.files=''{0}'' 테스트 데이터 파일 검색 중...

#Misc
info.message=정보(I)
new.action.id=액션 ID(&A)\:
new.action.description=설명(&D)\:
new.action.class.name=클래스 이름(&C)\:
new.action.text=이름(&N)\:
new.action.add.to.group=그룹에 추가
new.action.group.actions=액션(&I)\:
new.action.group.anchor=앵커\:
new.action.group.anchor.first=첫 번째(&F)
new.action.group.anchor.=마지막(&L)
new.action.group.anchor.before=이전(&B)
new.action.group.anchor.after=이후(&T)
new.action.group.groups=그룹(&G)\:
new.action.keyboard.shortcuts=키보드 단축키
new.action.keyboard.first=첫 번째\:
new.action.keyboard.second=두 번째\:
new.action.keyboard.clear=X
new.action.keyboard.clear.tooltip=단축키 클리어
new.action.invalid.id=액션 ID이 비어 있으면 안 됩니다
new.action.invalid.class.name=액션 클래스 이름이 유효한 Java 정규화된 이름이 아닙니다
new.action.invalid.name=액션 이름이 비어 있으면 안 됩니다
new.action.cannot.create.class=액션 클래스를 생성할 수 없음

command.implement.externalizable=Externalizable 구현

new.menu.action.text=액션
new.action.error=액션을 생성할 수 없음
new.action.action.name=새 액션 생성 중\: {0}.{1}
new.action.dialog.title=새 액션

action.DevKit.NewMessageBundle.action.name.create.new.message.bundle=새 메시지 번들 ''{0}'' 생성
action.DevKit.NewMessageBundle.error.title.cannot.create.new.message.bundle=새 메시지 번들을 생성할 수 없음
action.DevKit.NewMessageBundle.text=메시지 번들
action.DevKit.NewMessageBundle.description=새 메시지 번들 클래스 및 해당 프로퍼티 파일 생성
action.DevKit.NewMessageBundle.title.create.new.message.bundle=새 메시지 번들 생성
action.DevKit.NewMessageBundle.label.bundle.name=번들 이름\:
action.DevKit.NewMessageBundle.error.message.multiple.content.roots.for.module={0} 의 여러 콘텐츠 루트
action.DevKit.NewMessageBundle.error.message.under.sources.root={0} 이(가) 소스 루트 아래에 있습니다
action.DevKit.NewMessageBundle.error.message.folder.already.exists=''{0}'' 폴더가 이미 {1} 아래에 있습니다
action.DevKit.NewMessageBundle.error.message.do.not.put.bundle.to.impl.module=현재 .impl 모듈에 별도 번들을 생성하는 것을 권장하지 않으므로, 대신 해당 API 모듈의 번들을 사용하십시오
action.DevKit.NewMessageBundle.notification.title.cannot.create.resources.root.for.properties.file=새 메시지 번들을 생성할 수 없음
action.DevKit.NewMessageBundle.notification.content.cannot.create.resources.root.for.properties.file=프로퍼티 파일의 리소스 루트를 출력 파일을 생성할 수 없음\: {0}


## theming
theme.highlighting.unresolved.key=키 ''{0}'' 을(를) 해결할 수 없음
theme.highlighting.deprecated.key=더 이상 사용되지 않는 키 ''{0}''
theme.choose.color.tooltip=색상 선택
theme.choose.color.dialog.title=색상 선택

theme.json.display.name=IntelliJ 테마
theme.metadata.json.display.name=IntelliJ 테마 메타데이터

theme.json.documentation.key.deprecated=더 이상 사용되지 않음
theme.json.documentation.key.no.description=(설명 없음)
theme.json.documentation.section.source.title=소스\:
theme.json.documentation.section.since.title=이후\:

new.theme.dialog.title=새 테마 생성
new.theme.dialog.name.text.field.text=이름\:
new.theme.dialog.is.dark.checkbox.text=어두운색 테마
new.theme.dialog.name.empty=테마 이름이 비어 있으면 안 됩니다


new.menu.application.component.text=애플리케이션 구성요소
new.menu.module.component.text=모듈 구성요소
new.menu.project.component.text=프로젝트 구성요소

new.service.class.action.name=새 서비스 생성 중
new.service.dialog.interface=서비스 인터페이스(&I)\:
new.service.dialog.implementation=서비스 구현(&M)\:
new.service.dialog.class=서비스 클래스(&C)\:
new.service.dialog.separate=구현에서 인터페이스 분리(&S)
new.service.dialog.invalid.name=서비스 이름이 유효한 Java 정규화된 이름이 아닙니다
new.service.dialog.invalid.interface=서비스 인터페이스가 유효한 Java 정규화된 이름이 아닙니다
new.service.dialog.invalid.implementation=서비스 구현이 유효한 Java 정규화된 이름이 아닙니다

new.application.service.dialog.title=새 애플리케이션 서비스
new.project.service.dialog.title=프로젝트 서비스 생성
new.module.service.dialog.title=새 모듈 서비스 생성

select.plugin.module.to.patch=패치할 플러그인 모듈 선택

keyword.extend=\ 확장
keyword.implement=구현
class.action=액션
class.interface=인터페이스
class.implementation=구현

structure.sort.alphabetically.in.groups=그룹 내 알파벳순 정렬
structure.sort.alphabetically.in.groups.description=그룹 내 알파벳순 정렬

inspections.group.name=플러그인 DevKit
inspections.group.descriptor=플러그인 설명자
inspections.group.description.file=설명 파일
inspections.group.code=코드
inspections.group.path=플러그인 DevKit
inspections.plugin.xml.inner.class.must.be.separated.with.dollar=내부 클래스가 '$'로 구분되어야 합니다
inspections.plugin.xml.plugin.should.have.jetbrains.vendor=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 'JetBrains'을 벤더로 지정해야 합니다
inspections.plugin.xml.plugin.jetbrains.vendor.no.url=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 ''{0}'' 을(를) url로 지정해야 합니다
inspections.plugin.xml.plugin.jetbrains.vendor.no.email=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 이메일을 지정할 수 없습니다
inspections.plugin.xml.plugin.jetbrains.no.version=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 버전을 지정할 수 없습니다
inspections.plugin.xml.plugin.jetbrains.no.idea.version=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 빌드 스크립트에 의해 자동으로 생성되기 때문에 idea-version을 지정해야 합니다
inspections.plugin.xml.plugin.jetbrains.no.change.notes=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 change-notes를 지정해야 합니다
inspections.plugin.xml.plugin.jetbrains.no.generic.plugin.url=IntelliJ IDEA 프로젝트의 일부로 개발된 플러그인은 제네릭 플러그인 url을 지정해야 합니다
inspections.plugin.xml.ep.qualifiedName.superfluous=불필요한 'qualifiedName'를 통한 선언
inspections.plugin.xml.ep.qualifiedName.superfluous.fix='name'을 통해 선언
inspections.plugin.xml.ep.doesnt.have.with=<extensionPoint>에 클래스 필드 유형을 지정하는 <with> 태그가 없습니다
inspections.plugin.xml.ep.both.beanClass.and.interface=<extensionPoint>가 'interface' 및 'beanClass' 속성을 둘 다 지정할 수 없습니다
inspections.plugin.xml.ep.missing.beanClass.and.interface=<extensionPoint>가 'interface' 및 'beanClass' 속성 중 하나를 지정해야 합니다
inspections.plugin.xml.ep.both.name.and.qualifiedName=<extensionPoint>가 'name' 및 'qualifiedName' 속성을 둘 다 지정할 수 없습니다
inspections.plugin.xml.ep.missing.name.and.qualifiedName=<extensionPoint>가 'name' 및 'qualifiedName' 속성 중 하나를 지정해야 합니다
inspections.plugin.xml.synonym.missing.key.and.text=<synonym>은 'key' 또는 'text' 속성 중 하나를 지정해야 합니다
inspections.plugin.xml.synonym.both.key.and.text=<synonym>은 'key' 또는 'text' 속성을 둘 다 지정할 수 없습니다
inspections.plugin.xml.use.defaultExtensionNs=대신 defaultExtensionNs 사용
inspections.plugin.xml.specify.defaultExtensionNs.explicitly=명시적으로 defaultExtensionNs\="{0}" 지정
inspections.plugin.xml.invalid.build.number=<html>유효하지 않은 빌드 번호 ''{0}'' (<a href\="http\://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html">문서</a>)</html>
inspections.plugin.xml.until.build.use.asterisk.instead.of.big.number=''until-build''에서 ''{0}'' 사용 안 함,  대신 ''*'' 사용
inspections.plugin.xml.until.build.misleading.plain.number=''until-build'' 속성의 일반 숫자는 오해의 소지가 있습니다. ''{0}'' 은(는) ''{0}.0''과 동일하기 때문에 플러그인이 {0}.* builds와 호환되지 않습니다. 대신 ''{1}'' 을(를) 지정하는 것이 낫습니다.
inspections.plugin.xml.until.build.must.be.greater.than.since.build="until-build"이 "since-build"보다 커야 합니다
inspections.plugin.xml.dependency.superfluous.optional=불필요한 선언
inspections.plugin.xml.dependency.specify.config.file='config-file'을 지정해야 함
inspections.plugin.xml.deprecated.ep=더 이상 사용되지 않는 확장점 ''{0}''
inspections.plugin.xml.deprecated.ep.use.replacement=확장점 ''{0}''은(는) 더 이상 사용되지 않습니다. 대신 ''{1}''을(를) 사용하세요
inspections.plugin.xml.no.need.to.specify.itnReporter=JetBrains에서 개발한 플러그인의 예외는 ITNReporter 통해 자동으로 보고되므로 명시적으로 지정할 필요가 없습니다
inspections.plugin.xml.third.party.plugins.must.not.use.itnReporter='com.intellij.diagnostic.ITNReporter'는 JetBrains의 내부 처리 오류를 보고하므로 제3자 플러그인에서 사용될 수 없습니다
inspections.plugin.xml.deprecated.attribute=더 이상 사용되지 않는 속성 ''{0}''
inspections.plugin.xml.deprecated.helpset=Helpset이 더 이상 사용되지 않으므로 대신 'com.intellij.openapi.help.WebHelpProvider'를 사용하십시오
inspections.plugin.xml.attribute.not.used.anymore=속성 ''{0}'' 이(가) 더 이상 사용되지 않음
inspections.plugin.xml.anchor.must.have.relative-to-action='anchor'는 'relative-to-action'로 지정되어야 합니다
inspections.plugin.xml.must.use.after.before.with.relative-to-action=''relative-to-action''와 함께 ''{0}''|''{1}'' 을(를) 사용해야 함
inspections.plugin.xml.skipForDefaultProject.deprecated='skipForDefaultProject'은 더 이상 사용되지 않습니다. 디폴트로 프로젝트 구성 요소가 기본 프로젝트에서 로드되지 않습니다
inspections.plugin.xml.invalid.ep.name.description=잘못된 확장점 {0} ''{1}''입니다. 라틴 문자, 숫자, 마침표만 포함해야 하며, 마침표로 시작하거나 끝나면 안 됩니다. 각 조각은 소문자로 시작해야 하며 마지막 조각 단어가 이전 조각을 반복해서는 안 됩니다.
inspections.plugin.xml.invalid.ep.name=이름
inspections.plugin.xml.invalid.ep.qualifiedName=정규화된 이름
inspections.plugin.xml.ignore.classes.title=등록 검사 무시 클래스 목록\:
inspections.plugin.xml.add.ignored.class.title=무시할 클래스 지정
inspections.plugin.xml.plugin.modules.label=멀티 모듈 플러그인 모듈\:
inspections.plugin.xml.plugin.modules.description=각 줄이 단일 플러그인에 포함된 쉼표로 구분된 모듈 이름 목록을 지정합니다.
inspections.plugin.xml.version.must.be.specified=<version>이 지정되어야 합니다
inspections.plugin.xml.vendor.must.be.specified=<vendor>이 지정되어야 합니다
inspections.plugin.xml.do.not.use.template.text=템플릿 텍스트 ''{0}'' 사용 안 함
inspections.plugin.xml.must.not.contain.template.text=템플릿 텍스트 ''{0}'' 을(를) 포함할 수 없음
inspections.plugin.xml.value.exceeds.max.length=값의 길이가 최대값 {0} 을(를) 초과합니다
inspections.plugin.xml.value.must.have.minimum.length=값은 최소 {0} 자리여야 합니다
inspections.plugin.xml.product.descriptor.invalid.date=날짜는 YYYYMMDD 숫자이거나 자리표시자(예\: __DATE__)여야 합니다
inspections.plugin.xml.product.descriptor.invalid.version=버전은 숫자이거나 자리표시자(예\: __VERSION__)여야 합니다
inspections.plugin.xml.no.plugin.icon.svg.file=<html>플러그인이 ''{0}'' 을(를) 제공해야 합니다 (<a href\="https\://www.jetbrains.org/intellij/sdk/docs/basics/plugin_structure/plugin_icon_file.html">문서</a>)</html>
inspections.plugin.xml.component.interface.class.redundant=불필요한 태그 'interfaceClass'
inspections.plugin.xml.service.interface.class.redundant=불필요한 속성 'serviceInterface'
inspections.plugin.xml.duplicated.dependency=종속성 구성 파일 ''{0}'' 중복
inspections.plugin.xml.ComponentModuleRegistrationChecker.element.registered.wrong.module=클래스 ''{1}'' 이(가) 정의된 ''{0}'' 모듈 안에 요소를 등록해야 합니다
inspections.plugin.xml.ComponentModuleRegistrationChecker.fix.move.registration.name=등록을 {0} (으)로 이동
inspections.plugin.xml.ComponentModuleRegistrationChecker.fix.move.registration.family.name=등록을 올바른 모듈로 이동
inspections.plugin.xml.fix.extension.point.add.with.tag=<with> 태그 추가
inspections.plugin.xml.listener.does.not.inherit=''{0}'' 이(가) ''{1}'' 을(를) 상속하지 않습니다
inspections.plugin.xml.since.build.could.not.locate.main.descriptor=필수 <idea-version> 'since-build'를 파악하기 위한 메인 plugin.xml 파일을 찾을 수 없습니다
inspections.plugin.xml.since.build.must.be.specified=<idea-version> 'since-build'를 지정해야 합니다
inspections.plugin.xml.since.build.could.not.determine.platform.version=대상 플랫폼 버전을 파악할 수 없음, 프로젝트 설정을 확인하십시오
inspections.plugin.xml.since.build.listeners.os.attribute=속성 ''os''는 플랫폼 {0} 버전 이후에서만 사용 가능하나 ''since-build'' 플랫폼이 ''{1}'' 입니다
inspections.plugin.xml.since.build.listeners.not.available=기능은 플랫폼 버전 {0} 이후에서만 사용 가능하나 ''since-build'' 플랫폼이 ''{1}'' 입니다
inspections.plugin.xml.action.group.id.required='id'를 지정해야 합니다
inspections.plugin.xml.action.class.required.with.use.shortcut.of='class'는 'use-shortcut-of'로 지정되어야 합니다
inspections.plugin.xml.action.must.override.method.with.use.shortcut.of={0} 은(는) ''use-shortcut-of''로 재정의해야 합니다
inspections.plugin.xml.usage.of.experimental.api=@{0} (으)로 표시된 API 사용.이러한 API는 미래의 IDE 버전에서 변경되거나 삭제되어 호환성 문제가 발생할 수 있습니다.
inspections.plugin.xml.vendor.specify.jetbrains=JetBrains을 벤더로 지정
inspections.plugin.xml.change.until.build.name=''until-build''를 ''{0}'' (으)로 변경
inspections.plugin.xml.change.until.build.family.name='until-build' 속성 수정
inspections.plugin.xml.deprecated=더 이상 사용되지 않음
inspections.plugin.xml.add.version.tag=<version> 추가
inspections.plugin.xml.add.vendor.tag=<vendor> 추가


inspections.registration.problems.name=구성 요소 유형 불일치
inspections.registration.problems.option.check.plugin.xml=플러그인 설명자(plugin.xml) 검사
inspections.registration.problems.option.check.java.actions=Java 액션 검사
inspections.registration.problems.option.check.java.code=자바 코드 검사
inspections.registration.problems.quickfix.read-only=클래스 ''{0}'' 이(가) 읽기 전용입니다
inspections.registration.problems.quickfix.create.constructor=인수 없는 생성자 생성

inspections.registration.problems.incompatible.message=plugin.xml의 클래스 등록에 따르면 클래스는 ''{1}'' 을(를)  {0}해야 합니다
inspections.registration.problems.abstract=플러그인 구성 요소 클래스가 abstract여야 합니다
inspections.registration.problems.missing.noarg.ctor=액션 클래스에는 인수 없는 생성자가 있어야 합니다

inspections.registration.problems.missing.implementation.class=누락된 구현 클래스
inspections.registration.problems.cannot.resolve.class={0} 클래스를 해결할 수 없음
inspections.registration.problems.component.incompatible.interface=구성 요소 클래스를 인터페이스 클래스 ''{0}'' 에 할당할 수 없습니다
inspections.registration.problems.component.duplicate.interface=동일한 인터페이스 클래스를 가진 여러 구성 요소는 허용되지 않습니다
inspections.registration.problems.action.incompatible.class=액션 클래스는 ''{0}'' 을(를) 확장해야 합니다

inspections.component.not.registered.name=구성 요소/액션이 등록되지 않음
inspections.component.not.registered.message={0} 이(가) plugin.xml에 등록되지 않았습니다
inspections.component.not.registered.option.check.actions=액션 검사
inspections.component.not.registered.option.ignore.non.public=비 public 클래스 무시
inspections.component.not.registered.quickfix.family={0} 등록
inspections.component.not.registered.quickfix.name={0} 등록
inspections.component.not.registered.quickfix.error={0} 을(를) 등록할 수 없음
inspections.statistics.collector.not.registered.name=통계 컬렉터가 등록되지 않음
inspections.statistics.collector.not.registered.message=plugin.xml에 통계 컬렉터가 등록되지 않음

inspections.component.postfix.template.not.found.description.name=접미사 템플릿 설명 검사기

inspections.presentation.cannot.resolve.icon=아이콘 ''{0}'' 을(를) 해결할 수 없음
inspections.plugin.xml.invalid.order.attribute=유효하지 않은 'order' 속성 값
invalid.order.attribute.part=유효하지 않은 ''order'' 속성 값 부분\: ''{0}'', ''first'', ''last'', ''before <id>'' 또는 ''after <id>''여야 함

inspections.unregistered.named.color=<html>이름 지정된 색상 키 ''{0}'' 이(가) <code>*.themeMetadata.json</code>에 등록되지 않았습니다 (<a href\="https\://www.jetbrains.org/intellij/sdk/docs/reference_guide/ui_themes/themes_metadata.html">문서</a>)</html>

inspections.inspection.description.optional.short.name=검사에 설명{0} 이(가) 없습니다

inspections.inspection.mapping.consistency.specify.bundle=번들을 지정해야 합니다.
inspections.inspection.mapping.consistency.fix.insert.attribute=''{0}'' 속성 삽입
inspections.inspection.mapping.consistency.specify.displayName.or.key=displayName 또는 key를 지정해야 합니다
inspections.inspection.mapping.consistency.specify.groupName.or.groupKey=displayName 또는 groupKey를 지정해야 합니다

inspections.intention.description.not.found=인텐션에 설명이 없습니다
inspections.intention.description.no.before.after.template=인텐션에는 'description.html' 이외에 'before.*.template' 및 'after.*.template'이 있어야 합니다

inspections.postfix.description.not.found=접미사 템플릿에 설명이 없습니다
inspections.postfix.description.no.before.after.template=접미사 템플릿에는 'description.html' 이외에 'before.*.template' 및 'after.*.template'이 있어야 합니다

inspections.plugin.xml.capitalization.missing.resource.bundle.key=리소스 번들 키 ''{0}'' 누락
inspections.plugin.xml.capitalization.error=문자열 ''{0}'' 의 대문자 표기가 올바르지 않습니다. {1} 대문자 표기 방식을 사용해야 합니다
inspections.plugin.xml.capitalization.fix.properly.capitalize=올바르게 ''{0}'' 대문자 표기
inspections.plugin.xml.capitalization.fix.properly.capitalize.family.name=올바르게 대문자 표기

inspections.quick.fix.family.name=QuickFix의 getFamilyName() 구현은 특정 콘텍스트를 의존할 수 없습니다

inspections.unique.toolbar.id=고유한 툴바 ID 지정

inspections.dont.use.new.pair='Pair.create()'로 교체
inspections.dont.use.new.pair.change.to.pair.fix='Pair.create()'로 교체

inspections.psi.element.concat.psi.element=PsiElement에서 문자열로의 변환이 의심스러움
inspections.psi.element.concat.psi.type=PsiType에서 문자열로의 변환이 의심스러움
inspections.psi.element.concat.add.get.text.family.name=텍스트 표현 검색 메소드 호출
inspections.psi.element.concat.add.get.text.name=''{0}'' 호출 사용


inspections.plugin.xml.dynamic.plugin.component.usage=구성 요소를 사용하기 때문에 dynamic이 아닌 플러그인
inspections.plugin.xml.dynamic.plugin.component.usage.docs.link.title=마이그레이션 가이드
inspections.plugin.xml.dynamic.plugin.option.highlight.usages.ep=dynamic이 아닌 확장점 사용 위치 강조 표시
inspections.plugin.xml.dynamic.plugin.extension.point=dynamic이 아닌 확장점 ''{0}''
inspections.plugin.xml.dynamic.plugin.explicit.non.dynamic.extension.point=명시적 dynamic이 아닌 확장점 ''{0}''
inspections.plugin.xml.dynamic.plugin.id.required.for.group=<group>의 'id'가 지정되어야 합니다
inspections.plugin.xml.dynamic.plugin.usage.of.non.dynamic.extension.point=dynamic이 아닌 확장점 ''{0}'' 사용 위치
inspections.plugin.xml.dynamic.plugin.analyze.extension.point=''{1}'' 의 {0}

inspections.stateful.extension.point.leak.psi.element=잠재적 메모리 누구\: PsiElement를 유지하지 않고 대신 SmartPsiElementPointer를 사용하십시오
inspections.stateful.extension.point.leak.psi.element.quick.fix=LocalQuickFixOnPsiElement 또한 참조하십시오
inspections.stateful.extension.point.do.not.use.in.quick.fix=빠른 수정에서 필드로 {0} 사용 안 함
inspections.stateful.extension.point.do.not.use.in.extension=확장 내 필드로 {0} 사용 안 함

inspections.file.equals.method=File.equals/hashCode/compareTo는 macOS 대소문자의 구별을 따르지 않으므로 사용하지 마십시오. 대신 FileUtil.filesEquals/fileHashCode/compareFiles를 사용해주십시오.

inspections.undesirable.class.use.instead=대신 ''{0}'' 을(를) 사용하십시오

inspections.unsafe.vfs.recursion=VirtualFile.getChildren()은 재귀 메소드에서 호출됩니다. 이로 인해 사이클릭 심볼릭 링크에서 무한 루프가 발생할 가능성이 있습니다. 대신 VfsUtilCore.visitChildrenRecursively()를 사용하십시오.

inspections.use.couple.of='Couple.of()'로 교체
inspections.use.couple.type=''Couple<{0}>''로 교체
inspections.use.couple.family.name='Pair'을 'Couple'로 교체

inspections.use.dpi.aware.insets=JBUI.insets(...)로 교체
inspections.use.dpi.aware.insets.family.name=JBUI.insets(...)로 변환

inspections.use.primitive.types=원시형은 equals()로 비교해야 합니다

inspections.use.virtual.file.equals=VirtualFile 객체는 \=\=가 아닌 equals()로 비교해야 합니다

inspections.unsafe.return.insert.family.name=익명/로컬 클래스 건너뛰기
inspections.unsafe.return.insert.visit.lambda.expression=visitLambdaExpression 메소드 삽입
inspections.unsafe.return.insert.visit.class.method=visitClass 메소드 삽입
inspections.unsafe.return.insert.visit.lambda.expression.and.class.methods=visitLambdaExpression/visitClass 메소드 삽입
inspections.unsafe.return.message=return 문에 액세스하는 재귀적 방문자는 아마 익명/로컬 클래스와 람다 식을 구체적으로 처리해야 합니다

inspections.use.jb.color.change.to.JBColor=JBColor.{0} (으)로 변경
inspections.use.jb.color.replace.with.JBColor=JBColor로 교체
inspections.use.jb.color.fix=JBColor.{0} (으)로 변환
inspections.use.jb.color.fix.family.name=JBColor 상수 사용
inspections.use.jb.color.new.color.fix.family.name=JBColor로 변환

# used by antbuild plugin
# suppress inspection "UnusedProperty"
ant.build.jar.comment=플러그인 ''{0}'' 아카이브 빌드
# suppress inspection "UnusedProperty"
ant.build.jar.description=모듈 ''{0}'' 플러그인 아카이브 빌드

error.cannot.resolve.plugin=종속 요소 내 플러그인 ''{0}'' 을(를) 해결할 수 없음
error.cannot.resolve.plugin.reference.link.title=(참조\: 플러그인 종속 요소)
error.cannot.resolve.extension.point=종속 요소 내 확장점 ''{0}'' 을(를) 해결할 수 없음
error.cannot.resolve.extension.point.missing.dependency=확장점 ''{0}'' 을(를) 사용하기 위한 종속성 선언 누락
error.cannot.resolve.extension.point.missing.dependency.fix.family.name=누락된 <depends> 추가

create.description.file=설명 파일 {0} 생성
create.description.file.family.name=설명 파일 생성
select.target.location.of.description={0} 대상 위치 선택
implemented.at.runtime.dom=런타임 시 구현된 DOM 요소
implemented.at.runtime.jamElement=런타임 시 구현된 JAM 요소

line.marker.tooltip.extension.declaration={3} 내 <a href\="\#navigation/{0}\:{1}">{2}</a> 선언
line.marker.tooltip.extension.point.declaration={3} 내 <a href\="\#navigation/{0}\:{1}">{2}</a> 확장점 선언
inspections.usage.uelement.as.psi=UElement을 PsiElement로 사용하는 것을 권장하지 않습니다.

inspections.missing.recent.api.common.message=''{0}'' 은(는) {1} 이후부터 사용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다.
inspections.missing.recent.api.class.message=''{0}'' 은(는) {1} 이후부터 사용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다. 이 유형은 이전 IDE에서 다른 정규화된 이름을 가졌을 수도 있습니다.
inspections.missing.recent.api.method.message=''{0}'' 은(는) {1} 이후부터 사용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다. 이 메소드는 이전 IDE에서 다른 시그니처를 가졌을 수도 있습니다.
inspections.missing.recent.api.field.message=''{0}'' 은(는) {1} 이후부터 사용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다. 이 필드는 이전 IDE에서 다른 시그니처를 가졌을 수도 있습니다.
inspections.missing.recent.api.default.constructor.message=''{0}'' 기본 생성자는 {1} 이후부터 이용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다.
inspections.missing.recent.api.overriding=''{0}'' 내 메소드 재정의는 {1} 이후부터 이용 가능하나 모듈이 {2} 을(를) 대상으로 합니다. 이로 인해 {1} 이전의 IDE와 호환성 문제가 발생할 수 있습니다. 재정의된 메소드는 이전 IDE에서 다른 시그니처를 가졌을 수도 있습니다.
inspections.missing.recent.api.since.until.range.all.builds=모든 빌드
inspections.missing.recent.api.settings.range=플러그인 호환 범위
inspections.missing.recent.api.settings.since=이후
inspections.missing.recent.api.settings.since.empty.text=첫 IDE
inspections.missing.recent.api.settings.until=까지
inspections.missing.recent.api.settings.until.empty.text=모든 향후 IDE
inspections.missing.recent.api.settings.invalid.build.number=유효하지 않은 빌드 번호\: {0}

inspection.renamer.dialog.title=검사 설명 파일 이름 변경 및 짧은 이름 변경
inspection.renamer.option.name=검사 설명 파일 이름 변경 및 짧은 이름 변경
inspection.renamer.dialog.description=<html>검사 설명 파일 이름 및 짧은 이름을 변경하시겠습니까?<br/><b>경고\: 기존 검사 프로파일 및 억제 주석이 중단될 수 있습니다.</b></html>
inspection.renamer.entity.name=요소

intellij.api.annotations.update.title=IntelliJ API 어노테이션 {0} 업데이트
intellij.api.annotations.update.task.title=IntelliJ 어노테이션 {0} API 업데이트 중
intellij.api.annotations.update.confirmation.content=<html>{0} 의 API 사용을 검증하는 검사를 실행하려면 외부 어노테이션을 업데이트해야 하며, 이는 Maven 저장소에서 다운로드할 수 있습니다. <br><br>플러그인 개발 도중 추가 IDE 지원을 받기 위해 이 어노테이션을 업데이트하시겠습니까?</html>
intellij.api.annotations.update.confirmation.update.button=업데이트
intellij.api.annotations.update.confirmation.disable.inspection.button=검사 비활성화
intellij.api.annotations.update.successfully.updated={0} IntelliJ API 외부 어노테이션이 성공적으로 업데이트되었습니다.
intellij.api.annotations.update.successfully.updated.but.not.latest.version={0} IntelliJ API 외부 어노테이션이 버전 {1} (으)로 업데이트되었으며, Maven 저장소에서 다운로드 가능한 최신 버전입니다. {0} 어노테이션이 아직 공개되지 않았을 수 있습니다. 다음에 다시 업데이트하시길 바랍니다.
intellij.api.annotations.update.failed=IntelliJ API 외부 어노테이션을 업데이트하지 못했습니다\: {0}
intellij.api.annotations.update.failed.download={0} 어노테이션 다운로드 실패
intellij.api.annotations.update.failed.no.annotations.found=Maven 저장소에서 {0}에 대한 외부 어노테이션을 찾을 수 없습니다.

inspections.plugin.xml.i18n.name=i18n text/description 추출
inspections.plugin.xml.i18n.command.name=국제화용 텍스트/설명 추출
inspections.plugin.xml.i18n.inspection.tag.command.name=국제화용 {0} 추출
inspections.plugin.xml.i18n.inspection.tag.family.name=국제화용 {0} 추출
inspections.plugin.xml.i18n.choose.bundle.4inspections.title=번들 선택
inspections.plugin.xml.i18n.key=국제화용 텍스트 추출
inspections.plugin.xml.i18n.key.command.name=국제화용 텍스트 추출

inspections.leakable.map.key.name=맵 키의 누수 가능성이 있음
inspections.leakable.map.key.text=맵 키로 ''{0}'' 대신 ''String''을 사용해 보세요.
inspections.leakable.map.key.quick.fix.name=''{0}''(으)로 매개변수화

inspections.unresolved.plugin.config.reference=해결되지 않은 플러그인 구성 참조

inspections.use.gray.convert=Gray._{0} (으)로 변환
inspections.use.gray.convert.family.name=Gray로 변환

line.marker.related.property.tooltip=관련 프로퍼티
line.marker.related.property.popup.title=관련 프로퍼티
line.marker.related.property.description=관련 프로퍼티

action.DevKit.EditThemeEditorColorScheme.text=에디터 색상 구성표 편집
action.DevKit.RollbackTheme.text=테마 미리보기 중지
action.DevKit.ApplyTheme.text=테마 미리보기
action.DevKit.OpenThemeReferenceDocs.text=UI 테마 참조 문서 열기
action.AnalyzeEPUsageIgnoreSafeClasses.text=확장점 사용 위치 분석(안전 유형을 따르지 않음)
action.AnalyzeEPUsage.text=확장점 사용 위치 분석

action.AnalyzeUnloadablePlugins.text=로드할 수없는 플러그인 분석
action.AnalyzeUnloadablePlugins.progress.title=플러그인 분석 중 ({0})

action.DumpCleanTestData.text=데이터 강조 표시--마크업-프리 덤프
action.DumpCleanTestData.file.chooser.title=디렉토리 선택
action.DumpCleanTestData.file.chooser.source.description=테스트 데이터 강조 표시를 포함하는 디렉토리
action.DumpCleanTestData.file.chooser.destination.description=강조 표시 없는 복사본이 배치될 디렉토리
action.DumpCleanTestData.error.source.destination.must.differ=소스 루트와 대상 루트는 달라야 합니다

action.ShowHelpPageById.text=ID로 도움말 페이지 표시
action.ShowHelpPageById.dialog.enter.help.id=도움말 ID 입력\:
action.ShowHelpPageById.dialog.title=도움말 페이지 표시

action.GenerateDomModel.text=DOM 모델 생성...

action.ShowSerializedXml.text=클래스에 대해 직렬화된 XML 표시
action.ShowSerializedXml.message.cannot.find.class=클래스 ''{0}'' 을(를) 찾을 수 없음
action.ShowSerializedXml.message.cannot.generate.class=클래스 ''{0}'' 을(를) 생성할 수 없음\: {1}
action.ShowSerializedXml.dialog.title=''{0}'' 의 직렬화된 XML

action.ShuffleNamesAction.text=이름 셔플/스크램블/익명화/치환
action.ToggleHighlightingMarkup.text=기대 강조 표시 마크업 전환
group.Internal.DevKit.text=DevKit
action.GenerateExternalization.text=외부화 생성
action.DevKit.NewTheme.text=Look and Feel
action.NewModuleService.text=모듈 서비스
action.NewModuleService.description=새 모듈 서비스 만들기
action.NewProjectService.text=프로젝트 서비스
action.NewProjectService.description=새 프로젝트 서비스 생성
action.NewApplicationService.text=애플리케이션 서비스
action.NewApplicationService.description=새 애플리케이션 서비스 생성
action.NewAction.text=액션
action.NewAction.description=새 액션 생성
group.DevkitNewActions.text=플러그인 DevKit
action.Anonymous.text.choose.color=색상 선택...
inspection.serializable.constructor.message=비 기본 ctor가 @PropertyMapping 어노테이션이 지정되어야 합니다
inspection.message.wrong.quotes.around.parameter.reference=매개변수가 대체되지 않습니다, 문자열이 {0} 을(를) 포함합니다

cached.value.profiler.file.description=캐시된 값 프로파일링 스냅샷
cached.value.profiler.column.total.life.time=총 유효 기간
cached.value.profiler.column.total.use.count=총 사용 횟수
cached.value.profiler.column.created=생성됨
cached.value.profiler.column.total.use.count.created=총 사용 횟수 / 생성됨
cached.value.profiler.column.origin=원본

action.TestData.Navigate.text=테스트 데이터로 이동
testdata.popup.navigation.title=테스트 데이터
testdata.related.navigation.group=테스트 데이터
testdata.related.navigation.title=테스트 데이터

# UI Form converter
convert.form.dialog.title=양식을 UI URL로 변환
convert.form.dialog.label.target.class.name=대상 클래스 이름\:
convert.form.dialog.label.bound.instance.type=바인드된 인스턴스 유형\:
convert.form.dialog.label.bound.instance.expression=바인드된 인스턴스 표현식
convert.form.dialog.label.checkbox.generate.descriptors.for.search.everywhere=Search Everywhere 설명자 생성
convert.form.dialog.base.class.separator=기본 클래스
convert.form.dialog.base.class.none=없음
convert.form.dialog.base.class.configurable=구성 가능
convert.form.editor.notification.label=IntelliJ 프로젝트에서 UI 디자이너 사용은 이제 권장되지 않습니다
convert.form.editor.notification.link.convert=UI URL로 변환
convert.form.hint.caret.not.in.form.bound.class=양식에 바인드된 Java 클래스 내부에 캐럿을 배치하십시오
convert.form.hint.class.not.bound.to.form={0} 에 바인드된 양식을 찾을 수 없음

# UpdateFromSources
action.UpdateIdeFromSourcesAction.update.show.settings.text=소스 설정에서 IDE 업데이트...
action.UpdateIdeFromSourcesAction.update.text=소스에서 IDE 업데이트...
action.UpdateIdeFromSourcesAction.update.description=현재 열려 있는 소스로부터 IntelliJIDEA의 설치를 빌드하여 현재 설치를 교체합니다.
action.UpdateIdeFromSourcesAction.task.title=소스에서 업데이트 중
action.UpdateIdeFromSourcesAction.task.failed.title=소스에서 업데이트 실패
action.UpdateIdeFromSourcesAction.task.failed.content=스크립트 빌드가 오류 코드 {0} 와/과 함께 완료됨
action.UpdateIdeFromSourcesAction.task.success.title=소스에서 업데이트
action.UpdateIdeFromSourcesAction.task.success.content=소스에서 새 설치가 준비되었습니다. <a href\="\#">다시 시작하시겠습니까</a>?
action.UpdateIdeFromSourcesAction.notification.title=소스에서 업데이트
action.UpdateIdeFromSourcesAction.notification.content={0} 에서 새 설치가 준비되었습니다.
action.UpdateIdeFromSourcesAction.settings.title=소스에서 IDE 업데이트
action.UpdateIdeFromSourcesAction.settings.ok.button=업데이트
action.UpdateIdeFromSourcesAction.settings.do.not.show.description='소스 설정에서 IDE 업데이트' 액션을 호출하여 설정을 변경할 수 있습니다
action.UpdateIdeFromSourcesAction.settings.row.ide.installation=IDE 설치\:
action.UpdateIdeFromSourcesAction.settings.installation.choose.ide.directory.title=IDE 설치 디렉토리 선택
action.UpdateIdeFromSourcesAction.settings.enabled.plugins.only=활성화된 플러그인만 빌드
action.UpdateIdeFromSourcesAction.settings.restart.automatically=자동으로 다시 시작
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home={0} 은(는) 유효한 IDE 홈이 아닙니다\: {1}
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home.not.directory=디렉토리가 아닙니다
action.UpdateIdeFromSourcesAction.error.work.home.not.valid.ide.home.not.exists=''{0}'' 이(가) 없습니다
action.UpdateIdeFromSourcesAction.error.build.scripts.not.exists=''{0}'' 이(가) 없습니다
action.UpdateIdeFromSourcesAction.error.build.scripts.out.of.date=빌드 스크립트가 오래되었으므로 최신 'master' 소스로 업데이트하십시오.
action.UpdateIdeFromSourcesAction.error.ide.cannot.restart=이 IDE는 자신을 다시 시작할 수 없으므로 소스에서 업데이트가 지원되지 않습니다
action.UpdateIdeFromSourcesAction.progress.text.new.installation.prepared.ide.will.restart=새 설치가 준비되었스므로 IDE가 {0, choice, 1\#1초|2\#{0} 초} 안에 다시 시작됩니다
action.UpdateIdeFromSourcesAction.button.postpone=연기
action.UpdateIdeFromSourcesAction.backup.progress.text=파일 백업 중
action.UpdateIdeFromSourcesAction.copy.progress.text=IDE 배포로 파일 복사 중...
action.UpdateIdeFromSourcesAction.copy.delete.old.files.text=이전 파일 삭제 중
action.UpdateIdeFromSourcesAction.copy.copy.new.files.text=새 파일 복사 중
action.UpdateIdeFromSourcesAction.update.progress.text=소스에서 IDE 업데이트 중...
action.UpdateIdeFromSourcesAction.update.progress.delete={0} 삭제 중
action.UpdateIdeFromSourcesAction.update.progress.start.gant.script=Gant 스크립트 시작 중
action.UpdateIdeFromSourcesAction.notification.action.view.output=출력 보기
action.UpdateIdeFromSourcesAction.notification.action.view.debug.log=디버그 로그 보기
action.UpdateIdeFromSourcesAction.dialog.message.directory.not.writable=디렉토리 {0} 은(는) 쓰기가 불가능합니다

inspections.IncorrectParentDisposableInspection.do.not.use.as.disposable=플러그인 코드에서 폐기 가능한 항목으로 {0} 사용 안 함
inspections.IncorrectParentDisposableInspection.documentation.link.title=폐기 가능한 상위 항목 선택

extension.point.documentation.field.required.suffix=(필수)
extension.point.documentation.field.required.can.be.empty.suffix=(필수, 빈 값 허용)
extension.point.documentation.implementation.section=확장점 구현

gutter.related.option.description=설명
gutter.related.option.before.after.templates=템플릿 전/후
gutter.related.option.name=설명 / 템플릿 전|후
gutter.related.navigation.popup.template.title=템플릿 선택
gutter.related.navigation.popup.template.tooltip=템플릿 전/후
gutter.related.extension.declaration=선언
gutter.related.navigation.popup.description.tooltip=설명
gutter.related.navigation.choose.extension=확장 선택
gutter.related.navigation.choose.extension.point=확장점 선택

# plugin.xml resolving
plugin.xml.convert.action.or.group.cannot.resolve={0} ''{1}'' 을(를) 해결할 수 없음
plugin.xml.convert.action.or.group.invalid.name=<invalid name>
plugin.xml.convert.action.or.group.type.action.or.group=액션 또는 그룹
plugin.xml.convert.action.or.group.type.action=액션
plugin.xml.convert.action.or.group.type.group=그룹

plugin.xml.convert.enum.cannot.resolve={1} 의 ''{0}'' 을(를) 해결할 수 없음
plugin.xml.convert.extension.order.cannot.resolve=\ ''''''{''0''}'''''' {0}확장을 해결할 수 없음
plugin.xml.convert.extension.property.cannot.resolve=확장점 프로퍼티 ''{0}'' 을(를) 해결할 수 없음
plugin.xml.convert.property.bundle.cannot.resolve=프로퍼티 번들을 해결할 수 없음
plugin.xml.convert.keymap.cannot.resolve=키맵 ''{0}'' 을(를) 해결할 수 없음
plugin.xml.convert.language.id.cannot.resolve=ID가 ''{0}'''' 인 언어를 해결할 수 없음
plugin.xml.convert.language.id.any.language.display.name=<any language>

# code resolving
code.convert.experimental.feature.id.cannot.resolve=기능 ''{0}'' 을(를) 해결할 수 없음
code.convert.experimental.feature.no.description=설명 없음
code.convert.registry.key.cannot.resolve=등록 키 ''{0}'' 을(를) 해결할 수 없음
code.convert.registry.key.no.description=설명 없음
code.convert.registry.key.no.default.value=기본값 없음

code.convert.notification.group.cannot.resolve=알림 그룹 ID ''{0}''을(를) 해결할 수 없습니다

message.bundle.convert.toolwindow.id.cannot.resolve=도구 창 ID ''{0}'' 을(를) 해결할 수 없음

inspections.unregistered.named.color.fix.navigate.theme.metadata.file=테마 메타데이터 파일로 이동
inspections.unregistered.named.color.fix.navigate.theme.metadata.file.popup.title=테마 메타데이터 파일


plugin.xml.scopes.display.name=플러그인 설명자 파일
plugin.xml.scopes.production.display.name=모든 프로덕션 플러그인 설명자 파일

# registry.properties
registry.properties.annotator.plugin.keys.use.ep='com.intellij.registryKey' 확장점을 통해 플러그인 전용 키를 등록해야 합니다
registry.properties.annotator.key.no.description.key=Key ''{0}'' 에 설명 키가 없습니다
registry.properties.annotator.show.ep.family.name=확장점 선언 표시
registry.properties.annotator.show.ep.name=''{0}''의 확장점 선언 표시
registry.properties.annotator.show.ep.message=플러그인 설명자 XML로 이 선언 복사
registry.properties.annotator.show.ep.title=확장점 선언
registry.properties.annotator.add.description.text=''{0}'' 선언 키 추가
registry.properties.annotator.add.description.family.name=선언 키 추가
action.darcula.hidpi.theme.text=Darcula HiDPI
action.darcula.theme.text=Darcula
action.default.hidpi.theme.text=Default HiDPI
action.default.theme.text=기본값

# DOM model Generator
dom.generator.dialog.title=XSD 또는 DTD에서 DOM 모델 생성
dom.generator.generate.button=생성
dom.generator.dialog.label.form.title=DOM 생성기 구성
dom.generator.dialog.label.namespace=네임스페이스\:
dom.generator.dialog.label.super.class=상위 클래스\:
dom.generator.dialog.label.package=패키지\:
dom.generator.dialog.label.output.directory=출력 디렉토리\:
dom.generator.dialog.label.scheme.file=구성표 파일\:
dom.generator.dialog.label.skip.schemes=구성표 건너뛰기\:
dom.generator.dialog.label.javadoc.author=@author\:
dom.generator.dialog.label.use.fqn=FQN 사용\:
dom.generator.dialog.label.use.fqn.tooltip=생성된 코드에서 FQN을 사용하여 이름 충돌 방지
dom.generator.dialog.choose.scheme.label=XSD 또는 DTD 스키마 선택
dom.generator.dialog.folder.browser.description=XSD 또는 DTD 스키마가 배치되어 있는 디렉토리에 필수 구성표만 있는지 확인해주십시오
dom.generator.dialog.folder.output=생성된 파일의 출력 디렉토리 선택
dom.generator.dialog.error.schema.not.exist=스키마 위치가 없습니다
dom.generator.dialog.error.output.not.exist=출력 디렉토리가 없습니다
inspections.use.dpi.aware.empty.border.simplify=단순화
inspections.use.dpi.aware.empty.border.family.name=단순화
inspections.use.dpi.aware.empty.border.replace=JBUI.Borders.empty(...)로 교체
inspections.use.dpi.aware.empty.border.convert.fix.family.name=JBUI.Borders.empty(...)로 변환


plugin.descriptor.chooser.cannot.find=플러그인 서명자를 찾을 수 없음
plugin.descriptor.chooser.popup.title=플러그인 설명자 선택

register.extension.fix.name=레지스터 확장
register.extension.fix.popup.title=확장점 선택
register.inspection.fix.family.name=레지스터 검사
register.inspection.fix.name=레지스터 검사 ''{0}''

inspections.non.default.warning.and.suffix.message={0} 은(는) 매개변수 {1} 을(를) 가진 생성자를 취할 수 없습니다
inspections.non.default.warning.suffix.project.or.module=(해당 수준에서 요청된 경우 프로젝트 또는 모듈 제외)
inspections.non.default.warning.suffix.project=(프로젝트 제외)
inspections.non.default.warning.suffix.module=(모듈 제외)

extension.point.analyzer.not.extension.point.name=ExtensionPointName 참조가 아님
extension.point.analyzer.analyze.title=확장점 사용 위치 분석 중
extension.point.analyzer.analyze.status.bar.info=''{0}'' 분석 중 (총\: {1})
extension.point.analyzer.analyze.no.usages=사용 위치를 찾을 수 없음
extension.point.analyzer.analyze.usage.all.safe=모든 사용 위치는 dynamic으로부터 안전합니다
extension.point.analyzer.analyze.xml.not.extension.point=<extensionPoint> 아님
extension.point.analyzer.analyze.xml.cannot.resolve.ep.class=확장점의 클래스를 해결할 수 없습니다
extension.point.analyzer.analyze.xml.no.implementation.language.extension.point=LanguageExtensionPoint의 구현 클래스을 찾을 수 없음
extension.point.analyzer.analyze.xml.batch.not.extension.points=<extensionPoints> 아님
extension.point.analyzer.analyze.xml.batch.title=확장점 분석 중
extension.point.analyzer.analyze.xml.no.extension.point.name.field=ExtensionPointName 필드를 찾을 수 없음
extension.point.analyzer.reason.no.ep.field=확장점 필드가 없습니다
extension.point.analyzer.reason.element.of={0} 의 요소
extension.point.analyzer.reason.extension.instance=확장 인스턴스
extension.point.analyzer.reason.extension.list=확장 목록
extension.point.analyzer.reason.return.value={0}\: ''{1}'' 값 반환 (유형\: {2})
extension.point.analyzer.reason.unknown.usage=알 수 없는 ExtensionPoint 사용 위치
extension.point.analyzer.reason.call.not.loop.value=호출은 루프의 반복 값이 아닙니다
extension.point.analyzer.reason.impure.method=메소드가 불순한 메소드에 전달되어 부작용이 발생할 수 있습니다 (이를 방지하려면 '@Contract(pure\=true)' 어노테이션을 추가하십시오)
extension.point.analyzer.reason.unresolved.method.call=해결되지 않은 메소드 호출
extension.point.analyzer.reason.too.many.visited.objects=방문한 객체가 너무 많아 검색이 중지됨
extension.point.analyzer.reason.get.instance.method.skipped='getInstance' 메소드에서 반환됨 (호출 사이트를 검색하려면 비용이 너무 많이 듬)
extension.point.analyzer.reason.returned.from.method={0}\: 메소드 ''{1}'' 에서 반환됨
extension.point.analyzer.reason.leak.returned.from.method=메소드 ''{1}'' 에서 반환되어 이후 누출됨
extension.point.analyzer.reason.unknown.usage.text={0}\: 알 수 없는 사용 위치
extension.point.analyzer.reason.uast.no.source.psi={0}\: UVariable에 소스 PSI가 없습니다
extension.point.analyzer.usage.safe.eps=안전한 EP
extension.point.analyzer.usage.unsafe.eps=안전하지 않은 확장점 사용 위치

inspection.plugin.xml.validity.display.name=Plugin.xml 유효성
inspection.plugin.xml.capitalization.display.name=Plugin.xml 텍스트 대문자화
inspection.plugin.xml.dynamic.plugin.display.name=Plugin.xml 동적 플러그인 검증
inspection.inspection.description.not.found.inspection.display.name=검사 설명 검사기
inspection.inspection.using.gray.colors.display.name=새 색상(a,a,a) 사용 중
inspection.inspection.unique.toolbar.id.display.name=툴바 ID 지정
inspection.intention.description.not.found.inspection.display.name=인텐션 설명 검사기
inspection.inspection.mapping.consistency.display.name=<inspection> 태그 일관성
inspection.undesirable.class.usage.display.name=올바르지 않은 클래스 사용 위치
inspection.file.equals.usage.display.name=File.equals() 사용 위치
inspection.unsafe.vfs.recursion.display.name=안전하지 못한 VFS 반복
inspection.use.JB.color.display.name=Darcula 지원 JBColor 사용
inspection.use.DPI.aware.insets.display.name=DPI 지원 인셋 사용
inspection.use.DPI.aware.borders.display.name=DPI 대응 경계선 사용
inspection.use.couple.display.name=Pair 대신 Couple 사용
inspection.dont.use.pair.constructor.display.name=Pair 클래스의 생성자 사용 안 함
inspection.use.virtual.file.equals.display.name=VirtualFile.equals 사용
inspection.unsafe.return.statement.visitor.display.name=안전하지 않은 return 문 방문자
inspection.stateful.ep.display.name=스테이트풀 확장
inspection.u.element.as.psi.display.name=PsiElement로서의 UElement 사용
inspection.use.primitive.types.display.name=원시형으로 .equals 사용
inspection.highlight.visitor.internal.display.name=좋은 코드는 빨간색입니다
inspection.quick.fix.get.family.name.violation.display.name=QuickFix의 getFamilyName() 구현은 특정 콘텍스트에 의존해서는 안 됩니다
inspection.psi.element.concatenation.display.name=새 표현식 생성을 위한 PsiElement 문자열 표현 사용은 올바르지 않습니다
inspection.non.default.constructor.display.name=기본이 아닌 서비스 생성자 및 확장 클래스
inspection.presentation.annotation.display.name=@Presentation 내 유효하지 않은 아이콘 경로
inspection.unregistered.named.color.display.name=등록되지 않은 이름 지정된 색상
inspection.missing.recent.api.display.name=IntelliJ API 사용은 이전 IDE에서 사용할 수 없습니다
inspection.serializable.ctor.display.name=직렬화 가능한 클래스 내 기본이 아닌 생성자
inspection.incorrect.parent.disposable.display.name=잘못된 parentDisposable 매개변수
inspection.plugin.xml.i18n.display.name=Plugin.xml 국제화 검증
inspection.dev.kit.properties.quotes.validation.display.name=속성 파일 내 검증 인용

