options.indent.radio.block-specific.caption=Limitado a idiomas dentro de bloques
options.indent.radio.block-specific.tooltip=La sangría de los bloques <template>, <script> y <style> se establece de acuerdo con la configuración de estilo de código para el idioma utilizado. Por ejemplo, <style lang\=''scss''> usa la sangría establecida en SCSS.
options.indent.radio.uniform.caption=Mismo elemento en todo el archivo
options.indent.label.top-level.caption=Sangrar a los hijos de las etiquetas de nivel superior
vue.create.single.file.component.action.text=Componentes de Vue
vue.create.single.file.component.action.description=Cree un archivo de componente Vue.
vue.create.single.file.component.action.dialog.title=pájaro {0}
vue.create.single.file.component.action.name=Crear {0} {1}
vue.documentation.vue=Vue
vue.documentation.section.library=biblioteca\:
vue.documentation.section.argument=tomar el control\:
vue.documentation.section.required=Campos requeridos
vue.documentation.section.pattern=patrón
vue.documentation.section.default=Predeterminado\:
vue.documentation.type.functional.component=componente de función
vue.documentation.type.component=Componente
vue.documentation.type.directive=directiva
vue.documentation.type.filter=Filtrar
vue.documentation.type.component.method=método componente
vue.documentation.type.component.event=eventos componentes
vue.documentation.type.slot=ranura
vue.documentation.type.component.property=Propiedades de los componentes
vue.documentation.type.component.computed.property=Propiedades de cálculo de componentes
vue.documentation.type.component.data.property=Propiedades de datos de componentes
vue.documentation.type.directive.modifier=controlador directivo
vue.documentation.type.directive.argument=Argumentos directivos
vue.file.type.description=Plantilla Vue.js
vue.formatting.spacing.within.interpolations=interpolación
vue.formatting.spacing.within.group=Ámbito
vue.formatting.wrapping.interpolations=interpolación
vue.formatting.wrapping.new-line-after-start-delimiter=Nueva línea después de ''{{''
vue.formatting.wrapping.new-line-before-end-delimiter=Nueva línea antes de ''}}''
vue.inspection.group.name=Vue
vue.inspection.display.name.data.function=función de datos
vue.inspection.display.name.duplicate.tag=Etiquetas de plantilla/script duplicadas
vue.inspection.message.attribute.does.not.accept.value={0} no recibe ningún valor.
vue.inspection.message.data.property.should.be.function=Las propiedades de los datos deben ser funciones.
vue.inspection.message.duplicate.tag=Etiqueta de nivel superior duplicada {0}
vue.inspection.message.filter.function.with.no.args=Una función de filtro debe aceptar al menos un argumento.
vue.inspection.message.filter.invalid.number.of.arguments=Número no válido de argumentos de filtro. El número requerido es {0}.
vue.inspection.message.unresolved.filter=filtro sin resolver {0}
vue.live.template.context.component=Componentes de Vue
vue.live.template.context.script.tag=Contenido de la etiqueta del script Vue
vue.live.template.context.template=Plantillas Vue
vue.live.template.context.template.tag.element=Elemento de etiqueta de plantilla de Vue
vue.live.template.context.top.level=Elemento de nivel superior de Vue
vue.param.hints.show.names.for.filters=Para argumentos de filtro
vue.parser.message.expected.comma.or.end.of.expression=Se requiere una coma o una terminación de expresión.
vue.parser.message.expected.end.of.expression=Es necesario terminar la expresión.
vue.parser.message.expected.identifier.or.string=Se requiere un identificador o cadena.
vue.parser.message.expected.in.or.of=Se requiere ''en'' o ''de''.
vue.parser.message.expected.lparen.pipe.or.end.of.expression=(, | o se requiere la terminación de la expresión.
vue.parser.message.expected.pipe.or.end.of.expression=| Alternativamente, se requiere la terminación de la expresión.
vue.parser.message.statements.not.allowed=La sintaxis no está permitida en expresiones Vue.
vue.parser.message.unterminated.interpolation=Interpolación sin terminar
vue.project.generator.name=Vue.js
vue.project.generator.description=Utilice <a href\=''https\://cli.vuejs.org''>Vue CLI</a> para crear un nuevo <a href\=''https\://vuejs.org''>Vue .Crea un proyecto js</a>.
vue.project.generator.presentable.package.name=Vue CLI(&C)
vue.project.generator.use.default.project.setup=Usar la configuración pre&determinada del proyecto(babel, eslint)
vue.quickfix.wrap.with.function.text=Envolver objetos de datos dentro de funciones
vue.quickfix.wrap.with.function.family=Objeto de embalaje
vue.search.scope.template.name=Plantilla
vue.template.intention.extract.component=Extraer componentes de Vue
vue.template.intention.extract.component.family.name=Extraer componentes de Vue
vue.template.intention.extract.component.description=Extrae partes seleccionadas de una plantilla Vue.js en un nuevo componente de un solo archivo y pasa los datos y métodos utilizados a ese componente junto con sus propiedades.
vue.template.intention.extract.component.error.component.name=Nombre de componente no válido\: {0}
vue.template.intention.extract.component.error.component.exists=El componente {0} ya existe.
vue.template.intention.extract.component.error.file.exists=El archivo {0} ya existe
vue.template.intention.extract.component.continue=Continua editando
nuxt.support.notification.title=Soporte para Nuxt.js
nuxt.support.notification.contents=Agregue @nuxt/types a las dependencias de su proyecto para obtener mejores sugerencias de finalización de código.
vuex.inspection.message.unresolved.action=No se pudo resolver la acción de Vuex {0}.
vuex.inspection.message.unresolved.getter=No se pudo resolver el captador de Vuex {0}
vuex.inspection.message.unresolved.mutation=No se pudo resolver la variante de Vuex {0}.
vuex.inspection.message.unresolved.namespace=Espacio de nombres de módulo Vuex desconocido {0}
vuex.inspection.message.unresolved.state=No se pudo resolver el estado de Vuex {0}.
vuex.inspection.message.unresolved.symbol=No se pudo resolver el símbolo de Vuex {0}.
