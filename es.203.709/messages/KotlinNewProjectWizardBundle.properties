buildsystem.type.gradle.groovy=Gradle Groovy
buildsystem.type.gradle.kotlin=Gradle Kotlin
buildsystem.type.intellij=IntelliJ
buildsystem.type.intellij.full=IntelliJ 빌드 시스템
buildsystem.type.maven=Maven

error.template.not.found=ID가 {0}인 템플릿을 찾을 수 없습니다
error.required.settings.are.not.present=다음 필수 설정이 구성되어 있지 않습니다
error.configurator.not.found=모듈 유형 {0}을(를) 찾을 수 없습니다
error.invalid.module.dependency=모듈 {0}에서 {1}(으)로의 모듈 종속성이 잘못되었습니다

module.configuration.group.android.native=Android 네이티브
module.configuration.group.ios=iOS
module.configuration.group.linux=Linux
module.configuration.group.macos=macOS
module.configuration.group.windows.mingw=Windows(MinGW)

module.type=모듈 유형

module.kind.android.module=Android 모듈
module.kind.ios.module=iOS 모듈
module.kind.js.browser.module=JS 브라우저 모듈
module.kind.js.node.module=JS 노드 모듈
module.kind.module=모듈
module.kind.mpp.module=MPP 모듈
module.kind.target=대상

plugin.buildsystem.setting.type=시스템 빌드
plugin.buildsystem.setting.type.error.wrong.project.kind={1}을(를) 사용해 {0} 프로젝트를 생성할 수 없습니다

plugin.kotlin.downloading.kotlin.versions=Kotlin 버전 목록 다운로드 중
plugin.kotlin.setting.modules=모듈
plugin.kotlin.setting.modules.error.duplicated.modules=이름이 {1}인 모듈이 {0}개 있습니다
plugin.kotlin.setting.modules.error.duplicated.targets=이름이 {1}인 대상이 {0}개 있습니다

plugin.kotlin.setting.project.kind=프로젝트 종류

project.kind.android=Android
project.kind.kotlin.js=Kotlin/JS
project.kind.multiplatform=멀티플랫폼
project.kind.singleplatform=JVM
project.kind.compose=데스크탑용 JetBrains Compose(실험적)
project.kind.compose.short.name=데스크탑용 JetBrains Compose

project=Proyecto

plugin.structure.setting.location=위치
plugin.structure.setting.location.error.is.not.empty=디렉터리가 비어 있지 않습니다
plugin.structure.setting.name=이름
plugin.structure.setting.group.id=그룹 ID
plugin.structure.setting.artifact.id=아티팩트 ID
plugin.structure.setting.version=버전

plugin.templates.setting.template=Plantilla de proyecto

plugin.android.setting.sdk=Android SDK


validation.should.not.be.blank={0} 지정
validation.identifier={0} 은(는) 문자, 숫자{1} 로만 구성되어야 합니다
validation.identifier.additional.symbols=, 그리고 심볼\: {0}
validation.file.should.exists={0}에 대한 파일이 있어야 합니다

version.error.bad.format=설정 {0}의 버전 형식이 올바르지 않습니다
parse.error.no.value.for.key=키 {0}의 값을 찾을 수 없습니다

module.type.jvm=Kotlin/JVM
module.type.js=Kotlin/JS
module.type.common=공통
module.type.android=Android
module.type.native=Kotlin/Native

module.type.ios=iOS

module.name=모듈 이름
module.name.with.name=모듈 이름 {0}

module.configurator.simple.js.browser=브라우저용 JS
module.configurator.simple.js.node=Node.js용 JS

module.configurator.android=Android
module.configurator.android.setting.android.plugin=Android 플러그인
module.configurator.android.setting.android.plugin.description=현재 모듈에 사용될 Android Gradle 플러그인
module.configurator.android.setting.android.plugin.application=Android 애플리케이션
module.configurator.android.setting.android.plugin.library=Android

module.configurator.common=공통

module.configurator.jvm=JVM
module.configurator.jvm.setting.target.jvm.version=대상 JVM 버전
module.configurator.jvm.setting.target.jvm.version.description= 이 모듈을 컴파일한 결과로 생성될 JVM 바이트코드의 버전
module.configurator.jvm.setting.java.support=Java 언어 지원
module.configurator.jvm.setting.java.support.description=선택한 대상에서 Java 코드를 작성할 수 있습니다. 

module.configurator.mpp=멀티플랫폼
module.configurator.ios=IOS
module.configurator.ios.requires.xcode=Xcode 필요

module.configurator.js.browser=브라우저
module.configurator.js.node=Node.js

module.configurator.js.css=CSS 지원
module.configurator.js.css.description=webpack의 CSS 및 스타일 로더를 지원합니다
module.configurator.js.target.settings.kind=대상 종류
module.configurator.js.target.settings.compiler=Kotlin/JS 컴파일러
module.configurator.js.target.settings.kind.library=라이브러리
module.configurator.js.target.settings.kind.application=애플리케이션

module.configurator.tests.setting.framework=테스트 프레임워크
module.configurator.tests.setting.framework.junit4=JUnit 4
module.configurator.tests.setting.framework.junit5=JUnit 5
module.configurator.tests.setting.framework.test.ng=TestNG
module.configurator.tests.setting.framework.js=JavaScript
module.configurator.tests.setting.framework.common=공통
module.configurator.tests.setting.framework.none=없음
module.configurator.native.for.current.system=내 시스템

project.template.empty.singleplatform.title=애플리케이션
project.template.empty.singleplatform.description=Kotlin/JVM을 사용하는 백엔드 애플리케이션입니다.

project.template.empty.mpp.title=애플리케이션
project.template.empty.mpp.description=공통 코드 공유를 지원하는 서로 다른 플랫폼용 애플리케이션입니다.

project.template.empty.jvm.console.title=콘솔 애플리케이션
project.template.empty.jvm.console.description=Kotlin/JVM을 사용하는 콘솔 애플리케이션입니다. 프로토타입 생성이나 테스트용으로 사용하세요.

project.template.mpp.lib.title=라이브러리
project.template.mpp.lib.description=서로 다른 플랫폼 간 공통 코드를 공유하기 위한 라이브러리입니다.

project.template.full.stack.title=풀스택 웹 애플리케이션
project.template.full.stack.description=프런트엔트에서 Kotlin/JS를, 백엔드에서 Kotlin/JVM을 사용하는 완벽한 기능의 웹 애플리케이션입니다.

project.template.native.console.title=네이티브 애플리케이션
project.template.native.console.description=특정 플랫폼에서 독립실행형 애플리케이션으로 작동하며 Kotlin/Native을 사용하는 애플리케이션입니다.

project.template.browser.title=브라우저 애플리케이션
project.template.browser.description=브라우저를 대상으로 하는 빈 애플리케이션

project.template.react.title=React 애플리케이션
project.template.react.description=브라우저를 대상으로 하는 React 애플리케이션

project.template.nodejs.title=Node.js 애플리케이션
project.template.nodejs.description=Node.js를 대상으로 하는 빈 애플리케이션

project.template.mpp.mobile.title=모바일 애플리케이션
project.template.mpp.mobile.description=플랫폼 간 공통 코드 공유를 지원하는 Kotlin Multiplatform Mobile을 사용하는 iOS 및 Android용 모바일 애플리케이션입니다.

project.template.mpp.mobile.lib.title=모바일 라이브러리
project.template.mpp.mobile.lib.description=iOS 및 Android 간 코드 공유를 지원하는 라이브러리입니다.


project.template.compose.desktop.title=데스크톱
project.template.compose.desktop.description=데스크톱 JVM 플랫폼(Windows, Linux, macOS)을 대상으로 하는 Compose 애플리케이션

project.template.compose.multiplatform.title=멀티플랫폼
project.template.compose.multiplatform.description=공통 모듈의 공유 코드가 있는 멀티플랫폼(JVM/Windows, JVM/Linux, JVM/MacOS, Android) Compose 프로젝트



module.template.console.jvm.title=콘솔 애플리케이션
module.template.console.jvm.description=콘솔에서 작동하는 단순한 "Hello World\!" Kotlin/JVM 애플리케이션입니다

module.template.mpp.mobile.title=모바일 애플리케이션
module.template.mpp.mobile.description=플랫폼 간 공통 코드 공유를 지원하는 Kotlin Multiplatform Mobile을 사용하는 iOS 및 Android용 모바일 애플리케이션입니다.


module.template.compose.desktop.title=Compose 데스크톱 애플리케이션
module.template.compose.desktop.description=데스크톱 JVM 플랫폼을 대상으로 하는 Compose 애플리케이션

module.template.compose.mpp.title=Compose MPP 모듈
module.template.compose.mpp.description=Compose MPP 모듈

module.template.ktor.server.title=Ktor 서버
module.template.ktor.server.description=웹 애플리케이션 빌드용이며 구성 가능한 Ktor 웹 서버입니다
module.template.ktor.server.setting.engine=Ktor 서버 엔진
module.template.ktor.server.setting.engine.netty=Netty
module.template.ktor.server.setting.engine.tomcat=Tomcat
module.template.ktor.server.setting.engine.jetty=Jetty

module.template.native.console.title=네이티브 애플리케이션
module.template.native.console.description=사용 중인 운영 체제용인 단순한 Kotlin/Native 애플리케이션입니다

module.template.js.simple.title=브라우저 애플리케이션
module.template.js.simple.description=브라우저를 대상으로 하는 빈 애플리케이션
module.template.js.simple.run.configuration.dev=연속 모드의 BrowserDevelopmentRun
module.template.js.simple.run.configuration.prod=연속 모드의 BrowserProductionRun
module.template.simple.use.kotlinx.html=kotlinx.html 사용
module.template.simple.use.kotlinx.html.description=HTML 요소 생성 및 DOM 트리 빌드를 위한 유형 안전 Kotlin DSL

module.template.js.react.title=React 애플리케이션
module.template.js.react.description=브라우저를 대상으로 하는 React 애플리케이션
module.template.react.use.styled.components=styled-components 사용
module.template.react.use.styled.components.description=CSS 스타일시트를 작성하고 삽입하기 위한 유형이 안전한 방법을 추가합니다
module.template.react.use.react.router.dom=react-router-dom 사용
module.template.react.use.react.router.dom.description=URL과 UI를 동기화된 상태로 유지하기 위해 탐색 구성 요소를 추가합니다
module.template.react.use.react.redux=react-redux 사용
module.template.react.use.react.redux.description=Redux 기반 상태 컨테이너를 추가합니다

module.template.simple.nodejs.title=Node.js 애플리케이션
module.template.simple.nodejs.description=Node.js를 대상으로 하는 빈 애플리케이션
module.template.simple.nodejs.use.kotlinx.nodejs=실험적 Node.js API 사용(kotlinx-nodejs)
module.template.simple.nodejs.use.kotlinx.nodejs.description=Node.js 관련 기능에 액세스할 수 있습니다

