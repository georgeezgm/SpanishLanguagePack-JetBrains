spring.boot.application.endpoints.tab.title=Puntos finales
spring.boot.application.endpoints.beans.tab.title=Bean
spring.boot.application.endpoints.health.tab.title=상태
spring.boot.application.endpoints.health.tab.configurable.name=상태
spring.boot.application.endpoints.refresh.action.name=새로 고침
spring.boot.application.endpoints.refresh.action.description=애플리케이션 엔드포인트 데이터 새로고침
spring.boot.application.endpoints.navigate.to.bean.class.action.name=Bean 클래스로 이동
spring.boot.application.endpoints.navigate.to.bean.class.action.description=선택한 bean 클래스로 이동
spring.boot.application.endpoints.show.context.action.name=컨텍스트 표시
spring.boot.application.endpoints.diagram.mode.action.name=다이어그램 모드
spring.boot.application.endpoints.configure.health.tab.action.name=상태 탭 설정 구성
spring.boot.application.endpoints.health.tab.refresh.action.name=새로고침 ({0} 초 지연으로 자동 새로고침)
spring.boot.application.endpoints.beans.diagram.provider=Spring 런타임 Bean
spring.boot.application.endpoints.root.context=루트 컨텍스트
spring.boot.application.endpoints.parent.context=상위 컨텍스트\: {0}
spring.boot.application.endpoints.health.status=상태\: {0}
spring.boot.application.endpoints.health.indicators.disabled=모든 상태 표시기가 비활성화되어 있습니다. 전반적인 상태만 사용할 수 있습니다.
spring.boot.application.endpoints.application.ready.check.failed=<html>애플리케이션 준비 상태 확인에 실패했습니다\: {0}<br>새로고침 버튼을 눌러 준비 상태 확인을 다시 시작하세요</html>
spring.boot.application.endpoints.application.ready.check.timeout.exceeded=시간 제한 초과
spring.boot.application.endpoints.error.jmx.agent.not.loaded=JMX 에이전트가 로드되지 않았습니다
spring.boot.application.endpoints.error.failed.to.retrieve.jmx.service.url=애플리케이션 JMX 서비스 URL 검색 실패
spring.boot.application.endpoints.error.failed.to.retrieve.application.port=애플리케이션 포트 검색 실패\:<br>{0}
spring.boot.application.endpoints.error.failed.to.retrieve.application.beans.snapshot=<html>애플리케이션 bean 스냅샷 검색 실패\:<br> {0}</html>
spring.boot.application.endpoints.error.failed.to.retrieve.endpoint.data=''{0}'' 엔드포인트 데이터 검색 실패
spring.boot.application.endpoints.error.property.is.set.to.false=''{0}'' 프로퍼티가 false로 설정되었습니다
spring.boot.application.endpoints.error.not.exposed=''{0}'' 프로퍼티를 통해 노출되지 않는 엔드포인트
spring.boot.application.endpoints.error.excluded=''{0}'' 프로퍼티를 통해 제외된 엔드포인트
spring.boot.application.endpoints.error.bean.not.initialized=''{0}'' bean이 초기화되지 않았습니다
spring.boot.application.endpoints.config.file.not.found=구성 파일을 찾을 수 없습니다
spring.boot.application.endpoints.bean.definition.not.found=Bean 정의를 찾을 수 없습니다
spring.boot.application.endpoints.bean.class.not.found=Bean 클래스를 찾을 수 없습니다
spring.boot.application.endpoints.bean.not.injected=Bean이 어디에도 삽입되지 않습니다
spring.boot.application.endpoints.bean.injected.into=다음으로 삽입
spring.boot.application.endpoints.bean.depends.on=기준
spring.boot.application.endpoints.bean.item.group.dependent=종속 런타임 Bean
spring.boot.application.endpoints.bean.item.group.injected=삽입된 런타임 Bean
spring.boot.application.endpoints.bean.popup.title=런타임 Bean
spring.boot.application.endpoints.bean.auto.configuration=자동 구성
spring.boot.application.endpoints.health.check=상태 새로고침
spring.boot.application.endpoints.health.check.unit=초
spring.boot.application.endpoints.health.check.tooltip=자동으로 상태 트리 새로고침
spring.boot.application.url.path.dialog.title=디폴트 경로 구성
spring.boot.application.url.path.label=디폴트 경로\:
spring.boot.choose.class.dialog.title=Spring 부트 클래스 선택
action.SpringBootApplicationUrlPathEditAction.text=디폴트 경로 편집
spring.boot.application.run.configuration.main.class=메인 클래스
spring.boot.application.run.configuration.debug.output=디버그 출력 활성화(&D)
spring.boot.application.run.configuration.debug.output.tooltip=<html>VM 옵션을 추가하여 디버그 출력 활성화 <code>Ddebug</code></html>
spring.boot.application.run.configuration.hide.banner=배너 숨기기(&H)
spring.boot.application.run.configuration.hide.banner.tooltip=<html>VM 옵션을 추가하여 배너 숨김 <code>-Dspring.main.banner-mode\=OFF</code><br>(<code>-Dspring.main.show-banner\=false</code> for Spring 부트 1.4.x 또는 이전 버전)</html>
spring.boot.application.run.configuration.launch.optimization=실행 최적화 활성화(&Z)
spring.boot.application.run.configuration.launch.optimization.tooltip=<html>VM 옵션 추가 <code>XX\:TieredStopAtLevel\=1</code> 및 <code>-noverify</code> 시작 속도 높임.<br>이러한 옵션이 특정 프로젝트에 부정적인 영향을 미치지 않는지 확인해 주세요.</html>
spring.boot.application.run.configuration.jmx.agent=JMX 에이전트 활성화(&X)
spring.boot.application.run.configuration.jmx.agent.tooltip=<html>VM 옵션을 추가하여 애플리케이션 엔드포인트 데이터를 표시하기 위해 JMX 에이전트 활성화 <code><br>-Dcom.sun.management.jmxremote <br>-Dspring.jmx.enabled\=true <br>-Dspring.liveBeansView.mbeanDomain <br>-Dspring.application.admin.enabled\=true</code><p>이 옵션의 활성화는 시작 속도를 늦출 수 있습니다.<p>Spring 부트 1.3.0 또는 상위 버전 필요.</html>
spring.boot.application.run.configuration.on.update.action=''Update'' 작업 시(&U)
spring.boot.application.run.configuration.on.frame.deactivation=프레임 비활성화 시(&F)
spring.boot.application.run.configuration.do.nothing=아무 것도 안 함
spring.boot.application.run.configuration.active.profiles=활성화된 프로파일
spring.boot.application.run.configuration.active.profiles.tooltip=Lista de perfiles separados por comas
spring.boot.application.run.configuration.override.parameters=매개변수 재정의(&P)\:
spring.boot.application.run.configuration.class.not.specified=Spring 부트 애플리케이션 클래스가 지정되지 않았습니다
spring.boot.application.run.configuration.invalid.class=유효한 Spring 부트 애플리케이션 클래스가 아닙니다
spring.boot.application.run.configuration.invalid.parameter={0} 행의 재정의 매개변수 이름이 잘못되었습니다
spring.boot.application.run.configuration.policy.not.available.on.update.action=''Update'' 작업 시 ''{0}'' 을(를) 사용할 수 없습니다
spring.boot.application.run.configuration.policy.not.available.on.frame.deactivation=프레임 비활성화 시 ''{0}'' 을(를) 사용할 수 없습니다
spring.boot.application.run.configuration.environment.section=환경(&M)
spring.boot.application.run.configuration.framework.section=Spring Boot(&G)
spring.boot.jmx.setup.cant.parse.jmx.port=JMX 원격 포트 {0}을(를) 분석할 수 없습니다
spring.boot.jmx.setup.for.remote.case.two.ports.should.match=원격 대상 JMX 레지스트리 포트 {0} 및 JMX RMI 서버 포트는 {1}을(를) 동일한 값으로 설정해야 합니다
spring.boot.update.policy.classes.resources.name=클래스 및 리소스 업데이트
spring.boot.update.policy.classes.resources.description=<nobr>수정된 파일과 종속 파일을 모두 컴파일합니다.</nobr>
spring.boot.update.policy.classes.trigger.name=클래스를 핫스왑하고 실패할 경우 트리거 파일을 업데이트합니다
spring.boot.update.policy.classes.trigger.description=<i>디버그 모드인 경우\:</i><br>모든 수정된 파일 및 종속 파일을 컴파일하고 클래스를 핫스왑하며 <br>핫스왑이 실패할 경우 트리거 파일을 업데이트합니다. <br><i>그 외의 경우\:</i><br>모든 수정된 파일 및 종속 파일을 컴파일하고 트리거 파일을 업데이트합니다. <br>VM 옵션을 추가하여 트리거 파일 이름을 다음으로 지정합니다. <code>-Dspring.devtools.restart.trigger-file\=.restartTriggerFile</code>
spring.boot.update.policy.resources.name=리소스 업데이트
spring.boot.update.policy.resources.description=<nobr>수정되거나 종속된 리소스 파일을 모두 컴파일합니다.</nobr>
spring.boot.update.policy.trigger.name=Activar la actualización del archivo
spring.boot.update.policy.trigger.description=트리거 파일을 업데이트합니다. <br>VM 옵션을 추가하여 트리거 파일 이름을 다음으로 지정합니다. <code> Dspring.devtools.restart.trigger-file\=.restartTriggerFile</code>
spring.boot.run.config.type.name=Spring Boot
spring.boot.run.config.type.description=Spring Boot 애플리케이션
spring.boot.run.config.update.application=''{0}'' 애플리케이션 업데이트
spring.boot.run.config.settings.background.compilation.enabled=백그라운드 컴파일 활성화됨
spring.boot.run.config.settings.running.application.update.policies=애플리케이션 업데이트 정책 실행 중
spring.boot.run.config.settings.on.update.action='업데이트' 액션 시
spring.boot.run.config.settings.on.frame.deactivation=프레임 비활성화 시
spring.boot.run.config.fragment.framework.group=Spring Boot
spring.boot.run.config.fragment.launch.optimization=실행 최적화 비활성화(&Z)
spring.boot.run.config.fragment.jmx.agent=JMX 에이전트 비활성화(&X)
spring.boot.run.config.fragment.override.properties=구성 프로퍼티 재정의(&P)
