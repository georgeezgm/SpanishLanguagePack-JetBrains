### scala/meta/intellij/MetaExpansionsManager.scala
meta.annotation.class.could.not.be.found=메타 어노테이션 클래스를 찾을 수 없습니다
tree.conversion.error=트리 변환 오류\: {0}
semantic.error=의미 오류\: {0}
stack.overflow.during.expansion=확장 {0} 중 스택 오버플로 발생
internal.error.getmessage=내부 오류\: {0}

### scala/meta/intellij/QuasiquoteInferUtil.scala
failed.to.get.qq.ref.in.pattern={0}에서 QQ 참조를 가져오지 못했습니다
unknown.quasiquote.kind.prefix=알 수 없는 Quasiquote 타입 - {0}

### scala/meta/intellij/psi/package.scala
meta.expansions.disabled.in.settings=설정에서 메타 확장이 비활성화되었습니다
no.meta.annotation=메타 어노테이션이 없습니다
recursive.meta.expansion=재귀적 메타 확장

### scala/meta/trees/Namer.scala
synthetic.elements.not.implemented=통합 요소가 구현되지 않았습니다
package.and.object.types.should.be.singleton.not.name...=패키지 및 객체 유형은 이름이 아닌 싱글턴이어야 합니다. {0}
failed.to.convert.type.tp=타입 {0}을(를) 변환하지 못했습니다
super.selector.cannot.be.non.name.type=상위 선택자는 이름이 아닌 타입일 수 없습니다

### scala/meta/trees/ScalaMetaException.scala
cannot.resolve.class.at.element={1}의 {0}을(를) 해결할 수 없습니다
cannot.calculate.type=타입을 계산할 수 없습니다. {0}
this.code.should.be.unreachable.reason=이 코드에 도달할 수 없을 것입니다. {0}
this.code.should.be.unreachable=이 코드에 도달할 수 없을 것입니다
failed.to.typecheck=타입을 검사하지 못했습니다. {0}
this.code.path.is.not.implemented.yet.head=이 코드 경로는 아직 구현되지 않았습니다[{0}]

### scala/meta/trees/TreeAdapter.scala
macro.definition.must.have.return.type.defined=매크로 정의에는 반환 타입이 정의되어 있어야 합니다
no.primary.constructor.in.class=클래스에 기본 생성자가 없습니다
no.constructor.found.in.class=클래스 {0}에서 생성자를 찾을 수 없습니다
class.has.no.parents=클래스 {0}은(는) 상위 항목이 없습니다
empty.while.condition=빈 while 조건
generator.has.no.expression=제너레이터에 표현식이 없습니다
guard.has.no.condition=가드에 조건이 없습니다
forbinding.has.no.expression=for 바인딩에 표현식이 없습니다
imported.name.is.null=가져온 이름이 비 와일드카드 선택자에서 null입니다
reference.is.null=참조가 비 와일드카드 선택자에서 null입니다
empty.throw.expression=빈 throw 표현식

### scala/meta/trees/TypeAdapter.scala
number.of.parts.in.compound.type.must.be.greater.than.2=복합 타입의 부분 개수는 2개 이하여야 합니다
cannot.convert.into.type.variables=타입 변수로 변환할 수 없습니다

### scala/meta/trees/Utils.scala
unexpected.psi=예기치 않은 psi({0})\: {1}

### <unused>
unexpected.type.in.parents.other=상위 항목 내 예기치 않은 타입\: {0}
unexpected.type.in.constructor.type.element=생성자 타입 요소 {0} 내 예기치 않은 타입
