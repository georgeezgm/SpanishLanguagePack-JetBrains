0.is.not.an.identifier=''{0}'' 은(는) 식별자가 아닙니다.
annotation.name.is.missing=어노테이션 프로퍼티는 'name\=value' 양식이어야 합니다.
anonymous.class.context.display={0}에서 익명
anonymous.class.derived.display={0}에서 파생된 익명 클래스
aux.context.display=({0} 내부)
bound.not.expected=예기치 않은 바운드
catch.without.try='try'가 없는 'catch'
class.context.display={1}의 {0}
class.literal.expected=.class가 필요합니다
context.type.java.comment=주석
context.type.string=문자열

default.language.level.description=Valores predeterminados del SDK

# These constants are used from JavaElementKind
# When localizing you may use the parameter #0 which signals the desired grammatical case:
# 0=nominative case (subject)
# 1=accusative case (object)
element.abstract_method=추상 메소드
element.annotation=어노테이션
element.class=클래스
element.constant=상수 필드
element.constructor=생성자
element.enum=열거형
element.enum_constant=열거형 상수
element.expression=표현식
element.field=필드
element.initializer=초기자
element.interface=인터페이스
element.local_variable=지역 변수
element.method=메소드
element.module=모듈
element.package=패키지
element.parameter=매개 변수
element.pattern_variable=패턴 변수
element.record=기록
element.record_component=기록 구성 요소
element.statement=구문
element.unknown=요소
element.variable=변수

else.without.if='if'가 없는 'else'
enum.constant.context=''{1}''의 열거형 상수 ''{0}''
expected.array.initializer=배열 이니셜라이저 기대
expected.boolean.expression=bool 표현식 기대
expected.catch.or.finally='catch' 또는 'finally' 기대
expected.class.or.interface='class' 또는 'interface'가 필요합니다
expected.class.reference=클래스 참조가 필요합니다
expected.colon='\:' 예상
expected.comma=',' 예상
expected.comma.or.rparen=',' 또는 ')' 기대
expected.comma.or.semicolon=',' 또는 ';'가 필요합니다.
expected.dot='.' 예상
expected.eq='\=' 예상
expected.expression=표현식 기대
expected.gt='>' 예상.
expected.gt.or.comma=''>'' 또는 '''','' 기대
expected.identifier=식별자 기대
expected.identifier.or.type=식별자 또는 유형 기대
expected.lbrace='{' 예상
expected.lbrace.or.semicolon='{' 또는 ';'가 필요합니다.
expected.lbracket='[' 예상
expected.lparen='(' 예상
expected.lparen.or.lbracket='(' 또는 ']' 기대
expected.lt.or.lparen='<' 또는 '('가 필요합니다.
expected.module.declaration=모듈 선언이 필요합니다
expected.module.statement=모듈 지시문이 필요합니다
expected.package.reference=패키지 참조가 필요합니다
expected.parameter=매개변수 기대
expected.rbrace='}' 예상
expected.rbracket=']' 예상
expected.resource=리소스 정의가 필요합니다
expected.rparen=')' 예상
expected.semicolon=';' 예상
expected.statement=명령문 기대
expected.string=문자열 리터럴이 필요합니다
expected.switch.label='case', 'default' 또는 '}' 기대
expected.switch.rule=표현식, 블록 또는 throw 문 기대
expected.type=유형이 필요합니다
expected.type.parameter=유형 매개변수가 필요합니다
expected.value=값이 필요합니다
expected.while='while' 기대
expected.with='with'가 필요합니다
filetype.description.class=Java 클래스
filetype.description.java=Java
filetype.description.jshell=JShell 스니펫
finally.without.try='try'가 없는 'finally'
import.statement.identifier.or.asterisk.expected.=식별자 또는 '*'가 필요합니다

java.terms.anonymous.class=익명 클래스
java.terms.anonymous.class.base.ref=익명 {0}
java.terms.class=클래스
java.terms.field=필드
java.terms.interface=인터페이스
java.terms.method=메소드
java.terms.package=패키지
java.terms.parameter=매개 변수
java.terms.variable=변수
javadoc.exception.tag.class.is.not.throwable={0} 클래스는 Throwable의 하위 항목이 아닙니다.
javadoc.exception.tag.exception.is.not.thrown={0} 은(는) {1} 메소드로 던져지도록 선언되지 않았습니다.
javadoc.exception.tag.wrong.tag.value=잘못된 태그 값
javadoc.param.tag.parameter.name.expected=매개변수 이름이 필요합니다
javadoc.param.tag.type.parameter.gt.expected='>' 예상
javadoc.param.tag.type.parameter.name.expected=유형 매개변수 이름이 필요합니다
javadoc.ref.tag.class.ref.expected=클래스 참조가 필요합니다
javadoc.value.field.required=@value 태그는 필드를 참조해야 합니다.
javadoc.value.field.with.initializer.required=@value 태그는 상수 이니셜라이저가 포함된 필드를 참조해야 합니다.
javadoc.value.static.field.required=@value 태그는 정적 필드를 참조해야 합니다.
javadoc.value.tag.jdk15.required=JDK 1.4 또는 이전 버전 사용 시 @value 태그에 인수가 포함되지 않을 수 있습니다.
jdk.1.3.language.level.description=1.3 - 일반 구형 Java
jdk.1.4.language.level.description=1.4 - 'assert' 키워드
jdk.1.5.language.level.description=5 - 'enum' 키워드, 제네릭, 오토박싱 등
jdk.1.6.language.level.description=6 - 인터페이스 내 @Override 태그
jdk.1.7.language.level.description=7 - 다이아몬드, ARM, 다중 catch 등.
jdk.1.8.language.level.description=8 - 람다, 유형 어노테이션 등
jdk.1.9.language.level.description=9 - 모듈, 인터페이스 내 private 메소드 등.
jdk.10.language.level.description=10 - 지역 변수 유형 추론
jdk.11.language.level.description=11 - 람다 매개변수의 지역 변수 구문
jdk.12.language.level.description=12 - 신규 언어 기능 없음
jdk.13.language.level.description=13 - 신규 언어 기능 없음
jdk.14.language.level.description=14 - Switch 식
jdk.14.preview.language.level.description=14(미리보기) - 기록, 패턴, 텍스트 블록
jdk.15.language.level.description=15 - 텍스트 블록
jdk.15.preview.language.level.description=15 (미리보기) - Sealed 유형, 기록, 패턴, 로컬 열거형 및 인터페이스
jdk.X.language.level.description=X - función experimental

local.class.preposition=local
method.context.display={1}의 {0}()
node.abstract.flag.tooltip=Abstract
node.annotation.tooltip=어노테이션
node.anonymous.class.tooltip=익명 클래스
node.class.tooltip=클래스
node.enum.tooltip=열거형
node.exception.tooltip=예외
node.field.tooltip=필드
node.final.flag.tooltip=Final
node.interface.tooltip=인터페이스
node.junit.test.tooltip=JUnit 테스트
node.method.tooltip=메소드
node.record.tooltip=기록(미리보기 기능)
node.runnable.class.tooltip=실행 가능한 클래스
node.static.flag.tooltip=정적
psi.error.attempt.to.edit.class.file=''{0}'' 파일에서 컴파일된 요소 수정 불가

task.background.title.maven=Maven

unexpected.identifier=예기치 않은 식별자
unexpected.token=예기치 않은 토큰
unexpected.tokens=예기치 않은 토큰
# suprimir la inspección "UnusedProperty"
visibility.presentation.abstract=abstract
# suprimir la inspección "UnusedProperty"
visibility.presentation.default=default
# suprimir la inspección "UnusedProperty"
visibility.presentation.final=최종
# suprimir la inspección "UnusedProperty"
visibility.presentation.native=native
# suprimir la inspección "UnusedProperty"
visibility.presentation.open=Abrir
# suprimir la inspección "UnusedProperty"
visibility.presentation.packageLocal=package-private
# suprimir la inspección "UnusedProperty"
visibility.presentation.private=private
# suprimir la inspección "UnusedProperty"
visibility.presentation.protected=protected
# suprimir la inspección "UnusedProperty"
visibility.presentation.public=public
# suprimir la inspección "UnusedProperty"
visibility.presentation.static=정적
# suprimir la inspección "UnusedProperty"
visibility.presentation.strictfp=strictfp
# suprimir la inspección "UnusedProperty"
visibility.presentation.synchronized=동기화된
# suprimir la inspección "UnusedProperty"
visibility.presentation.transient=transient
# suprimir la inspección "UnusedProperty"
visibility.presentation.transitive=transitive
# suprimir la inspección "UnusedProperty"
visibility.presentation.volatile=volatile
# suprimir la inspección "UnusedProperty"
visibility.presentation.sealed=봉인됨
# suprimir la inspección "UnusedProperty"
visibility.presentation.non-sealed=봉인되지 않음
error.message.wildcard.not.expected=예기치 않은 와일드카드

bad.return.type.in.method.reference=메소드 참조의 잘못된 반환 유형\: {0} 을(를) {1}로 변환 불가
bad.return.type.in.lambda.expression=람다 식의 잘못된 반환 유형\: {0} 을(를) {1}로 변환 불가
bad.return.type.in.lambda.expression1=람다 식의 잘못된 반환 유형\: {0} 을(를) void로 변환 불가
missing.return.value.lambda=반환 값 누락
unexpected.return.value=예기치 않은 반환 값
lambda.body.must.be.a.statement.expression=람다 본문은 구문식이어야 합니다.
