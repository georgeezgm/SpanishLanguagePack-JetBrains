javascript.filetype.description=JavaScript
actionscript.filetype.description=ActionScript
typescript.filetype.description=TypeScript
typescript.jsx.filetype.description=TypeScript JSX
ecmascript6.filetype.description=ECMAScript 6
jsx.filetype.description=React JSX
flow.filetype.description=Flow JS
javascript.file=Archivo JavaScript
typescript.file=Archivo TypeScript

# Languages
javascript.language.simple.name=JavaScript
typescript.language.simple.name=TypeScript

# Language terms
javascript.language.term.function=función
javascript.language.term.inner.function=función interna
javascript.language.term.method=método
javascript.language.term.constructor=constructor
javascript.language.term.class=clase
javascript.language.term.inner.class=clase interna
javascript.language.term.interface=interfaz
javascript.language.term.inner.interface=interfaz interna
javascript.language.term.enum=enumeración
javascript.language.term.type.alias=tipo alias
javascript.language.term.definition=definición
javascript.language.term.namespace=espacio de nombres
javascript.language.term.parameter=parámetro
javascript.language.term.property=propiedad
javascript.language.term.variable=variable
javascript.language.term.const=constante
javascript.language.term.const.field=campo constante
javascript.language.term.readonly.field=campo de solo lectura
javascript.language.term.local.variable=variable local
javascript.language.term.local.const=constante local
javascript.language.term.field=campo
javascript.language.term.value=valor
javascript.language.term.tag=etiqueta
javascript.language.term.label=etiqueta
javascript.language.term.attribute=atributo
javascript.language.term.decorator=decorador
javascript.language.term.attribute.value=Valor de atributo
javascript.language.term.package=paquete
javascript.language.term.module=módulo
javascript.language.term.external.module.reference=referencia de módulo externo
javascript.language.term.import.specifier=especificador de importación
javascript.language.term.export.specifier=especificador de exportación
javascript.language.term.entity.name=nombre de la entidad
javascript.language.term.jsdoc.tag=etiqueta JSDoc
javascript.language.term.imported.default.binding=enlace predeterminado importado
javascript.language.term.exported.default.binding=enlace predeterminado exportado
javascript.language.term.namespace.import=importación de espacio de nombres
javascript.language.term.namespace.export=exportación de espacio de nombres
javascript.language.term.import.statement=declaración de importación
javascript.language.term.type.parameter=parámetro de tipo
javascript.language.term.export.default.assignment=exportar asignación predeterminada
javascript.language.term.destructuring.property=propiedad de desestructuración
javascript.language.term.type.property=propiedad de tipo
javascript.language.term.default.export=exportación predeterminada
javascript.language.term.file=archivo
javascript.language.term.global=global
javascript.language.term.xml.tag=etiqueta xml

# Mensajes de error del analizador
javascript.parser.message.expected.expression=expresión esperada
javascript.parser.message.expected.xml.element=elemento xml esperado
javascript.parser.property.expected=propiedad esperada
javascript.parser.message.expected.lbrace=Se esperaba {
javascript.parser.message.expected.at=Se esperaba @
javascript.parser.message.expected.rbrace=Se esperaba }
javascript.parser.message.expected.identifier.string.literal.or.numeric.literal=identificador o literal de cadena o literal numérico esperado
javascript.parser.message.expected.colon=Se esperaba :
javascript.parser.message.expected.colon.or.comma=Se esperaba : o ,
javascript.parser.message.expected.semicolon=Se esperaba ;
javascript.parser.message.expected.lbrace.or.semicolon=Se esperaba { o ;
javascript.parser.message.expected.rbracket=Se esperaba ]
javascript.parser.message.expected.lparen=Se esperaba (
javascript.parser.message.expected.rparen=Se esperaba )
javascript.parser.message.expected.name=nombre esperado
javascript.parser.message.expected.comma.or.rparen=Se esperaba , o )
javascript.parser.message.expected.function.name=nombre de función esperado
javascript.parser.message.expected.requires.or.function.name='requiere' o nombre de función esperado
javascript.parser.message.expected.formal.parameter.name=nombre de parámetro formal esperado
javascript.parser.message.expected.statement=declaración esperada
javascript.parser.message.unexpected.var=la declaración de variable no está permitida aquí
javascript.parser.message.unexpected.const=aquí no se permite la declaración constante
javascript.parser.message.expected.parameter.name=nombre del parámetro esperado
javascript.parser.message.expected.property.name=nombre de propiedad esperado
javascript.parser.message.expected.catch.or.default=captura o se espera por defecto
javascript.parser.message.expected.forloop.left.hand.side.expression.or.variable.declaration=expresión del lado izquierdo o declaración de variable esperada antes de 'in'
javascript.parser.message.expected.forloop.in.or.semicolon=Se esperaba 'in' o ;
javascript.parser.message.expected.while.keyword=mientras se esperaba
javascript.parser.message.expected.comma=Se esperaba ,
javascript.parser.message.expected.comma.or.rbrace=Se esperaba , o }
javascript.parser.message.expected.variable.name=nombre de variable esperado
javascript.parser.message.expected.mult.or.lbrace=Se esperaba * o {
javascript.parser.message.missing.rbrace=falta }
javascript.parser.message.missing.or_rbrace=falta |}
javascript.parser.message.missing.backquote=falta `
javascript.parser.message.missing.attribute.name=falta el nombre del atributo
javascript.parser.message.unexpected.end.of.file=final inesperado del archivo
javascript.parser.message.expected.type.name=nombre de tipo esperado
javascript.parser.message.unclosed.string.literal=Literal de cadena no cerrada
javascript.parser.message.unclosed.comment=Comentario sin cerrar
javascript.parser.message.are.not.supported.by.dialect={0} no son compatibles con la versión actual de JavaScript
javascript.parser.message.expected.from=Se esperaba 'from'
javascript.parser.message.expected.typename=nombre de tipo esperado
javascript.parser.message.expected.typename.or.*=* o el nombre del tipo esperado
javascript.parser.message.expected.name.or.lbrace=nombre del paquete o {esperado
javascript.parser.message.expected.module.reference=referencia de módulo esperada
javascript.parser.message.expected.declaration=declaración esperada
javascript.parser.message.expected.namespace=Se esperaba 'espacio de nombres'
javascript.parser.message.expected.string.literal=literal de cadena esperado
javascript.parser.message.expected.xml=palabra clave de contexto xml esperada
javascript.parser.message.expected.equal=Se esperaba =
javascript.parser.message.expected.identifier.lbrace.or.lbracket=Se esperaba identifier, { o [
javascript.parser.message.expected.eof=final del archivo esperado
javascript.parser.message.expected.eqgt=Se esperaba =>
javascript.parser.message.expected.identifier=identificador esperado
javascript.parser.message.expected.instanceof=Se esperaba 'instance of'
javascript.parser.message.expected.in=esperado en
javascript.parser.message.expected.value=valor esperado
javascript.parser.message.expected.identifer.or.value=identificador o valor esperado
javascript.parser.message.expected.identifier.or.string.literal=identificador o literal de cadena esperado
javascript.parser.message.expected.as=Se esperaba 'as'
javascript.parser.message.expected.identifier.string.literal.or.lbrace=identificador, literal de cadena o {esperado
javascript.parser.message.expected.import.value=enlace de importación o especificador esperado
javascript.parser.message.expected.import.specifier=se esperaba el especificador de importación
javascript.parser.message.expected.heredoc.closing.identifier=identificador de cierre heredoc esperado
javascript.parser.message.expected.type.member=tipo miembro esperado
javascript.parser.message.expected.tuple.comma.or.rbracket=Se esperaba , o ]
javascript.parser.message.expected.target=solo se acepta 'target' como metapropiedad para nuevos
javascript.parser.message.expected.meta=solo se acepta 'meta' como propiedad meta para la importación
javascript.parser.message.expected.declare='declare' esperado
javascript.parser.message.expected.exports='exportaciones' esperadas
javascript.parser.message.expected.checks=verificaciones esperadas
javascript.parser.message.expected.type.keyword='tipo' esperado
javascript.parser.message.expected.type=tipo esperado
javascript.parser.message.expected.question=Se esperaba ?
javascript.parser.message.expected.class=clase esperada

# Mensajes de validación
javascript.validation.message.conflicting.definition.was.found.with.the.same.name=Se encontró una declaración heredada en conflicto {0} en el espacio de nombres {1}
javascript.validation.message.duplicate.declaration=Declaración duplicada
javascript.validation.message.duplicate.declaration.fix.remove=Eliminar tipo (s)
javascript.validation.message.redundant.type=El argumento de tipo explícito {0} se puede reemplazar con {1}
javascript.validation.message.redundant.type.remove=Se puede eliminar el argumento de tipo explícito {0}
javascript.validation.message.duplicate.export.declaration=La declaración de exportación entra en conflicto con la declaración exportada ''{0}''
javascript.validation.message.duplicate.default.export.declaration=Un módulo no puede tener varias exportaciones predeterminadas
javascript.validation.message.duplicate.default.export.in.module=Una exportación predeterminada solo se puede usar en un módulo de estilo ECMAScript
javascript.validation.message.duplicate.declaration.fix.family=Navegar a declaración de variable
javascript.validation.message.duplicate.declaration.fix.text=Navegar a la declaración anterior ''{0}''
javascript.validation.message.duplicate.declaration.fix.text.no.name=Navegar a la declaración anterior
javascript.validation.message.redeclaration.of.block.scope=Las variables de ámbito de bloque no se pueden volver a declarar
javascript.validation.message.redeclaration.of.block.scope.in.scope.of.var=Las variables de ámbito de bloque no pueden compartir el nombre con variables o parámetros 'var' en el mismo ámbito de bloque
javascript.validation.message.redeclaration.of.var.in.scope.of.block.scope=las variables 'var' no pueden compartir el nombre con las variables de alcance de bloque dentro de su alcance de visibilidad
javascript.validation.message.assignment.to.const=Intento de asignar a constante o variable de solo lectura
javascript.validation.message.assignment.to.const.fix.replace=Reemplazar con let
javascript.validation.message.assignment.to.const.fix.remove.readonly=Eliminar modificador de solo lectura
javascript.validation.message.arguments.out.of.function=Usando el objeto de argumentos de función fuera de la función
javascript.validation.message.must.be.lvalue=Lado izquierdo no válido en {0}
javascript.validation.message.const.variable.without.initializer=variable constante sin inicializador. No será posible asignar un valor significativo más adelante.
javascript.validation.message.constructor.field.not.allowed=Las clases no pueden tener un campo no estático llamado 'constructor'
es6.validation.message.const.variable.without.initializer=no se permite la variable const sin inicializador
javascript.validation.message.embed.annotation.used.with.var.of.wrong.type=La anotación incrustada debe usarse con una variable de tipo Class o String
javascript.validation.message.continue.without.target=No se puede determinar el objetivo para 'continuar'
javascript.validation.message.break.without.target=No se puede determinar el objetivo para el 'descanso'
javascript.validation.message.continue.outside.loop='continuar' fuera de la declaración de bucle
javascript.validation.message.return.outside.function.definition='return' fuera de la definición de función
javascript.validation.message.duplicate.label=Etiqueta duplicada
javascript.validation.message.extend.multiple.classes=La clase no puede extender varias clases
javascript.validation.message.extend.final.class=No se puede extender la clase final ''{0}''
javascript.validation.message.identifier.not.allowed.in.strict.mode={0} no está permitido como identificador en modo estricto
javascript.validation.message.for.await.top.level=Se utilizó el nivel superior 'for await'.
javascript.validation.message.for.await.no.async.context='for await' no se puede usar fuera de una función asincrónica
typescript.validation.message.invalid.type.reference=La referencia de tipo no puede hacer referencia a {0}
typescript.validation.message.invalid.modifier.cannot.be.here=El modificador {0} no puede aparecer aquí
typescript.validation.message.duplicate.modifier=Modificador {0} ya visto
typescript.validation.message.duplicate.modifier2=Modificador de accesibilidad ya visto
typescript.validation.message.abstract.cannot.be.used=El modificador ''{0}'' no se puede usar con el modificador '' abstracto ''
typescript.validation.message.abstract.class.be.created=No se puede crear una instancia de la clase abstracta ''{0}''
typescript.validation.message.abstract.member.access.super=No se puede acceder al método abstracto ''{0}'' a través de una súper expresión.
typescript.validation.message.abstract.cannot.have.body=El método no puede tener una implementación porque está marcado como 'abstracto'
typescript.validation.message.abstract.overload=Las firmas de sobrecarga deben ser todas abstractas o no abstractas.
typescript.validation.message.constructor.cannot.be.abstract=El constructor no puede ser 'abstracto'
typescript.validation.message.function.implementation.missing=Falta la implementación de la función o no sigue inmediatamente a la declaración
typescript.validation.message.abstract.class.should.be=Los métodos abstractos solo pueden aparecer dentro de una clase abstracta
typescript.validation.module.reference.with.extension=La referencia del módulo externo no puede terminar con la extensión
typescript.validation.class.extend.not.constructor.type=El tipo ''{0}'' no es un tipo de función de constructor
typescript.validation.class.extend.no.type.arguments.type=Ningún constructor base tiene el número especificado de argumentos de tipo
typescript.validation.class.extend.many.constructors=Todos los constructores base deben tener el mismo tipo de retorno
typescript.validation.class.extend.cycled.definition=Definición de clase de círculo
typescript.validation.class.extend.constructor.return.not.class=El tipo de retorno del constructor base ''{0}'' no es un tipo de clase o interfaz.
javascript.validation.generators.yield.not.iterable=El tipo de expresión no tiene [Symbol.iterator] o [Symbol.asyncIterator] definido
javascript.validation.generators.yield.not.assignable.to.return=El tipo ''{1}'' no se puede asignar al tipo ''{0}''
typescript.validation.generators.incorrect.type.annotation=Un generador no puede tener una anotación de tipo ''{0}''
typescript.validation.async.incorrect.type.annotation=Una función asíncrona no puede tener una anotación de tipo ''{0}''
typescript.validation.generators.incorrect.type.annotation.iterable=El tipo ''{0}'' no se puede asignar al tipo ''{1}''.
typescript.validation.generators.overload=No se puede declarar una firma de sobrecarga como generador
typescript.validation.generators.ambient=Los generadores no están permitidos en un contexto ambiental
typescript.validation.generators.no.yield=El generador tiene implícitamente el tipo 'IterableIterator <any>' porque no da ningún valor. Considere proporcionar un tipo de devolución.
typescript.validation.generators.async.no.yield=El generador tiene implícitamente el tipo 'AsyncIterableIterator <cualquier>' porque no produce ningún valor. Considere proporcionar un tipo de devolución.
typescript.validation.cannot.find.best.common.type=El argumento de tipo no se puede inferir del uso


# Rodear de nombres
javascript.surround.with.do.while=do / while
javascript.surround.with.for=for
javascript.surround.with.if=if
javascript.surround.with.if.else=if / else
javascript.surround.with.if.cond=if (cond)
javascript.surround.with.if.else.cond=if (cond) / else
javascript.surround.with.parenthesis=(expr)
javascript.surround.with.not.parenthesis=!(expr)
javascript.surround.with.cast=Type(expr)
javascript.surround.with.try.catch=try / catch
javascript.surround.with.try.finally=try / finally
javascript.surround.with.try.catch.finally=try / catch / finally
javascript.surround.with.while=while
javascript.surround.with.with=con
javascript.surround.with.function=función
javascript.surround.with.function.expression=expresión de función
javascript.surround.with.object.literal=literal de objeto

javascript.introduce.variable.title=Extraer variable
javascript.introduce.variable.title.local=Introducir variable local
javascript.introduce.variable.error.no.expression.selected=No se puede introducir la variable.\nLa selección no forma una expresión.
javascript.introduce.variable.error.expression.has.void.type=No se puede introducir la variable.\nEl tipo de expresión seleccionado es nulo.
javascript.introduce.variable.name.prompt=&Nombre:
javascript.introduce.variable.replace.all.occurrences=Reemplazar &todas las ocurrencias ({0} ocurrencias encontradas)
javascript.introduce.variable.invalid.name=Ingrese un nombre válido.
javascript.introduce.element.already.exists={0} con el mismo nombre ya existe en el alcance.
javascript.introduce.variable.arrow.function.parameter.referenced=No se puede introducir.\nLa selección contiene referencias a los parámetros de la función de flecha
javascript.introduce.variable.arrow.await.referenced=No se puede introducir.\nLa selección contiene expresiones de espera
javascript.introduce.variable.xml.embedded=No se puede introducir una variable en una expresión incrustada
javascript.introduce.incorrect.context=No se puede introducir la variable.\nLa selección contiene una referencia a 'esto'
javascript.introduce.field.title=Introducir campo
javascript.introduce.field.error.no.expression.selected=No se puede introducir el campo.\nLa selección no forma una expresión.
javascript.introduce.field.error.expression.has.void.type=No se puede introducir el campo.\nEl tipo de expresión seleccionado es nulo.
javascript.introduce.field.error.no.enclosing.class=No se puede introducir el campo.\nSin clase adjunta.
javascript.introduce.field.make.readonly=Crear y solo lectura
javascript.introduce.field.initialize.in.scope=&Inicializar en:
javascript.introduce.field.visibility=&Visibilidad:
javascript.introduce.field.keyboard.hint=Presiona {0} para los atajos de teclado
javascript.introduce.field.before.super.call=No se puede introducir el campo.\nNo se puede acceder a 'this' antes de las invocaciones 'super'.
javascript.introduce.constant.title=Introducir constante
javascript.introduce.constant.error.no.expression.selected=No se puede introducir constante.\nLa selección no forma una expresión.
javascript.introduce.constant.error.expression.has.void.type=No se puede introducir constante.\nEl tipo de expresión seleccionado es nulo.
javascript.introduce.constant.error.not.constant.expression.selected=No se puede introducir constante.\nLa selección no es una expresión constante.

javascript.introduce.parameter.title=Extraer parámetro
javascript.introduce.parameter.error.no.expression.selected=No se puede introducir el parámetro.\nLa selección no forma una expresión.
javascript.introduce.parameter.error.no.containing.function=No se puede introducir el parámetro.\nNo se pudo encontrar la función contenedora para usar.
javascript.introduce.parameter.error.expression.has.void.type=No se puede introducir el parámetro.\nEl tipo de expresión seleccionado es nulo.
javascript.introduce.parameter.error.not.async.context=No se puede introducir el parámetro para la expresión que contiene 'await'.\nNo todos los usos están dentro de una función asincrónica
javascript.introduce.parameter.error.target.not.async=No se puede introducir el parámetro para la expresión que contiene 'await'.\nLa función de destino no es una función asincrónica
javascript.introduce.parameter.error.yield=No se puede introducir el parámetro para la expresión que contiene 'rendimiento'.

javascript.introduce.throw.expressions.unsupported=No se puede invocar la refactorización.\nActualmente, las expresiones de lanzamiento no son compatibles con las refactorizaciones de 'Extracción'.
javascript.introduce.breaks.operator.precedence=No se puede invocar la refactorización.\nIntroducir cambiará la precedencia del operador en la expresión.
javascript.introduce.constant.in.es5=No se puede invocar la refactorización.\nNo se puede introducir una constante en el código ECMAScript 3 o ECMAScript 5.
javascript.introduce.in.embedded.expression=No se puede invocar la refactorización.\nNo se puede introducir en una expresión incrustada

# Categorías destacadas
javascript.keyword=palabra clave
javascript.string=Cadena
javascript.number=Número
javascript.linecomment=comentario de línea
javascript.doccomment=Comentario del documento
javascript.blockcomment=Bloquear comentario
javascript.regexp=Expresión regular
javascript.operation=Operación
javascript.parens=Paréntesis
javascript.brackets=corchetes
javascript.braces=llaves
javascript.semicolon=punto y coma
javascript.badcharacter=carácter incorrecto
javascript.docmarkup=Marcado de documentación
javascript.doctag=Etiqueta de documentación
javascript.valid.string.escape=Cadena de escape válida
javascript.invalid.string.escape=Cadena de escape no válida
javascript.comma=coma
javascript.dot=Punto

# Errores con intenciones
javascript.unresolved.function.name.message=Función o método no resuelto {0}() #loc
javascript.unresolved.variable.name.message=Variable no resuelta {0} #loc
javascript.unresolved.variable.null.qualifier.message=El calificador de ''{0}'' es posiblemente nulo #loc
javascript.unresolved.variable.undefined.qualifier.message=El calificador de ''{0}'' posiblemente no esté definido #loc
javascript.unresolved.variable.null.or.undefined.qualifier.message=El calificador de ''{0}'' es posiblemente nulo o indefinido #loc
javascript.unresolved.type.name.message=Tipo no resuelto {0} #loc
javascript.unresolved.circle.definition=Definición de círculo de importación
javascript.missing.read.property=Propiedad de lectura no resuelta #loc
javascript.missing.write.property=Propiedad de escritura no resuelta #loc
javascript.unresolved.variable.or.type.name.message=Variable sin resolver o tipo {0} #loc
javascript.unresolved.variable.or.type.name.message2=Variable no resuelta o tipo {0}
javascript.unresolved.symbol.message=Símbolo no resuelto
javascript.unresolved.file=Archivo {0} no encontrado
javascript.unknown.metadata.tag=Etiqueta de metadatos desconocida
javascript.unknown.metadata.attribute=Atributo de metadatos desconocido
javascript.undeclared.variable.name.message=Variable {0} declarada implícitamente #loc
javascript.create.function.intention.name=Crear función ''{0}''
javascript.create.variable.intention.name=Crear variable ''{0}''
javascript.create.constant.intention.name=Crear constante ''{0}''
javascript.declare.variable.intention.name=Insertar declaración var para ''{0}''
javascript.declare.variable.intention.family.name=Insertar declaración var
javascript.declare.variable.in.previous.var.statement.intention.name=Inserte la declaración var para ''{0}'' en la declaración var anterior
javascript.declare.variable.in.previous.var.statement.intention.family=Insertar declaración var en la declaración var anterior
javascript.create.field.intention.name=Crear campo ''{0}''
javascript.create.constant.field.intention.name=Crear campo constante ''{0}''
javascript.create.method.intention.name=Crear método ''{0}''
javascript.create.property.intention.name=Crear propiedad ''{0}''
javascript.create.function.property.intention.name=Crear propiedad de función ''{0}''
javascript.create.constructor.intention.name=Crear constructor en la clase ''{0}''
actionscript.create.constructor.intention.name=Crear constructor ''{0}''
javascript.create.get.property.intention.name=Crear '' obtener '' propiedad ''{0}''
javascript.create.set.property.intention.name=Crear '' establecer '' propiedad ''{0}''
javascript.create.function.intention.family=Crear función o método JavaScript
javascript.create.variable.intention.family=Crear propiedad o variable JavaScript
javascript.intention.create.getter.setter=Crear captador y definidor para ''{0}''
javascript.intention.create.getter.setter.desc=Crear captador y definidor
javascript.intention.create.setter=Crear definidor para ''{0}''
javascript.intention.create.setter.desc=Crear definidor
javascript.intention.create.getter=Crear captador para ''{0}''
javascript.intention.create.getter.desc=Crear captador
create.mobile.view=Crear vista ''{0}''
invalid.package=Paquete no válido: {0}
javascript.rename.reference.intention.name=Cambiar nombre de referencia
typescript.rename.javascript.references=Buscar en archivos &JavaScript
typescript.rename.dynamic.references=Búsqueda de &referencias dinámicas
js.usage.type.string=Uso en cadenas literales
js.usage.type.call=Uso en llamada de función
js.anonymous.to.named.function=Convertir función anónima en función nombrada
js.convert.to.named.function=Convertir a función nombrada
js.convert.to.named.function.to.class.method=Convertir a método de clase
js.convert.to.arrow.function.family.name=Convertir a función de flecha
js.convert.to.arrow.function=Convertir a función de flecha
js.add.braces.to.arrow.function=Agregar llaves a la función de flecha
js.inspection.function.expression.is.used.instead.of.arrow=Se usa la expresión de función en lugar de la función de flecha
js.arrow.function.braces.can.be.removed.key=Se pueden eliminar las llaves alrededor del cuerpo de la función de flecha
js.arrow.function.braces.can.be.removed.problem.description=Se pueden quitar las llaves alrededor del cuerpo de la función de flecha
js.arrow.function.braces.can.be.removed.fix.family.name=Eliminar las llaves alrededor del cuerpo de la función de flecha
js.convert.to.anonymous.function.family.name=Convertir función de flecha en función anónima
js.convert.to.anonymous.function=Convertir a función anónima
js.named.to.anonymous.family.name=Convertir a expresión de función
js.named.to.function.expression.text=Convertir a expresión de función de retención variable
js.named.to.function.hoisting.conflict.text=La función se usa antes de declarar. El uso se interrumpirá después de la conversión a variable
js.named.to.arrow.text=Convertir a {0} función de flecha de retención
js.split.into.multiple.declarations=Dividir en múltiples declaraciones
js.remove.digit.separators=Eliminar separadores de dígitos
js.copy.qualified.to.clipboard=Copiar el nombre calificado al portapapeles
js.iterate=Iterar con for..of
js.iterate.async=Iterar con await..of
js.separate.digits=dígitos separados
js.separate.nibbles=Bocadillos separados
js.separate.bytes=bytes separados
js.separate.words=palabras separadas de 16 bits
js.separate.thousands=Separar miles
js.separate.thousands.in.integer.part=Separar miles en partes enteras
js.split.declarations=Declaraciones divididas
js.swap.$0.and.$1=Intercambiar ''{0}'' y ''{1}''
js.swap.arguments=Cambiar argumentos de llamada al método
js.replace.string.with.es6.template=Reemplazar con cadena de plantilla
js.replace.string.concatenation.with.es6.template.inspection.name=Se usa la concatenación de cadenas en lugar de la plantilla de cadenas
js.replace.string.concatenation.with.es6.template.fix.text=Reemplazar con cadena de plantilla
js.string.template.line.separators.visible=Convertir a separadores de línea visibles
js.string.template.line.separators.multispan=Convertir a plantilla de cadena de varias líneas
js.string.template.line.separators.visible.family.name=Convertir cadena de plantilla para usar separadores de línea visibles
js.string.template.line.separators.multispan.family.name=Convertir a plantilla de cadena de varias líneas
js.convert.var.to.let=Convertir var en let
js.convert.var.to.const=Convertir var a const
js.convert.var.to.let.text=Convertir para dejar
js.convert.var.to.const.text=Convertir a constante
js.convert.var.to.let.or.const=Convertir a let/const
js.convert.var.to.let.or.const.family.name=Convertir var en let/const
js.convert.var.to.let.or.const.inspection.text='var' usado en lugar de 'let' o 'const'
js.convert.let.to.const.inspection.text='let' usado donde podría ser una 'const'
js.convert.var.to.let.or.const.inspection.conservative.option=Convierta var de forma conservadora con la acción Fix all
js.convert.var.to.let.or.const.inspection.conservative.option.description=Las declaraciones se pueden mover a la parte superior de la función \
  o antes del primer uso de la variable.\nPara deshabilitar este comportamiento al usar la acción Corregir todo, marque la opción Convertir var de forma conservadora.
js.convert.require.into.es6.import.text=Convertir require() para importar
js.convert.require.into.es6.import.family.name=Convertir require() para importar
js.convert.require.into.es6.import.inspection.text='require()' se usa en lugar de 'import'
js.convert.require.into.es6.import.inspection.withConditional.option=Convertir require() dentro de ámbitos internos con la acción Corregir todas
js.convert.require.into.es6.import.inspection.withConditional.option.description=Convertir require() dentro de ámbitos internos (por ejemplo, declaraciones 'if' o funciones internas)
js.convert.module.exports.into.es6.export.text=Convertir para exportar
js.convert.module.exports.into.es6.export.family.name=Convertir para exportar
js.convert.module.exports.into.es6.export.inspection.text='module.exports' se usa en lugar de 'export'
js.convert.for.in.to.for.of.text=Convertir 'for..in' a 'for..of'
js.convert.for.in.to.for.of.family.name=Convertir 'para..in' a 'para..of'
js.convert.for.in.to.for.of.inspection.text='for..in' se usa en lugar de 'for..of'
js.convert.indexed.for.to.for.of.text=Convertir indexado 'for' a 'for..of'
js.convert.indexed.for.to.for.of.family.name=Convertir indexado 'for' a 'for..of'
js.convert.indexed.for.to.for.of.inspection.text=Los bucles indexados 'for' pueden sustituirse por 'for..of'.
js.convert.for.each.to.for.of.intention.text=Convertir a 'para..of'
js.convert.for.each.to.for.of.intention.family=Reemplazar 'forEach' con 'for..of' bucle
js.convert.for.each.to.indexed.intention.family=Reemplazar 'forEach' con el ciclo indexado 'for'
js.convert.for.of.to.indexed.intention.family=Reemplazar 'for..of' con el bucle indexado 'for'
js.convert.map.to.for.of.intention.family=Reemplace la llamada de matriz 'map' con el bucle 'for..of'
js.convert.indexed.for.to.foreach.intention.family=Convertir indexado 'for' a 'forEach' llamada de matriz
js.add.then.fix=Agregar '.then()'
js.quote.unquote.intention.plural={0} nombres de propiedad
js.quote.unquote.intention.singular={0} nombre de propiedad
js.quote.unquote.intention.quote=Comilla
js.quote.unquote.intention.unquote=Quitar comillas
js.property.to.indexer.intention=Reemplazar con acceso al indexador
js.indexer.to.property.intention=Reemplazar con acceso a la propiedad
js.join.vars.intention=Unir declaraciones de variables posteriores
js.infer.parameter.types.intention=Deducir tipos de parámetros a partir de usos
js.infer.parameter.types.intention.jsdoc=Inferir tipos de parámetros JSDoc a partir de usos
js.infer.parameter.types.intention.failure.title=No se pueden inferir tipos
js.infer.parameter.types.intention.progress.text=Inferir tipos
js.infer.parameter.types.intention.failure.text=No se pueden inferir tipos a partir de los usos
js.infer.parameter.types.intention.failure.readonly.text=No se pueden inferir tipos a partir de los usos: el archivo es de solo lectura
es6.move.module.members.refactoring.name=Mover miembros del módulo
es6.move.module.members.table.title=Miembros para mover
es6.move.module.members.refactoring.create.file=Crear archivo
es6.move.module.members.refactoring.file.does.not.exist=El archivo {0} no existe
es6.move.module.members.refactoring.create.file.message=El archivo {0} no existe.\n¿Desea crearlo?
es6.move.module.members.refactoring.dialog.selected.title=Mover los miembros seleccionados:
es6.move.module.members.refactoring.dialog.error.no.script.tag=El archivo de destino no contiene una etiqueta de script
es6.move.module.members.refactoring.dialog.error.invalid.file.name=El nombre del archivo de destino no es válido en este sistema operativo
es6.move.module.members.refactoring.dialog.error.no.selected.items=No hay miembros seleccionados para mover
es6.move.module.members.refactoring.dialog.error.incorrect.module=El módulo de destino es incorrecto
es6.move.module.members.refactoring.dialog.error.modules.same=Los módulos de origen y destino deben ser diferentes
es6.move.module.members.refactoring.dialog.move.member.to=Mover miembro a
es6.move.module.members.refactoring.dialog.field.from=Desde:
es6.move.module.members.refactoring.dialog.field.to=Hasta:
es6.move.module.members.references.unresolved.import.message=Importación no resuelta de {0} referencias seleccionadas {1}
es6.move.module.members.references.local.message={0} referencias seleccionadas no exportadas {1}
es6.move.module.members.has.local.usage.message=No exportado {0} se usa en el archivo {1}
es6.move.module.members.non.es6.module.usage={0} se usa en el archivo {1} que no es un módulo ES6
es6.move.module.members.destination.not.es6=El archivo de destino {0} no es un módulo ES6
es6.move.module.members.cannot.detect.js.language=대상 파일이 JS 파일이 아닙니다.
es6.move.module.members.destination.contains.default.export=El módulo de destino contiene una exportación predeterminada
es6.move.module.members.destination.does.not.support.jsx={0} contiene etiquetas JSX pero el idioma de destino no las admite
es6.move.module.members.syntax.errors=Mover {0} introducirá errores de sintaxis porque el idioma de destino es diferente al de origen

js.pull.up.will.be.made.abstract=No abstracto {0} se hará abstracto
es6.extract.super.destination.label=&Archivo de destino:
es6.extract.super.members.in.interface=Miembros en la nueva interfaz
es6.extract.super.members.in.superclass=Miembros de la nueva superclase
es6.extract.super.overload.declaration.without.implementation.conflict=La declaración de sobrecarga {0} sin implementación no está permitida en la clase

# Examen de la unidad
js.testing.inspection.group.name=Prueba unitaria
js.testing.highlight.line=Resaltar la línea de falla en el código de prueba
rc.environmentVariables.label=&Variables de entorno:
rc.testRunScope.all=&Todas las pruebas
rc.testRunScope.testFile=Arc&hivo de prueba
rc.testRunScope.suite=&Suite
rc.testRunScope.test=&Prueba
rc.nodeOptions.label=Nodo y opciones:
rc.workingDirectory.label=&directorio de trabajo:
rc.workingDirectory.browseDialogTitle=Seleccionar directorio de trabajo
rc.testOrSuiteScope.suite.title=Editar nombre de suite
rc.testOrSuiteScope.suite.label=Nombre de la suite:
rc.testOrSuiteScope.test.title=Editar nombre de prueba
rc.testOrSuiteScope.test.label=Nombre de la prueba:
rc.testOrSuiteScope.emptyTest=Nombre de prueba vacío
rc.testRunScope.testFile.label=Archivo de prueba:
rc.testRunScope.testFile.browseTitle=Seleccionar archivo de prueba

# Prueba unitaria: broma
jest.snapshot.update.rc.name=Actualizar instantánea para {0}
jest.snapshot.update.single.test.text=<link>Haga clic para actualizar la instantánea </link>para {0}
jest.snapshot.update.test.file.text=<link>Haga clic para actualizar las instantáneas fallidas </link>en {0}
jest.snapshot.update.all.tests.text=<link>Haga clic para actualizar todas las instantáneas fallidas </link>
jest.rc.configurationFile.label=&Archivo de configuración:
jest.rc.configurationFile.title=Seleccionar archivo de configuración de Jest
jest.rc.jestPackageField.label=Paquete &Jest:
jest.rc.jestOptions.label=Opciones de broma:
jest.rc.jestOptions.emptyText=Opciones de CLI, p. ej. --watch o --env=jsdom

# Prueba unitaria: transportador
protractor.rc.configurationFile.label=&Archivo de configuración:
protractor.rc.configurationFile.title=Seleccione el archivo de configuración del transportador
protractor.rc.protractorPackage.label=Paquete &Transportador:
protractor.rc.protractorOptions.label=Transportador y opciones:
protractor.rc.protractorOptions.emptyText=Opciones de CLI, p. ej. --browser o --rootElement

# Node.js
node.js.inspection.group.name=Node.js
node.js.missing.require=Falta la declaración require()
node.js.unresolved.api=API de Node.js sin resolver
node.js.invalid.node=El proyecto usó una ruta no válida a Node.js.<br>Se actualizó para usar Node.js de {0}.
node.js.configure=Configurar Node.js
node.js.downloading=Descargando Node.js {0}
node.js.interpreters=Intérpretes de Node.js
node.js.set.project.interpreter.action=Establecer como intérprete del proyecto
node.js.add.interpreter.action=Agregar {0}...

# Inspecciones
js.inspection.group.name=General
typescript.inspection.group.name=TypeScript
js.inspection.bitwise.group.name=Problemas de operación bit a bit
js.code.style.issues.group.name=Problemas de estilo de código
js.probable.bugs.group.name=Errores probables
js.annotator.inspection.name=Errores generales de JavaScript
js.inspection.convert.to.es6.group.name=ayudas de migración de ECMAScript 6
js.inspection.switch.group.name=Problemas con la declaración de cambio
js.inspection.async.group.name=Código asíncrono y promesas
js.function.metrics.group.name=Métricas de función
js.validity.issues.group.name=Problemas de validez
js.imports.dependencies.group.name=Importaciones y dependencias
js.unused.symbols.group.name=Símbolos no utilizados
js.unwanted.symbols.group.name=Construcciones de código potencialmente indeseables
js.assignment.issues.group.name=Problemas de asignación
js.potentially.invalid.usage.of.this.inspection.name=Referencia potencialmente inválida a 'esto' del cierre
js.potentially.invalid.usage.of.class.this.inspection.name=Referencia potencialmente inválida a 'esto' de una clase desde el cierre
js.potentially.invalid.target.of.indexed.property.access.inspection.name=Objetivo posiblemente incorrecto del acceso a la propiedad indexada
javascript.potentially.invalid.usage.of.this=Uso potencialmente no válido de esto
javascript.potentially.invalid.usage.of.class.this=Acceso de referencia potencialmente no válido a un campo de clase a través de 'this'. de una función anidada
javascript.potentially.invalid.target.of.indexed.property.access=Destino potencialmente no válido del acceso a la propiedad indexada
js.unfiltered.for.in.loop.inspection.name=Sin filtrar para..en bucle
javascript.unfiltered.for.in.loop=Posible iteración sobre miembros inesperados (personalizados/heredados), probablemente falte la verificación hasOwnProperty
js.unfiltered.for.in.loop.skip.primitives=Omitir iteraciones sobre referencia con inicializador de matriz o objeto
js.unfiltered.for.in.loop.skip.primitives.tooltip=Habilítelo cuando Object.prototype y Array.prototype no estén modificados
js.referencing.mutable.variable.from.closure.inspection.name=Haciendo referencia a la variable mutable del cierre
javascript.mutable.variable.accessible.from.closure=Se puede acceder a la variable mutable desde el cierre
js.unresolved.variable.inspection.name=Variable JavaScript no resuelta
js.undeclared.variable.inspection.name=Variable JavaScript global declarada implícitamente
js.duplicate.declaration.inspection.name=Declaración de JavaScript duplicada
# WI-11522 solo la primera palabra debe comenzar con una letra mayúscula
js.linters.inspection.group.name=Herramientas de calidad del código
js.linters.detect.automatically.caption=Detectar el paquete y el archivo de configuración del package.json más cercano
js.unused.local.symbol.inspection.name=Símbolo local no utilizado
js.unused.es6.import.inspection.name=Importaciones de ES6 / TypeScript no utilizadas
js.unused.assignment.inspection.name=Tarea no utilizada
js.join.declaration.assignment.inspection.name=La declaración de variable se puede fusionar con la primera asignación a la variable
js.join.declaration.assignment.inspection.fix=Declaración y asignación de variables de unión
js.unused.global.symbol.inspection.name=Símbolo global no utilizado
js.missing.await.symbol.inspection.name=Espera perdida para una llamada de función asíncrona
js.missing.await.symbol.inspection.for.returns=Utilice siempre 'await' para las llamadas a funciones asíncronas para evitar errores y ayudar a los seguimientos de pila asíncronos de V8
js.missing.await.symbol.inspection.for.generator.name=Los generadores asincrónicos deben iterarse utilizando el bucle for-await
jsx.missing.namespace.inspection.name=Falta la importación de React con JSX
jsx.missing.namespace.inspection.text=JSX se usa sin importar {0}
tsx.missing.name.quick.fix.name="Agregar {0} declaración de importación
js.destructuring.merge.inspection=Las propiedades de desestructuración con la misma clave se pueden fusionar
js.destructuring.merge.inspection.text=Se pueden fusionar propiedades de desestructuración con claves idénticas
js.destructuring.merge.inspection.fix=Fusionar propiedades de desestructuración
js.nested.template.literal.inspection=Anidación redundante en la plantilla literal
js.nested.template.literal.fix=Literal anidado en línea
js.redundant.await.inspection=Expresión redundante 'en espera'
js.await.promise.resolve.inspection='await Promise.resolve()' redundante
js.await.promise.reject.inspection=Redundante 'await Promise.reject()'
js.await.promise.double.await.inspection='espera espera' redundante
js.await.promise.return.await.inspection='Espera de retorno' redundante
js.await.promise.trivial.await.inspection='espera' redundante para un tipo que no es de promesa
js.await.promise.resolve.fix=Reemplazar con ''{0}''
js.top.level.await.expression.inspection= Expresión 'await' de nivel superior
js.top.level.await.expression.inspection.description= Se utilizó la expresión 'await' de nivel superior.
js.possibly.async.function.inspection=Posiblemente función asincrónica
js.await.in.synchronous.function=El operador 'await' solo se puede usar en funciones 'async'
js.possibly.async.function.quick.fix=Hacer que la función {0} sea asincrónica
js.possibly.async.function.quick.fix.family.name=Hacer la función asincrónica
js.property.can.be.replaced.with.shorthand=La propiedad se puede reemplazar con taquigrafía
js.property.can.be.replaced.with.shorthand.method=La propiedad se puede reemplazar con un método abreviado
js.replace.with.shorthand.property.quick.fix=Reemplazar con propiedad abreviada
js.replace.with.shorthand.method.quick.fix=Reemplazado por abreviatura
js.expand.shorthand.property.quick.fix=Expandir propiedad de taquigrafía
js.unresolved.function.inspection.name=Función de JavaScript no resuelta
js.deprecated.symbols.inspection.name=Símbolo de JavaScript obsoleto
js.suspicious.eq.plus.inspection.name=Asignación sospechosa '=+'
js.suspicious.eq.plus.inspection.desc=Sospechoso '=+' asignación: posiblemente mal escrito '+ ='
js.suspicious.eq.plus.fix.name=Reemplazar con '+ ='
js.suspicious.name.combination.inspection.name=Combinación de nombres sospechosos
js.bitwise.operator.usage.name=Uso del operador bit a bit
js.bitwise.operator.usage.popup=Operador bit a bit utilizado
js.bitwise.operator.usage.quickfix=Reemplazar con {0}
js.potentially.invalid.constructor.usages.inspection.name=Uso de constructor potencialmente no válido
js.mismatched.update.collection.inspection.name=Consulta no coincidente y actualización de la colección
js.mismatched.update.collection.update.method.names=Actualizar nombres de métodos
js.closure.compiler.syntax.inspection.name=Sintaxis del compilador de cierre
js.closure.compiler.syntax.implements.not.interface={0} no está anotado con @interface
js.closure.compiler.syntax.cyclic.inheritance=Herencia cíclica que involucra a {0}
js.closure.compiler.syntax.empty.type=El tipo vacío no está disponible
js.closure.compiler.syntax.invalid.type=Sintaxis de tipo no válida
collection.updated.but.not.queried=El contenido de la colección <code>#ref </code>se actualiza, pero nunca se consulta
collection.queried.but.not.update=Se consulta el contenido de la colección <code>#ref </code>, pero nunca se actualiza
javascript.constructor.with.lower.case.name.used.message=Los nombres de los constructores suelen empezar con una letra mayúscula. ¿Un error?
interface.function.declaration.should.have.no.body=La declaración de funciones de interfaz no debe tener cuerpo
javascript.ambient.declaration.should.have.no.body=La declaración ambiental no debe tener cuerpo
javascript.ambient.declaration.should.have.no.initializer=La declaración ambiental no debe tener inicializador
javascript.ambient.declaration.const.should.be.primitive=Un inicializador 'const' en contexto ambiental debe ser una referencia de enumeración literal o literal primitiva
javascript.deprecated.symbol.used.name.message=Símbolo obsoleto usado, consulte los documentos para una mejor alternativa #loc
javascript.deprecated.symbol.used.name.message2=Dado que el símbolo de la versión {0} está marcado como obsoleto, use {1} como reemplazo #loc
js.classname.macro.description=jsClassName()
js.qualified.classname.macro.description=jsQualifiedClassName()
js.methodname.macro.description=jsMethodName()
js.unused.symbol=No utilizado {0} #ref
js.unused.symbol.full=No utilizado {0}
js.unused.symbol.remove=Eliminar {0} no utilizado
js.suspicious.name.assignment=''{0}'' probablemente no debería asignarse a ''{1}''
js.suspicious.name.parameter=''{0}'' probablemente no debería pasarse como parámetro ''{1}''
js.suspicious.name.return=''{0}'' probablemente no debería devolverse del método ''{1}''
js.show.overriding.markers.inspection.name=Muestra marcadores de anulación de funciones en JavaScript
js.constructor.cant.have.return.type=El constructor no puede tener un tipo de retorno
invalid.identifier.value=valor de identificador no válido
class.0.does.not.have.default.constructor=La clase {0} no tiene un constructor predeterminado
invalid.identifier.value.0=Identificador no válido: ''{0}''
js.suspicious.bind.with.arrow.function=Uso sospechoso de 'bind' con función de flecha
javascript.change.signature.invalid.parameter.declaration=Parámetro no válido: ''{0}''
javascript.change.signature.invalid.function.name.0=Nombre de función no válido: ''{0}''
javascript.validation.generators.yield.not.in.generator=Una expresión 'rendimiento' solo está permitida en el cuerpo de un generador.
javascript.validation.new.target.not.in.function=La metapropiedad 'new.target' solo está permitida en el cuerpo de una declaración de función, expresión de función o constructor
javascript.validation.message.this.referenced.from.static.context='esto' referenciado en contexto estático
javascript.validation.message.super.referenced.without.class.instance.context='super' referenciado sin contexto de instancia de clase
javascript.validation.message.super.referenced.from.static.context='super' referenciado en contexto estático
javascript.validation.message.function.override.without.override.modifier=El método anula el método en la superclase {0} sin la palabra clave anular
javascript.validation.message.class.should.be.in.file=La clase ''{0}'' debe definirse en el archivo ''{1}''
javascript.validation.message.function.should.be.in.file=La función ''{0}'' debe definirse en el archivo ''{1}''
javascript.validation.message.namespace.should.be.in.file=El espacio de nombres ''{0}'' debe definirse en el archivo ''{1}''
javascript.validation.message.variable.should.be.in.file=La variable ''{0}'' debe definirse en el archivo ''{1}''
javascript.validation.message.incorrect.package.name=El nombre del paquete ''{0}'' no corresponde a la ruta del archivo ''{1}''
javascript.validation.multiple.var.in.for.loop=Solo se permite una sola variable en los bucles ''{0}''
javascript.validation.initialized.var.in.for.loop=Los inicializadores de variables no están permitidos en los bucles ''{0}''
javascript.fix.package.name=Establecer el nombre del paquete en ''{0}''
javascript.fix.add.override.modifier=Agregar modificador de anulación
javascript.fix.property.spelling.family=Corregir posible error tipográfico en el nombre de la propiedad
javascript.fix.property.spelling.text=Ajustar la ortografía a ''{0}''
js.code.style.tab.name=JavaScript
js.code.style.file.name.relaxed.style=Reutilizar caso del archivo actual
js.code.style.file.name.camel.style=Funda de camello (appComponent)
js.code.style.file.name.pascal.style=Caso Pascal (AppComponent)
js.code.style.file.name.snake.style=Estuche de serpiente (componente_aplicación)
js.code.style.file.name.lisp.style=Caso de Dash (componente de la aplicación)
js.code.style.file.name.mixed.style=Caso de Dash con sufijo (my-app.component)
es6.code.style.path.mapping.always=Siempre
es6.code.style.path.mapping.never=Nunca
es6.code.style.path.mapping.different.paths=Solo en archivos fuera de las rutas especificadas
typescript.code.style.tab.name=TypeScript
jsx.code.style.attribute.default.value=Agregar a la propiedad JSX:
jsx.code.style.attribute.default.value.braces=Tirantes
jsx.code.style.attribute.default.value.quotes=Cotizaciones
jsx.code.style.attribute.default.value.none=Ninguno
jsx.code.style.attribute.default.value.typebased=Basado en el tipo
to.indent.package.statement.children=&Aplicar sangría a los hijos de la declaración del paquete
javascript.formatting.options.panel.title=Opciones de formato
javascript.formatting.options.panel.coding.style=Estilo de codificación
javascript.formatting.options.panel.naming.conventions=Convenciones de nomenclatura
javascript.formatting.options.panel.comments=Comentarios
js.convert.parameters.to.object.intention.name=Convertir parámetros en objeto
js.convert.parameters.to.object.with.interface.intention.name=Convierta los parámetros en un objeto e introduzca la interfaz
js.convert.parameters.to.object.non.call.usage.will.not.be.updated=El uso que no sea de llamada no se actualizará
js.convert.parameters.to.object.usage.will.not.be.updated.for.contextual.type=El método implementa un método de interfaz. El método base no se actualizará
js.convert.parameters.to.object.usage.will.not.be.updated.for.spread=La llamada con argumentos extendidos no terminales no se actualizará
js.undefined.property.assignment.inspection.name=Asignación de propiedad no definida
js.undefined.property.assignment.inspection.message=La propiedad {0} no está definida en el tipo {1}
js.jquery.efficiency.inspection.name=Eficiencia de uso de JQuery
js.jquery.efficiency.inspection.message=Uso ineficiente de jQuery
js.jquery.efficiency.inspection.preface.with.id.selector=Prefacio con selector de ID
js.jquery.efficiency.inspection.allow.attribute.and.pseudo.selectors=Permitir atributos y pseudo-selectores
js.jquery.efficiency.inspection.attribute.used.message=Los selectores de atributos de jQuery pueden ser ineficientes
js.jquery.efficiency.inspection.pseudoselector.used.message=Los pseudo-selectores de jQuery pueden ser ineficientes
js.jquery.efficiency.inspection.duplicated.selector=Selector de jQuery duplicado
js.accessibility.check.inspection.name=Accesibilidad de @private y @protected miembros
ts.accessibility.check.inspection.name=accesibilidad de miembros 'privados' y 'protegidos'
js.convert.to.foreach.intention.name=Convertir a forEach en la matriz
js.consecutive.commas.in.array.literal.inspection.name=Comas consecutivas en literal de matriz
js.consecutive.commas.in.array.literal.inspection.message=Comas consecutivas en literal de matriz
js.consecutive.commas.in.array.literal.inspection.insert.undefined=Insertar 'indefinido'
js.check.function.signature.guess.optionality=Adivina la opcionalidad de los parámetros
js.check.function.signature.guess.optionality.hint=Si está desactivado, todos los parámetros sin escribir se consideran opcionales
es6.redundant.await.report.for.promises=Informe de promesas
es6.redundant.await.report.for.promises.hint=Siempre informará 'return await' como redundante, pero esto anula la función de seguimiento de pila asíncrono de V8
es6.missing.await.report.for.promises=Informe de promesas en declaraciones de devolución
es6.missing.await.report.for.promises.hint=Tener 'await' antes de una llamada de función asíncrona ayuda a V8 a proporcionar un seguimiento de pila asíncrono
es6.validation.inspection.name=Funciones de lenguaje experimentales
es6.validation.elements.are.not.supported={0}: la función no está incluida en ECMAScript 6
js.file.references.inspection.name=Validación de referencias de archivo
js.file.references.inspection.ignore.complex.cases=Ignorar casos complejos
js.referencing.arguments.outside.of.function.inspection.name=Hacer referencia a 'argumentos' fuera de la función
js.inspection.es6.modules.dependencies.family.name=Falta la declaración de importación
js.inspection.es6.modules.missing.import.or.require=Falta la declaración de import o la llamada require().
js.inspection.amd.modules.dependencies.family.name=Falta la dependencia del módulo AMD
js.inspection.promise.ignored.display.name=Se ignora el resultado de la llamada al método que devuelve una promesa
js.inspection.promise.ignored.problem.descriptor=Se ignora la promesa devuelta por {0}
js.inspection.promise.value.expected.problem.descriptor=La promesa devuelta por {0} se usa donde se espera un valor
js.flowjs.group.name=Comprobador de tipo de flujo
js.flowjs.config.inspection.name=Falta .flowconfig
js.flowjs.config.inspection.message=Sin .flowconfig asociado
js.flowjs.coverage.inspection.name=El código no está cubierto por Flow
js.flowjs.coverage.inspection.error.text=Este elemento no está cubierto por Flow
js.flowjs.config.inspection.to.project.path.name=Agregar .flowconfig a la raíz del proyecto
js.flowjs.config.inspection.to.module.path.name=Agregar .flowconfig a la raíz del contenido del módulo
js.flowjs.config.inspection.to.current.path.name=Agregar .flowconfig al directorio actual
js.flowjs.annotation.inspection.name=Errores de flujo
js.flowjs.flag.comment.placement.inspection.name=La bandera de flujo está fuera de lugar
js.flowjs.flag.comment.placement.inspection.error=El comentario del indicador de flujo no está al inicio del archivo
js.flowjs.flag.comment.placement.inspection.fix=Mover el comentario de la bandera de flujo al inicio del archivo
js.flowjs.flag.without.language.version=Indicador de flujo sin versión de idioma de flujo
js.extjs.unresolved.ext.xtype.inspection.name=Ext JS xtype sin resolver
js.frameworks.sencha.xtype.not.found=No se encontró la clase Ext JS para xtype ''{0}''
javascript.equality.comparison.with.coercion.family.name=Reemplazar sin coerción de tipo
javascript.equality.comparison.with.coercion.display.name=El operador de igualdad puede causar coerción de tipo
javascript.equality.comparison.with.coercion.error.string=La comparación #ref puede causar una coerción de tipo inesperada #loc
javascript.equality.comparison.with.coercion.fix=Reemplazar con ''{0}''
javascript.equality.comparison.with.coercion.options.label=Resalte los usos de ' ==' y '! =':
javascript.equality.comparison.with.coercion.option.always=Todos
javascript.equality.comparison.with.coercion.option.always.except.null=Todos excepto cuando se compara con null o typeof
javascript.equality.comparison.with.coercion.option.only.suspicious=Solo expresiones sospechosas
js.strict.mode.inspection.name=Modo no estricto usado
js.strict.mode.inspection.error={0} no está en modo estricto
js.strict.mode.inspection.fix=Agregar pragma "usar estricto"
js.strict.mode.inspection.redundant.pragma="use estricto" pragma es redundante
js.strict.mode.remove.pragma=Eliminar el pragma "use estricto"
js.class.member.initialization.inspection.name=Uso de una propiedad posiblemente no asignada en un inicializador estático
js.class.member.initialization.inspection.text=El campo ''{1}'' se declara después de ''{0}'' y posiblemente aún no esté asignado
js.class.member.initialization.inspection.text.id=El campo ''{0}'' hace referencia a sí mismo
js.assignment.used.as.condition.name=Asignación utilizada como condición
js.assignment.used.as.condition.text=<code>#ref </code>usado como condición
js.assignment.used.as.condition.fix=Reemplazar ''='' con ''{0}''
js.missing.switch.branches.inspection.name=a la declaración 'switch' le faltan ramas
js.missing.switch.branches.inspection.desc=La declaración ''switch'' omite casos: {0}
js.missing.switch.branches.ignore.with.default=Ignorar declaraciones de cambio con una rama predeterminada
js.unreachable.switch.branches.inspection.name=Rama 'case' inalcanzable de una declaración 'switch'
js.unreachable.switch.branches.inspection.desc=Rama 'caso' inaccesible
js.unreachable.switch.branches.ignore.with.dynamic=No mostrar esta advertencia en el contexto de un tipo dinámico
js.unreachable.switch.branches.remove=Eliminar la rama 'caso' inalcanzable
js.redundant.switch.problems.inspection.name=la declaración 'switch' es redundante y se puede reemplazar
js.redundant.switch.problems.inspection.empty=la declaración 'switch' está vacía
js.redundant.switch.problems.inspection.empty.remove=Eliminar la declaración 'switch' vacía
js.redundant.switch.problems.inspection.default=la declaración 'switch' contiene solo una cláusula 'predeterminada'
js.redundant.switch.problems.inspection.default.unwrap=Desenvolver declaración 'switch'
js.redundant.switch.problems.inspection.side.effects=y extrae efectos secundarios
js.redundant.switch.problems.inspection.single=la declaración 'switch' contiene solo una cláusula no predeterminada
js.redundant.switch.problems.inspection.single.replace=Reemplazar 'switch' con 'if'
js.switch.no.default=la declaración 'switch' no tiene una rama 'predeterminada'
js.switch.no.default.add=Crear rama predeterminada faltante
js.variable.problems.inspection.name=La variable se declara y se usa en diferentes cláusulas de 'caso'
js.variable.problems.inspection.desc=La variable ''{0}'' se declara en la cláusula ''{1}'' pero se utiliza en la cláusula ''{2}''
js.variable.problems.inspection.desc.ref.error=Error de referencia al acceder
js.variable.problems.ignore.desc=Ignorar para var-variables
js.inspection.package.json.dependencies=Dependencias no coincidentes en package.json
js.inspection.missing.amd.dependency=Falta la dependencia del módulo AMD
js.inspection.missing.import=Falta la declaración de importación
js.inspection.missing.module.dependency=Falta la dependencia del módulo
typescript.narrowed.to=Reducido a ''{0}''

typescript.suspicious.constructor.parameter.assignment=Asignación de parámetros sospechosa en el constructor. ¿Olvidaste agregar "esto"?
typescript.suspicious.constructor.parameter.assignment.desc=Asignación de parámetros sospechosa en el constructor
typescript.abstract.class.constructor.can.be.made.protected=El constructor de clases abstractas puede protegerse
typescript.make.constructor.protected=Hacer que el constructor esté protegido

typescript.private.field.modifiers.mix=Los campos con nombres privados no pueden tener modificadores de acceso 'público', 'privado' o 'protegido'

javascript.validation.message.flowjs.path=La ruta del flujo es incorrecta
javascript.validation.message.interface.members.cannot.have.access.modifiers=Los miembros de la interfaz no pueden tener modificadores de acceso
javascript.validation.message.interface.members.cannot.have.namespace.attributes=Los miembros de la interfaz no pueden tener atributos de espacio de nombres
javascript.validation.message.interface.members.cannot.be.final.modifiers=Los miembros de la interfaz no pueden ser definitivos
javascript.validation.message.static.modifier.is.allowed.only.for.class.members=El modificador estático solo está permitido para miembros de la clase
javascript.validation.message.interface.cannot.be.final.modifiers=La interfaz no puede ser final
javascript.template.context.type=JavaSc&ript y TypeScript
actionscript.template.context.type=Act&ionScript
interface.should.have.no.variable.declarations=La interfaz no debe tener declaraciones de variables
javascript.validation.message.implements.for.interface.not.allowed=La lista de implementos no está permitida para la interfaz
javascript.validation.message.interface.name.expected.here=Nombre de interfaz esperado aquí
javascript.validation.message.class.name.expected.here=Nombre de clase esperado aquí
javascript.validation.message.circular.dependency=Dependencia circular
javascript.validation.message.index.no.type=Un parámetro de firma de índice debe tener una anotación de tipo
javascript.validation.message.index.wrong.type=Un tipo de parámetro de firma de índice debe ser asignable a 'string | numero | símbolo'
javascript.fix.remove.circular.dependency=Eliminar dependencia circular
javascript.validation.message.more.than.one.externally.visible.symbol=Más de un símbolo visible externamente definido en el archivo

# estos elementos se utilizan implícitamente; consulte JSClosureCompilerSyntaxInspection.getNotImplementedTextId
javascript.validation.message.interface.method.not.implemented=El método {0} de la interfaz {1} no está implementado
javascript.validation.message.abstract.method.not.implemented=El método abstracto {0} de la clase {1} no está implementado
javascript.validation.message.abstract.get.accessor.not.implemented=El acceso de obtención abstracto {0} de la clase {1} no está implementado
javascript.validation.message.abstract.set.accessor.not.implemented=El descriptor de acceso del conjunto abstracto {0} de la clase {1} no está implementado
javascript.validation.message.interface.property.not.implemented=La propiedad {0} de la interfaz {1} no está implementada
javascript.validation.message.interface.get.accessor.not.implemented=La propiedad get accessor {0} de la interfaz {1} no está implementada
javascript.validation.message.interface.set.accessor.not.implemented=El acceso al conjunto de propiedades {0} de la interfaz {1} no está implementado

javascript.validation.message.class.method.incompatible=El método ''{0}'' en la clase ''{1}'' no se puede asignar al mismo método en la base ''{2}''
javascript.validation.message.class.property.incompatible=La propiedad ''{0}'' en la clase ''{1}'' no se puede asignar a la misma propiedad en la base ''{2}''
javascript.validation.message.class.method.not.implemented=El método {0} de la clase {1} no está implementado
javascript.validation.message.class.property.not.implemented=La propiedad {0} de la clase {1} no está implementada
javascript.validation.message.interface.call.signature.not.implemented=La firma de llamada de la interfaz {0} no está implementada
javascript.validation.message.interface.index.signature.not.implemented=La firma de índice de la interfaz {0} no está implementada
javascript.validation.message.class.setter.cannot.have.return.type=Un descriptor de acceso 'set' no puede tener un tipo de retorno
javascript.fix.remove.externally.visible.symbol=Eliminar símbolo visible externamente
javascript.fix.remove.abstract.keyword=Eliminar el modificador '' abstracto ''
javascript.fix.remove.static.keyword=Eliminar modificador 'estático'
javascript.fix.remove.modifier=Eliminar modificador
javascript.fix.implement.members=Implementar miembros
javascript.fix.implement.methods=Implementar métodos
javascript.fix.implement.fields=Implementar campos
javascript.implement.all.interfaces=Implementar todos los miembros
javascript.implement.required.interfaces=Implementar todos los miembros requeridos
javascript.implement.members.abstract=Implementar resumen de miembros

# Símbolos
javascript.parameter=Parámetro
javascript.local.variable=Variable local
javascript.global.variable=Variable global
javascript.global.function=Función global
javascript.local.function=Función local
javascript.global.decorator=Decorador
javascript.static.member.function=Función miembro estática
javascript.static.member.variable=Variable miembro estática
javascript.instance.member.variable=Variable miembro de instancia
javascript.instance.member.function=Función miembro de instancia
javascript.create.class.intention.name=Crear clase ''{0}''
javascript.create.interface.intention.name=Crear interfaz ''{0}''
choose.class.to.import.title=Clase para importar
javascript.fix.remove.override.modifier=Eliminar modificador de anulación
javascript.fix.remove.virtual.modifier=Eliminar modificador virtual
javascript.validation.message.attribute.was.specified.multiple.times=El modificador {0} se especificó varias veces
javascript.fix.remove.dynamic.modifier=Eliminar modificador dinámico
javascript.validation.message.function.override.for.object.method=El método heredado de Object no necesita anulación
javascript.validation.message.function.override.without.parent.method=El método no anula el método de la superclase
javascript.parser.message.expected.gt=Se esperaba >
javascript.parser.message.expected.lbracket=Se esperaba [
javascript.parser.message.expected.readonly=Se esperaba 'solo lectura'
javascript.module.name=Nombre del módulo
javascript.exported.variable=Variable exportada
javascript.exported.function=Función exportada
javascript.exported.class=Clase exportada
typescript.module.name=Nombre del módulo
typescript.type.alias.name=Escriba un alias
typescript.type.guard.name=Tipo de variable reducido por un protector de tipo
typescript.type.guard.name.disable=Deshabilitar el color de los tipos reducidos de protección de tipos
typescript.primitive.types.name=Tipos primitivos
typescript.type.parameter=Tipo de parámetro
typescript.remove.type.declaration=Eliminar declaración de tipo

generate.constructor.overloads.and.fields.chooser.title=Elija las sobrecargas para usar y los campos para inicializar
generate.getter.setter.chooser.title=Seleccionar campos para generar captadores y definidores
generate.to.string.chooser.title=Seleccionar campos para usar en la función toString
generate.getter.fields.chooser.title=Seleccionar campos para generar captadores
generate.setter.fields.chooser.title=Seleccionar campos para generar establecedores
methods.to.implement.chooser.title=Seleccionar métodos para implementar
members.to.implement.chooser.title=Seleccionar miembros para implementar
methods.to.override.chooser.title=Seleccionar métodos para anular
members.to.override.chooser.title=Seleccionar miembros para anular
fields.to.implement.chooser.title=Seleccionar campos para anular
no.candidates=Sin candidatos
no.methods.to.implement=No se han encontrado métodos para implementar
no.members.to.implement=No se han encontrado miembros para implementar
no.fields.to.implement=No se han encontrado campos para implementar
no.methods.to.override=No se han encontrado métodos para anular
no.members.to.override=No se han encontrado miembros para anular
no.variables.for.getter=No se han encontrado campos sin getter
no.variables.for.setter=No se han encontrado campos sin setter
no.variables.for.getter.setter=No se han encontrado campos sin getter y setter
javascript.validation.unused.import=Importación no utilizada
javascript.validation.fqn.to.replace.with.import=El nombre calificado se puede reemplazar con la declaración de importación
javascript.fix.optimize.imports=Optimizar importaciones
javascript.parser.message.expected.doc.tag.value=Valor de etiqueta esperado
javascript.parser.message.expected.doc.tag.name=Se esperaba el nombre de la etiqueta del documento
javascript.invalid.number.of.parameters=Número de argumentos no válido, esperado {0}
javascript.invalid.e4x.filter.query.receiver=Argumento de consulta de filtro e4x no válido, debe ser de tipo XML o XMLList
javascript.expression.type.implicitly.coerced.to.unrelated.type=El tipo de expresión {1} se coacciona implícitamente a un tipo no relacionado {0}
javascript.argument.type.mismatch=El tipo de argumento {1} no se puede asignar al tipo de parámetro {0}
javascript.initializer.type.mismatch=El tipo de inicializador {1} no se puede asignar al tipo de variable {0}
actionscript.binary.operand.type.mismatch=El tipo de argumento de operación binaria {0} no es compatible con el tipo {1}
javascript.incorrect.variable.type.mismatch=El tipo de variable {1} no se puede asignar al tipo {0}
javascript.term.does.not.evaluate.to.function=La expresión del método no es del tipo de función
javascript.term.does.not.evaluate.to.function.nullable=La expresión del método puede ser nula o indefinida
javascript.term.does.not.evaluate.to.function2=La propiedad no se puede invocar como función
javascript.term.does.not.evaluate.to.function.line.break=La expresión no es invocable. Si no se supone que sea una llamada, compruebe si falta un punto y coma
javascript.term.does.not.evaluate.to.function2.fix=Eliminar lista de argumentos
javascript.term.nullable.indexer.qualifier=La expresión indexada puede ser nula o indefinida
javascript.unused.import.remove=Eliminar 'importación' no utilizada
javascript.unused.import.remove.specifier=Eliminar elemento no utilizado
javascript.assigned.expression.type.mismatch=El tipo de expresión asignado {1} no se puede asignar al tipo {0}
javascript.vector.literal.element.type.mismatch=El tipo de elemento literal de vector {1} no se puede asignar al tipo {0}
javascript.type.is.not.assignable.to.type=El tipo {1} no se puede asignar al tipo {0}
javascript.no.call.signatures=El tipo asignado no contiene firmas de llamada
javascript.known.props.only=El literal de objeto solo puede especificar propiedades conocidas, pero las siguientes son adicionales: {0}
javascript.returned.expression.type.mismatch=El tipo de expresión devuelto {1} no se puede asignar al tipo {0}
javascript.insert.cast.fix=Insertar transmisión
javascript.insert.primitive.wrapper.fix.family.name=Ajustar con tipo primitivo
javascript.insert.generic.wrapper.fix.family.name=Envolver con tipo genérico
javascript.insert.wrapper.fix.text=Ajustar con ''{0}''
typescript.insert.cast.fix=Insertar afirmación de tipo
es6.insert.await.fix=Insertar espera
es6.change.to.default.fix=Usar importación predeterminada para ''{0}''
es6.change.to.named.import.fix=Usar importación con nombre para ''{0}''
typescript.insert.type.guard.fix.family=Insertar protector de tipo
typescript.insert.type.guard.surround=Incluir en ''{0}''
typescript.insert.type.guard.prefix=Prefijo con ''{0}''
typescript.insert.type.guard.postfix=Consulta como opcional con ''{0}''
typescript.insert.type.guard.nc=Reemplazar calificador con ''{0}''
typescript.insert.type.guard.nc.self=Reemplazar con ''{0}''
error.not.available.in.javascript.code={0} no está disponible en código JavaScript
cannot.modify.library.code=No se puede modificar la biblioteca o el código SDK
javascript.extract.method.title=Función de extracción
javascript.validation.message.function.override.incompatible.signature.generic=Anulación incompatible
javascript.validation.message.function.override.incompatible.access.modifier=Anulación incompatible, debería tener el modificador de acceso ''{0}''
javascript.validation.message.function.override.incompatible.signature=Anulación incompatible, debería tener la firma ''{0}''
javascript.validation.message.function.override.incompatible.signature2=Anulación incompatible, debería tener el tipo de retorno ''{0}''
javascript.validation.message.function.override.incompatible.signature3=Anulación incompatible, debería tener el tipo ''{0}''
javascript.validation.message.function.method.invalid.overridden.parameter.type=Anulación incompatible, debe tener el tipo ''{0}''
javascript.validation.message.interface.method.invalid.access.modifier=Implementación incompatible, debería tener un modificador de acceso 'público'
javascript.validation.message.interface.method.invalid.signature=Implementación incompatible, debería tener la firma ''{0}''
javascript.validation.message.interface.method.invalid.signature2=Implementación incompatible, debería tener el tipo de retorno ''{0}''
javascript.validation.message.interface.method.invalid.signature3=Implementación incompatible, debería tener get/set ''{0}''
javascript.validation.message.duplicate.catch.block=Bloque de captura duplicado #loc
javascript.validation.message.duplicate.catch.block.fix=Eliminar bloque de captura duplicado
javascript.validation.message.missing.catch.or.finally=Falta la cláusula de captura o finalización
javascript.validation.message.return.value.of.type.is.required=Se requiere el valor de retorno del tipo {0}
javascript.validation.message.return.statement.required=Se requiere declaración de devolución para el tipo de devolución no nulo
typescript.validation.message.invalid.module.member.modifier=''{0}'' no es un modificador válido para el miembro del módulo
javascript.validation.message.unresolved.component=Componente no resuelto
javascript.validation.message.constructor.in.mxml.is.not.allowed=El constructor no está permitido para la clase MXML
javascript.validation.message.super.constructor.call.should.be.in.constructor=La invocación del constructor de superclase debe estar en el cuerpo del constructor
javascript.fix.remove.constructor=Eliminar constructor
javascript.validation.message.package.shouldbe.first.statement=El paquete debe ser la primera declaración del archivo
javascript.metadata=Metadatos
javascript.class=Clase
javascript.interface=Interfaz
javascript.label=Etiqueta
javascript.function.arrow=Función de flecha
javascript.validation.message.file.should.be.under.source.root=El objeto está ubicado en un archivo fuera de la raíz de origen, ciertas funciones no estarán disponibles
javascript.validation.message.more.than.one.named.object.in.package=Objeto no único en el paquete
javascript.validation.message.unneeded.comma=Coma innecesaria
javascript.validation.message.remove.unneeded.comma.fix=Eliminar la coma innecesaria
javascript.validation.message.constructor.cannot.be.static=El constructor no puede ser estático
javascript.create.event.handler.intention.name=Crear controlador de eventos ''{0}''
javascript.validation.message.missed.super.constructor.call=Invocación de constructor de superclase perdida
javascript.validation.message.this.before.super.call='esto' no está permitido antes de la invocación del constructor de superclase
javascript.validation.message.baseMethod.before.super.call='super' no está permitido antes de la invocación del constructor de superclase
javascript.validation.message.base.constructor.in.not.derived=La llamada al constructor base solo está permitida en un constructor derivado
typescript.validation.message.base.constructor.must.be.first.statement=La llamada al constructor base debe ser la primera declaración en el constructor si una clase contiene propiedades inicializadas o propiedades de parámetros
javascript.fix.create.constructor.invoke.super=Crear constructor coincidente super
javascript.fix.create.invoke.super=Insertar invocación de constructor de superclase
javascript.interface.can.not.be.instanticated.message=No se puede crear una instancia de la interfaz
javascript.abstract.class.can.not.be.instanticated.message=No se puede crear una instancia de la clase abstracta
javascript.validation.message.set.method.should.be.void.or.without.type=El tipo de retorno de una definición de establecedor debe ser sin especificar o nulo
javascript.validation.message.set.method.should.have.one.parameter=Una definición de establecedor debe tener exactamente un parámetro
javascript.validation.message.get.method.should.have.no.parameter=Una definición de captador no debe tener parámetros
javascript.validation.message.get.method.should.be.valid.type=El tipo de retorno de una definición de captador no debe ser {0}
javascript.validation.message.access.modifier.allowed.only.for.class.members=Modificador de acceso permitido solo para miembros de la clase
javascript.validation.message.namespace.allowed.only.for.class.members=Espacio de nombres permitido solo para miembros de la clase
javascript.validation.message.access.modifier.allowed.only.for.package.members=Solo modificadores públicos/internos permitidos para miembros del paquete
javascript.validation.message.use.namespace.reference.or.access.modifier=Usar espacio de nombres O modificador de acceso
javascript.validation.message.one.visibility.modifier.allowed=Solo se permite un modificador de visibilidad (público, protegido, interno, privado)
javascript.validation.destructuring.without.initializer=La declaración de desestructuración debe tener un inicializador
javascript.fix.remove.access.modifier=Eliminar modificador de acceso
javascript.fix.remove.final.modifier=Eliminar modificador final
javascript.validation.message.final.modifier.allowed.only.for.methods=El modificador final solo se puede aplicar a clases y métodos de clase
javascript.fix.remove.namespace.reference=Eliminar la referencia del espacio de nombres
javascript.fix.remove.visibility.modifier=Eliminar modificador de visibilidad
javascript.incorrect.array.type.in.for-in=El tipo de clave de matriz debe ser String
javascript.validation.message.unexpected.type.for.rest.parameter=El parámetro de descanso no debe tener ningún tipo
typescript.validation.message.unexpected.type.for.rest.parameter=El parámetro de descanso debe ser un tipo de matriz o un genérico con restricción de matriz
typescript.validation.message.unexpected.type.for.rest.parameter.fix=Reemplazar con tipo de matriz
typescript.validation.message.class.invalid.context={0} debe estar en un contexto de archivo o módulo
javascript.fix.remove.type.reference=Eliminar referencia de tipo
javascript.validation.message.parameter.is.not.allowed.after.rest.parameter=No se permite ningún parámetro después del parámetro de descanso
javascript.validation.message.comma.is.not.allowed.after.rest.element=No se permiten comas después del elemento de descanso
javascript.validation.message.comma.is.not.allowed.after.last.parameter=No se permiten comas después del último parámetro.
javascript.fix.remove.comma=Eliminar coma
javascript.fix.remove.parameter=Eliminar parámetro
javascript.fix.remove.parameters=Eliminar parámetros
javascript.fix.remove.initializer=Eliminar inicializador
javascript.validation.message.parameter.should.be.initialized=El parámetro debe inicializarse
javascript.validation.message.parameter.non.optional.after.optional=Un parámetro obligatorio no puede seguir a un parámetro opcional
javascript.validation.message.parameter.rest.optional=Un parámetro de descanso no puede ser opcional
javascript.fix.initialize.parameter=Inicializar parámetro
javascript.validation.message.rest.parameter.should.not.be.initialized=El parámetro de descanso no debe inicializarse
javascript.validation.message.nested.classes.are.not.allowed=No se permiten clases anidadas
javascript.validation.message.nested.packages.are.not.allowed=No se permiten paquetes anidados
javascript.validation.message.implements.is.not.allowed=La cláusula de implementación no está permitida en ECMAScript estándar
generate.getter.fields.bindable.properties=&Propiedades enlazables
javascript.validation.message.arguments.with.rest.parameter=el objeto 'argumentos' no está disponible cuando se usa el parámetro rest
js.validate.types.inspection.name=No coinciden los tipos
typescript.validate.optional.parameter.inspection.error=El parámetro no puede tener un signo de interrogación ni un inicializador
typescript.validate.optional.parameter.inspection.fix.question=Eliminar el signo de interrogación
typescript.validate.generic.types.inspection.name=Discrepancia de tipo genérico
typescript.redundant.typescript.type.argument.inspection.name=Argumento de tipo redundante para un tipo genérico
typescript.duplicate.typescript.union.inspection.name=Componente de tipo unión o intersección duplicado
typescript.validate.generic.types.fix.delete=Eliminar argumento genérico
typescript.validate.generic.types.fix.add=Agregar argumento genérico
typescript.validate.generic.types.inspection.error.argument.number=El tipo genérico ''{0}'' requiere argumento (s) de tipo ''{1}''
typescript.validate.generic.types.inspection.error.argument.number.between=El tipo genérico ''{0}'' requiere entre {1} y {2} argumentos de tipo
typescript.validate.generic.types.inspection.error.not.empty.argument=La lista de argumentos de tipo no puede estar vacía
typescript.validate.generic.types.inspection.error.not.empty.parameter=La lista de parámetros de tipo no puede estar vacía
typescript.validate.types.any.inspection.name=Falta de coincidencia de tipos en "cualquier" contexto de tipos
js.incompatible.types.comparison.inspection.name=Comparación de expresiones que tienen tipos incompatibles
js.incompatible.types.comparison.message=La condición es siempre {0, choice, 0#false|1#true} ya que los tipos ''{1}'' y ''{2}'' no se superponen
javascript.validate.imports.name=Validación de importaciones
es6.validate.import.error=No se puede resolver el símbolo ''{0}''
es6.prefer.short.import.name=La importación se puede acortar
typescript.reference.to.umd.global=Referencia a un UMD global
typescript.field.can.be.made.readonly=El campo se asigna solo en el constructor y se puede hacer de solo lectura
javascript.suspicious.type.guard.desc=Verificación de guardia de tipo incorrecto
javascript.object.null.or.undefined.desc=El objeto es 'nulo' o 'indefinido'
javascript.suspicious.typeof.guard=Verificación 'typeof' no válida: ''{0}'' no puede tener el tipo ''{1}''
javascript.redundant.typeof.guard=Verificación 'typeof' redundante: ''{0}'' siempre tiene el tipo ''{1}''
javascript.falsy.typeof.guard='typeof' check es siempre falso: ''{0}'' siempre tiene el tipo ''{1}''
javascript.false.null.or.undefined.guard=La condición es siempre falsa
javascript.true.null.or.undefined.guard=La condición es siempre verdadera
typescript.suspicious.instanceof.guard=Verificación de 'instancia de' no válida: ''{0}'' tiene un tipo que no está relacionado con ''{1}''
typescript.redundant.instanceof.guard=Verificación 'instancia de' redundante: ''{0}'' tiene el tipo ''{1}'' o un subtipo de ''{1}''
typescript.redundant.instanceof.inheritor.guard=Verificación 'instancia de' redundante: ''{0}'' tiene el tipo ''{1}'' o un heredero de ''{1}''
javascript.object.is.null={0} es nulo
javascript.object.is.possibly.null={0} posiblemente sea nulo
javascript.object.is.undefined={0} no está definido
javascript.object.is.possibly.undefined={0} posiblemente no esté definido
javascript.object.is.null.or.undefined={0} es nulo o indefinido
javascript.object.is.possibly.null.or.undefined={0} posiblemente sea nulo o indefinido
typescript.smart.cast=El tipo de variable está restringido por un tipo de protección
typescript.smart.cast.hyperlink=Configurar fuente y fondo
typescript.missing.augmentation.import=Importación de aumento faltante
typescript.explicit.member.type.inspection.name=Tipos de miembros explícitos
typescript.config.inspection=validación tsconfig.json
typescript.config.inspection.libs=La biblioteca TypeScript requerida no está incluida en tsconfig.json
typescript.config.inspection.missing.option=Opción faltante en tsconfig.json
typescript.config.inspection.libs.fix=Habilitar biblioteca ''{0}'' en tsconfig.json
typescript.config.inspection.config.options.fix=Agregar ''{0}'' a tsconfig.json
typescript.config.inspection.fix.pattern=Agregar propiedad ''{0}''
typescript.config.inspection.path.mapping.info=Las asignaciones de ruta requieren la propiedad baseUrl
typescript.config.inspection.checkjs.info=La propiedad checkJs requiere la propiedad allowJs
typescript.redundant.declaration=La declaración de tipo coincide con el tipo inferido y se puede eliminar
unnecessary.parentheses.display.name=Paréntesis innecesarios
unnecessary.parentheses.problem.descriptor=Los paréntesis alrededor de <code>#ref</code>son innecesarios #loc
remove.unnecessary.parentheses.fix.text=Elimina los paréntesis innecesarios
typescript.specify.type.explicitly=Especifique el tipo explícitamente
typescript.specify.type.explicitly.from.hint=Agregar una anotación de tipo explícita
typescript.specify.all.param.types.explicitly=Especifique todos los tipos de parámetros explícitamente
typescript.specify.all.param.types.explicitly.from.hint=Agregar una anotación de tipo explícita a todos los parámetros
typescript.make.field.readonly=Hacer que el campo sea de solo lectura
typescript.unwrap.if=Desenvolver la rama 'if' y eliminar la rama 'else'
typescript.unwrap.else=Eliminar la rama 'if' y desenvolver la rama 'else'
es6.replace.import.action.name=Reemplazar con {0}
es6.replace.import.family.name=Reemplazar con una ruta más corta
js.validate.signature.inspection.name=Discrepancia de firma
find.usages.of.base.interface=Método {0} de {1}\nimplementa el método de {2}.\n¿Desea {3} el método base?
find.usages.of.base.class=Método {0} de {1} \ método noverrides de {2}.\n¿Desea {3} el método base?
javascript.validation.empty.component.type=La etiqueta del componente no debe estar vacía
javascript.fix.visibility.family=Solucionar problemas de visibilidad
javascript.fix.set.element.visibility=Hacer {0} {1}
javascript.fix.add.sharp=Agregar # al acceso de referencia
javascript.fix.remove.sharp=Eliminar # del acceso de referencia
javascript.fix.set.method.return.type=Hacer ''{0}'' devolver ''{1}''
javascript.fix.generate.argument.stubs=Generar stubs de argumentos
javascript.deprecated.symbol.replace.fix=Reemplazar el código obsoleto con {0}
javascript.deprecated.symbol.replace.fix.family=Reemplazar el código obsoleto con el reemplazo sugerido
javascript.label.visibility.public=Pu &blic
javascript.label.visibility.package_local=&interno
javascript.label.visibility.private=Pri &vate
javascript.label.visibility.protected=Pr &otected
move.members.refactoring.name=Mover miembros
move.members.dialog.title=Mover miembros
class.0.cannot.be.created=La clase de destino {0} no se puede crear porque existe un elemento calificado con el mismo nombre
javascript.visibility.public=público
javascript.visibility.internal=interno
javascript.visibility.private=privado
javascript.visibility.protected=protegido
entity.in.parent.description={0} en {1}
package.description=paquete {0}
0.with.1.visibility.in.the.target.class.is.not.accessible.from.2={0} con {1} visibilidad en la clase de destino no es accesible desde {2}
0.with.1.visibility.is.not.accessible.from.2={0} con {1} visibilidad no será accesible desde {2}

# Refactorización
javascript.refactoring.variable.used.as.lvalue=La variable que se incluirá se usa en el lado izquierdo de una tarea
javascript.refactoring.variable.value.is.changed.when.accessed.from.closure=El valor de la variable se cambia cuando se accede desde el cierre
javascript.refactoring.inline.variable.title=Variable en línea
javascript.refactoring.inline.function.title=Función en línea
javascript.refactoring.cannot.find.usages.of.definition.to.inline=No se pueden encontrar usos de la definición en línea
javascript.refactoring.searching.usages=Encontrar usos
javascript.refactoring.cannot.inline.not.initialized.variable=No se puede insertar la variable no inicializada
javascript.refactoring.cannot.inline.destructuring.variable.with.default=No se puede incorporar una variable de desestructuración con el valor predeterminado
javascript.refactoring.cannot.inline.destructuring.rest.variable=No se puede incorporar una variable de descanso de desestructuración
javascript.inline.element.is.not.used={0} nunca se usa
javascript.refactoring.inline.dialog.title=Inline {0}
javascript.refactoring.inline.all.message=Inline &todas las referencias y elimine el {0} ({1})
javascript.refactoring.inline.this.only=Incluya solo esta referencia y mantenga el {0}
javascript.refactoring.cannot.inline.function.defined.in.library=No se puede definir la función en línea en una biblioteca externa
javascript.refactoring.cannot.inline.function.referencing.arguments=La función en línea no puede hacer referencia a argumentos
javascript.refactoring.cannot.inline.interface.method=No se puede utilizar el método de interfaz en línea
javascript.refactoring.cannot.inline.function.referencing.rest.parameter=La función en línea no puede hacer referencia al parámetro de descanso
javascript.refactoring.cannot.inline.overrided.or.overridden.method=No se puede utilizar el método en línea que participa en la jerarquía
javascript.refactoring.cannot.inline.recursive.function=No se puede utilizar la función recursiva en línea
javascript.refactoring.cannot.inline.function.with.multiple.returns=No se puede funcionar en línea con múltiples puntos de salida
javascript.refactoring.cannot.inline.complex.expression.evaluation=No se puede evaluar una expresión compleja en línea
javascript.refactoring.cannot.inline.constructor=No se puede construir el constructor en línea
javascript.refactoring.cannot.inline.jsx.usage=No se puede utilizar la etiqueta JSX en línea
javascript.refactoring.cannot.inline.ambient.function=No se puede realizar una declaración en línea sin implementación
javascript.refactoring.function.to.es6.class.command=Convertir función {0} a clase
js.convert.to.es6.class=Convertir a clase
js.convert.to.es6.class.family.name=Convertir función y sus declaraciones de miembros a clase
js.move.type.to.file.family=Mover a un archivo con nombre coincidente
js.create.derived.type.family=Crear clase derivada/implementar interfaz
js.create.derived.type.class=Crear clase derivada
js.create.switch.cases=Crear ramas de 'cambio' faltantes
js.create.switch.cases.fix=Crear ramas faltantes: {0}
js.edit.object.literal=Editar valores de propiedades literales del objeto
js.create.derived.type.interface=Implementar interfaz
js.create.derived.type.abstract.class=Implementar clase abstracta
js.rename.file.to.match.type.name.family=Cambiar el nombre del archivo para que coincida con el nombre del tipo
js.rename.file.to.match.type.name=Cambiar el nombre del archivo a {0} para que coincida con el nombre de {1}
js.move.type.to.file.text=Mover {0} al archivo {1}
javascript.refactoring.function.to.es6.class.defineProperty.warning.text=Advertencia: conversión de propiedades creadas con \
  "Object.defineProperty", "Object.defineProperties" o "Object.create" \
  a ES6 la sintaxis puede afectar su enumerabilidad y configurabilidad
rename.destructuring.property.title=Cambiar el nombre de la propiedad de desestructuración
rename.destructuring.property.description=La propiedad de desestructuración hace referencia a varios miembros. \
  Se debe cambiar el nombre de las propiedades relacionadas, de lo contrario, el código puede dejarse inconsistente.
rename.type.members.title=Cambiar el nombre de los miembros de tipo
rename.type.members.union.intersection.mapped.description=Se detectaron usos de tipo de unión, intersección o mapeado. \
   Se debe cambiar el nombre de las propiedades relacionadas, de lo contrario, el código puede dejarse inconsistente.
rename.type.members.destructuring.description=Se ha detectado uso en propiedades de destrucción. \
  Se debe cambiar el nombre de las propiedades relacionadas, de lo contrario, el código puede dejarse inconsistente.
rename.containing.file.message=Cambiar el nombre del archivo que contiene
make.private=Hacer privado
choose.destination.scope=Elija el alcance del destino

# Desestructuración
javascript.find.usages.destructuring.target.dialog=La variable de desestructuración abreviada se inicializa con {0}.\n¿Qué usos desea encontrar?
javascript.destructuring.initializer=Inicializador {0}
javascript.destructuring.variable.only=Única variable en la desestructuración
javascript.rename.destructuring.target.dialog.title=La variable de desestructuración abreviada se inicializa con {0}
javascript.rename.choose.target.message=¿A cuál le gustaría cambiar el nombre?
javascript.rename.shorthand.target.dialog.title=La propiedad abreviada se inicializa con {0}
javascript.rename.shorthand.property.description=Propiedad
javascript.rename.file.with.related.title=Cambiar nombre de archivo
javascript.rename.containing.file.message=¿También desea cambiar el nombre del archivo y sus usos a {0}?
javascript.rename.related.declaration.message=¿También desea cambiar el nombre de {0} y sus usos a {1}?

javascript.uml.visibility.public=público
javascript.uml.visibility.protected=protegido
javascript.uml.visibility.package_local=protegido \\&\\& interno
javascript.uml.visibility.private=todos
javascript.uml.show.supers.header=Superclases para {0}
javascript.uml.show.implementations.header=Implementaciones de {0}
javascript.refactoring.asdoc.for.abstracts=ASDoc para resúmenes
0.is.not.allowed.in.interface={0} no está permitido en la interfaz
javascript.validation.message.static.method.in.interface=El método estático no está permitido en la interfaz
javascript.fix.remove.static.modifier=Eliminar modificador estático
javascript.validation.message.override.can.be.applied.to.method=La anulación solo se puede aplicar a la declaración de función
javascript.validation.message.dynamic.can.be.applied.to.class=El atributo dinámico se puede aplicar solo a la declaración de clase
0.is.static.it.cannot.be.moved.to.the.interface={0} es estático. No se puede mover a la interfaz.
javascript.illegal.variable.type.void=Tipo de variable ilegal: 'void'
javascript.cannot.return.expression.from.function.with.void.result.type=No se puede devolver un valor de una función con el tipo de resultado void
javascript.cannot.return.expression.from.function.with.void.result.type.fix=Eliminar valor de retorno
javascript.validation.message.function.override.for.interface=Anulación incompatible para el método de {0}
javascript.validation.message.incompatible.override=Anulación incompatible para miembro de {0}
class.does.not.have.inheritors.in.current.project={0} no tiene herederos en el proyecto actual
javascript.kind.unknown=elemento desconocido
js.unnecessary.semicolon.inspection.name=Punto y coma innecesario
js.unnecessary.semicolon.problem=Punto y coma innecesario #loc
js.unnecessary.semicolon.fix.name=Elimina el punto y coma innecesario
javascript.refactoring.extract.function.title=Función de extracción
javascript.refactoring.extract.function.bad.selection=El bloque seleccionado debe representar un conjunto de declaraciones o una expresión
javascript.refactoring.extract.function.multiple.exit.points=El fragmento seleccionado tiene varios puntos de salida
javascript.refactoring.extract.function.yield.and.return=El fragmento seleccionado contiene expresiones de rendimiento y declaraciones de retorno simultáneamente
javascript.refactoring.extract.function.no.loop.for.continue=No hay un bucle correspondiente para la declaración de continuación dentro del fragmento de código
javascript.refactoring.extract.function.no.loop.for.break=No hay un bucle correspondiente para la declaración de interrupción dentro del fragmento de código
javascript.refactoring.extract.function.no.switch.for.break=No hay un 'interruptor' correspondiente para la declaración de interrupción dentro del fragmento de código
javascript.refactoring.extract.function.function.used.before.declaring=La selección contiene la función que se usa antes de declarar
javascript.validation.message.constructor.cannot.have.custom.visibility=El constructor debe ser público o no tener visibilidad especificada
javascript.validation.message.can.not.override.final.method=No se puede anular el método final de {0}
top.level.package=paquete de nivel superior
top.level=nivel superior
javascript.parser.message.expected.dot=Esperando.
js.comparison.with.nan.inspection.name=Comparación con NaN
js.comparison.with.nan.inspection.problem=La comparación de igualdad con NaN siempre se evalúa como falsa
js.comparison.with.nan.inspection.problem2=La comparación de desigualdad con NaN siempre se evalúa como verdadera
js.comparison.with.nan.inspection.quickfix=Reemplazar con {0}isNaN(...)
js.add.double.quotes.quickfix=Ajustar con comillas dobles
js.constructor.returns.primitive.inspection.name=El constructor devuelve un valor primitivo
js.constructor.returns.primitive.inspection.problem=El valor primitivo devuelto por el constructor se perderá cuando se llame con 'nuevo'
js.constructor.returns.primitive.inspection.quickfix=Establece explícitamente el tipo de retorno en {0}
js.comment.matches.signature.inspection.name=El comentario JSDoc coincide con la firma de la función
js.comment.matches.signature.inspection.problem1=El parámetro {0} no se describe en JSDoc
js.comment.matches.signature.inspection.problem2=El parámetro {0} descrito en JSDoc no aparece en la firma de la función
js.comment.matches.signature.inspection.quickfix=Actualizar comentario JSDoc

livetemplate.description.fori=Crear bucle de iteración
livetemplate.description.iter=Iterar (for..of)
livetemplate.description.itera=Iterar (for await..of)
livetemplate.description.itin=Iterar (for..in)
livetemplate.description.itar=Iterar elementos de la matriz
livetemplate.description.ritar=Iterar elementos de la matriz en orden inverso
livetemplate.description.us=Inserta la declaración 'use estricto'
livetemplate.description.ref=Inserta un comentario de ruta de referencia
livetemplate.description.defi=Inserta la expresión define()
livetemplate.description.flow=Inserta la anotación @flow
livetemplate.description.importfrom=Declaración de importación - importar {b} desde 'a'
livetemplate.description.importns=Declaración de importación - importar * como b desde 'a'
livetemplate.description.importdefault=Declaración de importación - importar b desde 'a'
livetemplate.description.exportall=Declaración de exportación - exportar * desde 'a'
livetemplate.description.exportfrom=Declaración de exportación - exportar {b} de 'a'
livetemplate.description.exportitems=Declaración de exportación - exportar {b}

livetemplate.description.console.log=console.log()
livetemplate.description.console.warn=console.warn()
livetemplate.description.console.error=console.error()
livetemplate.description.console.info=console.info()
livetemplate.description.console.trace=console.trace()
livetemplate.description.console.assert=console.assert()

macro.js.suggest.variable.name=jsSuggestVariableName()
macro.js.suggest.imported.entity.name=jsSuggestImportedEntityName()
macro.js.suggest.index.name=jsSuggestIndexName()
macro.js.array.variable=jsArrayVariable()
macro.js.component.type.of=jsComponentTypeOf(Array)
macro.define.parameter=jsDefineParameter()
macro.js.suggest.default.variable.kind=jsSuggestDefaultVariableKind(Boolean)

javascript.validation.tag.must.be.last.child.of.root.tag=La etiqueta <{0}>debe ser la última hija de la etiqueta del documento raíz
javascript.validation.tag.must.be.first.child.of.root.tag=La etiqueta <{0}>debe ser la primera hija de la etiqueta del documento raíz
javascript.validation.tag.must.be.direct.child.of.fx.library.tag=La etiqueta <{0}>debe ser hija directa de la etiqueta <{1}>
javascript.validation.tag.must.have.exactly.one.child.tag=La etiqueta <{0}>debe tener exactamente una etiqueta secundaria
javascript.validation.tag.must.have.attribute.includein.or.excludefrom=La etiqueta <{0}>debe tener el atributo '' includeIn '' o '' excludeFrom ''
javascript.validation.only.this.tag.is.allowed.here=Aquí solo se permite la etiqueta <{0}>

# Marcadores de línea
linemarker.implements.invalid=<invalid>
linemarker.implements.text=Implementa {0} en {1}
linemarker.overrides.text=Anula {0} en {1}
linemarker.implements.several=Implementación de múltiples métodos de interfaz
linemarker.overridden=Anulado
linemarker.implemented=Implementado
linemarker.overriding=Anulando
linemarker.implementing=Implementando
linemarker.javascript.typescript=Marcadores de línea JavaScript/TypeScript

js.validate.json.inspection.name=Validar JSON
json.warn.about.comments.name=Advertir sobre comentarios en JSON
js.validate.jsdoc.inspection.name=Errores de sintaxis y referencias no resueltas en JSDoc
json.comment.problem.description=El estándar JSON no permite comentarios. Utilice JSMin o una herramienta similar para eliminar comentarios antes de analizar.
incompatible.json.element=El estándar JSON no permite este tipo de elemento
javascript.expected.class.or.descendant=Clase esperada {0} o descendiente
javascript.qualified.class.name.expected=Se espera un nombre de clase calificado
javascript.validation.message.unknown.metadata.annotation.used=Atributo de metadatos desconocido usado
javascript.validation.message.static.method.with.override=La función estática no puede tener un modificador de anulación
javascript.validation.message.set.method.type.is.different.from.getter=El método de acceso Set tiene un tipo que no es compatible con el tipo de acceso get, esperando ''{0}''
javascript.validation.message.get.method.type.is.different.from.setter=Obtener método de acceso tiene un tipo que no es compatible con el tipo de acceso establecido, esperando ''{0}''
typescript.validation.message.getter.and.setter.must.have.same.access.type=Getter y setter deben tener el mismo tipo de acceso
actionscript.validation.message.set.method.access.type.is.different.from.getter=Error del compilador de Flash 174646: el tipo de acceso del método de acceso establecido es diferente del tipo de acceso de acceso de acceso, esperando ''{0}''
actionscript.validation.message.get.method.access.type.is.different.from.setter=Error del compilador de Flash 174646: el tipo de acceso del método de acceso Get es diferente del tipo de acceso del descriptor de acceso establecido, esperando ''{0}''
javascript.validation.message.static.method.cannot.be.final=El método estático no puede ser definitivo
javascript.validation.message.vector.without.parameters=Vector sin tipo
javascript.validation.message.vector.without.parameters2=No se puede crear una instancia de un vector sin tipo
javascript.assign.parameter.to.field.intention.name=Asignar parámetro ''{0}'' al campo
javascript.fix.create.parameter=Crear parámetro ''{0}''
javascript.introduce.parameter.introduced.variable.value=&Valor:
action.JSExtractInterface.text=Extraer _Interface...
action.JSExtractInterface.description=Extraer interfaz de la clase seleccionada
0.is.not.a.legal.name=''{0}'' no es un nombre de clase legal
asdoc=ASDoc
item.already.exists={0} {1} ya existe
directory.already.contains.file=El directorio ''{0}'' ya contiene el archivo ''{1}''
turn.refs.to.super=Cambiar las referencias a super
extract.subclass.command.name=Extrayendo subclase {0} de {1}
extract.interface.command.name=Extrayendo interfaz
extract.type.alias.command.name=Alias ​​de tipo de extracción
new.actionscript.class.action.title=Crear clase de ActionScript
new.actionscript.class.command.name=Crear clase de ActionScript
new.actionscript.class.dialog.title=Nueva clase de ActionScript
new.actionscript.interface.dialog.title=Nueva interfaz ActionScript
new.actionscript.class.action.description=Crear nueva clase de ActionScript
class.template.title=Clase
class.with.supers.template.title=Clase con Supers
interface.template.title=Interfaz
extract.0.turn.refs=Ex&traer {0} y úselo siempre que sea posible
superclass.cannot.be.extracted.from.mxml.component=La superclase no se puede extraer del componente MXML.
superclass.cannot.be.extracted.from.type.alias=La superclase no se puede extraer del alias de tipo
superclass.cannot.be.extracted.from.enum=La superclase no se puede extraer de la enumeración
interface.cannot.be.extracted.from.type.alias=La interfaz no se puede extraer del alias de tipo
interface.cannot.be.extracted.from.enum=La interfaz no se puede extraer de la enumeración
javascript.fix.message.change.parameters.to.expected=Cambiar los parámetros a los esperados
javascript.fix.message.change.return.type.to.expected=Cambiar el tipo de retorno al esperado
js.last.comma.in.array.literal.inspection.name=Última coma innecesaria en el literal de matriz
js.last.comma.in.object.literal.inspection.name=Última coma innecesaria en el objeto literal
error.wrong.caret.position.method.name=El signo de intercalación debe colocarse en el nombre del método que se va a refactorizar.
changeSignature.vararg.not.last=El parámetro de descanso debe ser el último en la firma del método
parameter.type.is.not.specified=El tipo de parámetro ''{0}'' no está especificado.\n¿Continuar?
return.type.is.not.resolved=El tipo de retorno ''{0}'' no está resuelto.\n¿Continuar?
change.signature.column.name.initializer=Inicializador
change.signature.column.name.default.parameter=Parámetro predeterminado
change.signature.column.name.call.value=Valor en la llamada
change.signature.parameter.table.empty.message=Agregar nuevos parámetros con el botón '+'
required.parameters.are.not.permitted.after.optional.parameters=Los parámetros obligatorios no están permitidos después de los parámetros opcionales
javascript.fix.remove.setter.parameter.initializer=Eliminar el valor predeterminado del parámetro
javascript.validation.message.setter.parameter.cannot.have.initializer=La definición de Setter no puede tener parámetros opcionales
javascript.changeSignature.no.call.value=Se ha agregado un nuevo parámetro obligatorio ''{0}''.\nEspecifique un valor predeterminado que se usará en todas las llamadas existentes de este método.
es6.changeSignature.no.call.value=Se ha agregado un nuevo parámetro ''{0}''.\nEspecifique un valor predeterminado o un valor que se usará en todas las llamadas existentes de este método.
javascript.changeSignature.call.value.not.allowed=El valor predeterminado no está permitido para el parámetro ''{0}'', ya que no se especificó para los parámetros anteriores.
es6.changeSignature.call.value.not.allowed=El valor de la llamada no está permitido para el parámetro ''{0}'', ya que no se especificó para los parámetros anteriores.
change.signature.usage.view.declarations.header=Métodos a refactorizar
0.should.be.1=''{0}'' debe ser {1}
{0}.visibility.will.break.methods.hierarchy={0} con {1} visibilidad no podrá participar en la jerarquía
generate.delegate.method.chooser.title=Seleccionar métodos para generar delegados
generate.delegate.method.conflict.message=No se pueden generar delegados para miembros del mismo nombre a través de propiedades distintas
generate.delegate.method.conflict.message.title=No se pueden generar delegados
new.actionscript.class.uml.action.text=Clase de ActionScript
invalid.return.type.expression=El tipo de retorno ''{0}'' no es válido
invalid.parameter.type.expression=El tipo de parámetro ''{0}'' no es válido
type.is.not.resolved=El tipo ''{0}'' no está resuelto.\n¿Continuar?
invalid.field.type.expression=Tipo de campo no válido: ''{0}''
choose.field.type=Elija el tipo de campo
new.field.action.text=Campo
new.field.action.description=Crear nuevo campo en clase
create.field.dialog.title=Crear campo
create.field.command.name=Crear campo ''{0}''
field.initializer.is.not.specified=El inicializador de campo no está especificado
new.method.action.text=Método
new.method.action.description=Crear un nuevo método en clase
create.method.dialog.title=Crear método
create.button.text=&Crear
create.method.command.name=Crear método ''{0}()''
class.already.contains.method.warning=La clase ''{0}'' ya {1,choice,1#contiene|2#hereda} método '' {2}() ''. \n¿Continuar?
class.already.contains.field.warning=La clase ''{0}'' ya contiene el campo ''{1}''. \n¿Continuar?
declare.static=Declarar &static
new.constructor.action.text=Constructor
new.constructor.action.description=Crear constructor de clase
create.constructor.dialog.title=Crear constructor
change.method.signature.fix.text=Cambiar {0} firma
change.method.signature.and.update.delegating.call.fix.text=Cambiar la firma {0} para que coincida con la llamada {1} y la llamada de actualización
change.method.signature.and.update.delegating.call.noname.fix.text=Cambiar la firma para que coincida con la llamada {0} y la llamada de actualización
change.method.signature.delegating.default.text=delegar
change.method.signature.fix.family.name=Cambiar la firma del método
change.method.signature.and.update.delegating.call.fix.family.name=Cambiar la firma del método y actualizar la llamada de delegación
javascript.callback.signature.mismatch=La devolución de llamada debe tener un solo parámetro con el tipo de evento
javascript.callback.signature.mismatch.event.class=La devolución de llamada debe tener un solo parámetro con el tipo {0}
json.filetype.description=archivos JSON
js.uml.presentable.name=ActionScript/Flex

# Configuración
settings.javascript.root.configurable.name=JavaScript
settings.javascript.linters.configurable.name=Herramientas de calidad del código
Settings.JavaScript.Linters.settings.description=Herramientas de calidad del código
settings.javascript.linters.autodetect.disabled=&Desactivar {0}
settings.javascript.linters.autodetect.configure.automatically=&Configuración {0} automática
settings.javascript.linters.autodetect.configure.automatically.help.text={0} usará el paquete {1} en el directorio node_modules \
  y {2} archivos de configuración ubicados en la misma carpeta que el archivo actual o cualquiera de sus carpetas principales.
settings.javascript.linters.autodetect.configure.manually=&Configuración {0} manual
settings.javascript.linters.flowjs.configurable.name=Flow JS
settings.javascript.linters.jshint.configurable.name=JSHint
settings.javascript.prefer.strict=Prefiere el modo e&stricto
settings.javascript.only.type.based.completion=Solo basado en tipo y finalización
settings.javascript.opt.chain.completion=Sugerir elementos con &encadenamiento opcional para tipos que aceptan valores NULL
settings.javascript.overrides.completion=Expanda los cuerpos del método al finalizar para anulaciones
settings.javascript.var.names.completion=Sugerir &nombres de variables y parámetros
settings.javascript.field.names.completion=Sugerir nombres para clases y campos
settings.javascript.var.names.completion.desc=Completar nombres
settings.javascript.var.names.completion.types=Agregar y escribir anotaciones para nombres de parámetros sugeridos
settings.javascript.var.names.completion.names.only=sin tipos
settings.javascript.var.names.completion.types.for.params=con tipos para parámetros de función
settings.javascript.var.names.completion.types.for.params.fields=con tipos de parámetros y campos
settings.javascript.var.names.completion.types.except.fields=con tipos en todas partes, excepto en los campos
settings.javascript.var.names.completion.types.everywhere=con tipos en todas partes
settings.javascript.only.type.based.completion.tooltip=Mostrar menos sugerencias de finalización según la información del tipo. Puede mejorar significativamente el rendimiento.
settings.javascript.lang.templates.configurable.name=Plantillas
es6.auto.import.options.completion.add.imports=Agregar importaciones de ES6 al completar el código
es6.auto.import.options.title=TypeScript / JavaScript
typescript.auto.import.options.add.imports=Agregar importaciones de TypeScript automáticamente
typescript.auto.import.options.add.imports.on.the.fly=Importaciones inequívocas sobre la marcha
typescript.auto.import.options.add.on.code.completion=Al completar el código
typescript.auto.import.options.show.popup=Con ventana emergente de importación
js.import.options.merge.import=Fusionar importaciones para miembros del mismo módulo
js.import.options.use.node.resolution=Usar la importación de directorio cuando index.js esté disponible (resolución de módulo de estilo nodo)
js.import.options.use.explicit.js.extension=Usar extensión de archivo en el nombre del módulo
ts.import.options.use.explicit.js.extension=Use la extensión de archivo .js en el nombre del módulo
js.add.members.to.type.desc=Agregar miembros a la clase o interfaz
js.add.members.to.type=Agregar miembros {0} a ''{1}''
js.import.options.sort.members=Ordenar miembros importados
js.import.options.sort.module.name=Ordenar importaciones por módulos
es6.import.options.paths=Use alias de ruta:
es6.import.options.paths.help=Esta opción configura el estilo de las rutas utilizadas en las declaraciones de importación. \
<br><br>Con \u201CAlways \u201D seleccionado, el IDE siempre usará alias de la configuración webpack, system.js o jsconfig.json al agregar importaciones. \
<br><br>Con \u201COsólo en archivos fuera de las rutas especificadas \u201D, el IDE utilizará rutas relativas para las importaciones entre los archivos para los que se define el alias. En todos los demás archivos se utilizará la asignación de ruta. \
<br><br>Con \u201CNever \u201D, no se usarán los alias.
typescipt.import.options.paths.help=Esta opción configura el estilo de las rutas utilizadas en las declaraciones de importación. \
<br><br>Con \u201CAlways \u201D seleccionado, el IDE siempre usará asignaciones de ruta de tsconfig.json al agregar importaciones. \
<br><br>Con \u201COsólo en archivos fuera de las rutas especificadas \u201D, el IDE utilizará rutas relativas para las importaciones entre los archivos para los que se define la asignación. En todos los demás archivos se utilizará la asignación de ruta. \
<br><br>Con \u201CNever \u201D, no se utilizarán las asignaciones de ruta.
typescript.import.options.paths=Use asignaciones de ruta de tsconfig.json:
typescript.import.options.use.config=Use rutas relativas a tsconfig.json
javascript.import.options.use.resource.root=Use rutas relativas al proyecto, recurso o raíces de fuentes
typescript.import.options.blacklist.title=No importar exactamente desde:
typescript.import.options.blacklist.change.button=Cambiar módulos
typescript.import.options.blacklist.change.dialog.text=Nombre del módulo
typescript.import.options.blacklist.change.dialog.title=Agregar módulo
js.flow.settings.executable.label=Paquete de &Flow o ejecutable:
js.flow.settings.executable.dialog.title=Seleccionar paquete de flujo o ejecutable
js.flow.services.label=Utilice el servidor de Flow para:
js.flow.enable.type.checking=Verificación de tipos
js.flow.enable.other.services=Navegación, finalización de código y sugerencias de tipo
js.flow.enable.flow.service.error=Ruta incorrecta al flujo
js.flow.enable.flow.service.error.empty=El ejecutable Path to Flow está vacío
js.flow.enable.flow.service.error.on.checking=Error al verificar la ruta del flujo: {0}
js.flow.enable.flow.service.error.message={0}. Deshabilite todos los servicios de Flow o proporcione una ruta válida al ejecutable.
js.flow.settings.auto.save=Guarde todos los archivos modificados automáticamente
js.flow.settings.auto.save.warning=Flow comprueba el archivo actual solo cuando se guardan todos los demás archivos modificados.
js.flow.settings.auto.save.warning.lsp=Esto permite que Flow siempre muestre el estado de error actualizado.
js.dialect.settings.dialog.title=Versiones de idioma JavaScript
js.dialect.settings.caption=
js.dialect.settings.tableTitle=Lenguaje
js.dialect.settings.override.question=¿Anular las versiones de idioma de los directorios y archivos secundarios?
js.dialect.settings.override.title=Anular la configuración de versiones de idioma
js.dialect.settings.empty.text=Agregue directorios con el botón + y seleccione versiones de JavaScript
js.dialects.customized.label=Personalizado por directorio
configure.code.completion.settings=Configure los ajustes de finalización del código

# Bower
settings.javascript.bower.configurable.name=Bower
bower.packages.view.dependencies=Dependencias:
bower.package=paquete &Bower:
bower.json=&bower.json:
bower.correct.path=Corrija la ruta a {0}
bower.node.interpreter=Intérprete de nodo
bower.package.name=Paquete Bower

node.interpreter.mnenonic=&Intérprete de node:

# Gestión de versiones de idioma JS
js.language.version.combo.es5=ECMAScript 5.1
js.language.version.combo.es5.description=
js.language.version.combo.js185=JavaScript 1.8.5
js.language.version.combo.js185.description=Implementación de ECMAScript específica de Firefox obsoleta. Considere la posibilidad de cambiar.
js.language.version.combo.es6=ECMAScript 6+
js.language.version.combo.es6.description=ECMAScript 2015 \u20132019 y algunas propuestas
js.language.version.combo.jsx=React JSX
js.language.version.combo.jsx.description=JSX en ECMAScript 6
js.language.version.combo.nashorn=Nashorn JS
js.language.version.combo.nashorn.description=Implementación de JavaScript en Java
js.language.version.combo.flow=Flow
js.language.version.combo.flow.description=Flow y JSX en ECMAScript 6
js.language.version.label=versión en lenguaje JavaScript
js.language.version.not.supported.by.browsers=Use un compilador especial para JavaScript con esta versión
js.switch.to.jsx.inspection.dismiss=Descartar
ts.switch.to.jsx.inspection.name=Cambiar la extensión del archivo a .tsx
javascript.change.language.level.message=Cambiar la versión del lenguaje JavaScript a {0}
javascript.change.language.level.family=Cambiar la versión del lenguaje JavaScript

# Gestión de la biblioteca JS
js.library.attach.debug=Adjuntar y depurar versión (es)...
js.library.attach.release=Adjuntar y publicar versión (es)...
js.library.select.debug=Seleccione un archivo o directorio con versiones de depuración
js.library.select.release=Seleccione un archivo o directorio con versiones de lanzamiento
js.library.unresolved.url.inspection.name=No hay una biblioteca almacenada localmente para el enlace HTTP.
js.library.download.fix=Descargar biblioteca
js.library.downloading.library=Descargando biblioteca
js.library.documentation=Documentación
js.library.configurable.name=Bibliotecas
js.library.download.stubs.label=Apéndices de la comunidad de TypeScript

choose.super.method=<html><body>Elija el súper método de <b>{0}</b>({1} encontrado)</body></html>
choose.super.function=<html><body>Elija la súper función de <b>{0}</b>({1} encontrada)</body></html>
choose.super.field=<html><body>Elija el supercampo de <b>{0}</b>({1} encontrado)</body></html>
choose.super.classifier=<html><body>Elija Superclase o Interfaz de <b>{0}</b>({1} encontrado)</body></html>
choose.subclass=<html><body>Elija la subclase de <b>{0}</b>({1} encontrada)</body></html>
choose.implementing.class=<html><body>Elija Implementación de <b>{0}</b>({1} encontrado)</body></html>
choose.overridden.method=<html><body>Elija el método anulado de <b>{0}</b>({1} encontrado)</body></html>
choose.overridden.function=<html><body>Elija la función anulada de <b>{0}</b>({1} encontrada)</body></html>
choose.implementing.method=<html><body>Elija Implementación de <b>{0}</b>({1} encontrado)</body></html>
javascript.parser.message.expected.newline.or.semicolon=Esperando nueva línea o punto y coma
javascript.invalid.delete.target.message=Objetivo del operador de eliminación no válido, se espera una referencia al campo
javascript.with.statement.is.not.allowed.in.strict.mode.message=Con declaración no se permite en modo estricto
javascript.validation.message.redefining.is.not.allowed=No se permite redefinir {0}
javascript.validation.message.referencing.arguments.caller.callee.is.not.allowed=No se permite hacer referencia a 'caller' y 'callee' de argumentos
javascript.validation.message.referencing.function.arguments.property.is.not.allowed=No se permite hacer referencia a la propiedad de la función 'argumentos'
javascript.validation.message.arguments.is.readonly='argumentos' es de solo lectura
javascript.validation.message.eval.cannot.be.assigned='eval' no se puede asignar en modo estricto
javascript.octal.literals.are.not.allowed.es6.message=No se permiten literales octales con prefijo '0'. Utilice el prefijo '0o' en su lugar
javascript.octal.literals.are.not.allowed.es5.message=Los literales octales con prefijo '0' están obsoletos y no se recomienda su uso
javascript.octal.sequences.are.not.allowed.message=No se permiten secuencias de escape octales
javascript.invalid.extended.unicode.escape=Un escape Unicode extendido solo permite valores entre 0x0 y 0x10FFFF
javascript.octal.literals.are.not.allowed.in.strict.mode=No se permiten literales octales en modo estricto
javascript.octal.literals.warn.always=Advertir sobre literales octales obsoletos en el código ES5
javascript.validation.message.only.one.default.is.allowed=Solo se permite una cláusula predeterminada en Switch
javascript.fix.remove.default=Eliminar cláusula predeterminada
javascript.namespace.initializer.should.be.string.or.another.namespace.reference=El inicializador del espacio de nombres debe ser una cadena literal u otra referencia al espacio de nombres
javascript.validation.message.accessor.could.not.be.nested.under.other.function=Los métodos de acceso no se pueden anidar dentro de otras funciones
javascript.validation.message.es5.function.declarations.allowed.on.top.level.or.function=La declaración de función que no está en el nivel superior de un programa o función está prohibida
class.chooser.not.available.in.dumb.mode=El selector no está disponible cuando la actualización del índice está en curso.
choose.super.class.title=Elija Superclase
choose.base.component.title=Elija Superclase
choose.super.interface.title=Elija Super Interfaz
0.is.not.accessible.from.1={0} no será accesible desde {1}
javascript.constructor.call.without.new.message=Llamada al constructor sin nueva
javascript.qualified.name.is.not.imported.message=El nombre calificado no se importa #loc
javascript.element.is.not.accessible.message=El elemento no es accesible #loc
javascript.protected.member.is.not.accessible.message=El miembro protegido no es accesible #loc
javascript.protected.constructor.is.not.accessible.message=El constructor protegido no es accesible #loc
javascript.private.member.is.not.accessible.message=Miembro privado no es accesible #loc
javascript.export.only.member=El elemento es solo para exportación
javascript.private.constructor.is.not.accessible.message=El constructor privado no es accesible #loc
javascript.public.member.is.not.accessible.via.sharp.message=No se puede hacer referencia al miembro público mediante # -syntax #loc
javascript.private.member.is.not.accessible.via.sharp.message=No se puede hacer referencia a los # miembros privados a través de # -syntax #loc
javascript.private.member.is.not.accessible.without.sharp.message=No se puede hacer referencia a un miembro privado sin # -syntax #loc
javascript.private.member.obsolete.syntax.name=#- acceso a campos privados sin 'esto' explícito.
javascript.private.member.obsolete.syntax=#- no se puede acceder a los campos privados sin un "esto" explícito. Calificatorio
javascript.jsdoc.protected.member.is.not.accessible.message=El miembro protegido no es accesible #loc
javascript.jsdoc.private.member.is.not.accessible.message=El miembro privado no es accesible #loc
javascript.static.member.is.not.accessible.message=El miembro estático no es accesible #loc
javascript.instance.member.is.not.accessible.message=El miembro de la instancia no es accesible #loc
javascript.element.need.to.be.exported=El elemento no se exporta
javascript.element.need.to.be.imported=El elemento no se importa
javascript.element.default.instead.named=Se utiliza la importación predeterminada en lugar de la importación con nombre
javascript.element.need.to.be.included.to.config=El archivo correspondiente no está incluido en tsconfig.json
javascript.element.is.export.only=El elemento es solo para exportación
javascript.argument.types.mismatch=Los tipos de argumentos no coinciden con los parámetros
javascript.member.from.unopened.namespace.message=Miembro del espacio de nombres sin abrir #loc
javascript.property.is.read.only.message=La propiedad es de solo lectura #loc
javascript.property.is.write.only.message=La propiedad es de solo escritura #loc
javascript.assume.uppercase.functions.to.be.constructors=Suponga que solo las funciones en mayúsculas son constructores
javascript.not.a.constructor.call.message=No es una llamada de constructor
cannot.refactor.anonymous.function=El análisis de sitios de llamadas se evita debido al uso existente que no es de llamadas.
change.signature.method.references.arguments=La función hace referencia a argumentos, el código puede romperse después de cambiar la firma
change.signature.call.expression.contains.spreads=La llamada a la función contiene argumentos extendidos. El uso no se modificará.
change.signature.tagged.template.issue=La invocación de plantilla etiquetada no se puede actualizar. El uso no se modificará.
change.signature.conflict.incompatible.override=Anular {0} tiene un número de parámetros diferente al refactorizado {1}. {2} se ignorará durante la refactorización.
change.signature.conflict.incompatible.implementation=La implementación de {0} tiene un número de parámetros diferente al refactorizado {1}. {2} se ignorará durante la refactorización.
change.signature.conflict.eliminating.parameter.property.breaks.usages=Al convertir la propiedad del parámetro en un parámetro simple, se interrumpe el uso del campo de {0}
change.signature.conflict.readonly.parameter.property.write.usage=Hacer {0} solo lectura interrumpe un uso que no es de lectura
javascript.missed.argument.for.parameter=Falta el argumento del parámetro {0}

# Configuración de plegado de código
checkbox.collapse.object.literals=Literales de objeto
checkbox.collapse.one.line.function.literals=Funciones de una línea en JavaScript y TypeScript
checkbox.collapse.array.literals=Literales de matriz
checkbox.collapse.xml.literals=Literales XML
checkbox.collapse.ts.imports=Importaciones de TypeScript
checkbox.collapse.js.imports=Importaciones de JavaScript
change.signature.value.column.title=Valor
change.signature.column.name.optional.flag=Opcional
change.signature.column.name.modifier=Modificador

# Flujo general
javascript.flow.error.panel.all.errors=Mostrar todos los errores
js.flow.all.servers.action.restart=Reiniciar todos los servidores de Flow
js.flow.has.unsaved.files=No se realizó el resaltado porque se modificaron algunos archivos
js.flow.tool.window.name=Flow
flow.js.get.type=Flow JS: obtener tipo
flow.show.error.details=Mostrar detalles del error

# Configuración de estilo de código
space.before.name.value.separator=Antes del separador nombre-valor de propiedad ':'
space.after.name.value.separator=Después del separador de nombre-valor de propiedad ':'
space.before.function.left.parenth=En expresión de función
actionscript.space.after.dots.in.rest.parameter=Después de '...' en el parámetro de descanso
space.after.dots.in.rest.spread=Después de '...' en reposo/propagación
space.before.generator.mult=Antes de '*' en el generador
space.after.generator.mult=Después de '*' en el generador
spaces.within.object.type.braces=Llaves de tipo literal de objeto
space.before.type.colon=Antes del tipo de referencia, dos puntos ':'
space.after.type.colon=Después del tipo de referencia, dos puntos ':'
space.before.class.lbrace=Llave izquierda de clase
space.before.class.interface.module.lbrace=clase/interfaz/módulo llave izquierda
spaces.within.object.literal.braces=llaves literal de objeto
spaces.within.import.braces=llaves de importación/exportación de ES6
spaces.within.indexer.brackets=Corchetes de acceso al índice
spaces.within.array.initializer=Corchetes de matriz
spaces.within.union.and.intersection=Tipos de unión e intersección
spaces.within.type.assertion=Tipo de aserciones
spaces.arrow.function=Función de flecha (=>)
spaces.async.arrow.function=En función de flecha asíncrona
spaces.within.interpolation.expressions=Expresiones de interpolación
spaces.within.unary.additive=Operadores aditivos unarios (+,-,++,--)
spaces.after.unary.not=Después de unario 'not' (!) y '!!'
spaces.before.unary.not=Antes unario 'not' (!) y '!!'
js.blank.lines.around.method=Método Around:
js.blank.lines.around.function=Función alrededor:
js.spaces.in.flow.category=En flujo
js.wrap.settings.import=Importación/exportación de ES6
js.align.properties=Alinear propiedades del objeto:
js.align.properties.none=No alinear
js.align.properties.on.colon=En dos puntos
js.align.properties.on.value=En valor
js.function.call.parentheses=Paréntesis de llamada de función
js.function.declaration.parentheses=Paréntesis de declaración de función
js.function.brace.style=En declaración de función
js.function.expression.brace.style=En expresión de función
js.function.parameters.wrap=Parámetros de declaración de función
js.function.call.wrap=Argumentos de llamada de función
js.space.before.function.left.brace=Función llave izquierda
js.format.cstyle.comments=Alinear multilínea
js.chained.call.dot.on.next.line='.' en nueva línea
js.quote.marks=Comillas
js.generated.use.public.modifier=Usar modificador 'público'
js.generated.use.as.cast=Preferir conversiones de tipo 'as'
js.generated.types=Tipos
js.generated.types.settings.link=Configuración de estilo de código para tipos explícitos
js.generated.explicit.types=Prefiere tipos explícitos para:
js.generated.explicit.var.types=Variables y campos
js.generated.explicit.return.types=Devuelve la declaración de función
js.generated.explicit.return.expression.types=Devuelve la expresión de la función
js.trailing.comma=Coma de tratamiento:
js.trailing.comma.keep=Mantener
js.trailing.comma.remove=Eliminar
js.trailing.comma.whenMultiline=Agregar cuando hay varias líneas
js.extends.list.wrap=Extiende la lista
js.align.multiline.extends.list=Alinear cuando hay varias líneas
js.extends.keyword.wrap=Extiende la palabra clave
js.wrap.settings.union.and.intersection.types=Tipos de unión e intersección
js.code.style.object.literals.category.name=Objetos
js.code.style.align.caption=Alinear
js.code.style.align.from.clause.caption=Alinear cláusulas 'desde'
js.wrap.settings.var.group.name=Declaraciones de variables
js.code.style.do.not.align.var.statement=No alinear
js.code.style.align.var.statements=Cuando es multilínea
js.code.style.align.var.statements.and.assignments=Cuando está agrupado
js.code.style.array.group.name=Matrices
js.array.new.line.after.left.bracket=Nueva línea después de '['
js.array.new.line.before.right.bracket=Coloque ']' en la nueva línea

js.method.can.be.static=El método puede ser estático
js.method.can.be.static.option=Verificar solo métodos 'privados'
make.method.static=Hacer 'estático'
typescript.fix.change.member.access=Hacer ''{0}''
js.fix.change.member.access.to.sharp=Hacer privado usando '#'
declare.event.0=Declarar evento ''{0}''
js.variable.might.not.been.initialized=Es posible que la variable no se haya inicializado #loc
js.variable.initializer.is.redundant=El inicializador de variable es redundante #loc
js.value.assigned.is.never.used=El valor asignado nunca se usa #loc
javascript.fix.change.type=Cambiar el tipo ''{0}'' a ''{1}''
javascript.fix.change.parameter.type=Cambiar el tipo de parámetro ''{0}'' a ''{1}''
javascript.change.jsdoc.type.family.name=Cambiar el tipo de elemento en JSDoc
change.signature.dialog.title=Cambiar firma de {0}
javascript.fix.add.enum.values=Agregar valores de enumeración explícitos
javascript.fix.add.string.enum.values=Agregar valores de enumeración de cadena que coincidan con los nombres de campo
javascript.fix.create.implements=Hacer ''{0}'' implementar ''{1}''
javascript.fix.create.inheritor.family=Heredar del super tipo
javascript.fix.implement.family=Implementar en clases derivadas
javascript.fix.implement.chooser.title=Implementar miembro en
javascript.fix.implement.chooser.all=Todas las clases
javascript.fix.implement=Implementar {0}
javascript.fix.create.extends=Hacer ''{0}'' extender ''{1}''
javascript.report.unused.properties=Informar propiedades no utilizadas
javascript.report.unused.definitions=Informar definiciones no utilizadas
javascript.check.global.definitions=Verificar asignaciones en el alcance global
javascript.strictly.check.global.vars=Informar las variables globales no declaradas como error
javascript.strictly.check.object.properties=Informar propiedades no declaradas como error
javascript.strictly.check.global.functions=Informar funciones globales no declaradas como error
inspection.edit.options.inspection.text=Editar opciones de validación
change.signature.column.type=Tipo
change.signature.column.name=Nombre
javascript.invalid.invoker.target=Destino de llamada no válido
js.declarations.at.scope.start.inspection=Las declaraciones de variables están al inicio del alcance
js.make.single.var.statement=Hacer una declaración var única
js.declaration.is.not.at.scope.start=La declaración Var no está al inicio del alcance
js.move.to.scope.start=Mover la instrucción var al inicio del alcance
js.primitive.type.wrapper.usage.inspection=Envoltorio de objeto de tipo primitivo utilizado
js.replace.with.type.cast.to.primitive=Reemplazar con el tipo de conversión a {0}
js.assigning.to.primitive.type.property=El valor asignado a la primitiva se perderá
js.primitive.type.improper.instantiation.inspection={0} la creación de instancias se puede simplificar
js.replace.with.literal=Reemplazar con {0} literal
non.ascii.identifiers.inspection.name=Identificadores con símbolos no ASCII
non.ascii.identifiers.only.ascii=Permitir solo nombres ASCII
non.ascii.identifiers.non.ascii.found=<html>El nombre contiene símbolos que no son ASCII: {0} </html>
non.ascii.identifiers.mixed.set=<html>El nombre contiene símbolos ASCII y no ASCII: {0} </html>

class.name.invalid=<inválido>
element.name.anonymous=<anonymous>
element.name.default=<predeterminado>
duplicate.parameter.name=Nombre de parámetro duplicado: {0}
rename.accessors.dialog.title=Cambiar nombre de campo
rename.accessors.dialog.text=¿Le gustaría cambiar el nombre de los accesos de propiedad a ''{0}'' también?
insert.new.keyword.fix.name=Insertar nueva palabra clave
insert.this.keyword.fix.name=Agregar este calificador
insert.class.fix.name=Agregar calificador de nombre de clase
replace.implements.keyword.fix.name=Cambiar 'implementos' a 'extends'
superclass.label.text=&Superclase:
varible.name.column.title=Nombre
varible.value.column.title=Valor
custom.variables.step.title.label.text=&Variables personalizadas en la plantilla ''{0}''\:
create.class.ok.button.text=Crear
create.class.name.label=&Nombre\:
create.class.package.label=Paquete\:
create.class.template.label=&Plantilla\:
create.class.superclass.label=&Superclase\:
create.class.interfaces.label=&Interfaces\:
action.structureview.show.object.inherited=Heredado del objeto
predefined.libraries.converter.description=Se han cambiado las bibliotecas JavaScript empaquetadas, por lo que es necesario actualizar las asignaciones de bibliotecas en su proyecto
libraries.roots.converter.description=Se actualizará el formato de almacenamiento de las bibliotecas de JavaScript

# JSHint
jshint.option.edit.dialog.title=Configuración de la opción ''{0}''
jshint.clear.field.to.disable=Eliminar campo para deshabilitar
jshint.illegal.integer=Entero no válido
jshint.use.config.files=Usando archivos de configuración
jshint.version.label=&Versión\:
jshint.bundled.suffix.text=(Haz)
jshint.config.option.default.name=Predeterminado
jshint.config.default.description=<div style="padding-bottom:10px">\
  <div><b>.jshintrc</b></div>\
  <div style="padding-left:10px; padding-top:4px;">Al enlazar un archivo JavaScript, el IDE busca .jshintrc comenzando desde la carpeta del archivo y luego subiendo a la raíz del sistema de archivos.</div>\
</div>\
<div>\
  <div><b>paquete.json</b></div>\
  <div style="padding-left:10px; padding-top:4px;">Agregue su configuración bajo la propiedad <code>jshintConfig </code>en el archivo package.json de su proyecto. </div>\
</div>
jshint.config.option.custom.name=Archivo de configuración personalizado
jshint.config.option.custom.browser.title=Seleccionar archivo de configuración JSHint (*.jshintrc)
jshint.config.failed.to.read=No se pudo leer la configuración de JSHint
jshint.config.extends.cyclically=La configuración de JSHint se extiende cíclicamente
jshint.esversion.text=Advertencia de incompatibilidad con la versión de ECMAScript especificada
jshint.latedef.text=Advertir si la variable se usa antes de ser definida
jshint.unused.text=Advertir sobre variables no utilizadas
jshint.indent.text=Sangría
jshint.quotmark.text=Comillas
jshint.latedef.false.text=Sin advertencia
jshint.latedef.true.text=Prohibir el uso de variables antes de que se definan
jshint.latedef.nofunc.text=<html><body>Prohíbe el uso de variables antes de ser definidas y <br>permite declaraciones de funciones.</body></html>
jshint.unused.false.text=No marques nada
jshint.unused.true.text=<html><body>Comprueba todas las variables y parámetros, pero permite los <br>parámetros no utilizados después de los parámetros utilizados.</body></html>
jshint.unused.vars.text=Verificar variables que no son parámetros de función
jshint.unused.strict.text=Verifique todas las variables y parámetros
jshint.quotmark.false.text=Se permiten ambas citas
jshint.quotmark.true.text=Solo se permiten comillas simples o dobles
jshint.quotmark.single.text=Solo se permiten comillas simples
jshint.quotmark.double.text=Solo se permiten comillas dobles

action.structureview.show.locals=Mostrar local

#linters comunes
linter.configurable.selectPackage.browseDialogTitle=Seleccione {0} Directorio de paquetes
javascript.linter.import.notification={0}: el estilo del código del proyecto y la configuración del editor se actualizaron según ''{1}''.
javascript.linter.import.notification.rules.applied=Se aplicó el siguiente {0}: {1}.
javascript.linter.import.notification.reset=Restablecer
javascript.linter.import.notification.restored=Se restauraron el estilo de código predeterminado y la configuración del editor
javascript.linter.import.translate.config.title=Aplicar reglas de estilo de código ESLint
javascript.linter.import.translate.config.progress.title=Aplicación de {0} reglas de estilo de código
javascript.linter.import.translate.config.file.error=No se pudieron aplicar las reglas de estilo de código
javascript.linter.import.nothing.to.import={0}: ya se han aplicado todas las reglas conocidas
javascript.linter.use.severity.from.config.label=Usar la severidad de la regla del archivo de configuración
javascript.linter.configure.additional.inspection.label=Opciones adicionales:
javascript.linter.configuration.file.title=Archivo de configuración
javascript.linter.radio.button.configuration.file=&Archivo de configuración:
javascript.linter.error.empty.path=Ruta vacía
javascript.linter.error.no.such.file=No existe tal archivo

javascript.linter.action.fix.prompt=¿Volver a formatear los archivos seleccionados con {0}?
javascript.linter.action.fix.problems.file.text={0}: corregir el archivo actual
javascript.linter.action.fix.problems.name=Solucionar {0} problemas
javascript.linter.action.fix.problems.name.start=Solucionar {0} problemas iniciados
javascript.linter.action.fix.problems.name.finish=Solucionar {0} problemas finalizados
javascript.linter.configurable.config.autoSearch.title=Automático y búsqueda
javascript.linter.suppress.rules.for.line.family.name=Suprimir para la línea actual
javascript.linter.suppress.rules.for.line.description=Suprimir {0} para la línea actual
javascript.linter.suppress.rules.for.file.family.name=Suprimir para el archivo actual
javascript.linter.suppress.rules.for.file.description=Suprimir {0} para el archivo actual

# eslint
settings.javascript.linters.eslint.configurable.name=ESLint
eslint.configurable.eslintPackage.label=paquete &ESLint:
eslint.configurable.eslintPackage.browseDialogTitle=Seleccione el directorio del paquete ESLint
eslint.configurable.config.autoSearch.description.bodyInnerHtml=ESLint buscará automáticamente los archivos .eslintrc. * y package.json \
  en el directorio del archivo que se va a linkear, y en los directorios principales sucesivos hasta el directorio raíz del sistema de archivos. \
  <div style="padding-top:8px">\
  Para usar package.json, agregue su configuración en la propiedad <code>eslintConfig</code>.\
  </div>
eslint.configurable.config.select.config.text=Seleccione el archivo de configuración de ESLint (* .eslintrc. *)
eslint.configurable.additionalRulesDir.label=Directorio adicional de &reglas:
eslint.configurable.additionalRulesDir.browseDialogTitle=Seleccione el directorio de reglas adicionales de ESLint
eslint.configurable.extraOptions.label=Eslint y opciones adicionales:
eslint.run.on.save=Ejec&utar eslint --fix al guardar
eslint.action.fix.problems.description=Solucione los problemas de ESLint llamando a 'eslint --fix'
eslint.fix.problems.text={0}: corregir {1}
eslint.error.package.directory.expected=Se esperaba el directorio del paquete
eslint.code.style.apply.message=¿Aplicar estilo de código de ESLint?
eslint.code.style.dismiss.text=No
eslint.code.style.apply.text=Sí
eslint.version.0.is.not.supported.please.upgrade.eslint=La versión de ESLint {0} no es compatible. Actualice ESLint.
eslint.additional.rules.directory.field.name=directorio de reglas adicionales
eslint.configuration.file.field.name=archivo de configuración de ESLint
reformatting.with.0=Formateando con {0}...

#standardJS
standardjs.name=estilo de código estándar
standardjs.eslint.label=Especifique la ruta al paquete estándar para usar el estilo de código estándar
standardjs.editor.notification.can.be.enabled.text=¿Usar el estilo de código estándar de JavaScript para este proyecto?
standardjs.editor.notification.action=Sí
standardjs.editor.notification.do.not.show.text=No
standardjs.enable.code.style.dialog.text=¿Le gustaría establecer el estilo estándar de JavaScript como estilo de código para este proyecto?
standardjs.edit.settings.caption=ESlint/Estilo de código estándar
standardjs.action.fix.problems.description=Solucionar problemas de estilo de código estándar

# Acciones
js.show.type.info.action.error=No se encontró ninguna expresión
javascript.ignore.unused.function.parameters=Ignore los parámetros no utilizados:
javascript.ignore.unused.catch.parameters=Ignorar los parámetros de captura no utilizados
complete.import.binding=Enlace de importación completo
complete.import.name=Nombre de importación completo
remove.type.prefix=Eliminar prefijo de tipo
add.import.binding.to.import=Agregar enlace de importación a la importación
add.import.specifier.to.import=Agregar especificador de importación a la importación
create.js.file.description=Crea un archivo JavaScript a partir de la plantilla especificada
create.ts.file.description=Crea un nuevo archivo TypeScript

# todo eliminar, tiene usos externos
javascript.completion.several.definitions=(varias definiciones)

# Observadores de archivos
js.file.watcher.traceur.name=Compilador de Traceur
js.file.watcher.traceur.description=Transpila el código ECMAScript 6 y AtScript a ECMAScript 5
js.format.align.multiline.var=Alinear declaración de variable multilínea
js.file.watcher.6to5.name=Babel
js.file.watcher.6to5.description=Transpila el código ECMAScript 6 a ECMAScript 5 usando Babel
js.flowjs.watcher.config.file.name=Flow JS
js.flowjs.watcher.config.file.description=Agregar archivo .flowconfig

# Anotador
typescript.export.assignment.cannot.be.used.in.internal.modules=La asignación de exportación no se puede utilizar en módulos internos
typescript.type.predicate.not.return=Un predicado de tipo solo se permite en la posición de tipo de retorno para funciones y métodos
typescript.type.this.predicate.not.return=Un predicado de tipo basado en 'this' solo se permite dentro de una clase o miembros de la interfaz, obtener accesores o devolver posiciones de tipo para funciones y métodos.
typescript.type.predicate.not.match.name=No se puede encontrar el parámetro {0}
typescript.type.predicate.rest=Un predicado de tipo no puede hacer referencia a un parámetro de descanso
typescript.type.predicate.destructuring=Un predicado de tipo no puede hacer referencia a un elemento en un patrón de vinculación.
typescript.type.predicate.incompatible.types=El predicado de tipo no se puede asignar a {0}
typescript.generics.should.not.be=El tipo ''{0}'' no es genérico
es6.default.export.not.declared=La exportación predeterminada no se declara en el módulo importado
js.annotator.assignment.pattern.rhs=Los patrones de asignación deben estar en el lado izquierdo de la asignación
es6.generate.index.action=Generar index.js/index.ts
es6.generate.index.action.description=Generar index.js/index.ts
line.comment.at.first.column=Comentario de línea en la primera columna
code.commenting.panel.title=Comentario de código
js.settings.generated.code.title=Código generado
js.annotator.thin.arrow.used=Flecha fina utilizada
js.annotator.newline.before.arrow=La nueva línea no está permitida antes de la flecha
js.annotator.replace.with.fat.arrow=Reemplazar con flecha gruesa
js.annotator.unary.operator.within.exponential=El operador unario ''{0}'' no está permitido inmediatamente antes de la expresión de exponenciación. \
  Considere agregar paréntesis para resolver la ambigüedad.

# Plantillas en vivo
jsx.html.context.type=JSX HTML
js.expression.context.type=Expresión
js.statement.context.type=Declaración
js.top.level.statement.context.type=Sintaxis de nivel superior
js.class.context.type=Clase/Interfaz
ecmascript.6.or.higher=ECMAScript 6 o superior

# Gulp
gulp.rc.gulpfile.label=Arc&hivo Gulp:
gulp.rc.gulpfile.browseDialogTitle=Seleccione gulpfile.js
gulp.rc.tasks.label=&Tareas:
gulp.rc.arguments.label=&Argumentos:
gulp.rc.nodeInterpreter.label=&Intérprete de Node:
gulp.rc.nodeOptions.label=&Opción de Node:
gulp.rc.gulpPackage.label=Paquete &Gulp:
gulp.rc.environmentVariables.label=&Entorno:
gulp.task.title=Tarea de Gulp
gulp.before.run.task=Ejecutar la tarea Gulp
gulp.before.run.task.descr=Ejecutar {0, choice, 0#tarea|1#tarea|2#tareas} gulp {1} [{2}]

# Gruñido
grunt.rc.gruntfile.label=Grunt &archivo:
grunt.rc.gruntfile.browseDialogTitle=Seleccione Gruntfile
grunt.rc.tasks.label=&Tareas:
grunt.rc.arguments.label=&Argumentos:
grunt.rc.nodeInterpreter.label=Nodo e intérprete:
grunt.rc.nodeOptions.label=Nodo y opciones:
grunt.rc.gruntCliPackage.label=&Paquete grunt-cli:
grunt.rc.environmentVariables.label=&Entorno:
grunt.task.title=Tarea gruñona
grunt.before.run.task=Ejecutar tarea de Grunt
grunt.before.run.task.descr=Ejecutar {0,choice,0#tarea|1#tarea|2#tareas} Grunt {1} [{2}]

#nodo
settings.nodejs.name=Node.js y NPM
settings.nodejs.coding.assistance.label=Codificación y asistencia para Node.js
settings.nodejs.coding.assistance.manage.scopes.label=Administrar alcances...

node.interpreter.label=&Intérprete de Node:
node.interpreter.unspecified.error.text=Especifique el intérprete de Node.js
node.package.manager.label=Paquete y administrador:
node.package.empty.hint=ruta al directorio del paquete {0}
node.package.empty.hint.pkg1.or.pkg2={0} o {1}
node.package.selector.single.package.title=Seleccione {0} Directorio de paquetes
node.package.selector.multiple.packages.title=Seleccionar directorio de paquetes
node.package.selector.multiple.packages.description=Seleccione {0}
node.package.none=Sin paquete
node.package.dropDownList.select=Seleccionar...

node.js.modules.dependencies.missing.family.name=falta la llamada require()

#npm
npm.rc.packageJson.label=&package.json:
npm.rc.packageJson.browseDialogTitle=Seleccionar archivo package.json
npm.rc.command.label=&Comando:
npm.rc.scripts.label=Scrip&ts:
npm.rc.scriptsArguments.label=A&rgumentos:
npm.rc.nodeInterpreter.label=&Intérprete de Node:
npm.rc.nodeOptions.label=Opciones de nodo:
npm.rc.environmentVariables.label=Entorno:
npm.task.title=Secuencia de comandos de NPM
npm.before.run.task=Ejecutar el script npm
npm.before.run.task.descr=Ejecutar {0, choice, 0#script|1#script|2#scripts} npm {1} [{2}]

#build tools
buildTools.JsbtRunTaskAction.text=Ejecutar la tarea Gulp/Grunt/npm
buildTools.JsbtAddBuildfileAction.text=Agregar {0}
buildTools.choose_buildfile.text=Elija {0}
buildTools.JsbtRemoveBuildfileAction.text=Eliminar {0}
buildTools.JsbtReloadTasksAction.text=Recargar tareas
buildTools.JsbtReloadTasksAction.npm.text=Recargar scripts
buildTools.JsbtShowTasksAction.text=Mostrar {0} tareas
buildTools.JsbtShowTasksAction.npm.text=Mostrar scripts npm
buildTools.searchEverywhere.text=Ejecutar tarea ''{0}''
buildTools.searchEverywhere.npm.text=Ejecutar secuencia de comandos npm ''{0}''
buildTools.ShowSettingsAction.text={0} Configuración...
buildTools.ShowSettingsAction.npm.text=&Editar configuraciones de npm...
buildTools.EditRunSettingsAction.text=&Editar ''{0}'' Configuración...
buildTools.tree.sortBy.text=Ordenar por
buildTools.tree.sortBy.definitionOrder.text=Orden de definición
buildTools.tree.sortBy.name.text=Nombre

# módulos npm
npm.modules.inspection.content.of.require.not.in.dependencies.warning=El módulo no aparece en las dependencias de package.json
npm.modules.inspection.content.of.require.module.not.installed.warning=El módulo no está instalado
npm.modules.install.global.types.fix.name=Instale las definiciones de TypeScript para obtener una mejor información de tipos
package.json.install.types.fix.family.name=Instalar @types para el paquete
node.js.quickfix.install.node.module.with.dev.dependencies.text=Instalar ''{0}'' como dependencia de desarrollo
node.js.quickfix.install.node.module.text=Instalar ''{0}''
node.js.quickfix.install.node.module.family.name=Instalar módulos
node.js.quickfix.install.node.module.devDependencies.family.name=Instalar módulos como dependencias de desarrollo
node.js.quickfix.install.node.module.update.modules.family.name=Ejecute 'npm install'
node.js.quickfix.run.command=Ejecutar ''{0}''
node.js.quickfix.install.node.module.error.prefix.text=No se puede instalar el módulo Node.js: {0}
node.js.quickfix.install.node.module.error.no.interpreter.text=No se puede instalar el módulo Node.js: especifique el intérprete Node.js predeterminado.
node.js.quickfix.install.node.module.error.no.interpreter.title=Instalar el módulo Node.js
node.js.select.file=Seleccione {0} archivo

typescript.types.module.not.installed.warning=No se pueden resolver las definiciones del módulo ''{0}''
npm.modules.install.global.types.directory.error=No se pueden crear los directorios necesarios
npm.modules.install.global.types.dialog.title=Instalar definiciones de TypeScript

typescript.types.union=Unión
typescript.types.intersection=Intersección
typescript.types.mapped=Asignado
typescript.types.key=Referencia clave a
typescript.types.merged=fusionado
typescript.types.merged.accessor=Accesor combinado
typescript.types.type.member={0} propiedad de tipo
typescript.types.merged.parts=Propiedades referenciadas:

# Intenciones
ts.generate.reference.path.name=Generar comentario de ruta de referencia
ts.add.import.statement.family.name=Agregar declaración de importación
ts.add.import.all.family.name=Agregar todas las importaciones no ambiguas
ts.add.import.hint.text=Agregar {0} con {1}
ts.add.import.hint.multiple.text=Agregar importación para {0} con {1}
ts.add.import.hint.all.part=o todas las importaciones con {0}
ts.change.import.action.one.title=Cambiar a {0}
ts.change.import.action.many.title=Cambiar importación...
ts.change.import.action.command=Cambiar importación
ts.change.import.action.family.name=Cambiar la importación de ES6
ts.change.import.action.dialog.title=Importar desde...
ts.convert.alias.to.interface.action.title=Convertir alias en interfaz
ts.convert.alias.to.interface.action.family.name=Convertir el alias de tipo en interfaz
ts.convert.alias.to.enum.action.title=Convertir alias en enumeración
ts.convert.alias.to.enum.action.family.name=Convertir el alias de tipo en enumeración
ts.convert.parameter.property.to.field=Convertir propiedad de parámetro en campo de clase
ts.convert.field.to.parameter.property=Convertir campo en propiedad de parámetro
anonymous.to.named.intention.function.name=Nombre de la función:
initialize.fields.intention.visibility=Visibilidad:

# Servicio de lenguaje
javascript.language.service.default.empty.text=Sin errores
javascript.language.service.tracking.disabled=El seguimiento de errores está deshabilitado
javascript.language.service.tracking.is.not.started=El servicio no se inició
javascript.language.service.default.project.errors=Mostrar errores del proyecto
javascript.service.node.error=La ruta del intérprete de nodo es incorrecta. Verifique la configuración del intérprete
javascript.starting.service=Iniciando servicio {0}
javascript.language.service.cannot.get.results=No se pueden obtener resultados del servicio de lenguajes.
javascript.language.service.start.timeout=Tiempo de espera al iniciar el proceso de servicio de lengaje
javascript.language.service.cannot.start=No se pudo iniciar el proceso del servicio de lenguaje.

# Compilador de TypeScript

typescript.compiler.notification.editor.dismiss=No
typescript.compiler.notification.editor.no=No
typescript.compiler.notification.editor.configure=Configurar
typescript.compiler.notification.editor.configure.compiler=Configurar el compilador
typescript.compiler.notification.editor.enable=Sí
typescript.compiler.notification.editor.fw.replace=Reemplazar File Watcher con el compilador
typescript.compiler.notification.editor.fw.message=Los observadores de archivos para TypeScript están en desuso. IDE tiene un compilador TypeScript integrado
typescript.compiler.name=Compilador de TypeScript
typescript.compiler.name.enable.message=¿Compilar TypeScript en JavaScript?
typescript.compiler.configurable.name=TypeScript

typescript.config.configurable.options.enable=Resolver objetos usando tsconfig.json
typescript.use.service.configurable.options.enable=Servicio de lenguaje TypeScript
typescript.compiler.configurable.options.service.directory=Directorio personalizado
typescript.compiler.configurable.options.service.directory.configure=Configurar el compilador de TypeScript
typescript.compiler.configurable.version.choose.service.directory=Elija el directorio de servicios
typescript.compiler.configurable.options.service.directory.info=Directorio lib de TypeScript con archivos: typescriptServices.js, lib.d.ts
typescript.compiler.configurable.options.macro.list=FileDir, FileRelativeDir, FileDirRelativeToProjectRoot, ModuleFileDir, Sourcepath, FileDirRelativeToSourcepath
typescript.compiler.configurable.options.macro.text=Macros disponibles:
typescript.compiler.configurable.options.service.directory.error.empty=El directorio personalizado no puede estar vacío
typescript.compiler.configurable.options.service.directory.error.cannot.find.file="No se pueden encontrar archivos {0} en el directorio {1}
typescript.compiler.configurable.options.output.path=Usar ruta de salida:
typescript.compiler.configurable.options.compile.main=Compilar solo el archivo principal:
typescript.compiler.configurable.options.compile.main.error=Ruta incorrecta al archivo principal
typescript.compiler.configurable.options.version=TypeScript:
typescript.compiler.configurable.options.generate.source.map=Generar mapas de origen
typescript.compiler.configurable.options.enable.no.config=También para proyectos sin tsconfig.json
typescript.compiler.configurable.options.track.file.system=Recompilar los cambios
typescript.compiler.configurable.options.scope=Alcance de compilación:
typescript.compiler.configurable.options.command.line=Opciones:

typescript.service.no.config=El archivo no está incluido en ningún tsconfig.json
typescript.service.no.main.reference=El archivo no se procesó porque no hay referencias del archivo principal

typescript.compiler.configurable.service.title=Opciones de servicio
typescript.compiler.configurable.service.use.completion=Finalización del código
typescript.compiler.configurable.service.use.annotation=Anotación

js.tool.window.limit=Se muestran los primeros {0} errores.
js.tool.window.limit.all=Ver todos los {0} errores
typescript.compiler.action.compile.all=Compilar todo
typescript.compiler.action.compile.toolbar=Compilar
typescript.compiler.action.compile.all.description=Compilar todos los archivos del proyecto
typescript.service.action.restart=Reiniciar el servicio TypeScript
typescript.compiler.action.compile.all.stop=Dejar de compilar
typescript.compiler.action.compile.all.compile=Compilar archivo {0}
typescript.compiler.action.compile.all.compile.config=Compilar archivos para la configuración {0}
typescript.compiler.action.compile.all.clean=Restablecer cachés
typescript.compiler.action.compile.current=Compilar archivo actual
typescript.compiler.action.compile.simple=Compilar TypeScript
typescript.compiler.action.compile.description=Compilar el proyecto actual
typescript.compiler.action.compile.current.description=Compilar el archivo o carpeta actual
typescript.compiler.action.no.compile.message=El archivo no se compiló porque no hay una referencia del archivo principal
typescript.compiler.before.run=Compilar TypeScript

typescript.language.service.clean=Restablecer cachés
typescript.language.service.compile.file=Archivo de compilación... {0}
typescript.language.service.compile.project=Proyecto de compilación... {0}
typescript.language.service.compile.file.errors=Calculando errores... {0}
typescript.language.service.compile.project.errors=Calculando errores del proyecto... {0}
typescript.language.service.compile.project.open.file=Abriendo archivo... {0}

typescript.before.task.check.errors=Comprobar errores
typescript.before.task.config.path=Archivo de configuración:
typescript.before.task.title=Configuración de compilación de TypeScript
typescript.before.task.config.dialog.title=Seleccione tsconfig.json

# Documentación
js.documentation.fires=Incendios:
js.documentation.more.overload=+{0} más sobrecarga
js.documentation.more.overloads=+{0} más sobrecargas
exportable.JSCodeFoldingSettings.presentable.name=Plegado de código JavaScript

node.js.remote.interpreters.plugin.missing=Falta el complemento de intérprete remoto de Node.js. Habilite el complemento en {0}.

javascript.module.dependencies.got.it.title=Diagrama de dependencias del módulo
javascript.module.dependencies.got.it.text=<div align='left'>Este diagrama visualiza las dependencias del módulo que tiene el archivo o directorio seleccionado.<br/>\
Para ver las dependencias de varios archivos o directorios, selecciónelos en la <i>Vista del proyecto </i><br/>\
  y elija <i>Diagramas \u2013 Mostrar diagrama </i>en el menú contextual de la selección. </div>
javascript.module.dependencies.empty.got.it.text=<div align='left'>El archivo o carpeta actual no tiene dependencias.<br/>Inténtelo con otro archivo o carpeta. </ div>
js.remove.redundant.initializer.fix=Eliminar inicializador redundante
js.remove.unused.assignment=Eliminar asignación no utilizada
js.inject.with.comment.intention.family.name=Anotar inyección con comentario
js.inject.dont.format.intention.text=No formatee el contenido inyectado

js.webpack.config.highlighting.name=Validación de la configuración del paquete web

js.linter.guesser.linter.enabled.because.of.dependency={0} está habilitado: ''{1}'' aparece en package.json.
js.linter.guesser.linter.enabled.because.of.package.json.section={0} está habilitado: ''{1}'' está en package.json.
js.linter.guesser.linter.enabled.because.of.config.file={0} está habilitado: el archivo de configuración está en el proyecto.
js.linter.guesser.linter.disabled={0} está deshabilitado.

# Migas de pan
js.breadcrumbs.callback.for=devolución de llamada para {0}()

typescript.extract.type.alias.name=Tipo de alias...
typescript.include.js.sources.element=Buscar declaración de JavaScript
typescript.include.js.sources.dialog.title=Incluir paquete {0}
typescript.include.js.sources.dialog.message=¿Incluir archivos JavaScript de ''{0}'' al proyecto?
start.template.string.interpolation.on.typing=Iniciar la interpolación de cadenas de la plantilla al escribir '$'
typescript.include.js.sources.action=Incluir archivos JavaScript
escape.pasted.text=Texto de escape al pegar en cadenas literales
rename.prompt.do.you.want.to.rename.base.method=¿Desea cambiar el nombre del método base?
jsx.convert.html.attributes.to.jsx=Convertir atributos al pegar HTML en archivos JSX

# Generar diálogo
generate.filter.indexers=Indexadores
generate.filter.methods=Métodos
generate.filter.fields=Campos y propiedades
generate.filter.button.tooltip=Mostrar {0}
generate.filter.button.description=Mostrar {0} en la lista
codestyle.ui.field.prefix=&prefijo de campo:
codestyle.ui.property.prefix=&Prefijo de propiedad:
codestyle.ui.file.name.style=Convención de nombre y archivo:
codestyle.ui.generated.jsdoc.use.types.checkbox=Incluir &tipos en JSDoc
codestyle.ui.generated.jsdoc.section.title=JSDoc
inline.type.used.in.reference.list=No se puede usar en línea en la lista ''{0}''
inline.cannot.inline.references.this.type=No es posible la interfaz en línea que hace referencia a 'este' tipo
inline.cannot.inline.has.supers=No se puede insertar {0} que se extiende a otros tipos

refactoring.extract.react.component.component.for.refactor.this=Componente...
refactoring.extract.react.component.title=Extraer componente
refactoring.extract.react.component.no.expression=La selección no forma una expresión JSX
refactoring.extract.react.component.no.scope=No se pudo encontrar el alcance para colocar el componente creado
refactoring.react.function.to.class.refactoring.title=Convertir en componente de clase
refactoring.react.function.to.class.intention.title=Convertir en componente de clase
refactoring.react.function.to.class.used.in.new.conflict={0} se usa en la expresión '' nueva ''
refactoring.react.function.to.class.used.in.call.conflict={0} se usa en la expresión de llamada
refactoring.react.class.to.functional.conflict.used.with.ref={0} se usa con el atributo '' ref ''. Los componentes de la función sin estado no pueden recibir referencias
refactoring.react.class.to.functional.refactoring.title=Convertir en componente funcional
refactoring.react.class.to.functional.intention.title=Convertir en componente funcional
refactoring.react.could.not.find.in.template=No se pudo refactorizar. No se pudo encontrar el elemento con el nombre {0}. ¿Es posible que la plantilla de código {1} no sea válida?
react.function.to.class.caret.at.function=Caret debe colocarse en la función para convertir
react.class.to.function.caret.at.class=Caret debe colocarse en la clase para convertir
js.arrangement.group.arrow.fields.with.methods=Campos de grupo inicializados con funciones de flecha con métodos
intellilang.tagged.literal.injection.name.label=Patrón:
intellilang.tagged.literal.expression.border.title=Etiqueta de plantilla

refactoring.destructuring.vars.for.refactor.this=Desestructuración de objetos o matrices...
refactoring.destructuring.vars.intention.name=Introducir objeto o desestructuración de matriz
refactoring.destructuring.vars.intention.name.object=Introducir la desestructuración de objetos
refactoring.destructuring.vars.intention.name.array=Introducir la desestructuración de matrices
refactoring.destructuring.vars.intention.replace.object=Reemplazar con desestructuración de objetos
refactoring.destructuring.vars.intention.replace.array=Reemplazar con desestructuración de matriz
refactoring.destructuring.vars.intention.replace.promise=Reemplazar con 'await Promise.all'
refactoring.destructuring.vars.intention.propagate=Propagar a la declaración de desestructuración
refactoring.destructuring.vars.intention.depropagate=Reemplazar la desestructuración con acceso a la propiedad y al índice
refactoring.destructuring.vars.intention.deconstruct=Generar patrón de desestructuración
refactoring.destructuring.vars.intention.replace.shorthand=Reemplazar con propiedades de desestructuración y taquigrafía
refactoring.destructuring.vars.intention.const.to.var.warning=Durante la transformación, las variables const resaltadas se convertirán para permitir variables.\n¿Desea continuar?
refactoring.destructuring.vars.intention.const.to.var.warning.title=Cambio de palabra clave variable
refactoring.destructuring.vars.intention.guard.conflict=El tipo de expresión se reduce a ''{0}'' por un tipo de protección que no tendrá ningún efecto después de la refactorización
javascript.intention.add.export.family.name=Agregar exportación
javascript.intention.add.export.fix.text=Hacer {0} exportado en archivo {1}
javascript.intention.add.default.export.family.name=Agregar exportación predeterminada
javascript.intention.remove.export.family.name=Eliminar exportación
javascript.intention.remove.export.inaccessible.conflict.text={0} tiene uso en {1}
javascript.intention.promise.to.async.name=Convertir a función asíncrona
javascript.intention.code.optimizations.text=Optimización del código generado
javascript.intention.add.template.argument=Insertar argumento de cadena de plantilla
javascript.intention.call.chain.to.pipe=Reemplazar llamadas anidadas con expresión de tubería
javascript.intention.pipe.to.call.chain=Reemplazar expresión de tubería con llamadas anidadas
javascript.intention.opt.chain.family=Utilice encadenamiento opcional o fusión nula
javascript.intention.opt.chain.chain.only=Usar encadenamiento opcional
javascript.intention.opt.chain.coalesce.only=Usar fusión nula
javascript.intention.opt.chain.conditional.only=Use '||'
javascript.intention.opt.chain.chain.and.coalesce=Usar encadenamiento opcional y fusión null
javascript.intention.expand.opt.chain.family=Encadenamiento opcional extendido o fusión nullish con verificación explícita
javascript.intention.expand.opt.chain=Extensión de cadena opcional
javascript.intention.expand.nullish.coalescing=extensión de fusión nullish
javascript.intention.expand.or.coalescing=Usando el operador?\:
javascript.intention.expand.opt.chain.and.nullish.coalescing=Encadenamiento selectivo y extensión de fusión nullish
javascript.intention.expand.opt.chain.and.or.coalescing=Expansión de cadena opcional y uso del operador?\:
javascript.intention.explicit.fields=Declarar campos de clase explícitos
javascript.intention.explicit.fields.single=Declarar campo de clase explícito
javascript.intention.explicit.fields.dialog.title=Seleccionar campos para declarar explícitamente
javascript.intention.init.fields=Inicializar nuevos campos a partir de parámetros
javascript.intention.init.fields.dialog.title=Seleccionar parámetros para inicializar campos

js.param.hints.show.names.for.all.args=Para argumentos no literales
js.param.hints.show.names.for.tagged=Para argumentos de plantilla etiquetados
js.param.hints.show.names.for.pipes=Para operadores de canalización
js.param.hints.blacklist.pattern.explanation=<html>Para deshabilitar las sugerencias para un método o una función, use uno de los siguientes patrones: \
  <p style="margin-left: 5px">\
    <code><b>(* info)</b></code>: todos los métodos de un solo parámetro donde el nombre del parámetro termina con <em>info </em><br>\
    <code><b>(clave, valor)</b></code>: todos los métodos con los parámetros <em>clave </em>y <em>valor </em><br>\
    <code><b>* .put (clave, valor)</b></code>: todos los métodos <em>put </em>con <em>clave </em>y <em>valor </ em>parámetros<br>\
    <code><b>Console.log (*, *)</b></code>: el método <em>log </em>del tipo <em>Console </em>con exactamente dos parámetros \
  </p><br>\
  <p>\
  Se deben proporcionar nombres o marcadores de posición para todos los parámetros, incluidos los parámetros opcionales.<br>\
  Los nombres de métodos calificados deben incluir nombres de clases o interfaces, o un marcador de posición para ellos.<br>\
  Utilice la acción "No mostrar sugerencias para el método actual" {0} para agregar patrones al editar el código. \
  </p>\
  </html>

js.checkbox.make.readonly=Hace&r solo lectura

action.JavaScriptGenerateDictionaries.text=Generar diccionarios de corrector ortográfico JavaScript
action.JavaScriptIntroduceDestructuringVariables.description=Extraer variables de desestructuración
action.ReactClassToFunctionalComponentAction.description=Convertir en componente funcional
action.ReactFunctionalToClassComponentAction.description=Convertir en componente de clase
action.ReactExtractComponentAction.description=Extraer componente
action.EslintImportCodeStyle.description=Aplicar estilo de código ESLint
action.TypeScriptExtractTypeAlias.description=Alias ​​del tipo de extracción
action.JS.TypeScript.Include.Generated.Declarations.text=Incluir archivos secundarios '.d.ts'
action.JS.TypeScript.Include.Generated.Declarations.description=Incluir archivos .d.ts secundarios en el proyecto
action.Generate.GetSetAccessor.JavaScript.text=Captador y Definidor
action.Generate.SetAccessor.JavaScript.text=Definidor
action.Generate.GetAccessor.JavaScript.text=Captador
action.Generate.Constructor.JavaScript.text=Constructor
action.Generate.Missing.Members.ES6.text=Implementar métodos...
action.Generate.Missing.Members.TypeScript.text=Implementar miembros...
group.Editor.JSLibrariesMenu.LibraryList.text=Usar biblioteca
group.Editor.JSLibrariesMenu.LibraryList.description=Establecer bibliotecas JS usadas
group.Editor.JSLibrariesMenu.text=Usar biblioteca JavaScript
group.Editor.JSLibrariesMenu.description=Seleccione las bibliotecas JavaScript que se usarán con el archivo actual
configurable.JSTemplateLangConfigurable.display.name=Plantillas
configurable.JSCodeCompletionConfigurable.display.name=JavaScript
configurable.JSSmartKeysConfigurable.display.name=JavaScript
configurable.MyConfigurable.display.name=JSX
import.options.find.more.configuration.options=Encuentra más opciones de configuración en
import.options.find.more.configuration.options.code.style=Estilo de código
settings.code.style.indent.chained.methods=Métodos encadenados de sangría
settings.code.style.indent.all.chained.calls.in.a.group=Aplicar sangría a todas las llamadas encadenadas en un grupo
settings.code.style.semicolon.to.terminate.statements=&punto y coma para terminar declaraciones
settings.code.style.use=Usar
settings.code.style.quotes=&comillas
settings.code.style.Trailing.comma=&coma final:
settings.code.style.single=single
settings.code.style.double=doble
settings.code.style.in.new.code=en código nuevo
settings.code.style.always=siempre
settings.code.style.option.use=Usar
settings.code.style.dont.use=No usar
checkbox.enable=Activar
webpack.configuration.title=Paquete web
webpack.configuration.field=archivo de configuración del paquete web:
webpack.configuration.field.description=ruta al archivo de configuración del paquete web
create.react.app.name=Aplicación React
create.react.app.description=<a href=\"https://github.com/facebookincubator/create-react-app\">Create React App </a>es una nueva forma oficialmente compatible de crear Aplicaciones React de una sola página. Ofrece una configuración de construcción moderna sin configuración.
create.react.app.scripts.version=&Versión de script
create.react.app.typescript.checkbox=Crear proyecto &TypeScript
dialog.title.new.javascript.file=Nuevo archivo JavaScript
list.item.javascript.file=archivo JavaScript
dialog.title.new.typescript.file=Nuevo archivo TypeScript
list.item.typescript.file=Archivo TypeScript
list.item.typescript.jsx.file=Archivo JSX de TypeScript
dialog.kind.0.file={0} archivo
action.creates.new.file.description=Crear nuevo archivo {0}
build.event.title.failed.to.list.tasks=No se pudo enumerar {0} tareas
action.show.error.details.text=Mostrar detalles del error
dialog.title.grunt.settings=Configuración de Grunt
dialog.title.gulp.settings=Configuración de Gulp
dialog.title.error.details=Detalles del error
dialog.message.failed.to.download.0.1={0} no se pudo descargar. {1}
dialog.title.download.error=Error de descarga
label.import.popup=Importar ventana emergente\:
label.namespace=Espacio de nombres\:
dialog.message.cannot.infer.type.new.parameter=No se puede inferir un nuevo tipo de parámetro
dialog.title.cannot.introduce.new.interface=No se puede insertar en la nueva interfaz
notification.title.coloring.types.narrowed.by.type.guard.was.disabled=Se ha deshabilitado la coloración de tipo restringida por tipo de protección
notification.content.html.href.settings.show.inspection.settings.or.href.undo.undo.html=<html> <a href\='settings'> Mostrar configuración de inspección </a> o <a href \='deshacer'> Deshacer </a> </html>
dialog.message.cannot.propagate.variable=No se puede pasar la variable\: {0}
dialog.title.cannot.propagate=No se puede entregar
dialog.message.usages.search.was.interrupted=Se ha detenido la búsqueda de ubicación de uso
dialog.title.cannot.convert=No se puede convertir
dialog.message.cannot.proceed.when.having.non.read.usages.in.embedded.expressions=Si la expresión incluida tiene una posición de uso diferente a read, no puede continuar
dialog.message.variables.from.destructuring.pattern.have.no.usages=No hay una ubicación de uso para las variables de patrón de desestructuración
button.continue=Continuar
button.abort=abortar
action.don.t.use.library.description=No use la biblioteca
action.already.set.for.containing.folder.or.project.description=Ya está configurado para la carpeta o proyecto que lo contiene.
action.use.library.description=Usar biblioteca
text.cannot.download={0} no se pudo descargar. {1}
notification.content.show.details=Mostrar detalles
action.name.disable.category={0} inhabilitar
progress.text.processing=Procesando {0}{1}
label.css.stylelint.view.node.path=&intérprete de nodo\:
label.path=&Ruta\:
border.title.inspection.export.results.capitalized.location=Ubicación
border.title.inspection.description.title=Descripción
progress.title.updating.jshint.to=Actualizando de JSHint a {0}
progress.download.0.title=Descargando {0}
progress.title.jshint=JSHint {0}
progress.title.install.npm.module=Instalar módulo npm ''{0}''
dialog.message.cannot.find.module.types=No se pudo encontrar el módulo @types/{0}
action.jump.to.text=Ir al siguiente...
dialog.title.select.navigation.target=Seleccionar destino de navegación
dialog.title.select.targets.to.convert.to.class=Seleccionar objetivos para convertir a clase
dialog.message.component.name=Nombre del componente\:
label.name=Nombre\:
label.type=tipo\:
label.minimum.language.level=Nivel mínimo de idioma\:
dialog.message.cannot.create.argument.stubs.invoked.method.function=No se puede crear el código auxiliar del argumento\: el método llamado no es una función
action.show.structure.text=Mostrar estructura
status.text.no.errors.in.current.file=No hay errores en el archivo actual.
status.text.javascript.language.service.default.project.errors=Mostrar errores del proyecto
progress.title.compiling.typescript.files=Compilación de archivos TypeScript
dialog.message.cannot.find.file=No se pudo encontrar el archivo {0}
radio.set.options.manually=Establecer opciones manualmente
radio.use.tsconfig.json=Usar tsconfig.json
separator.deprecated.settings=Configuraciones obsoletas
dialog.title.main.file=Archivo principal
label.choose.main.file=Seleccionar archivo de correo
dialog.title.output.directory=Directorio de salida
label.choose.output.directory=Seleccionar directorio de salida
dialog.message.incorrect.path.to.typescript.package=Ruta del paquete de mecanografiado no válida
status.text.project.structure.isn.t.available=La estructura del proyecto no está disponible
status.text.service.doesn.t.contain.open.projects=Los servicios no incluyen proyectos abiertos
status.text.refresh.required=Se requiere actualización
dialog.message.cannot.find.module.for.import=No se puede encontrar el módulo para importar
action.js.tagged.literal.injection.text=inyección literal con etiqueta JS
dialog.title.wsl.node.interpreter={0} intérprete de nodo WSL
dialog.title.wsl.node.interpreter.edit=Editar
dialog.title.wsl.node.interpreter.edit.add=Agregar
label.linux.distribution=&Distribución de Linux\:
label.wsl.node.interpreter=I&ntérprete de nodo WSL\:
dialog.message.please.select.distribution=Seleccione una distribución
dialog.message.please.specify.wsl.path.to.node.js.interpreter=Especifique la ruta WSL al intérprete de Node.js
status.text.running.which.node=Ejecutando `qué nodo`...
progress.title.configuring.node.js.coding.assistance=Configurando el soporte de codificación de Node.js...
action.package.json.file.text=archivo package.json
action.creates.package.json.file.description=Crear archivo package.json
progress.title.install=Instalar {0}
progress.subtitle.install=Instalando {0} usando {1}...
inspection.message.package.installed=El paquete {0} no está instalado
inspection.message.package.version.specified=No se ha especificado la versión del paquete
inspection.message.installed.version.doesn.t.match.version.range=La versión instalada {0} no coincide con el rango de versiones {1}
dialog.title.missing.dependencies=Faltan dependencias
button.install.update=Instalar/Actualizar
action.view.install.text=Ver e instalar...
action.don.t.ask.again.text=No volver a preguntar
dialog.title.configure.coding.assistance.for.node.js.api=Configurar el soporte de codificación para la API de Node.js
action.Anonymous.text.configure=Configuración
inspection.message.sm.test.runner.magnitude.assertion.failed.title=Aserción fallida
text.html.front.end.template.a.href.http.html5boilerplate.com=<html> plantilla de interfaz <a href\='http\://html5boilerplate.com'> http\: //html5boilerplate.com </a> </html>
dialog.message.node.interpreter.unspecified.error.text=Especifique el intérprete de Node.js
text.html.sleek.intuitive.and.powerful.front.end.framework=<html> Marco de interfaz elegante, intuitivo y potente para un desarrollo web más rápido y sencillo <a href \='http\: //getbootstrap.com '> http\: //getbootstrap.com </a> </html>
popup.title.target.function=Función de destino
popup.title.select.destructuring.assignment.target=Seleccionar destino de asignación de descomposición de estructura
visibility.level.overview=Resumen
visibility.level.details=Detalles
js.module.uml.presentable.name=Dependencia del módulo JavaScript
intention.family.name.run.npm.install=Ejecutar'npm install'
intention.name.run.npm=''{0}'' ejecución
intention.family.name.navigate.to.package.json=Ir a package.json
intention.name.navigate.to.0.package.json=Ir a {0}/package.json
popup.advertisement.start.typing.package.name=Empiece a escribir el nombre del paquete para obtener resultados más específicos del registro público oficial de npm
popup.advertisement.latest.available.versions.for.all.distribution.tags=Última versión disponible para todas las etiquetas de distribución
intention.family.name.select.in.test.tree=Seleccionar del árbol de prueba
intention.family.name.introduce.parameter.properties.for.unused.parameters=Insertar la propiedad de los parámetros en los parámetros no utilizados
dialog.title.select.parameters.to.convert.to.parameter.properties=Parámetros: seleccione los parámetros para convertir en propiedades
inspection.message.object.or.array.expected=Se requiere un objeto o matriz
intention.family.name.add.required.property=Agregar propiedad requerida
intention.name.create.library.with.files.outside.project=Cree una biblioteca que contenga archivos fuera del proyecto
dialog.message.unspecified.suite.name=Nombre de la herramienta no especificado
dialog.message.unspecified.test.name=Nombre de prueba no especificado
dialog.message.unspecified={0} no especificado
dialog.message.no.such=No {0}
dialog.message.please.specify.package.json=Especifique package.json
dialog.message.please.specify.package.json.correctly=Especifique package.json correctamente
dialog.message.please.specify.npm.scripts.to.run=Por favor, especifique el script npm para ejecutar
dialog.message.command.supported.by={1} no admite el comando ''{0}''
dialog.message.no.npm.script=''{0}'' Sin secuencia de comandos npm
titled.separator.predefined=Predefinido
label.compiles.js.files=compilación de archivos .js
label.compress.js.files=compresión de archivos .js
dialog.title.edit.run.debug.configuration=Editar configuración de ejecución / depuración\: ''{0}''
js.commandline.configure.language.version=Configurar la versión en lenguaje JavaScript del proyecto
js.commandline.configure.nodejs=Configure el intérprete NodeJS e instale el paquete para el archivo package.json.
