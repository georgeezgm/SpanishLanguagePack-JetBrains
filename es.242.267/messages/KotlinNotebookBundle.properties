action.CopyLetsPlot.description=이 플롯을 클립보드로 복사합니다
action.CopyLetsPlot.text=플롯 복사
action.CopySwingComponentScreenshot.description=Copy a screenshot of the Swing component to the clipboard
action.CopySwingComponentScreenshot.text=Copy Screenshot
action.CreateNewKotlinNotebook.description=새 Kotlin Notebook을 생성합니다
action.CreateNewKotlinNotebook.text=Kotlin Notebook
action.CreateNewScratchKotlinNotebook.error.dialog.text=Kotlin Notebook 파일을 생성할 수 없습니다. 오류\: {0}
action.ExportLetsPlot.description=이 플롯을 파일로 저장합니다
action.ExportLetsPlot.description.multiple=이 플롯을 파일로 저장합니다
action.ExportLetsPlot.text=다음으로 플롯 저장…
action.ExportLetsPlot.text.multiple=다음으로 플롯 저장…
action.RestartKotlinNotebookHighlighting.text=Kotlin Notebook 강조 표시 다시 시작
action.SelectKotlinNotebookModuleDependencies.description=이 경우 프로젝트 파일이 변경된 후 셀이 실행되기 전에 빌드가 호출될 수 있습니다
action.SelectKotlinNotebookModuleDependencies.text=Notebook에서 사용할 모듈 선택
action.SelectKotlinNotebookProjectLibraries.text=Notebook 클래스 경로에 추가할 프로젝트 라이브러리 선택
action.ShowKotlinNotebookPreferencesAction.description=Kotlin Notebook 플러그인의 설정을 편집합니다
action.ShowKotlinNotebookPreferencesAction.text=Kotlin Notebook 플러그인 설정…
action.ToggleShowExecutionCount.text=실행 회수 표시
checkbox.resolve.multiplatform=Multiplatform 종속 요소 해결
checkbox.resolve.sources=소스 해결
checkbox.should.add.libraries=프로젝트 라이브러리를 노트북 클래스 경로에 추가
checkbox.should.build.project=Notebook에서 프로젝트 심볼 사용 허용
checkbox.should.build.project.comment=이 경우 프로젝트 파일이 변경된 후 셀이 실행되기 전에 빌드가 호출될 수 있습니다
checkbox.should.show.execution.count=실행 수 표시
checkbox.should.show.foldable.regions=접을 수 있는 영역 표시
checkbox.should.typehint.only.active.cell=활성 셀에만 제공자 적용
group.KotlinNotebookSettingsActions.text=Kotlin Notebook 설정
inlay.hint.description.prefix=Kotlin Notebook에서 {0}의 인레이 힌트 표시
jkt.meta.description.classpath=클래스 경로를 표시합니다
jkt.meta.description.dumpClassesForSpark=Spark와의 통합을 위해 컴파일된 REPL 클래스를 특수 디렉터리에 저장합니다
jkt.meta.description.help=도움말 표시
jkt.meta.description.logHandler=로깅 핸들러를 관리합니다
jkt.meta.description.logLevel=로깅 수준 설정
jkt.meta.description.output=출력 캡처 설정을 관리합니다
jkt.meta.description.trackClasspath=클래스 경로 변경을 기록합니다. 아티팩트 해결 실패를 디버그하는 데 유용합니다
jkt.meta.description.trackExecution=실행 중인 코드를 기록합니다. 라이브러리 지원을 디버그하는 데 유용합니다
jkt.meta.description.use=지원되는 라이브러리에 대한 코드 삽입\: 아티팩트 해결, 디폴트 import 문, 초기화 코드, 타입 렌더러
jkt.meta.description.useLatestDescriptors=라이브러리 설명자의 사용 가능한 최신 버전을 사용하세요. 기본적으로 번들로 포함된 설명자가 사용됩니다
jkt.meta.description.vars=표시되는 변수 값을 가져옵니다
jupyterkotlin.file.type.description=Kotlin Notebook 지원을 제공합니다.
kotlin.jupyter.action.create.notebook.dialog.kind=새 Kotlin Notebook
kotlin.jupyter.action.create.notebook.dialog.title=새 Kotlin Notebook
kotlin.jupyter.action.create.notebook.name=Kotlin Notebook {0} 생성
kotlin.jupyter.debug.node.default.message=변수를 사용할 수 없습니다. Kotlin Notebook 설정을 참조하세요.
kotlin.jupyter.debug.node.empty.no.connection.message=변수를 사용할 수 없습니다. 연결이 설정되지 않았습니다
kotlin.jupyter.debug.node.empty.not.attached.message=변수를 사용할 수 없습니다. 프로세스가 연결되지 않았습니다
kotlin.jupyter.debug.node.no.context.message=suspended 컨텍스트 없이 연산할 수 없습니다
kotlin.jupyter.debug.node.rebuild.message=연결이 재설정된 후에 변수가 리빌드됩니다
kotlin.jupyter.debug.support.text=Kotlin Notebooks에서 디버그하는 기능은 개발 단계입니다. 일부 기능이 완전히 지원되지 않습니다.
kotlin.jupyter.dependencies.build.error.outdated=빌드 실패로 인해 오래된 종속성이 사용됩니다. 실행 결과는 보장되지 않습니다.
kotlin.jupyter.dependencies.build.error.severe=빌드 오류로 인해 프로젝트 수준 종속성을 제공하거나 바꿀 수 없습니다. 빌드 수정을 고려하세요.
kotlin.jupyter.dependencies.build.error.throwable=세션 초기화 중에는 프로젝트 단위의 종속 요소를 제공할 수 없습니다. 셀 실행이 중단되었습니다.
kotlin.jupyter.dialog.outputs.plot.export.directory=출력 파일 디렉터리\:
kotlin.jupyter.dialog.outputs.plot.export.directory.comment=Always defaults to the notebook directory.
kotlin.jupyter.dialog.outputs.plot.export.directory.multiple=출력 파일 디렉터리\:
kotlin.jupyter.dialog.outputs.plot.export.file.name=파일 이름\:
kotlin.jupyter.dialog.outputs.plot.export.file.name.comment=플롯 번호에 선택적으로 {0}을(를) 사용하세요. 다수의 플롯에 필요합니다.
kotlin.jupyter.dialog.outputs.plot.export.file.name.multiple=파일 이름 템플릿\:
kotlin.jupyter.dialog.outputs.plot.export.format=형식\:
kotlin.jupyter.dialog.outputs.plot.export.ok.text=저장
kotlin.jupyter.dialog.outputs.plot.export.overwrite.existing=기존의 파일 덮어쓰기\:
kotlin.jupyter.dialog.outputs.plot.export.overwrite.existing.multiple=기존의 파일 덮어쓰기\:
kotlin.jupyter.dialog.outputs.plot.export.restore.defaults=디폴트 값 복원
kotlin.jupyter.dialog.outputs.plot.export.scaling.factor=스케일 팩터\:
kotlin.jupyter.dialog.outputs.plot.export.scaling.factor.comment=Controls plot enlargement between {0}x and {1}x.
kotlin.jupyter.dialog.outputs.plot.export.target.dpi=목표 DPI\:
kotlin.jupyter.dialog.outputs.plot.export.target.dpi.comment=Adjusts resolution between {0} and {1} DPI.
kotlin.jupyter.dialog.outputs.plot.export.theme.darcula=Darcula
kotlin.jupyter.dialog.outputs.plot.export.theme.highContrastDark=어둡게
kotlin.jupyter.dialog.outputs.plot.export.theme.highContrastLight=밝게
kotlin.jupyter.dialog.outputs.plot.export.theme.solarizedDark=어둡게(Solarized)
kotlin.jupyter.dialog.outputs.plot.export.theme.solarizedLight=밝게(Solarized)
kotlin.jupyter.dialog.outputs.plot.export.theme.title=색 구성표\:
kotlin.jupyter.dialog.outputs.plot.export.title=플롯 저장
kotlin.jupyter.dialog.outputs.plot.export.title.multiple=플롯 저장
kotlin.jupyter.dialog.select.all.libraries.checkbox=모든 프로젝트 라이브러리 사용
kotlin.jupyter.dialog.select.all.modules.checkbox=모든 프로젝트 모듈 사용
kotlin.jupyter.dialog.select.libraries.title={0}의 라이브러리 선택
kotlin.jupyter.dialog.select.modules.title={0}의 모듈 종속 요소 선택
kotlin.jupyter.editor.dnd.csv.dataframe.command=CSV를 Kotlin DataFrame으로 가져오는 중
kotlin.jupyter.editor.dnd.json.dataframe.command=JSON을 Kotlin DataFrame으로서 가져오는 중
kotlin.jupyter.editor.dnd.xls.dataframe.command=XLS를 Kotlin DataFrame으로서 가져오는 중
kotlin.jupyter.line.breakpoint=Kotlin Notebook 줄 중단점
kotlin.jupyter.missing.jdk.notification.not.found.text=Kotlin Notebook을 실행하기 위해 선택된 JDK "{0}"을(를) 찾을 수 없습니다
kotlin.jupyter.missing.jdk.notification.not.selected.text=Kotlin Notebook을 실행할 JDK를 찾을 수 없습니다
kotlin.jupyter.missing.jdk.select.jdk.action=JDK 선택
kotlin.jupyter.output.error.notification.group=Kotlin notebook 플러그인 출력 오류 알림
kotlin.jupyter.refactor.changed.definition=선언 리팩터링이 기존 {0}개의 사용 위치에 영향을 미치지 않습니다.
kotlin.jupyter.refactor.changed.definition.rerun=Notebook 전체에 변경 내용을 적용하려면 셀 실행을 고려하세요.
kotlin.jupyter.refactor.compiled.script=컴파일링된 스크립트 멤버의 리팩터링은 바이트코드에 영향을 주지 않습니다. 적절한 다시 선언을 고려해 보세요.
kotlin.jupyter.session.classloader.error=셀 클래스가 최신 버전의 런타임으로 컴파일링되었습니다.
kotlin.jupyter.session.initial.setup=Notebook의 내부 종속성이 제공되지 않았습니다.
kotlin.jupyter.session.jdk.setting=세션의 JDK 설정을 변경해 보세요.
kotlin.jupyter.session.restart=커널 세션을 재시작하는 중입니다. 이전 상태가 중단됩니다.
kotlin.jupyter.settings.JDK.action.preview=JDK 설정 지정
kotlin.jupyter.settings.JDK.comment=JDK 버전은 {0} 이상이어야 합니다
kotlin.jupyter.settings.JDK.comment.empty.runtime={0} 런타임 버전
kotlin.jupyter.settings.JDK.path=JDK 경로
kotlin.jupyter.settings.appearance=모양
kotlin.jupyter.settings.build=JVM 및 빌드
kotlin.jupyter.settings.dependencies.deselect.all=모두 선택 해제
kotlin.jupyter.settings.dependencies.select.all=모두 선택
kotlin.jupyter.settings.environment.variables=환경 변수
kotlin.jupyter.settings.jvm.debug=디버그 옵션
kotlin.jupyter.settings.jvm.debug.port.check.box=세션 시작 시 디버그 포트 열기
kotlin.jupyter.settings.jvm.debug.port.check.box.description=선택 해제된 경우 커널 측에서 디버그 포트가 열리지 않습니다
kotlin.jupyter.settings.jvm.debug.port.comment=계측이 시작하려면 커널 버전이 최소 {0}이어야 합니다
kotlin.jupyter.settings.jvm.debug.port.notification=변수가 표시되지 않습니다. 커널을 업데이트해 보세요
kotlin.jupyter.settings.jvm.debug.variables=Notebook 세션 변수 표시
kotlin.jupyter.settings.jvm.debug.variables.comment=디버그 연결을 설정하기에 충분한 커널 버전이 없으면 구성할 수 없습니다
kotlin.jupyter.settings.jvm.debug.variables.description=체크된 경우 변수 상태가 별도의 창에 표시됩니다
kotlin.jupyter.settings.jvm.extra.args=추가 인수
kotlin.jupyter.settings.jvm.max.heap=최대 힙 크기
kotlin.jupyter.settings.jvm.max.heap.units=MiB
kotlin.jupyter.settings.jvm.target.for.snippets=스니펫의 JVM 대상
kotlin.jupyter.settings.jvm.target.for.snippets.comment=스니펫의 대상은 최대 {0}입니다(IDE JDK 버전)
kotlin.jupyter.settings.kernel.explore.button.name=커널 폴더 탐색
kotlin.jupyter.settings.kernel.mode=Kotlin Notebook 세션 실행 모드
kotlin.jupyter.settings.kernel.mode.ide.process=IDE 프로세스에서 실행
kotlin.jupyter.settings.kernel.mode.separate.process=별도의 프로세스에서 실행
kotlin.jupyter.settings.kernel.version=커널 버전
kotlin.jupyter.settings.new.notebook.description=새로 생성된 Kotlin Notebook에 사용되는 디폴트 설정을 구성합니다
kotlin.jupyter.settings.new.notebook.title=새 Notebook 설정
kotlin.jupyter.settings.outputs=출력
kotlin.jupyter.settings.outputs.swing.dataframe=DataFrame 테이블을 네이티브로 렌더링
kotlin.jupyter.settings.outputs.swing.letsPlot=Kandy 플롯을 네이티브로 렌더링
kotlin.jupyter.settings.plot.export.title=Kandy 플롯 내보내기
kotlin.jupyter.settings.refactoring.progress=Kotlin Notebook 처리 중…
kotlin.jupyter.settings.selected.jdk.default=선택된 JDK 기본값
kotlin.jupyter.settings.session=커널 세션
kotlin.jupyter.settings.title=Kotlin Notebook
kotlin.jupyter.settings.typeHints=타입 힌트 제공자
kotlin.jupyter.table.output.cannot.parse.dataframe.error=Unable to display the dataframe as it is too big in serialized format. Please consider increasing the value of 'jupyter.notebook.json.maxStringLength' in registry or switch to an HTML representation. To use HTML rendering, please disable the ‘Render DataFrame tables natively’ option in the Kotlin Notebook Plugin Settings.
kotlin.jupyter.table.output.cannot.parse.dataframe.error.unknown=데이터프레임을 표시할 수 업습니다. 예외 보고서를 제출해 주세요.
kotlin.jupyter.table.output.cannot.render.dataframe.error=데이터프레임을 렌더링하지 못했습니다
kotlin.jupyter.table.output.notification.content.could.not.display.table.with.d.columns={0} 열이 있는 테이블을 표시할 수 없습니다. HTML 렌더링을 사용하려면 Kotlin Notebook 플러그인 설정에서 ''DataFrame 테이블을 네이티브로 렌더'' 옵션을 비활성화하세요.
kotlin.jupyter.table.output.sort_column_not_comparable.error=열 {0}(으)로 정렬할 수 없습니다
kotlin.jupyter.table.output.too.many.columns.error=테이블 데이터를 표시할 수 없습니다. 열이 너무 많습니다.
kotlin.jupyter.template.context.type.generic=Kotlin Notebook
kotlin.jupyter.template.context.type.meta=매직 및 명령어
kotlin.jupyter.toolbar.actions.stop=Kernel 프로세스 중단
kotlin.jupyter.toolbar.session.name=Kotlin 커널 세션
kotlin.jupyter.toolbar.tabs.log=커널 로그
kotlin.jupyter.toolbar.tabs.variables=변수
kotlin.jupyter.toolbar.title=Kotlin 커널\: {0}
kotlin.notebook.collapsed.swingcomponent.no_size.text=Swing component has no size or is invisible.
kotlin.notebook.collapsed.swingcomponent.output.text=Swing Output
kotlin.notebook.outputs.kandy.export.all.failed.notification.message=Kandy 플롯 저장에 실패했습니다
kotlin.notebook.outputs.kandy.export.all.succeeded.notification.message=Kandy 플롯이 저장되었습니다
kotlin.notebook.outputs.kandy.export.failed.already.exists.message=파일이 이미 있습니다. {0}
kotlin.notebook.outputs.kandy.export.failed.notification.message=Kandy 플롯 저장에 실패했습니다
kotlin.notebook.outputs.kandy.export.notification.action.open=저장된 플롯 열기
kotlin.notebook.outputs.kandy.export.notification.action.open.multiple=포함하는 폴더 열기
kotlin.notebook.outputs.kandy.export.notification.group=Kandy 플롯이 저장되었습니다
kotlin.notebook.outputs.kandy.export.notification.message=Kandy 플롯 {0}이(가) 저장되었습니다
kotlin.notebook.outputs.kandy.export.some.failed.notification.message=일부 Kandy 플롯이 저장되지 않았습니다
kotlin.notebook.outputs.swingcomponent.dialog.no.size.text=JDialog is either invisible or has no size defined. So it cannot be shown.
kotlin.notebook.outputs.swingcomponent.dialog.text=JDialog is opened in its own window.
kotlin.notebook.outputs.swingcomponent.export.failed.notification.message=Creating screenshot failed
kotlin.notebook.outputs.swingcomponent.frame.no.size.text=JFrame "{0}" is either invisible or has no size defined. So it cannot be shown.
kotlin.notebook.outputs.swingcomponent.frame.text=JFrame "{0}" is opened in its own window.
kotlin.notebook.session.notification.group=Kotlin notebook 세션 알림
meta.file.type.description=Jupyter Kotlin 명령어, 매직 등의 지원을 제공합니다.
plugin.updater.notification.group=Kotlin Notebook 플러그인 업데이트 사용 가능
