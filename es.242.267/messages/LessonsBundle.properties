basic.completion.activate.explicitly=Para habilitar explícitamente la finalización de código básico, presione {0}.
basic.completion.finish.explicit.completion=Seleccione {0} y presione {1}.
basic.completion.help.code.completion=Finalización de código básico
basic.completion.just.press.to.complete=Ahora presione {0} para completar esta declaración.
basic.completion.lesson.name=Finalización de código básico
basic.completion.start.typing=De forma predeterminada, <ide/> sugiere inmediatamente la finalización del código. Cuando empieces a escribir {0} donde está el cursor, verás una lista completa con sugerencias coincidentes.
code.assistance.module.description=Aprenda a formatear su código, obtener información de parámetros y obtener una vista previa de ventanas emergentes rápidas.
code.assistance.module.name=soporte de código
code.completion.module.description=El IDE completa el código. Pruebe la finalización de código básica, inteligente y de otro tipo.
code.completion.module.name=Finalización de código
code.format.help.link=Configuración de estilo de código
code.format.lesson.name=Formato de código
code.format.optimize.imports=Aquí puede configurar las opciones de reformateo. Por ejemplo, active {0} y haga clic en {1}.
code.format.reformat.file=Para reformatear todo el archivo sin líneas seleccionadas, utilice {0}.
code.format.reformat.selection=En <ide/>, puedes modificar el formato del código con una sola acción. Haga clic en {0} para reformatear el fragmento de código seleccionado.
code.format.show.reformat.file.dialog=Utilice {0} para mostrar la configuración de reformateo.
collapse.all.collapse=Presione {0} para contraer todas las áreas del archivo.
collapse.all.expand=Asimismo, presione {0} para expandir todas las áreas disponibles.
collapse.help.link=Expandir o contraer elementos de código
collapse.hit.expand=Presione {0} para expandir el área de código.
collapse.lesson.name=doblar
collapse.try.collapse=A veces es necesario doblar partes de su código para mejorar la legibilidad. Contraiga el fragmento de código con {0}.
comment.block.comment=Bloquear comentario Si desea comentar con {0}, seleccione el bloque de código y presione {1}.
comment.block.lesson.name=Comentar líneas y bloques de código.
comment.block.uncomment=Para descomentar un comentario de bloque, coloque el cursor en cualquier lugar del bloque de comentarios y presione {0}.
comment.line.comment.any.line=Comente cualquier línea con {0}.
comment.line.comment.several.lines=Seleccione varias líneas y coméntelas con {0}.
comment.line.lesson.name=línea de comentario
comment.line.uncomment.several.lines=Para descomentar varias líneas, seleccione todas las líneas comentadas y presione {0}.
comment.line.uncomment.that.line=Descomentar la línea comentada con el mismo atajo\: coloque el cursor en cualquier lugar de la línea y presione {0}.
completion.with.tab.begin.completion=Presiona {0} para mostrar una lista de sugerencias para completar el código.
completion.with.tab.finish.with.tab=Seleccione {0} y presione {1}. En lugar de simplemente insertar la sugerencia seleccionada, esta acción reemplaza completamente la palabra sobre la que se coloca el cursor.
completion.with.tab.lesson.name=Completar código con pestañas
context.actions.apply.intention=Apliquemos la acción {0}.
context.actions.fix.warning=Apliquemos la primera solución rápida: {0}.
context.actions.help.intention.actions=intención acción
context.actions.invoke.general.intentions={0} se puede llamar en casi cualquier contexto. Echemos un vistazo a lo que podemos hacer con diferentes posiciones de intercalación. Presione {1} nuevamente.
context.actions.invoke.intentions.for.warning=<ide/> tiene muchas acciones basadas en contexto para ayudarlo a transformar, mejorar y corregir su código. Presione {1} para llamar a {0}.
context.actions.lesson.name=acción contextual
context.actions.refactorings.promotion=Muchas refactorizaciones útiles no están disponibles a través de {0}. Vaya al módulo {1} para aprender cómo llamar y utilizar la refactorización.
debug.workflow.check.result=Presione {0} para evaluar la declaración de devolución seleccionada.
debug.workflow.choose.method.to.step.in=Tenga en cuenta que hay varias llamadas anidadas y Smart Step Into las resaltará todas. Presione {1} para seleccionar todas las {0} llamadas y presione {2} para acceder a ellas.
debug.workflow.consider.to.add.a.shortcut=(Intenta asignar una tecla de acceso directo más tarde)
debug.workflow.evaluate.expression=Para determinar si una función genera una excepción, simplemente evalúe la expresión que la llama. Copiemos la expresión seleccionada y péguela en el campo resaltado en la ventana de depuración.
debug.workflow.evaluate.it=Presione {0} para evaluar la expresión.
debug.workflow.exception.description=Si su programa genera una excepción, puede ver el seguimiento de la pila en la ventana Ejecutar. También puede hacer clic en el nombre del archivo y el número de línea en el seguimiento de la pila para saltar al editor.
debug.workflow.fix.error=¡Hay un error en el índice de la matriz! Arreglemoslo ahora mismo. Presione {0} para cerrar la ventana emergente y cambiar de 0 a 1.
debug.workflow.frames.disabled.warning=Para continuar con esta lección, <callback id\="{0}">Activar</callback> ver {1} en la ventana de la herramienta Depurar.
debug.workflow.help.link=código de depuración
debug.workflow.incorrect.breakpoints=El punto de interrupción en esta clase está configurado incorrectamente.
debug.workflow.lesson.name=Flujo de trabajo de depuración
debug.workflow.mute.breakpoints=Vaya, estoy atrapado en el punto de interrupción otra vez. Pero esta vez no tienes por qué quedarte ahí. Desactivemos el punto de interrupción haciendo clic en {0} en la ventana de depuración.
debug.workflow.need.restart.lesson=La sesión de depuración se ha detenido. Comienza la clase nuevamente.
debug.workflow.quick.evaluate=Comprobemos qué pasar a {0}. Presione {1} para invocar la ''evaluación rápida de expresiones'' para los argumentos seleccionados.
debug.workflow.resume=Esta vez la convocatoria funciona sin excepción. Haga clic en {0} o haga clic en {1} en la ventana de depuración para reanudar la ejecución del programa.
debug.workflow.run.current=Ejecutemos un programa de muestra que calcula el peso promedio de varias frutas según la entrada.
debug.workflow.run.to.cursor.alternative=En su lugar, puede colocar el cursor hacia la izquierda y hacer clic en la acción Incrustar {0}.
debug.workflow.run.to.cursor.intro=Finalmente, verifiquemos el resultado de {0} (moví el cursor a la declaración {1} por conveniencia):
debug.workflow.run.to.cursor.note=Tenga en cuenta que {0} solo funciona con los puntos de interrupción desactivados.
debug.workflow.run.to.cursor.press=Presione {0} para ejecutar el programa hasta el cursor.
debug.workflow.start.debug=Para comenzar a depurar la configuración de ejecución actualmente seleccionada, haga clic en {0} en la barra de herramientas o presione {1}.
debug.workflow.step.into=Pasemos a llamadas seleccionadas para encontrar la causa de la excepción. Haga clic en {0} o haga clic en {1} en la ventana de depuración.
debug.workflow.step.over=Comprobemos si llamar a {0} después de la modificación genera una excepción. Para pasar por alto la llamada, presione {1} o haga clic en {2} en la ventana de depuración.
debug.workflow.stop.debug=¡Obtuve el resultado correcto\! Haga clic en {0} o haga clic en {1} en la barra de herramientas para completar la depuración.
debug.workflow.toggle.breakpoint=Establezcamos un punto de interrupción para comenzar a investigar el problema. Para hacer esto, haga clic en el margen de la línea deseada o mueva el cursor a esa línea y luego presione {0}.
debug.workflow.use.watches=Se produce una excepción como resultado de la expresión. Agreguemos esta expresión a {0} para que se evalúe automáticamente a partir de ahora. Presione {1} o haga clic en {2}.
debug.workflow.use.watches.shortcut=Alternativamente, puede utilizar la acción {0} para agregar texto seleccionado a {1} {2}.
declaration.and.usages.find.usages=Haga clic en {0} para ver detalles sobre dónde usarlo. Se puede llamar a {0} desde su declaración o desde su ubicación de uso.
declaration.and.usages.help.link=Ir a declaraciones y sus tipos
declaration.and.usages.hide.view=Una vez que haya terminado de buscar ubicaciones de uso, presione {0} para ocultar la vista.
declaration.and.usages.jump.to.declaration=Haga clic en {0} para ir a la declaración del método.
declaration.and.usages.lesson.name=Dónde declarar y usar
declaration.and.usages.open.find.view=Vuelva a abrir la vista {0} {1}.
declaration.and.usages.pin.motivation=Puede navegar a las ubicaciones de uso y declaraciones en la vista {0}. Este resultado será anulado por la siguiente búsqueda en la vista {0}. Para evitar esto, congele los resultados.
declaration.and.usages.right.click.tab=Para fijar una pestaña, haga clic derecho en el título de la pestaña resaltada.
declaration.and.usages.select.pin.item=Seleccione {0}.
declaration.and.usages.show.usages=El cursor ahora está en la posición de la declaración del método. Utilice el mismo acceso directo {0} para ver todos los usos y seleccione uno de ellos.
duplicate.and.delete.lines.delete.line=Presione {0} para eliminar la línea actual.
duplicate.and.delete.lines.duplicate.line=Utilice {0} para duplicar la línea donde se coloca el signo de intercalación.
duplicate.and.delete.lines.duplicate.several.lines=Ahora presione {0} para duplicar la línea seleccionada.
duplicate.and.delete.lines.lesson.name=Duplicar y eliminar líneas
duplicate.and.delete.lines.select.several.lines=La misma acción se puede aplicar a varias líneas. Por ejemplo, haga doble clic en {0} para seleccionar las líneas actual y anterior.
duplicate.and.delete.lines.unexpected.selection.restore=rango de selección inesperado
editor.basics.module.description=Agregue, elimine, seleccione, mueva y duplique código con atajos inteligentes.
editor.basics.module.name=Conceptos básicos del editor
editor.coding.assistance.fix.error=¡Arreglemos este error! Presione {0} y luego seleccione {1}.
editor.coding.assistance.fix.warning=Una ventana emergente mostrará acciones de refactorización sugeridas para corregir esta advertencia.
editor.coding.assistance.goto.next.error=Presione {0} para ir al siguiente error resaltado en el archivo.
editor.coding.assistance.goto.next.warning=Pasemos a la siguiente advertencia. Presione {0}.
editor.coding.assistance.help.link=Trabajar con código fuente
editor.coding.assistance.highlight.usages=Otra herramienta útil es resaltar la ubicación. Presione {0} para resaltar todas las apariciones del símbolo en la posición del cursor en el archivo.
editor.coding.assistance.lesson.name=Soporte de codificación del editor
editor.coding.assistance.show.warning.description=Haga clic en {0} para expandir la descripción de la advertencia.
essential.module.description=Echemos un vistazo a las funciones principales de {0}
essential.module.name=básico
extract.method.confirm.several.replaces=Hay dos lugares de intercambio en la línea de cócteles. La primera pieza ha sido extraída. Haga clic en {0} para extraer ambos.
extract.method.help.link=Extracción del método
extract.method.invoke.action=Haga clic en {0} para extraer el bloque de código seleccionado en un método.
extract.method.lesson.name=Extracción del método
extract.method.second.fragment=Ahora puedes confirmar o rechazar la sustitución del segundo fragmento.
extract.method.start.refactoring=Haga clic en {0} para comenzar a refactorizar.
extract.variable.choose.name=Elija un nombre para la nueva variable o déjela como está. Haga clic en {0} para completar la refactorización.
extract.variable.help.link=Extraer/insertar variables
extract.variable.lesson.name=Extracción de variables
extract.variable.replace.all=Este bloque de código contiene tres apariciones encontradas de la expresión seleccionada. Seleccione el segundo elemento de la lista para reemplazarlos todos.
extract.variable.start.refactoring=Presione {0} para extraer variables locales de la expresión {1}.
file.structure.help.link=Ver la estructura del archivo fuente
file.structure.lesson.name=Estructura de archivos
file.structure.navigate=Sólo queda 1 artículo. Ahora presione {0} para ir al elemento seleccionado.
file.structure.open.popup=Los archivos fuente de gran tamaño pueden resultar difíciles de leer y navegar. A veces solo necesitas una vista previa. Presione {0} para abrir la estructura del archivo.
file.structure.request.prefixes=Supongamos que desea buscar métodos cuyos nombres contengan las palabras {0} y {1}. Filtre la estructura del archivo ingresando {2} (el prefijo de la palabra que necesita).
file.structure.toolwindow=<ide/> también puede mostrar la estructura del archivo como una ventana de herramientas. Abrir con {0}.
find.help.link=Búsqueda dirigida dentro de archivos
find.in.files.confirm.replace=Finalmente, haga clic en {0} en el cuadro de diálogo para confirmar.
find.in.files.go.to.file=También puede abrir archivos seleccionados en el editor principal. Haga clic en {0} o haga doble clic en el elemento resaltado para navegar hasta ese archivo.
find.in.files.help.link=Buscar y reemplazar texto en el archivo del proyecto
find.in.files.lesson.name=Buscar y reemplazar en archivos
find.in.files.popup.closed.warning.message=Haga clic en {0} para volver a abrir la ventana {1}.
find.in.files.press.replace.all=Presione {0} para iniciar el reemplazo.
find.in.files.select.directory=Puede definir alcances de búsqueda y reemplazo. Para limitar la sustitución solo al directorio actual, haga clic en el botón {0} o haga clic en {1}.
find.in.files.select.row=El contexto de la cadena encontrada se muestra en el editor integrado. Haga clic en la fila resaltada o utilice los botones {0} y {1} para navegar hasta allí.
find.in.files.show.find.popup=Digamos que desea encontrar todas las apariciones de una cadena dentro de su proyecto. Haga clic en {0} para abrir la ventana {1}.
find.in.files.show.replace.popup=Supongamos que desea reemplazar todos los elementos encontrados en su búsqueda con otra cadena. Reemplazar cada archivo secuencialmente sería muy tedioso. <ide/> ayuda con esta tarea. Haga clic en {0} para abrir la ventana {1}.
find.in.files.type.to.find=Ingrese {0} para buscar todas las apariciones de texto encontradas en su proyecto de aprendizaje.
find.in.files.type.to.replace=Reemplacemos todas las apariciones encontradas de {0} con {1}. Ingrese {1} en el campo resaltado.
find.in.files.whole.words=Se intentó encontrar la cadena {0}, pero también se encontró {1}. Limitemos la búsqueda por palabra. Haga clic en {2} o presione {3}.
find.occurrences.close.search.tool=Incluso cuando el panel de búsqueda está cerrado, puede utilizar atajos de teclado para navegar por los elementos encontrados recientemente. Haga clic en {0} para cerrar el panel de búsqueda.
find.occurrences.find.next=<ide/> copia automáticamente el texto seleccionado en la barra de búsqueda. Busquemos el siguiente elemento. Presione {0} o {1}.
find.occurrences.find.next.in.editor=Busque el siguiente elemento con {0}.
find.occurrences.find.previous=Presione {0} para ir al elemento anterior.
find.occurrences.find.previous.in.editor=Y presione {0} para regresar.
find.occurrences.invoke.find=Para esta lección, seleccionó {0}. Presione {1} para iniciar una búsqueda de texto completo en el archivo actual.
find.occurrences.lesson.name=Artículo siguiente/anterior
find.occurrences.note.about.cyclic=<strong>Nota\:</strong> La búsqueda es circular. Al hacer clic en {0} dos veces en el último elemento, se selecciona el primer elemento. {1} también es circular.
find.occurrences.search.closed.warning=Presione {0} para abrir el cuadro de búsqueda nuevamente.
goto.action.first.lines.toggle=Cambie la visualización del número de línea a {0,choice, 0\#off|1\#on}.
goto.action.invoke.about.action=Por ejemplo, si desea obtener información sobre <ide/>, escriba {0} y luego presione {1}.
goto.action.invoke.again=Puede cambiar la configuración del IDE y del proyecto usando {0} o haciendo doble clic en {1}. Intente presionar una de estas teclas de método abreviado nuevamente.
goto.action.lesson.name=busqueda de accion
goto.action.mac.workaround=Si su búsqueda abre <strong>Terminal</strong> en lugar de {0}, consulte <a href\="{1}">este artículo</a>.
goto.action.popup.closed.warning.message=Toque {0} o toque {1} dos veces para abrir la barra de búsqueda nuevamente.
goto.action.propose.to.go.next.new.ui=Bien hecho\! Presione {0} o haga clic en el botón a continuación para comenzar la siguiente lección.
goto.action.second.lines.toggle=Ahora vuelva a cambiar la visualización del número de línea a {0,choice, 0 \#on|1 \#off}.
goto.action.show.line.numbers.request=Ingrese {0} para ver el selector {1}.
goto.action.to.return.to.the.editor=Presione {0} para regresar al editor.
goto.action.use.find.action.1={0} es un atajo muy útil. Este atajo te permite buscar entre todas las acciones disponibles, por lo que no tienes que memorizar el atajo para cada acción. Intente usar {1}.
goto.action.use.find.action.2=Alternativamente, puede llamar a {0} presionando {1} dos veces. Puede encontrar entidades de código de proyecto<strong>así como</strong>elementos IDE. Puedes elegir según tu preferencia.
help.code.comment=Agregar y eliminar comentarios de código
help.code.completion=Finalización de código
help.code.duplicate=Líneas duplicadas o rango de selección
help.find.actions=Buscar acciones y configuraciones
help.lines.of.code=línea de código
help.search.everywhere=Búsqueda completa
local.history.close.window=Cierre el cuadro de diálogo y regrese al código modificado. Presione {0}.
local.history.congratulations=excelente\! Fragmento de código restaurado\!
local.history.dialog.message=El IDE simula el proceso de edición de archivos. Espere hasta que finalice.
local.history.editor.hint=La modificación de archivos está deshabilitada para el paso actual.
local.history.file.modification.progress=Editando archivo
local.history.help.link=Historia local
local.history.imagine.restore=Considere un caso en el que necesita restaurar un código que se eliminó previamente. El código se ha modificado varias veces desde que se eliminó, por lo que {0} ahora no funciona y nos gustaría conservar estos cambios.
local.history.invoke.context.menu={0} te permite restaurar el código eliminado con solo unos pocos clics. Haga clic derecho en cualquier parte del editor para abrir el menú contextual.
local.history.lesson.name=Restaurar código eliminado
local.history.remove.code=En esta lección, aprenderá cómo restaurar código usando {0}. Presione {1} para eliminar el fragmento de código seleccionado.
local.history.restore.code=El panel derecho muestra las diferencias entre la revisión actual del archivo y la revisión seleccionada. En este caso, la revisión seleccionada contiene código eliminado. Para restaurar fragmentos de código eliminados, haga clic en el botón de expansión {0}.
local.history.restore.code.balloon=Haga clic para restaurar el fragmento de código
local.history.select.revision=El panel izquierdo del cuadro de diálogo {0} muestra una lista de revisiones guardadas para el archivo actual. El estado del proyecto se guarda automáticamente en {1} cada vez que edita código, ejecuta pruebas y realiza otras acciones. Seleccionemos la revisión resaltada.
local.history.show.history=Seleccione {0} → {1}.
move.lesson.name=Mover un fragmento de código
move.pull.down=Reorganizar líneas suele implicar dos acciones: cortar y pegar. <ide/> te permite ejecutar con una sola acción. Presione {0} para mover la línea actual hacia abajo.
move.pull.up=Del mismo modo, presione {0} para mover la alineación hacia arriba.
move.whole.method.down=Ahora baja a {0}.
move.whole.method.up=Intente avanzar todo el método con {0}. Sin embargo, el símbolo de intercalación debe estar en el encabezado del método.
multiple.selections.deselect.symbol=Presione {0} para anular la selección del último elemento encontrado.
multiple.selections.escape=Presione {0} para restablecer la selección múltiple y volver al modo de cursor único.
multiple.selections.help.multiple.carets=Múltiples quilates y rango de selección.
multiple.selections.lesson.name=Múltiples rangos de selección
multiple.selections.replace=Ingrese {0} para reemplazar todas las apariciones encontradas de {1} con {0}.
multiple.selections.select.all=Haga clic en {0} para seleccionar todos los elementos encontrados en este archivo.
multiple.selections.select.next.symbol=Presione {0} para seleccionar la siguiente aparición encontrada de este símbolo.
multiple.selections.select.symbol=Presione {0} para seleccionar el símbolo en la posición del cursor.
navigation.module.description=Vaya a la fuente y vaya a la declaración, implementación y estructura de archivos.
navigation.module.name=Navegar
new.selection.add.quotes=Presione {0} tres veces para incluir comillas en la selección.
new.selection.select.call={0} {1,choice, 1\#1|2\#2| 3\#1| Presione 4\#4} veces más para seleccionar todas las llamadas.
new.selection.select.if=Se movió la posición del cursor al principio de la declaración {0}. Haga doble clic en {1} para seleccionarlo. Las palabras clave le permiten seleccionar esa frase con solo presionar unas pocas teclas.
new.selection.select.string=Presione {0} nuevamente para seleccionar la cadena completa.
new.selection.select.word=Presione {0} para seleccionar la palabra debajo del cursor.
new.selection.unselect=Digamos que desea seleccionar argumentos en lugar de toda la llamada. Presione {0} para limitar la selección a un factor.
onboarding.finish.exit=데모 프로젝트 닫기
onboarding.finish.modules=추가 수업 표시
onboarding.finish.text=<ide/> 온보딩 투어를 완료하셨습니다.\n이제 학습용 프로젝트를 종료하셔도 됩니다{0}.\n학습을 계속하고 다른 수업을 들어보셔도 됩니다.
onboarding.finish.title=축하합니다
onboarding.return.to.welcome.remark=\ y volver a la pantalla de inicio
parameter.info.add.parameters=Utilice un ancho de {0} y un alto de {1}.
parameter.info.help.link=Información de parámetros
parameter.info.lesson.name=Información de parámetros
parameter.info.use.action=La ventana emergente {0} muestra los nombres de los parámetros dentro de las llamadas a métodos y funciones. Cuando abre un corchete en el editor o selecciona un método de la lista de sugerencias, <ide/> muestra una ventana emergente con todas las firmas de métodos disponibles en un segundo. Haga clic en {1} para mostrar la firma del método.
postfix.completion.help.link=Finalización del código de sufijo
postfix.completion.intro=La finalización de sufijos ayuda a reducir los cambios de cursor hacia atrás al escribir código. Puede convertir una expresión ya ingresada en otra expresión según el sufijo que agregó, el tipo de expresión y su contexto.
postfix.completion.lesson.name=Finalización de sufijo
proceed.to.the.next.step=<callback id\="{0}">Haga clic para continuar</callback>
quick.popups.close={0}을(를) 눌러 팝업을 닫으세요.
quick.popups.help.link=ventana emergente rápida
quick.popups.lesson.name=ventana emergente rápida
quick.popups.press.show.documentation.again={0}을(를) 눌러 문서 도구 창에서 문서를 여세요.
quick.popups.press.show.documentation.focus=문서 도구 뷰를 클릭하거나 {0}을(를) 한 번 더 눌러 포커스를 해당 위치로 옮기세요.
quick.popups.show.documentation=Con la función {0}, puede obtener rápidamente información sobre cualquier símbolo directamente desde el editor. Presione {1} para obtener documentación sobre el símbolo en la posición del cursor.
quick.popups.show.implementation=Presione {0} para ver la definición del símbolo en la posición del cursor.
readme.bug.tracker.remark=Si encuentra otros problemas, intente reiniciar el curso o informe un error en [Bug Tracker] ({0}).
readme.conclusion.header=Volver al proyecto
readme.exit.options=Cierre la ventana del proyecto para volver a la pantalla de inicio. O, en el menú principal, seleccione ''{0} | Seleccione {1}''. También puede abrir o crear un nuevo proyecto usando el menú ''{0}''. De forma predeterminada, la ventana de herramientas ''{2}'' está oculta. Se accede a esta ventana desde el menú principal seleccionando ''{3} | Puede abrirlo seleccionando {4}''.
readme.experienced.users.remark=Incluso si la conferencia parece algo que ya sabes, escúchala. ¡Puede descubrir ejemplos útiles de funciones y atajos de uso frecuente que no conocía!
readme.feedback.request=¡Apreciaríamos sus comentarios sobre este proceso de aprendizaje!
readme.ift.description=Este curso interactivo lo guiará a través de numerosos flujos de trabajo y casos de uso de IDE. Aquí encontrará una variedad de atajos de acciones útiles, pero no es necesario que los memorice todos. En su lugar, intente utilizar acciones y aplique las más útiles a sus propios servicios. Y es posible que encuentre nuevos problemas durante sus tareas diarias, así que asegúrese de volver a visitar este curso y probar también otras funciones. Estén atentos a nuevas lecciones que le ayudarán a ser más productivo utilizando {0}.
readme.indexing.description=Es posible que esté leyendo este 'README.md' mientras inicializa su proyecto de aprendizaje. La 'indexación' suele ser la tarea que consume más tiempo durante la inicialización del proyecto. El IDE debe recopilar información sobre el entorno del usuario, proyecto{0,choice,1\#, biblioteca|2\#} y luego configurar la reproducción interna. Esto es necesario para una navegación y búsqueda rápidas.
readme.navigation.hint=El módulo ''{0}'' de este curso le muestra cómo usarlo.
readme.shortcuts.header=Gestión de teclas de acceso directo
readme.shortcuts.problem.description=Algunos atajos de este curso pueden entrar en conflicto con los atajos de su sistema o de otras aplicaciones. En este caso, puede hacer clic en el acceso directo problemático en el texto del curso. La ventana emergente que se abre muestra el nombre de la acción y el acceso directo alternativo. Desde aquí puedes aplicar acciones o asignar nuevos atajos.
readme.start.header=Empezando
readme.toolwindow.description=La ventana de herramientas ''{0}'' contiene varios módulos con sus correspondientes conjuntos de aprendizaje que se pueden tomar en cualquier orden. Una vez que hayas terminado de estudiar el curso, el curso se marcará como "completo". Las lecciones completadas pueden usarse como referencia o reanudarse cuando desee actualizar sus conocimientos.
readme.usage.header=Cómo utilizar el plan de estudios
readme.welcome.header=Conozca al entrenador de funciones interactivas
recent.files.close.popup=Su historial de archivos reciente ahora está más limpio. Haga clic en algún lugar fuera de la ventana emergente para cerrarla o utilice {0}.
recent.files.delete=Esta lista contiene una serie de archivos fuente que ya no se visitan. Usemos {1} para eliminar {0} archivos del historial de archivos reciente.
recent.files.dialog.message=Simulemos un flujo de trabajo básico: movernos rápidamente entre archivos. Espere hasta que finalice.
recent.files.dialog.title=Simulación de flujo de trabajo
recent.files.first.transition=¿Tiene curiosidad sobre cómo se implementa el método {0}? Vayamos a la declaración del método usando {1}.
recent.files.lesson.name=Archivos y ubicaciones recientes
recent.files.locations.help.link=Buscar archivos recientes
recent.files.locations.search.jump=Ahora seleccione el fragmento resaltado y luego presione {0} para abrir el archivo que lo contiene.
recent.files.locations.search.typing=Aquí puede buscar cualquier fragmento de código que recuerde. Por favor ingrese {0}.
recent.files.progress.title=Abrir archivo
recent.files.search.jump=Sólo queda un archivo. Ahora presione {0} para ir al archivo seleccionado.
recent.files.search.typing=Puede buscar archivos por nombre. Por favor ingrese {0} (prefijo de la palabra que necesita).
recent.files.show.recent.files=Aprendimos más sobre los archivos de la biblioteca. ¿Cómo vuelvo a mis archivos? <ide/> tiene una función que muestra archivos abiertos recientemente. Presione {0}.
recent.files.show.recent.locations=Otra acción útil le permite descubrir código en archivos visitados recientemente. Presione {0}
recent.files.use.recent.files.again=Estoy de vuelta con el archivo. Comprobemos los archivos recientes nuevamente usando {0}.
refactoring.menu.finish.refactoring=Para completar la refactorización, seleccione un nombre para el nuevo parámetro o mantenga el nombre predeterminado y presione {0}.
refactoring.menu.help.link=Llamada de refactorización
refactoring.menu.introduce.parameter=Digamos que necesitamos mover la expresión seleccionada a una ubicación de llamada y pasarla como parámetro al método contenedor. Seleccione {0} de la lista y presione {1}.
refactoring.menu.introduce.parameter.eng=Digamos que necesitamos mover la expresión seleccionada a una ubicación de llamada y pasarla como parámetro al método contenedor. Esto se puede hacer con {0}. <strong>pa</strong>(introducir <strong>pa</strong>parámetro) o <strong>ip</strong>(<strong>i</strong>introducir <strong>p</strong>parámetro) Por favor escriba para reducir la lista de sugerencias.
refactoring.menu.lesson.name=Menú de refactorización
refactoring.menu.show.refactoring.list=Hay una variedad de refactorizaciones disponibles en <ide/>. Cada refactorización tiene una tecla de acceso directo. Sin embargo, puede presionar {0} en cualquier momento para mostrar una lista de todas las refactorizaciones disponibles en el contexto actual.
refactoring.menu.start.refactoring=Presione {0} para comenzar a refactorizar {1}. <strong>Nota</strong>\: Puede aprender los atajos de refactorización en el menú Refactorización.
refactorings.change.settings.warning.message=Para completar esta lección, cambie las opciones de refactorización en la configuración de su editor. Presione {0}, navegue hasta {1} <strong>→</strong> {2} y seleccione {3} en {4}. O <callback id\="{5}">haga clic</callback> para cambiar la configuración.
refactorings.module.description=Limpie su código mediante cambio de nombre, extracción y otros tipos de refactorización.
refactorings.module.name=Refactorización
rename.help.link=Cambiar el nombre de la refactorización
rename.lesson.name=cambiar nombre
restore.settings.informer=Cambié algunas configuraciones de IDE en esta clase. <callback id\="{0}">Haga clic en</callback> para restaurar las opciones modificadas.
run.configuration.close.settings=Ahora cierre el cuadro de diálogo y complete esta lección.
run.configuration.edit.configuration=Si desea editar una configuración de inicio o agregar una nueva, mantenga presionado {0} y haga clic en el menú desplegable, o abra el menú desplegable y haga clic en {1}.
run.configuration.help.link=Ejecutar/depurar configuración
run.configuration.hover.generated.configuration=Para esta lección, agregamos una configuración más con parámetros. Pase el cursor sobre esta configuración para mostrar el botón Ejecutar o Depurar correspondiente.
run.configuration.lesson.name=Configuración de ejecución
run.configuration.no.run.configuration=Como puede ver, ejecutar {0} no crea una configuración de ejecución.
run.configuration.open.additional.menu.balloon=Ver más acción
run.configuration.open.run.configurations.popup=Ahora echemos un vistazo a la ventana emergente de configuración de inicio. Haga clic en el menú desplegable.
run.configuration.run.current=Haga clic en {0} en la barra de herramientas para ejecutar este programa de demostración.
run.configuration.run.current.balloon=Ejecute este ejemplo
run.configuration.run.generated.configuration=Intenta ejecutarlo.
run.configuration.select.save.configuration=Seleccione {0}.
run.configuration.settings.description=Aquí es donde administra todas sus configuraciones de ejecución. Aquí puede configurar los parámetros del programa, argumentos de JVM, variables de entorno, etc.
run.configuration.temporary.to.permanent=<ide/> ahora crea una configuración de inicio temporal. Las configuraciones temporales se eliminan automáticamente cuando se excede el límite predeterminado de cinco. Convirtamos la configuración temporal en una configuración permanente. Haga clic en {0} junto a los botones Ejecutar y Depurar.
run.configuration.tip.about.save.configuration.into.file=Consejo\: Para que todos sus colegas puedan acceder a su configuración de ejecución, guarde la configuración de ejecución como un archivo separado y luego compártala a través de su sistema de control de versiones.
run.debug.module.description=Ejecute su código y corrija errores con el depurador visual del IDE.
run.debug.module.name=Ejecutar y depurar
search.everywhere.class.popup.closed.warning.message=Haga clic en {0} para volver a abrir la barra de búsqueda.
search.everywhere.close.documentation.popup=Haga clic en {0} para cerrar la ventana emergente.
search.everywhere.finish=<strong>¡Ya terminaste\!</strong> De manera similar, puedes presionar {0} para buscar métodos o variables globales y {1} para buscar archivos.
search.everywhere.goto.class=excelente\! Sin embargo, hay ocasiones en las que es necesario buscar sólo clases o sólo en directorios específicos. Busque una clase con {0}.
search.everywhere.invoke.search.everywhere=Para abrir {0}, presione {1} dos veces.
search.everywhere.lesson.name=Buscar en todas partes
search.everywhere.navigate.to.class=Utilice las teclas de flecha del teclado para seleccionar {0} y presione {1} para pasar a la definición encontrada.
search.everywhere.navigation.promotion=Se pueden encontrar otras acciones de navegación y casos de uso de flujo de trabajo en el módulo {0}.
search.everywhere.quick.documentation=Presione {0} para obtener una vista previa del documento de la clase seleccionada.
search.everywhere.type.class.name=Digamos que necesitamos una clase de biblioteca responsable de la lectura almacenada en búfer de un flujo de entrada. Ingresa {0} (las primeras letras de la palabra que deseas buscar), pero no vayas a esa clase todavía.
search.everywhere.type.prefixes=Supongamos que busca definiciones de código que contengan las palabras {0} y {1} en sus nombres. Ingrese {2} (las primeras letras de la palabra) en la barra de búsqueda.
search.everywhere.use.all.places=Ahora puede ver las clases coincidentes dentro del proyecto de demostración. Pero necesitamos encontrar la clase en la biblioteca. Cambiemos el filtro {0} a {1} para cargar clases coincidentes desde las bibliotecas disponibles.
selection.extend.selection=Haga clic en {0} para expandir su selección al siguiente bloque de código.
selection.extend.until.whole.file=Intente aumentar la selección en {0} hasta seleccionar todo el archivo.
selection.help.select.code.constructs=Seleccionar la sintaxis del código
selection.lesson.name=Ampliar y contraer selección de código
selection.select.word=Coloque el símbolo de intercalación antes de cualquier palabra. Presione {0} para mover el cursor a la siguiente palabra y seleccionar todo lo que se encuentre en el medio.
selection.shrink.selection={0} reduce la selección. Intentalo.
smart.completion.lesson.name=Coincidencia de tipos completada
surround.and.unwrap.choose.surround.item=Seleccione {0} elemento.
surround.and.unwrap.choose.unwrap.item=Seleccione {0} elemento.
surround.and.unwrap.help.surround.code.fragments=Adjuntar fragmentos de código
surround.and.unwrap.help.unwrapping.and.removing.statements=Desenvolver y eliminar sintaxis
surround.and.unwrap.invoke.surround=Presione {0} para rodear el fragmento de código seleccionado con algún código de plantilla.
surround.and.unwrap.invoke.unwrap=Usemos la acción de desenvolver con {0} para volver al estado anterior.
surround.and.unwrap.lesson.name=Desenvolver y desenvolver
surround.with.lesson.name=envolver alrededor
