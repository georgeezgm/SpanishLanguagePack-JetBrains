DbColumnsCheckboxTreeCellRenderer.forAssociation=연결을 위해
DbColumnsCheckboxTreeCellRenderer.from=시작
DbColumnsCheckboxTreeCellRenderer.incomingAttribute.tooltip=외래 키 제약을 통해 ''{0}''(으)로부터 참조 - ''{1}''
DbColumnsCheckboxTreeCellRenderer.notNull=null이 아님
DbColumnsCheckboxTreeCellRenderer.to=종료
DbColumnsCheckboxTreeCellRenderer.viaJoinTable=테이블 병합을 통해
DisplayName.entityDeclaration=JPA 엔티티 선언
DisplayName.reverseEngineering=JPA 역공학
NameCase.AsIs=그대로
NameCase.Lower=소문자
NameCase.Upper=대문자
RelationPanel.label.id.columns=ID 열\:
SettingsPage.accessModifier=디폴트 엔티티 속성 액세스 제어자
SettingsPage.accessModifierPrivate=private
SettingsPage.accessModifierProtected=protected
SettingsPage.className=클래스 이름
SettingsPage.className.error=클래스 이름을 지정해야 합니다
SettingsPage.className.notFoundError=지정된 이름의 클래스를 찾을 수 없습니다
SettingsPage.constants.columnNames=열 이름
SettingsPage.constants.entityNames=엔티티 이름
SettingsPage.constants.error=모든 지속성 유닛의 클래스 이름이 지정되어야 합니다
SettingsPage.constants.tableNames=테이블 이름
SettingsPage.constantsSeparator=상수 생성
SettingsPage.generateJpaOnGetter=getter 메서드에 JPA 어노테이션 생성
SettingsPage.generateSerialVersionUID=시리얼 버전 UID 필드 생성
SettingsPage.generationLanguage=스캐폴딩 언어
SettingsPage.indexConstraintNameCase=색인/상수 이름의 대소문자
SettingsPage.innerClassName=내부 클래스 이름
SettingsPage.interfaceName=인터페이스 이름
SettingsPage.interfaceName.notInterface=지정된 인터페이스는 인터페이스가 아닙니다
SettingsPage.lombok.allArgsConstructor=@AllArgsConstructor 생성
SettingsPage.lombok.builder=@Builder 생성
SettingsPage.lombok.getterAndSetter=@Getter 및 @Setter 생성
SettingsPage.lombok.noArgsConstructor=@NoArgsConstructor 생성
SettingsPage.lombok.onlyExplicitlyIncluded=onlyExplicitlyIncluded \= true로 @ToString 생성
SettingsPage.lombok.separator=Lombok
SettingsPage.lombok.toString=@ToString 생성
SettingsPage.mapReferencesToBasicType=기본 타입 속성으로 ORM 참조 바꾸기
SettingsPage.placeToGenerate=상수를 배치할 위치
SettingsPage.putValuesIntoConstants=새로운 객체 이름을 위한 상수 생성
SettingsPage.re.naming.strategy.algorithm=알고리즘
SettingsPage.re.naming.strategy.algorithm.incorrect=사용자 지정 이름 생성 알고리즘을 컴파일링할 수 없습니다
SettingsPage.re.naming.strategy.configs=구성
SettingsPage.registerTypesOnEntity=엔티티에 Hibernate 사용자 지정 타입 등록
SettingsPage.templatesSeparator=이름 템플릿
SettingsPage.unpluralizeTableName=테이블 이름을 단수형으로 변환하여 클래스 이름 생성
SettingsPage.useBuilderSetters=속성 setter에 'return this;' 생성
SettingsPage.useLazy=FetchType.LAZY를 @OneToOne 및 @ManyToOne 연결에 사용
SettingsPage.useValidationAnnotation=검증 어노테이션 사용(NotNull, Size 등)
action.JpbCreateUJpaEntityFromTable.text=DB에서 JPA 엔티티 생성
action.ReBulkReverseEngineering.text=DB의 JPA 엔티티
action.ReEntityAttributeFromDb.text=Create Entity Attribute(s) from DB
action.ReNewEntityAttributeFromDb.text=DB의 엔티티 속성
action.move.down.text=아래로 이동
action.move.up.text=위로 이동
action.refresh.description=새로고침
action.refresh.text=새로고침
column.name.attribute=속성
column.name.case=대소문자
column.name.class=클래스
column.name.column.reference.name=열/참조 이름
column.name.mapping.type=매핑 타입
column.name.name=이름
column.name.persistence.unit=지속성 유닛
column.name.pluralize=복수화
column.name.postfix=접미사
column.name.prefix=접두사
column.name.target=타깃
column.name.underscore=밑줄
command.name.create.datatype.objects=테이터타입 객체 생성
command.name.create.entity.attributes=엔티티 속성 생성
command.name.create.enum=열거형 생성
comment.saving.strategy=다음으로 추가
comments=<html>테이블 \\&amp; 열 주석</html>
java.type=속성/컨버터/Hibernate 타입
label.error=오류 발생\!
mapping.type.editor=매핑 타입 에디터
naming.rules=이름 지정 규칙
please.select.table=테이블을 선택하세요
popup.title.reverse.engineering=리버스 엔지니어링
prefixes.to.skip.in.column.name=열 이름에서 건너뛸 접두사
prefixes.to.skip.in.column.name.description=건너뛸 접두사가 <b>d_, t_</b>로 지정되고 <b>d_first_name</b> 및 <b>t_email</b> 열에 리버스 엔지니어링이 적용되는 경우 해당하는 엔티티 필드에 접두사가 나타나지 않습니다. 따라서 결과로 나오는 이름은 <b>dFirstName</b>과 <b>tEmail</b>이 아니라 <b>firstName</b>과 <b>email</b>이 됩니다
prefixes.to.skip.in.table.name=테이블에서 건너뛸 접두사
prefixes.to.skip.in.table.name.description=건너뛸 접두사가 <b>sys_, p_</b>로 지정되고 <b>p_product</b> 및 <b>sys_user</b> 열에 리버스 엔지니어링이 적용되는 경우 해당하는 엔티티 필드에 접두사가 나타나지 않습니다. 따라서 결과로 나오는 이름은 <b>SysUser</b>와 <b>PProduct</b>가 아니라 <b>User</b>와 <b>Product</b>가 됩니다
progress.title.create.entity.attributes=엔티티 속성 생성…
relation.panel.initRelations=엔티티 관계 초기화
reserved.keyword.field.suffix=예약된 키워드 필드 접미사
reverseEngineering.notifications=JPA 역공학 알림
sql.type=SQL 타입
suffixes.to.skip.in.column.name=열 이름에서 건너뛸 접미사
suffixes.to.skip.in.column.name.description=건너뛸 접미사가 <b>_d, _t</b>로 지정되고 <b>first_name_d</b> 및 <b>email_t</b> 열에 리버스 엔지니어링이 적용되는 경우 해당하는 엔티티 필드에 접두사가 나타나지 않습니다. 따라서 결과로 나오는 이름은 <b>firstNameD</b>과 <b>emailT</b>이 아니라 <b>firstName</b>과 <b>email</b>이 됩니다
suffixes.to.skip.in.table.name=테이블 이름에서 건너뛸 접미사
suffixes.to.skip.in.table.name.description=건너뛸 접미사가 <b>_sys, _p</b>로 지정되고 <b>user_sys</b> 및 <b>product_p</b> 열에 리버스 엔지니어링이 적용되는 경우 해당하는 엔티티 필드에 접두사가 나타나지 않습니다. 따라서 결과로 나오는 이름은 <b>UserSys</b>와 <b>ProductP</b>가 아니라 <b>User</b>와 <b>Product</b>가 됩니다
target.type=타깃 타입
unmapped.parent.attributes=<html>상위 엔티티의 일부 속성이 해당하는 테이블에 존재하지 않는 열에 매핑되어 있습니다. 이러한 속성을 유지하려면 수동으로 열을 생성하거나 JPA Buddy를 사용하여 자동으로 DDL을 생성해야 합니다. 사용 방법을 알아보려면 <a href\='https\://youtu.be/a-K-53_8Pcg'>이 동영상</a>을 시청하세요.</html>
zero.table.found=<html><p>데이터베이스 내에서 엔티티를 생성할 만한 테이블/뷰를 찾을 수 없습니다. 둘 중 하나가 원인일 수 있습니다.</p><ol><li>잘못된 DB 연결이 선택되었습니다.</li><li>데이터베이스에 테이블이나 뷰가 없습니다.</li><li>테이블이나 뷰가 기본값이 아닌 구성표에 위치하고 있습니다. 이런 경우에는 DB 연결을 다음의 <a href\="https\://www.jetbrains.com/help/idea/schemas.html" target\="_blank">안내</a>에 따라 조정하세요.</html>
