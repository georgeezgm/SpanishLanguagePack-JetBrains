action.ReactClassToFunctionComponentAction.description=Convertir a componente de función
action.ReactClassToFunctionComponentAction.text=Convertir a componente de función
action.ReactExtractComponentAction.description=Extracción de componentes
action.ReactExtractComponentAction.text=Extracción de componentes…
action.ReactFunctionToClassComponentAction.description=Conviértelo en un componente de clase.
action.ReactFunctionToClassComponentAction.text=Convertir a componente de clase
create.react.app.description=<a href\="https\://github.com/facebookincubator/create-react-app">Crear aplicación React</a> es un nuevo método oficialmente admitido para crear aplicaciones React de una sola página. Proporciona la configuración de compilación más reciente sin ninguna configuración.
create.react.app.name=React
create.react.app.scripts.version=Versión de guión (&V)
create.react.app.typescript.checkbox=Crear un proyecto de TypeScript
javascript.fix.create.class.component.jsx.family=Crear componente de clase
javascript.fix.create.class.component.jsx.name=Crear componente de clase ''{0}''
javascript.fix.create.function.component.jsx.family=Crear un componente de función
javascript.fix.create.function.component.jsx.name=Crear componente de función ''{0}''
react.class.component.type.class=clase
react.class.component.type.function=función
react.class.to.function.caret.at.class=Caret debe estar en la clase que se va a convertir.
react.function.to.class.caret.at.function=El cursor debe estar en la función para convertir.
react.inspection.unresolved.component.prop=Propiedad de componente no resuelta ''{0}''
react.inspection.unresolved.prop.action.name=Crear propiedades de componentes
react.inspection.unresolved.prop.quick.fix.family.name=Crear propiedades de componentes
react.inspection.unresolved.prop.quick.fix.text=Crear propiedad de componente ''{0}''
react.inspection.unresolved.prop.validation.message.component.source.not.found=Fuente del componente no encontrada
react.inspection.unresolved.prop.validation.message.writable.props.not.found=No se encontró ningún objeto de tipo de propiedad grabable
react.inspection.unresolved.prop.validation.message.writable.source.not.found=No se encontró la fuente del componente grabable
react.inspection.unresolved.ref.to.prop.fix.text=Cree la propiedad ''{0}'' dentro del componente ''{1}''
react.inspection.unresolved.ref.to.state.fix.family.name=Crear estado de componente
react.inspection.unresolved.ref.to.state.fix.text=Crear estado ''{0}'' dentro del componente ''{1}''
refactoring.create.react.component.title=Crear componente
refactoring.extract.react.component.no.expression=La selección no forma una expresión JSX.
refactoring.extract.react.component.no.scope=No se puede encontrar el alcance para colocar el componente generado
refactoring.extract.react.component.title=Extracción de componentes
refactoring.react.class.to.function.conflict.used.with.ref={0} se utiliza con el atributo ''ref''. A los componentes de funciones sin estado no se les pueden asignar referencias
refactoring.react.class.to.function.intention.title=Convertir a componente de función
refactoring.react.class.to.function.refactoring.title=Convertir a componente de función
refactoring.react.could.not.find.in.template=La refactorización falló. Elemento con nombre {0} no encontrado. ¿La plantilla de código {1} no es válida?
refactoring.react.function.to.class.intention.title=Convertir a componente de clase
refactoring.react.function.to.class.refactoring.title=Convertir a componente de clase
refactoring.react.function.to.class.used.in.call.conflict={0} se utiliza en la expresión de llamada
refactoring.react.function.to.class.used.in.new.conflict={0} se utiliza en la expresión ''nueva''
