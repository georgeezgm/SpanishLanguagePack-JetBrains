action.ReactClassToFunctionComponentAction.description=함수 구성 요소로 변환
action.ReactClassToFunctionComponentAction.text=함수 구성 요소로 변환
action.ReactExtractComponentAction.description=구성 요소 추출
action.ReactExtractComponentAction.text=구성 요소 추출…
action.ReactFunctionToClassComponentAction.description=클래스 구성 요소로 변환합니다
action.ReactFunctionToClassComponentAction.text=클래스 구성 요소로 변환
create.react.app.description=<a href\="https\://github.com/facebookincubator/create-react-app"> React 앱 생성</a> 은 공식적으로 새로 지원하는 방법으로 단일 페이지 React 애플리케이션을 만들 수 있습니다. 구성 없이 최신 빌드 설정을 제공합니다.
create.react.app.name=React
create.react.app.scripts.version=스크립트 버전(&V)
create.react.app.typescript.checkbox=TypeScript 프로젝트 생성(&T)
javascript.fix.create.class.component.jsx.family=클래스 구성 요소 생성
javascript.fix.create.class.component.jsx.name=클래스 구성 요소 ''{0}'' 생성
javascript.fix.create.function.component.jsx.family=함수 구성 요소 생성
javascript.fix.create.function.component.jsx.name=함수 구성 요소 ''{0}'' 생성
react.class.component.type.class=클래스
react.class.component.type.function=함수
react.class.to.function.caret.at.class=캐럿이 변환할 클래스에 있어야 합니다
react.function.to.class.caret.at.function=캐럿은 변환할 함수에 있어야 합니다
react.inspection.unresolved.component.prop=해결되지 않은 구성 요소 프로퍼티 ''{0}''
react.inspection.unresolved.prop.action.name=구성 요소 프로퍼티 생성
react.inspection.unresolved.prop.quick.fix.family.name=구성 요소 프로퍼티 생성
react.inspection.unresolved.prop.quick.fix.text=구성 요소 프로퍼티 ''{0}'' 생성
react.inspection.unresolved.prop.validation.message.component.source.not.found=구성 요소 소스를 찾을 수 없습니다
react.inspection.unresolved.prop.validation.message.writable.props.not.found=기록 가능한 프로퍼티 타입 객체를 찾을 수 없습니다
react.inspection.unresolved.prop.validation.message.writable.source.not.found=기록 가능한 구성 요소 소스를 찾을 수 없습니다
react.inspection.unresolved.ref.to.prop.fix.text=''{1}'' 구성 요소 내에서 ''{0}'' 프로퍼티 생성
react.inspection.unresolved.ref.to.state.fix.family.name=구성 요소 상태 생성
react.inspection.unresolved.ref.to.state.fix.text=''{1}'' 구성 요소 내에서 ''{0}'' 상태 생성
refactoring.create.react.component.title=구성 요소 생성
refactoring.extract.react.component.no.expression=선택 영역이 JSX 표현식을 형성하지 않습니다
refactoring.extract.react.component.no.scope=생성된 구성 요소를 배치할 범위를 찾을 수 없습니다
refactoring.extract.react.component.title=구성 요소 추출
refactoring.react.class.to.function.conflict.used.with.ref={0}이(가) ''ref'' 속성과 함께 사용됩니다. 무상태 함수 구성 요소는 참조를 지정할 수 없습니다
refactoring.react.class.to.function.intention.title=함수 구성 요소로 변환
refactoring.react.class.to.function.refactoring.title=함수 구성 요소로 변환
refactoring.react.could.not.find.in.template=리팩터링에 실패했습니다. 이름 {0}(으)로 요소를 찾을 수 없습니다. 코드 템플릿 {1}이(가) 유효하지 않습니까?
refactoring.react.function.to.class.intention.title=클래스 구성 요소로 변환
refactoring.react.function.to.class.refactoring.title=클래스 구성 요소로 변환
refactoring.react.function.to.class.used.in.call.conflict={0}이(가) 호출 표현식에 사용됩니다
refactoring.react.function.to.class.used.in.new.conflict={0}이(가) ''new'' 표현식에 사용됩니다
