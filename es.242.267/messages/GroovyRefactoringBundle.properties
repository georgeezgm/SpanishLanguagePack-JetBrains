Field.cannot.be.final.because.replaced.variable.has.lhs.usages=La variable seleccionada se utilizará para escribir.
access.to.created.field.0.will.be.overridden.by.method.1={1} anula el acceso al campo {0}
all.invocations.and.remove.the.method=Incorporar todas las llamadas y eliminar métodos.
all.invocations.in.project=Integrar todas las llamadas dentro de un proyecto
cannot.find.a.single.definition.to.inline.field=No hay ningún inicializador para ese campo.
cannot.find.a.single.definition.to.inline.local.var=No puedo encontrar una definición única para insertar una variable local.
cannot.inline.0.={0} no se puede incluir en línea.
cannot.inline.reference.0=La referencia ''{0}'' no se puede insertar.
cannot.introduce.field.in.interface=No puede insertar campos en una interfaz.
cannot.introduce.field.in.script=No hay clases en el alcance.
cannot.process.usage.in.language.{0}=No se pudo procesar mi ubicación de uso {0}.
cannot.rename.property.0=No se puede cambiar el nombre de la propiedad <bold>''{0}''</bold> que anula el método <bold>''{1}''</bold>.
cannot.rename.script.class.to.0=No se puede cambiar el nombre de la clase de secuencia de comandos ''{0}'' a ''{1}''.
changeSignature.no.type.for.exception=Debe especificar el tipo de excepción.
changeSignature.not.throwable.type=Tipo no válido\: ''{0}'' para la excepción debe extender java.lang.Throwable.
changeSignature.wrong.type.for.exception=Tipo no válido\: ''{0}'' en excepción
class.does.not.exist.in.the.module=No hay clases en el módulo. ¿Quieres crear una clase?
class.language.is.not.groovy=El lenguaje de la clase objetivo no es Groovy.
closure.uses.external.variables=El cierre utiliza una variable externa que no es una constante.
convert.to.java.can.work.only.with.groovy=La refactorización de Convertir a Java solo funciona con archivos Groovy.
convert.to.java.refactoring.name=Convertir a Java
converting.files.to.java=Convertir archivos a Java
converting.files.to.static=Convirtiendo archivo a @CompileStatic
declare.final.checkbox=Declarar y final
error.wrong.caret.position.method.name=El símbolo de intercalación debe estar en el nombre del método que se va a refactorizar.
expression.contains.errors=La expresión contiene un error.
extract.method.dialog.explicit.return.checkbox=Utilice una declaración de devolución explícita (&X)
extract.method.title=Extracción del método
field.0.is.already.defined=El campo {0} ya está definido.
field.cannot.be.initialized.in.constructor(s)=Los campos no se pueden inicializar en el constructor.
field.cannot.be.initialized.in.field.declaration=Los campos no se pueden inicializar en la declaración.
field.is.not.accessible.form.context.0=No se puede acceder al campo {0} utilizado en el método en línea en el sitio de la llamada.
files.to.be.converted=Archivo para convertir
final.field.cant.be.initialized.in.cur.method=Los campos finales no se pueden inicializar en el método actual
implicit.getter.will.by.overridden.by.method=El método {1} anula el captador implícito de la propiedad {0}
implicit.setter.will.by.overridden.by.method=El método {1} anula el establecimiento implícito de la propiedad {0}
initialize.in.border.title=Inicializar desde
initialize.in.class.constructor.choice=Constructor de clase (&C)
initialize.in.current.method.choice=&Método actual
initialize.in.field.declaration.choice=&Declaración de campo
initialize.in.label=&Inicializar desde\:
initialize.in.setup.method.choice=método de configuración
inline.local.variable.prompt.0.1=¿Quiere incorporar la variable local ''{0}''?
inline.method.border.title=En línea
inline.method.label=Método {0}
inline.method.title=Método en línea
inplace.introduce.constant.move.checkbox=Pasar a otra clase
intention.converting.to.static=Aplicar transformación con @CompileStatic
intention.converting.to.static.family=Convertir a @CompileStatic
introduce.closure.parameter.elements.header=Agregar parámetros al cierre
introduce.constant.class.label=Insertar como clase (nombre completo)\:
introduce.variable.title=Insertar variable
introduced.variable.conflicts.with.parameter.0=La variable insertada entra en conflicto con el parámetro {0}.
introduced.variable.conflicts.with.variable.0=La variable insertada entra en conflicto con la variable local {0}.
local.variable.is.lvalue=La variable que se va a incluir se utiliza como valor l en la asignación.
method.duplicate=El método con firma {0} ya está definido en {1}
method.is.already.defined.in.class=El método {0} ya está definido en la clase {1}.
method.is.already.defined.in.script=El método {0} ya está definido en el script {1}.
method.is.not.accessible.form.context.0=No se puede acceder al método {0} utilizado en el método incorporado desde el sitio de llamada.
multiple.output.values=El fragmento de código seleccionado tiene múltiples valores de salida.
name.is.wrong=El nombre ''{0}'' no es válido.
name.label=&Nombre\:
no.occurrences.found=Objeto no encontrado
only.in.groovy.files=Esta refactorización sólo está disponible para archivos Groovy.
press.escape.to.remove.the.highlighting=Presione ESC para eliminar el resaltado
ref.0.will.not.be.resolved.outside.of.current.context=La referencia ''{0}'' no se resuelve fuera del contexto actual.
refactored.method.will.cover.closure.property=El método refactorizado anula la propiedad de cierre ''{0}'' dentro de {1}.
refactoring.cannot.be.applied.no.sources.attached=No se puede aplicar la refactorización porque no hay ninguna fuente conectada.
refactoring.cannot.be.applied.to.abstract.methods=La refactorización no se puede aplicar a métodos abstractos.
refactoring.cannot.be.applied.to.constructors=La refactorización no se puede aplicar a los constructores.
refactoring.is.available.only.for.method.calls=La refactorización solo está disponible en llamadas a métodos.
refactoring.is.not.supported.in.method.parameters=La refactorización no se admite en cierres o parámetros de métodos.
refactoring.is.not.supported.in.parameter.initializers=La refactorización no es compatible con los inicializadores de parámetros.
refactoring.is.not.supported.in.the.current.context=La refactorización no es compatible en el contexto actual.
refactoring.is.not.supported.when.return.statement.interrupts.the.execution.flow=No se admite la refactorización cuando una declaración de devolución interrumpe el flujo de ejecución.
reference.to.accessor.0.is.used=La referencia al descriptor de acceso <bold>{0}<bold> no se puede incluir en línea.
remove.parameter.0.no.longer.used=Eliminar el parámetro ''{0}'' que pronto quedará obsoleto
rename.groovy.property=Cambiar el nombre de la propiedad Groovy
rename.is.not.applicable.to.implicit.elements=No se puede cambiar el nombre de un elemento implícito.
rename.member={0} cambio de nombre
rename.property=Cambiar el nombre de la propiedad ''{0}''
replace.all.occurrences.checkbox=&Reemplazar todos los elementos encontrados
replace.getter.for.property=Se sobrescribe el captador predeterminado para la propiedad ''{0}''
replace.setter.for.property=Se sobrescribirá el configurador predeterminado para la propiedad ''{0}''.
return.type.is.wrong=El tipo de devolución no es válido.
selected.block.contains.invocation.of.another.class.constructor=El bloque seleccionado contiene una llamada a otro constructor de clase.
selected.block.should.represent.a.statement.set=El bloque seleccionado debe representar un conjunto de declaraciones o expresiones.
selected.block.should.represent.an.expression=El bloque seleccionado debe representar una expresión.
selected.expression.has.void.type=La expresión que seleccionaste tiene tipo void
selected.expression.should.not.be.lvalue=La expresión seleccionada no debe estar en el lado izquierdo de la tarea.
selected.variable.is.used.for.write=La variable seleccionada se utilizará para escribir.
signature.preview.border.title=Vista previa de firma
specify.default.value=Especificación de un valor predeterminado o inicializador para el parámetro ''{0}''
specify.type.label=Especifique el tipo de devolución explícitamente (&T)
super.reference.is.used=Las llamadas a los padres utilizadas en un método integrado dejan de ser válidas después de la integración.
target.class.must.not.be.script=La clase de destino no debe ser un guión.
there.is.no.method.or.closure=No hay métodos integrados ni cierres.
this.invocation.only.and.keep.the.method=Insertar solo esta llamada y mantener el método.
type.for.parameter.is.incorrect=El tipo de parámetro ''{0}'' es incorrecto.
type.label=Tipo(&T)\:
usage.will.be.overridden.by.method=El método {1} anula el uso {0}
variable.conflicts.with.field.0=El nombre que seleccionó entra en conflicto con el campo {0}.
variable.conflicts.with.parameter.0=El nombre que seleccionó entra en conflicto con el parámetro {0}
variable.conflicts.with.variable.0=El nombre que seleccionó entra en conflicto con la variable local {0}.
variable.is.accessed.for.writing=Se accede a la variable ''{0}'' para escribir
visibility.border.title=visibilidad
visibility.private.choice=&Privado
visibility.property.choice=&Propiedades
visibility.protected.choice=&Protegido
visibility.public.choice=Public(&B)
you.cannot.pass.as.parameter.0.because.you.remove.1.from.base.method=''{0}'' no se puede pasar como parámetro porque elimina el parámetro asociado ''{1}'' del método. Debe desmarcar "Eliminar el parámetro ''{0}'' que ahora no se utiliza" o desmarcar el parámetro ''{1}'' en la tabla de parámetros.
