ChangeSetWrapItem.noId=ID 없음
LiquibaseGitAuthorProvider.source=Git 사용자
LiquibaseSettingsAuthorProvider.source=Liquibase 설정
LiquibaseSystemUserAuthorProvider.source=시스템 사용자
SettingsPage.liquibase.autoDetectedVersion=자동 탐지 버전\: {0}
SettingsPage.liquibase.libraryNotFound=Liquibase 라이브러리를 찾을 수 없습니다
Validation.cannot.compile.custom.naming.strategy=사용자 지정 naming physical strategy 클래스를 컴파일링할 수 없습니다
Validation.changeLogFileExists=지정된 디렉터리에 같은 이름의 변경 로그 파일이 있습니다
Validation.maxIdentifier.incorrect.number=잘못된 최대 DB 식별자 길이\: ''{0}''
Validation.maxIdentifier.less.10=최대 DB 식별자 길이는 10보다 커야 합니다
action.AddLiquibaseChangeLog.text=변경 로그 추가
action.AddLiquibaseChangeSet.text=변경 집합 추가
action.CreateDiffLiquibaseChangeLog.text=Liquibase 변경 로그 생성
action.CreateInitLiquibaseChangeLog.text=Liquibase Init 변경 로그
action.CreateLiquibaseChangelogFromTemplate.description=버전이 지정된 데이터베이스 변경 내용에 대한 새 Liquibase 변경 로그 파일을 생성합니다
action.CreateLiquibaseChangelogFromTemplate.text=Liquibase 변경 로그
action.CreateLiquibaseDiff.description=Liquibase Diff 변경 사항 생성
action.CreateLiquibaseDiff.text=Liquibase Diff 변경 사항
action.CreateLiquibaseInit.description=Liquibase init 스키마 생성
action.CreateLiquibaseInit.text=Liquibase Init 스키마
action.CreateLiquibaseSnapshot.text=데이터 모델 스냅샷
action.LiquibaseRemoveAndIgnore.text=제거하고 무시
action.LiquibaseRemoveFromChangeLog.text=변경 로그에서 제거
action.MoveToAnotherLiquibaseChangeLogFile.text=다른 변경 로그로 이동
action.RemoveFromLiquibaseIgnore.text=무시 목록에서 복원
action.RemoveLiquibaseChangesActionGroup.text=변경 로그에서 제거
action.RunLiquibaseUpdate.text=Liquibase 업데이트
action.SetLiquibaseContext.text=컨텍스트 설정
action.SetLiquibaseLabel.text=라벨 설정
action.reload=다시 로드
actions.create.liquibase.changelog.name=Liquibase 변경 로그 파일 생성
add.liquibase.change=Liquibase 변경 사항 추가
all.foreign.key.constraints=모든 외래 키 제약
alter.sequence=시퀀스 변경
append.changes=변경 사항 추가
attribute.not.found=엔티티 속성을 찾을 수 없습니다. {0}
attribute.table=속성 테이블
attribute.type.is.empty=''{0}'' 속성 타입이 비어 있습니다
audit.table.prefix=테이블 접두사 감사
audit.table.suffix=테이블 접미사 감사
author=작성자
auto.increment=자동 증분
base.column.names=기본 열 이름
base.table.name=기본 테이블 이름
button.show.sql=SQL 표시
button.update=업데이트
cache.db.schema=DB 스키마 캐시
cannot.map.sql.type=Java 타입을 SQL/Liquibase 타입으로 매핑할 수 없습니다
change.createNew=새 변경 집합 생성
change.log=변경 로그
change.log.dir.outside.root=소스 또는 리소스 루트 외부의 변경 로그 디렉터리
change.log.field.is.required=DB 변경 로그 ''{1}''에 필드 ''{0}''이(가) 필요합니다
change.set=변경 집합
change.set.already.contains.index=변경 집합 ''{0}''은(는) 이미 이름이 ''{1}''인 create index가 있습니다
change.set.already.contains.procedure=변경 집합 ''{0}''은(는) 이미 이름이 ''{1}''인 create procedure가 있습니다
change.set.already.contains.sequence=변경 집합 ''{0}''은(는) 이미 이름이 ''{1}''인 create sequence가 있습니다
change.set.already.contains.table=변경 집합 ''{0}''은(는) 이미 이름이 ''{1}''인 create table이 있습니다
change.set.already.contains.view=변경 집합 ''{0}''은(는) 이미 이름이 ''{1}''인 create view가 있습니다
change.set.field.is.required=변경 집합 ''{1}''에 필드 ''{0}''이(가) 필요합니다
changeSet.addRollback=묵시적인 롤백을 지원하지 않는 변경 집합에 빈 롤백 추가
changeSet.author=변경 집합 작성자
changeSet.createPreconditions=전제 조건 생성
changeSet.fileType=파일 타입
changeSet.templates=변경 집합 템플릿
changelog.command.addIncludeChangelogTags=Include 변경 로그 태그 추가
changelog.field.empty.text=예\: src/main/resources/db/changelog/db.changelog-master.xml
changelog.preview=변경 로그 미리보기
changelog.save=저장
changelog.tag.add.not.null.constraint.not.found=add not null 제약의 DB 변경 로그 태그를 찾을 수 없습니다
changelog.velocity.template.description=<ul><li>macros <b>\#date([format])</b> - SimpleDateFormat 사양에 따라 처리된 현재 시스템 날짜를 반환합니다.</li><li>macros <b>\#increment([start], [step], [decimalFormat])</b> - DecimalFormat 사양에 따라 시작하는 값을 반환합니다.<br>이름이 고유하지 않은 경우 스텝을 추가합니다.</li><li>variable <b>semVer</b> - 의미 기반의 버전 지정은 널리 사용되는 버전 구성표로, 연속되는 세 숫자(주요, 부수, 패치), 선택적인 사전 릴리스 태그 및 선택적인 빌드 메타 태그로 구성됩니다.</li></ul>
choose.change.log=변경 로그 선택
choose.change.set=변경 집합 선택
class=클래스
column=열
column.name.attribute.type=속성 타입
column.name.name=이름
column.name.table.column.constraint.index.name=테이블/열/제약/색인 이름
column.name.tag.name=태그 이름
column.name.target.type=타깃 타입
column.name.type=타입
column.name.type.parameter=타입 매개변수
column.name.value=값
columns=열
columns.field.tooltip=열의 이름입니다. 다수인 경우 쉼표로 구분합니다
columns.field.tooltip.constraint={0}을(를) 생성할 열의 이름입니다. 다수일 경우 쉼표로 구분
command.name.append.changes.to.exists.changelog.file=변경 사항을 Exists 변경 로그 파일에 추가
command.name.create={0} 생성
command.name.create.change.set=변경 집합 및 {0} 생성
command.name.create.changelog.file=변경 로그 파일 생성
command.name.writing.changelog.file=변경 로그 파일 작성 중
constraint.name=제약 이름
context=컨텍스트
copy.query.to.console=쿼리를 DB 콘솔로 복사
create.index.for.fk=연결 외래 키 제약의 색인 생성
custom.change=사용자 지정 변경
database.mappingTypes=매핑 타입
database.migration.description=<html>데이터베이스 마이그레이션 설정을 통해 exists 매핑 SQL 타입을 정의하거나 재정의할 수 있습니다.</html>
database.migration.not.empty.dbms=데이터베이스에는 내용이 있는 dbms 타입이 있어야 합니다
database.migration.unsedDbId=<unset DB id>
database.versioning=데이터베이스 버전 지정
db=DB
db.change.log.files.already.exists=<html>다음의 파일이 이미 있습니다.</br>생성된 변경 사항을 파일에 추가하시겠어요?<ul>{0}</ul></html>
db.connection=DB 연결
db.not.synchronized=이 예외는 데이터베이스가 JPA 엔티티와 동기화되지 않을 때 발생합니다. <br/> DDL을 생성하고 데이터베이스를 업데이트하고 실행한 다음 작업을 반복하세요.
db.to.snapshot.diff.unavailable=DB로 Diff의 스냅샷을 만들 수 없습니다
db.type=DB 타입
db.type.selection=DB 타입 선택 범위
db.type.selection.descr=<html>변경 로그 파일을 생성하려면 DB 타입을 선택하세요.<br>선택 사항은 추후에 설정에서 변경할 수 있습니다. <i>파일</i> -> <i>설정...</i> -> <i>도구</i> -> <i>데이터베이스 버전 관리</i> -> <i>Liquibase</i></html>
ddl.by.entities.preview=엔티티별 DDL 미리보기
ddl.preview=DDL 미리보기
default.connection.persistence.unit=지속성 유닛의 디폴트 연결
default.value=디폴트 값
delete=삭제
description=내용
diff.changes.generator.error=Diff 변경 사항 제너레이터 오류
diff.changes.location=위치
diff.context=컨텍스트
diff.danger.level=위험 수준
diff.database.change.log=Diff 데이터베이스 변경 로그
diff.ddl=Diff DDL
diff.labels=라벨
diff.liquibase.changelog=Diff Liquibase 변경 로그
diff.source.description=비교할 소스입니다. referenceURL 속성은 시작 지점면서 비교 대상인 데이터베이스와 비교가 되는 소스 데이터베이스를 나타냅니다.
diff.source.description.title=모델의 실제 상태
diff.source.title=소스(referenceURL)
diff.target.description=비교 대상입니다. URL 속성은 소스 데이터베이스와 비교할 타깃 데이터베이스를 나타냅니다. 일반적으로 이 데이터베이스를 대상으로 액션과 명령어를 실행합니다.
diff.target.description.title=모델의 이전 상태
diff.target.title=타깃(URL)
diffChanges.configurable.title=Diff 변경 사항
directory=경로
driver.class=드라이버 클래스
empty.changeSet=빈 변경 모음
envers.audit.version=낙관적으로 잠금 프로퍼티를 버전이 없는 것으로 간주
envers.default.schema=감사 테이블을 포함하는 스키마의 기본 이름
envers.global.with.modified.flag=수정된 프로퍼티 플래그 기능 활성화
envers.modified.flag.suffix=수정된 플래그 열의 접미사
envers.revision.field.name=리비전 필드 이름
envers.revision.type.field.name=리비전 타입 필드 이름
envers.track.entities.changed=리비전마다 변경된 엔티티 이름
envers.use.spring.properties=*.properties 파일에서 지정된 값 사용
exclude.from.liquibase.diff.generation=Liquibase/Flyway Diff 생성 시의 변경 사항 제외
existing.column.name=기존 열 이름
existing.table.name=기존 테이블 이름
explicitly.specify.map.sql.type=<a href\=''{0}''><b>타입 매핑</b> 설정</a>에서 SQL/Liquibase 매핑 타입을 명시적으로 지정할 수 있습니다.
file=파일
file.name=파일 이름
file.type=파일 타입
final.column.name=최종 열 이름
final.column.type=최종 열 타입
first.column.name=첫 열 이름
fixes.createChangelogFamily=변경 로그 생성
fixes.createDiffChangelogFile=Diff 변경 로그 파일 생성
fixes.createEmptyChangelogFile=빈 변경 로그 파일 생성
foreign.key.constraint=외래 키 제약
generate.diff.changes=Diff 변경 사항 생성
generate.liquibase.diff.change.log=Diff 변경 사항 생성 중
generate.liquibase.diff.schema=Liquibase Diff 변경 사항 생성
generate.liquibase.init.change.log=Init 변경 사항 생성 중
generate.liquibase.init.schema=Liquibase Init 스키마 생성
generate.liquibase.snapshot=데이터 모델 스냅샷 생성
generated.empty.ddl=생성된 빈 DDL
generating.diff.canceled=Diff 변경 사항 생성이 취소되었습니다
generating.snapshot.canceled=스냅샷 생성이 취소되었습니다
generating.sql=SQL 생성 중…
generating.sql.canceled=SQL 생성이 취소되었습니다
generation.time=생성 시간 - {0}초
hsqldb.file.path.not.absolute=파일 HSQL DB는 절대 경로만 지원됩니다. ''{0}'' 데이터베이스의 절대 경로를 입력하세요
id=ID
include=포함
include.all=모두 포함
include.context=컨텍스트 포함
include.folder=폴더 포함
include.to=다음에 포함
incorrect.increment.by=잘못된 증분 값 - ''{0}''
incorrect.start.value=잘못된 시작 값 - ''{0}''
increment.by=증분 값
index=색인
index.name=색인 이름
init.ddl=DDL 초기화
init.schema.changelog=Init Schema 변경 로그
insert=삽입
inspection.message.unknown.table=알 수 없는 테이블 ''{0}''
integratedSecurityInstructionForIdeaUltimate=<b>Windows 자격 증명</b> 인증을 사용하는 경우 성공적으로 연결하려면 다음의 절차를 따르세요. <ol><li>JDBC URL에 <b>;integratedSecurity\=true</b> 매개변수가 포함되어 있는지 확인하세요. <a href\="https\://docs.microsoft.com/sql/connect/jdbc/building-the-connection-url?view\=sql-server-ver15\#connection-examples">세부 정보</a>를 확인하세요.</li><li><a href\="{0}">Windows 인증 라이브러리 아카이브</a>를 다운로드하세요</a></li><li>다운로드된 jar 파일을 ''{1}'' 디렉터리로 추출하세요</li><li>IDEA를 재시작하세요</li></ol>
invalid.snapshot.path=스냅샷 파일이 존재하지 않거나 유효하지 않습니다
invalid.update.change.log.file=잘못된 변경 로그 파일
java.type=속성/컨버터/Hibernate 타입
join.string=문자열 병합
json.snapshot=데이터 모델 스냅샷
labels=라벨
liquibase=Liquibase
liquibase.change.category.column=열
liquibase.change.category.comment=주석
liquibase.change.category.foreignKey=외래 키
liquibase.change.category.index=색인
liquibase.change.category.primaryKey=기본 키
liquibase.change.category.sequence=시퀀스
liquibase.change.category.table=테이블
liquibase.change.category.uniqueConstraint=고유한 제약
liquibase.change.location.hide=무시
liquibase.change.location.ignore=무시되는 걸로 표시
liquibase.change.location.primary=기본
liquibase.change.location.secondary=보조
liquibase.changelog=새 Liquibase 변경 로그
liquibase.changelog.templates=변경 로그 템플릿
liquibase.changelog.xml=XML 형식
liquibase.changelog.yaml=YAML 형식
liquibase.common.panel.use.persistent.unit.strategy=지속적 유닛 전략 사용
liquibase.common.panel.useByDefault=디폴트 값으로 {0} 사용
liquibase.db.types=DB 타입
liquibase.init.changelog=Liquibase Init 변경 로그
liquibase.library.not.found=Liquibase 라이브러리를 찾을 수 없습니다
liquibase.library.not.found.description=<html>'Liquibase 업데이트' 액션을 사용할 수 없습니다. <br/> Liquibase에 종속성(Maven, Gradle 등)을 추가하거나 <b>프로젝트 구조</b> 대화상자를 통해 Liquibase 라이브러리를 추가하세요.
liquibase.notifications=JPA 차등 생성 알림
liquibase.run.configuration.type.description=Liquibase 업데이트 구성
liquibase.run.configuration.type.name=Liquibase
liquibase.successful.message=업데이트에 성공했습니다
liquibase.update=Liquibase 업데이트
liquibase.version=Liquibase 버전
load.data=데이터 로드
load.schema.from.db.each.time=매번 DB로부터 스키마 로드
load.update.data=업데이트 데이터 로드
loading.database.model.canceled=데이터베이스 모델 로드가 취소되었습니다
loading.database.model.error=데이터베이스 모델 로드 오류
log.level=로그 수준
lookup.table=테이블 조회
mapping.type.editor=매핑 타입 에디터
max.db.identifier.length=최대 DB 식별자 길이
merge.changes.successful=병합에 성공했습니다\!
merge.columns=열 병합
model=모델
modify.data.type=데이터 타입 수정
modifying.type.is.not.available.during.indexing=인덱스를 업데이트하는 중에는 매핑 타입을 수정할 수 없습니다.<br> 설정 대화상자를 닫고 색인 생성이 완료될 때까지 기다려 주세요.
name=이름
named=이름이 지정됨
navigate.parent.changelog=상위 변경 로그로 이동
new.column.name=새 열 이름
new.data.type=새로운 데이터 타입
new.liquibase.database.change.log=새 Liquibase 데이터베이스 변경 로그
new.sequence.name=새 시퀀스 이름
new.table.name=새 테이블 이름
new.view.name=새 보기 이름
no.changes.found=탐지된 변경 사항이 없습니다\!
no.exclude.changes=제외된 변경사항이 없습니다
no.override.mappings=재정의 매핑이 없습니다
no.select.db.type=최소 하나의 DB 타입을 선택하세요
not.null.constraint=Not Null 제약
notification.content.db.changelog.file=DB 변경 로그 파일\: {0}\n{1}
notification.specify.liquibase.version=Liquibase 기능을 활성화하려면 버전을 명시적으로 지정하세요
notification.title.error.liquibase.updating=Liquibase를 업데이트하는 중 오류
old.column.name=기존의 열 이름
old.sequence.name=기존의 시퀀스 이름
old.table.name=기존의 테이블 이름
old.view.name=기존의 뷰 이름
path=경로
physical.naming.strategy=물리적 이름 지정 전략
primary.changelog.dir=기본 디렉터리
primary.changelog.name=기본 이름
primary.key=기본 키
primary.key.constraint=기본 키 제약 이름
problem.closing.connection=데이터베이스 연결을 올바르게 종료할 수 없습니다. 다음 단계가 실패할 수 있습니다.
procedure=절차
procedure.name=절차 이름
property=프로퍼티
referenced.column.names=참조된 열 이름
referenced.column.names.tooltip=외래 키가 가리키는 열입니다. 다수일 경우 쉼표로 구분됩니다
referenced.table.name=참조된 테이블 이름
refresh.custom.naming.strategy=사용자 지정 물리적 이름 지정 전략 클래스 다시 로드
relative.to.changelog.file=변경 로그 파일에 상대적
remarks=비고
remove.selected=선택 범위 삭제
root.changelog.file=루트 변경 로그 파일
same.column.names=열 이름이 같을 수 없습니다
same.sequence.names=시퀀스 이름이 같을 수 없습니다
same.table.names=테이블 이름이 같을 수 없습니다
same.view.names=뷰 이름이 같을 수 없습니다
save=저장
save.and.run.generation=생성 저장 및 실행
save.as=다른 이름으로 저장
save.mapping=매핑 타입 저장
save.mapping.description=<html>자동으로 DB 타입을 Java 타입으로 매핑할 수 없습니다. 아래의 테이블에서 매핑을 정의하세요. IDEA가 선택된 내용을 기억하고 추후의 역공학 작업에 반영합니다. 저장된 매핑 구성은 설정에서 언제든 변경할 수 있습니다(도구 -> JPA 역공학 -> 매핑 타입).
scope=범위\:
scratch.file=스크래치 파일
second.column.name=보조 열 이름
secondary.changelog.dir=보조 디렉터리
secondary.changelog.name=보조 이름
select.all.danger.level={0} 모두 선택
select.change.dialog.newChangeLog=새 변경 로그
select.change.dialog.newChangeSet=새 변경 로그
select.db.connection=DB 연결 선택
select.mapping.type=저장하려면 최소 하나의 매핑 타입을 선택하세요
select.persistence.unit=지속성 유닛 선택
select.snapshot.file=스탭샷 파일 선택
sequence=시퀀스
sequence.name=시퀀스 이름
sequence.naming.strategy=시퀀스 명명 전략
sequence.naming.strategy.AUTO_DETECT=자동 탐지
sequence.naming.strategy.SEQUENCE_PER_ENTITY=엔티티당 시퀀스
sequence.naming.strategy.SINGLE_SEQUENCE=단일 시퀀스
sequence.naming.strategy.comment=Hibernate 6 전용
set.column.remarks=열 비고 설정
set.table.remarks=테이블 비고 설정
set.value=값 추가
settings.changes.title=<b>Liquibase 변경 로그</b> 또는 <b>Flyway 버전 관리 마이그레이션</b> 미리보기 대화상자에서 사용되는<br>버전을 강조 표시하며 여러 유사한 변경 사항을 다중 선택하여 한번에 관리할 수 있게 도와줍니다. <br>또한, 일부 카테고리에서 변경 사항 생성을 완전히 비활성화할 수 있습니다.
show.other.actions=다른 액션 표시
show.project.snapshots=프로젝트 스냅샷 표시
show.sql.error=SQL 오류 표시
slow.loading.detected.msg=DB 스키마가 리버스 엔지니어링 중에 변경되지 않는 경우 DB 스키마 캐싱을 켜는 것이 좋습니다.
slow.loading.detected.title=DB 연결 속도 저하가 탐지됨
snapshot=스냅샷
snapshot.dir=스냅샷 디렉터리
snapshot.file.exist.message=스냅샷 파일 ''{0}''이(가) 이미 있습니다.\n대체하시겠어요?
snapshot.file.exist.title=파일 바꾸기
snapshot.filename=스냅샷 파일 이름
source.root=소스 루트
source.type=소스 타입
source.value=소스 값
sql=SQL
sql.file=SQL 파일
start.value=시작 값
tab.title.liquibase.update=Liquibase 업데이트
table=테이블
table.name=테이블 이름
tag=태그
tag.database=태그 데이터베이스
target.type=타깃 타입
target.type.help=<html>타입 매핑을 간소화하기 위해 데이터베이스 버전 관리가 DB에 모든 DB와 호환되는 SQL 타입을 생성합니다. 이러한 타입들은 후에 특정 DB에 맞는 타입으로 변환됩니다. 예를 들어<code>varchar</code>는 Oracle DB에서는 <code>varchar2</code>로, PostgreSQL에서는 <code>varchar</code>로 변환됩니다.<br><br>모든 DB와 호환되는 각 타입은 별칭 세트를 가지며(예\: <code>java.sql.Types.VARCHAR</code> 혹은 <code>character varying</code>) 대부분의 경우 상호 교체가 가능합니다.<br><br>알 수 없는 타입은 변환 없이 그대로 사용됩니다.<html>
target.type.is.empty=''{0}'' 타입이 비어 있습니다
trustServerCertificateInstructionForIdeaUltimate=JDBC URL에 <b>;trustServerCertificate\=true</b> 매개변수가 포함되어 있는지 확인하세요. 자세한 정보는 <a href\="https\://docs.microsoft.com/en-us/sql/connect/jdbc/connecting-with-ssl-encryption">세부 정보</a>를 참조하세요.</li>
turn.on.cache.db.schema=DB 스키마 캐시 활성화
type.parameters=타입 매개변수
type.parameters.help=<html>데이터베이스 버전관리는 스크립트 생성 시 고려되어야 하는 매개변수를 지정할 수 있습니다. 각 데이터베이스별로 동작을 사용자 지정할 수 있습니다.<br><br>속성 정확도와 스케일 값이 보존되는 레이어에 설정되었다고 가정해 보겠습니다. 이 경우 값을 '없음'으로 선택하면 이러한 매개 변수 없이 스크립트를 생성합니다.<html>
typeMappings.configurable.title=타입 매핑
unable.to.resolve.changelog.info=저장 로그 정보를 해결할 수 없습니다
undefined.mapping.detected.description=<html>자동으로 일부 Java 타입을 SQL/Liquibase 타입과 매핑할 수 없습니다.<br>아래의 테이블에서 매핑을 정의하고 스크립트 생성을 다시 실행하세요.
undefined.mapping.detected.title=정의되지 않은 매핑이 탐지됨
unique.constraint=고유한 제약
unlimited.db.identifier.length=제한이 없는 DB 식별자 길이
unnamed=이름이 지정되지 않음
unnecessary.changes.columns.change=변경
unnecessary.changes.detected=불필요한 변경 사항이 탐지됨
unnecessary.changes.detected.description=<html>변경 사항이 병합된 후 다음의 변경 사항은 불필요할 가능성이 높습니다.<br> 제거할 변경 사항을 선택하세요.
update=업데이트
update.null.values=Null 값 업데이트
update.successful=데이터베이스 ''{0}''이(가) 업데이트되었습니다
updating.database.canceled=데이터베이스 업데이트가 취소되었습니다
value=값
value.type=값 타입
view=뷰
view.name=뷰 이름
