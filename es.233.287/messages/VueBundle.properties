action.VueExtractComponentAction.description=Vue.js 템플릿의 선택된 부분을 새로운 단일 파일 구성 요소로 추출하고 사용된 데이터와 메서드를 프로퍼티와 함께 해당 구성 요소에 전달합니다
action.VueExtractComponentAction.text=Vue 구성 요소 추출
nuxt.support.notification.contents=더 나은 코드 완성 제안을 위해 @nuxt/types를 프로젝트 종속성에 추가하세요
nuxt.support.notification.title=Nuxt.js 지원
options.indent.label.top-level.caption=최상위 태그의 하위 항목 들여쓰기
options.indent.radio.block-specific.caption=블록 내 언어 한정
options.indent.radio.block-specific.tooltip=<template>, <script> 및 <style> 블록의 들여쓰기는 사용된 언어의 코드 스타일 설정에 따라 설정됩니다. 예를 들어 <style lang='scss'>는 SCSS에 설정된 들여쓰기를 사용합니다.
options.indent.radio.uniform.caption=전체 파일 내 동일
vue.command.name.auto-import-external-symbols=외부 심볼을 자동으로 가져오기
vue.command.name.auto-import-vue-components=Vue 구성 요소를 자동으로 가져오기
vue.configurable.service.auto=자동
vue.configurable.service.auto.help=프로젝트의 TypeScript 버전을 기반으로 서비스 통합을 활성화하려면 이 옵션을 선택합니다. TypeScript 5.0 이상을 사용하는 경우 'Vue 언어 서버'가 활성화되며, 이전 버전의 경우 TypeScript 서비스와의 직접 통합이 사용됩니다.
vue.configurable.service.disabled=비활성화됨
vue.configurable.service.disabled.help=TypeScript 서비스와 "Vue 언어 서버"를 모두 끄려면 이 옵션을 선택합니다.
vue.configurable.service.group=Vue 서비스
vue.configurable.service.ts=TypeScript 서비스
vue.configurable.service.ts.help=vue 파일에서 TypeScript 서비스와의 직접 통합을 활성화하려면 이 옵션을 선택합니다. 이 통합은 TypeScript 버전 5.0 이상에서 작동하지 않으며, 이러한 경우에는 내부 IDE 검사가 대신 사용됩니다.
vue.configurable.service.volar=&Vue 언어 서버(Volar)(&V)
vue.configurable.service.volar.help=모든 vue 파일에서 Vue 언어 서버통합을 사용하려면 이 옵션을 선택합니다. 단, 이 통합은 실험적인 기능이므로 일부 경우에 불안정할 수 있습니다.
vue.configurable.service.volar.package=Vue 언어 서버:
vue.configurable.title=Vue
vue.create.single.file.component.action.description=Vue 구성 요소 파일을 생성합니다.
vue.create.single.file.component.action.dialog.title=새 {0}
vue.create.single.file.component.action.name=Vue 구성 요소 파일 ''{0}'' 생성
vue.create.single.file.component.action.text=Vue 구성 요소
vue.create.single.file.component.template.class.api=Class API
vue.create.single.file.component.template.composition.api=Composition API
vue.create.single.file.component.template.options.api=Options API
vue.documentation.section.argument=인수:
vue.documentation.section.default=디폴트:
vue.documentation.section.library=라이브러리:
vue.documentation.section.pattern=패턴:
vue.documentation.section.required=필수
vue.documentation.section.slot.scope=범위
vue.documentation.type.component=구성 요소
vue.documentation.type.component.computed.property=구성 요소 계산 프로퍼티
vue.documentation.type.component.data.property=구성 요소 데이터 프로퍼티
vue.documentation.type.component.event=구성 요소 이벤트
vue.documentation.type.component.method=구성 요소 메서드
vue.documentation.type.component.property=구성 요소 프로퍼티
vue.documentation.type.directive=지시문
vue.documentation.type.directive.argument=지시문 인수
vue.documentation.type.directive.modifier=지시문 제어자
vue.documentation.type.filter=필터
vue.documentation.type.functional.component=함수 구성 요소
vue.documentation.type.slot=슬롯
vue.documentation.vue=Vue
vue.inspection.display.name.data.function=데이터 함수
vue.inspection.display.name.deprecated.symbol=지원 중단된 심볼
vue.inspection.display.name.duplicate.tag=중복 템플릿/스크립트 태그
vue.inspection.display.name.missing.component.import=구성 요소 가져오기 누락
vue.inspection.display.name.unrecognized.directive=인식되지 않는 지시문
vue.inspection.display.name.unrecognized.slot=인식되지 않는 슬롯
vue.inspection.group.name=Vue
vue.inspection.message.attribute.does.not.accept.value={0}은(는) 어떠한 값도 받지 않습니다.
vue.inspection.message.data.property.should.be.function=데이터 프로퍼티는 함수여야 합니다.
vue.inspection.message.duplicate.tag=중복된 최상위 태그 {0}
vue.inspection.message.filter.function.with.no.args=필터 함수는 적어도 하나의 인수를 허용해야 합니다.
vue.inspection.message.filter.invalid.number.of.arguments=필터 인수 개수가 잘못되었습니다. 필요한 수는 {0}개입니다.
vue.inspection.message.missing.component.import=구성 요소 {0}을(를) 가져오지 않았습니다
vue.inspection.message.unresolved.filter=해결되지 않은 필터 {0}
vue.live.template.context.component=Vue 구성 요소
vue.live.template.context.script.tag=Vue 스크립트 태그 내용
vue.live.template.context.template=Vue 템플릿
vue.live.template.context.template.tag.element=Vue 템플릿 태그 요소
vue.live.template.context.top.level=Vue 최상위 요소
vue.param.hints.show.names.for.filters=인수 필터링
vue.parser.message.expected.comma.or.end.of.expression=쉼표 또는 표현식의 종료가 필요합니다.
vue.parser.message.expected.end.of.expression=표현식의 종료가 필요합니다.
vue.parser.message.expected.identifier.or.string=식별자 또는 문자열이 필요합니다.
vue.parser.message.expected.in.or.of='in' 또는 'of'가 필요합니다.
vue.parser.message.expected.lparen.pipe.or.end.of.expression=(, | 또는 표현식의 종료가 필요합니다.
vue.parser.message.expected.pipe.or.end.of.expression=| 또는 표현식의 종료가 필요합니다.
vue.parser.message.generic.component.parameters.only.with.typescript=제네릭 구성 요소 매개변수는 TypeScript 언어로만 지원됩니다.
vue.parser.message.statements.not.allowed=Vue 표현식에서는 구문은 허용되지 않습니다.
vue.parser.message.unterminated.interpolation=종료되지 않은 보간
vue.progress.title.auto-importing-external-symbols-on-paste=붙여넣기 시 외부 심볼을 자동으로 가져오는 중...
vue.progress.title.auto-importing-vue-components-on-paste=붙여넣기 시 Vue 구성 요소를 자동으로 가져오는 중...
vue.project.generator.description=<a href='https://cli.vuejs.org'>Vue CLI</a>를 사용하여 새 <a href='https://vuejs.org'>Vue.js</a> 프로젝트를 생성합니다.
vue.project.generator.name=Vue.js
vue.project.generator.presentable.package.name=Vue CLI(&C)
vue.project.generator.use.default.project.setup=디폴트 프로젝트 설정 사용(&D)
vue.quickfix.import.component.family=구성 요소 가져오기
vue.quickfix.import.component.name=''{0}'' 구성 요소 가져오기
vue.quickfix.wrap.with.function.family=객체 감싸기
vue.quickfix.wrap.with.function.text=함수로 데이터 객체 래핑
vue.search.scope.template.name=템플릿
vue.service.name=Vue 언어 서버
vue.service.prefix=Vue
vue.symbol.presentation=Vue {0} {1}
vue.template.intention.extract.component.command.name=Vue 구성 요소 추출
vue.template.intention.extract.component.continue=계속 편집
vue.template.intention.extract.component.error.component.exists=구성 요소 {0}이(가) 이미 있습니다.
vue.template.intention.extract.component.error.component.name=잘못된 구성 요소 이름: {0}
vue.template.intention.extract.component.error.file.exists=파일 {0}이(가) 이미 있습니다
vue.template.intention.extract.component.family.name=Vue 구성 요소 추출
vue.template.intention.import.component.family.name=로컬에서 구성 요소 가져오기
vue.template.intention.v-model.expand.command.name=v-model 확장
vue.template.intention.v-model.expand.family.name=v-model 확장
vuex.inspection.message.unresolved.action=Vuex 액션 {0}을(를) 해결할 수 없습니다.
vuex.inspection.message.unresolved.getter=Vuex getter {0}을(를) 해결할 수 없습니다
vuex.inspection.message.unresolved.mutation=Vuex 변형 {0}을(를) 해결할 수 없습니다.
vuex.inspection.message.unresolved.namespace=알 수 없는 Vuex 모듈 네임스페이스 {0}
vuex.inspection.message.unresolved.state=Vuex 상태 {0}을(를) 해결할 수 없습니다.
vuex.inspection.message.unresolved.symbol=Vuex 심볼 {0}을(를) 해결할 수 없습니다.