color.concept=콘셉트
color.dependent_code=종속 코드
color.enum.const=열거형 상수
color.function.call=함수
color.global.variable=전역 변수
color.macro.name=매크로 이름
color.macro.parameter=매크로 매개변수
color.namespace=네임스페이스
color.overloaded.operator=괄호 및 연산자//오버로드된 연산자
color.preprocessor.directive=전처리기//지시문
color.struct.field=구조체 필드
color.struct.union=클래스/구조체/열거형/공용체
color.template.type=템플릿 타입
color.typedef=Typedef
color.format.string.token=문자열 인수 내 서식 지정자
color.preprocessor.path=전처리기//헤더 경로

resolve.contexts.current.file=현재 {0} 파일이 ''{1}''의 컨텍스트에서 해결되었습니다
resolve.contexts.loading=해결 컨텍스트 로드 중…
resolve.contexts.no.context=<컨텍스트 없음>
resolve.contexts.prefix.no.context=현재 파일에 대한 해결 컨텍스트가 없습니다
resolve.contexts.prefix=컨텍스트

test.tests.in.project=''{0}'' 프로젝트 내 테스트
test.framework=프레임워크 ''{0}''\:
test.test.count=테스트 수\: {0}
test.file.is.not.source.file=파일이 소스 파일이 아니므로 소스에서 테스트가 계산됩니다

refactoring.action.is.not.available.in.current.context=현재 컨텍스트에서는 리팩터링 동작을 사용할 수 없습니다
refactoring.rename.collecting.usages.title=사용 위치 수집 중

inspection.compiler.errors.title=컴파일러 오류
inspection.compiler.errors.description=ReSharper 백엔드의 컴파일러 오류를 표시합니다

projectConfigurable.RiderInlayHintsCppOptions.displayName=C++
projectConfigurable.ParameterNameHints.displayName=매개변수 이름 힌트
projectConfigurable.AggregateHints.displayName=프로젝트 집계
projectConfigurable.TypeNameHints.displayName=유형 이름 힌트
projectConfigurable.TypeConversionHints.displayName=타입 변환 힌트
projectConfigurable.Other.displayName=기타
projectConfigurable.Other.languages.displayName=기타 언어
action.RadlerShowTestList.text=테스트 목록 표시
action.RadMigrateCodeStyle.text=코드 스타일 설정을 CLion Classic에서 Nova로 마이그레이션
action.SendFeedback.text=의견 제출(_F)…

inspections.group.bestpractice=일반 사례 및 코드 개선 사항
inspections.group.codesmell=잠재적 코드 품질 문제
inspections.group.coderedundancy=불필요한 코드
inspections.group.compilerwarnings=컴파일러 문제
inspections.group.dataflow=데이터 흐름 분석

inspections.description.loading=로드 중…
inspections.description.load.failed=로드에 실패했습니다

settings.completion.show.signatures=함수 시그니처 표시
settings.completion.show.import.items=기본 코드 완성에서 가져오기 항목 표시
settings.completion.show.free.items=멤버 완성 기능에서 자유 함수 표시

settings.completion.importBehaviour=가져온 항목의 동작
settings.completion.alwaysInsertInclude=\#include 항상 추가
settings.completion.alwaysShowMenu=옵션 포함 메뉴 항상 표시
settings.completion.dependingOnFileType=.cpp 파일에 \#include를 추가하고 헤더 파일에 메뉴 표시

widget.send.feedback=의견 제출…

# Don't localize
project.awaiter=Awaits CLion backend activities