action.GraphQLCreateConfigFile.description=새 GraphQL 구성 파일을 생성합니다
action.GraphQLCreateConfigFile.text=GraphQL 구성
action.GraphQLEditEnvironmentVariables.text=GraphQL 환경 변수 편집
action.GraphQLExecuteEditor.description=지정된 GraphQL 엔드포인트에 대해 현재 GraphQL 파일을 실행합니다
action.GraphQLExecuteEditor.text=GraphQL 실행
action.GraphQLMigrateLegacyConfig.text=GraphQL 구성 이동
action.GraphQLRerunLatestIntrospection.description=로컬 스키마를 업데이트하기 위해(예: 원격 스키마 변경 시) 실행되었던 마지막 내부 검사 쿼리를 재실행합니다
action.GraphQLRerunLatestIntrospection.text=내부 검사 쿼리 재실행
action.GraphQLRestartSchemaDiscovery.description=프로젝트 전역에서 GraphQL 스키마 검색을 실행합니다
action.GraphQLRestartSchemaDiscovery.text=스키마 검색 다시 시작
graphql=GraphQL
graphql.action.add.schema.configuration.text=스키마 구성 추가
graphql.action.adds.new.graphql.configuration.file.description=새 GraphQL 구성 파일을 추가합니다
graphql.action.create.config.file.command=GraphQL 구성 생성
graphql.action.create.file.from.template.desc=새 GraphQL 파일을 생성합니다
graphql.action.create.file.from.template.dialog.kind=GraphQL 파일
graphql.action.create.file.from.template.dialog.title=새 GraphQL 파일
graphql.action.create.file.from.template.name=GraphQL {0} 생성
graphql.action.create.file.from.template.title=GraphQL 파일
graphql.action.edit.environment.variables.toolbar.title=환경 변수 편집
graphql.action.edit.selected.schema.configuration.text=선택한 스키마 구성을 편집
graphql.action.open.config.file.title=구성 파일 열기
graphql.action.open.introspection.schema.title=내부 검사 스키마 열기
graphql.action.opens.graphql.config.file.for.selected.schema.description=선택된 스키마의 GraphQL 구성 파일을 엽니다
graphql.action.rerun.latest.introspection.schema.title=내부 검사 쿼리 재실행({0})
graphql.action.run.introspection.query.title=내부 검사 쿼리 실행
graphql.action.schemas.panel.help.text=도움말
graphql.action.schemas.panel.open.documentation.description=GraphQL 플러그인 문서를 엽니다
graphql.action.toggle.variables.editor.desc=GraphQL 변수 에디터를 전환합니다
graphql.action.toggle.variables.editor.title=변수 에디터 전환
graphql.attribute.descriptor.argument=인수
graphql.attribute.descriptor.comment=주석
graphql.attribute.descriptor.constant=상수
graphql.attribute.descriptor.directive=지시문
graphql.attribute.descriptor.field.alias=필드 별칭
graphql.attribute.descriptor.field.name=필드 이름
graphql.attribute.descriptor.fragment.definition=조각 정의
graphql.attribute.descriptor.fragment.spread=조각 스프레드
graphql.attribute.descriptor.keyword=키워드
graphql.attribute.descriptor.number=숫자
graphql.attribute.descriptor.object.field=객체 필드
graphql.attribute.descriptor.operation.definition=연산 정의
graphql.attribute.descriptor.parameter=매개변수
graphql.attribute.descriptor.string=문자열
graphql.attribute.descriptor.type.name=타입 이름
graphql.attribute.descriptor.unused.fragment=사용되지 않은 조각
graphql.attribute.descriptor.variable=변수
graphql.attribute.descriptor.variable.definition=변수 정의
graphql.config.error.title=GraphQL 구성 오류
graphql.config.evaluation.error=구성을 평가할 수 없습니다
graphql.config.evaluation.interpreter.not.found.error=Node.js 인터프리터를 찾을 수 없어 GraphQL 구성 파일 ''{0}''을(를) 평가할 수 없습니다
graphql.config.legacy.schema.name=GraphQL 기존 구성
graphql.config.node.interpreter.error=Node.js 인터프리터를 찾을 수 없습니다
graphql.config.reload=다시 불러오기
graphql.config.schema.name=GraphQL 구성
graphql.dialog.title.select.graphql.configuration.folder=GraphQL 구성 폴더 선택
graphql.dialog.title.select.graphql.schema.base.directory=GraphQL 스키마 기본 디렉터리 선택
graphql.editor.element.is.included.in.query.execution=요소가 쿼리 실행에 포함됩니다
graphql.editor.hint.text.executed.selection=선택 범위를 실행했습니다
graphql.editor.query.hint.description=연산을 독자적으로 실행하려면 캐럿을 <a href="{0}">연산 내부</a>에 두세요.<br> 참조된 조각은 자동으로 포함됩니다.<br><div style="margin: 4px 0 4px 0;"><a style="text-decoration: none" href="{1}">다시 표시 안 함</a></div>
graphql.endpoint.tooltip=GraphQL 엔드포인트
graphql.environment.variables.dialog.title=GraphQL 환경 변수
graphql.find.usage.argument=인수
graphql.find.usage.directive=지시문
graphql.find.usage.enum.value=열거형 값
graphql.find.usage.field=필드
graphql.find.usage.fragment=조각
graphql.find.usage.type=타입
graphql.find.usage.unknown=알 수 없음
graphql.hint.text.executed.anonymous.operation=실행된 익명 {0}
graphql.hint.text.executed.buffer=실행된 버퍼 ''{0}''
graphql.hint.text.executed.named.operation=실행된 {0} ''{1}''
graphql.hint.text.failed.to.parse.variables.as.json=변수를 JSON으로 분석 실패:\n{0}
graphql.inspection.display.name.duplicate.argument=중복 인수
graphql.inspection.display.name.duplicate.directive=중복 지시문
graphql.inspection.display.name.empty.type=빈 타입
graphql.inspection.display.name.illegal.directive.argument=잘못된 지시문 인수
graphql.inspection.display.name.illegal.name=올바르지 않은 이름
graphql.inspection.display.name.interface.implementation=인터페이스 구현
graphql.inspection.display.name.invalid.directive.location=올바르지 않은 지시문 위치
graphql.inspection.display.name.member.redefinition=멤버 재정의
graphql.inspection.display.name.missing.type=누락된 타입
graphql.inspection.display.name.schema.validation=스키마 유효성 검사
graphql.inspection.display.name.type.redefinition=타입 재정의
graphql.inspection.display.name.unexpected.type=예기치 않은 타입
graphql.inspection.display.name.unresolved.reference=해결되지 않은 참조
graphql.inspection.go.to.related.definition.family.name=관련 정의로 이동
graphql.inspection.go.to.related.definition.name=관련된 정의 ''{0}''(으)로 이동
graphql.inspection.group.general=일반
graphql.inspection.group.schema=스키마
graphql.inspection.related.definitions=관련된 정의:
graphql.inspection.suppress.for.definition=정의에 대해 억제
graphql.inspection.suppress.for.file=파일에 대해 억제
graphql.intention.create.missing.type.definition.family.name=누락된 타입 정의 생성
graphql.intention.name.add.missing.type=''{0} {1}'' 추가
graphql.introspection.errors=내부 검사 쿼리가 오류를 반환합니다. {0}
graphql.introspection.missing.data=쿼리 결과에 `data` 키가 있어야 합니다.
graphql.introspection.missing.schema=쿼리 결과 데이터에 `__schema` 키가 있어야 합니다.
graphql.introspection.run.query=내부 검사 쿼리를 실행하여 GraphQL SDL 스키마 파일 생성
graphql.library.apollokotlin=Apollo Kotlin
graphql.library.built.in=Specification
graphql.library.federation=Federation
graphql.library.prefix=GraphQL:
graphql.library.relay=Relay
graphql.line.marker.generate.schema.file=GraphQL SDL 스키마 파일 생성
graphql.notification.config.not.found.body=프로젝트 루트까지 현재/상위 디렉터리를 검색했습니다.
graphql.notification.config.not.found.create.action=구성 파일 생성
graphql.notification.config.not.found.title=GraphQL 구성을 찾을 수 없음
graphql.notification.configuration.error=GraphQL 구성 오류
graphql.notification.content.open.schema.file=스키마 파일 열기
graphql.notification.content.unable.to.create.file.in.directory=디렉터리 ''{1}''에서 파일 ''{0}''을(를) 생성할 수 없습니다. {2}
graphql.notification.error.title=GraphQL 오류
graphql.notification.introspection.empty.endpoint.url=비어 있지 않은 엔드포인트 URL을 구성 파일에 입력하세요.
graphql.notification.introspection.empty.schema.path=스키마의 유효한 경로를 구성 파일에 입력하세요. 첫 번째 스키마 패턴은 파일 시스템에 있는 파일의 유효한 경로를 포함해야 합니다. {0}
graphql.notification.introspection.empty.schema.path.provided=입력된 경로: ''{0}''.
graphql.notification.introspection.endpoint.config.not.found=엔드포인트의 구성을 찾을 수 없습니다.
graphql.notification.introspection.error.body=내부 검사 결과로 유효한 스키마를 빌드할 수 없습니다.<br/>오류: {0}
graphql.notification.introspection.error.title=GraphQL 내부 검사
graphql.notification.introspection.parse.error=서버 내부 검사 응답을 유효한 JSON 객체로 분석할 수 없습니다.
graphql.notification.introspection.spec.error.body=내부 검사 결과로 유효한 스키마를 빌드할 수 없습니다. 엔드포인트가 GraphQL 사양을 따르지 않을 수 있습니다.<br/>오류: {0}
graphql.notification.introspection.unable.to.build.path=내부 검사 결과를 저장하기 위해 파일 경로를 빌드할 수 없습니다
graphql.notification.invalid.config.file=유효하지 않은 GraphQL 구성 파일
graphql.notification.load.schema.from.endpoint.action=''{0}'' 내부 검사
graphql.notification.load.schema.from.endpoint.body=로컬 스키마 파일을 업데이트하기 위해 ''{0}''을(를) 내부 검사합니다.
graphql.notification.load.schema.from.endpoint.title=엔드포인트에서 GraphQL 스키마를 가져올까요?
graphql.notification.migrate.config.action=마이그레이션
graphql.notification.migrate.config.text=GraphQL 구성을 새 구문으로 이동
graphql.notification.open.file=''{0}'' 열기
graphql.notification.retry=재시도
graphql.notification.retry.without.defaults=재시도(지금부터 디폴트 값을 건너뜀)
graphql.notification.sdl.generation.error.text=제공된 내부 검사 결과를 사용해서 유효한 GraphQL 스키마를 만들 수 없습니다
graphql.notification.sdl.generation.hide.notification.action=알림 숨기기
graphql.notification.sdl.generation.stack.trace.action=스택 추적
graphql.notification.sdl.generation.syntax.error.text=서버 내부 검사 응답을 유효한 JSON 객체로 분석할 수 없습니다
graphql.notification.ssl.cert.error.title=SSL 인증서 오류
graphql.notification.stack.trace=스택 추적
graphql.notification.title.limit.graphql.that.sent.to.server=서버로 전송되는 쿼리를 제한합니다
graphql.notification.title.unable.to.create={0}을(를) 생성할 수 없습니다
graphql.notification.trust.all.hosts=모든 호스트 신뢰
graphql.notification.unable.to.create.file=디렉터리 ''{1}''에서 파일 ''{0}''을(를) 생성할 수 없습니다.<br/>오류: {2}
graphql.notification.unable.to.delete.file=디렉터리 ''{1}''에서 파일 ''{0}''을(를) 삭제할 수 없습니다.<br/>오류: {2}
graphql.notification.unable.to.open.editor=''{0}'' 에디터를 열 수 없습니다
graphql.notification.unable.to.parse.file={0}을(를) 분석할 수 없습니다
graphql.progress.executing.introspection.query=GraphQL 내부 검사 쿼리 실행 중
graphql.progress.title.executing.graphql=GraphQL 실행 중
graphql.query.result.statistics={0}: {1}ms 응답 시간, {2}의 응답
graphql.query.result.statistics.error=, {0} {1}
graphql.query.result.statistics.multiple.errors=오류
graphql.query.result.statistics.single.error=오류
graphql.query.result.window.bytes.count={0}바이트
graphql.search.schema.registry.0=스키마 레지스트리 ''{0}'' 검색
graphql.settings.frameworks=프레임워크
graphql.settings.introspection=내부 검사
graphql.settings.introspection.default.values.label=스키마 내부 검사에 인수 디폴트 값 포함
graphql.settings.introspection.default.values.tooltip=디폴트 값을 건너뛰면 디폴트 값이 GraphQL 사양을 따르지 않는 종단점과의 호환성이 개선됩니다. 스키마를 계속 사용할 수는 있지만 디폴트 값에 대한 정보를 사용할 수 없게 됩니다
graphql.settings.introspection.open.editor.label=에디터에서 내부 검사 결과 열기
graphql.settings.introspection.query.empty.text=디폴트 값 비워두기
graphql.settings.introspection.query.label=쿼리
graphql.settings.introspection.query.tooltip=GraphQL 엔드포인트가 플러그인 내부 검사 쿼리와 호환되지 않는 경우 다른 내부 검사 쿼리 사용
graphql.settings.introspection.repeatable.directives.label=지시문의 'repeatable' 프로퍼티 요청
graphql.settings.introspection.repeatable.directives.tooltip=반복 가능한 지시문은 비교적 새로운 기능이므로 일부 GraphQL 구현에서는 지원되지 않을 수 있습니다
graphql.tab.title.graphql.schema=GraphQL 스키마({0})
graphql.tab.title.query.result=쿼리 결과
graphql.tab.title.schemas.project.structure=스키마 및 프로젝트 구조
graphql.tooltip.endpoints.perform.introspection.queries.mutations=엔드포인트로 GraphQL 내부 검사, 쿼리 및 배리언트를 실행할 수 있습니다
graphql.tooltip.search.schema.registry=스키마 레지스트리를 검색하려면 두 번 클릭하거나 Enter를 누르세요
graphql.toolwindow.action.create.scratch=새 GraphQL 스크래치 파일
graphql.toolwindow.action.introspect.endpoint=엔드포인트에서 GraphQL 스키마 가져오기
graphql.toolwindow.default.schema.node.name=기본 프로젝트 스키마
graphql.toolwindow.discovery.not.completed=스키마 검색이 완료되지 않았습니다
graphql.toolwindow.projects.node.name=프로젝트
graphql.toolwindow.schema.content.directives.count={0} 지시문
graphql.toolwindow.schema.content.empty.node.tooltip=스키마가 비어 있습니다
graphql.toolwindow.schema.content.enums.count={0}개의 열거형
graphql.toolwindow.schema.content.inputs.count={0}건의 입력
graphql.toolwindow.schema.content.interfaces.count={0}개의 인터페이스
graphql.toolwindow.schema.content.node.name=스키마 검출 요약
graphql.toolwindow.schema.content.scalars.count={0}개의 스칼라
graphql.toolwindow.schema.content.types.count={0}개의 타입
graphql.toolwindow.schema.content.unions.count={0}개의 공용체
graphql.toolwindow.schema.endpoints.default.node.name=기본 스키마에 사용 가능한 엔드포인트가 없습니다
graphql.toolwindow.schema.endpoints.list.node.name=엔드포인트
graphql.toolwindow.schema.error.node.tooltip=더블 클릭하여 스택 추적 열기
graphql.toolwindow.schema.errors.list.node.empty.errors=오류를 찾을 수 없습니다.
graphql.toolwindow.schema.errors.list.node.name=스카미 오류
graphql.validation.did.you.mean.0=. {0}을(를) 의도하셨나요?
graphql.validation.enum.values.can.not.be.named.0=열거형 값의 이름을 ''{0}''(으)로 설정할 수 없습니다
graphql.validation.field.name.suggestion.delimiter=, 또는
graphql.validation.interface.type=인터페이스
graphql.validation.object.type=객체
graphql.validation.on.0.type.1=위치: {0}타입 ''{1}''
graphql.validation.on.input.type.0=입력 타입이 ''{0}''일 때
graphql.validation.parent.selection.or.operation.does.not.resolve.to.a.valid.schema.type=: 상위 선택 범위 또는 연산이 유효한 스키마 타입으로 해결되지 않습니다
graphql.validation.unknown.argument.0=알 수 없는 인수 ''{0}''
graphql.validation.unknown.directive.0=알 수 없는 지시문 ''{0}''
graphql.validation.unknown.directive.location.0=알 수 없는 지시문 위치 ''{0}''
graphql.validation.unknown.field.0=알 수 없는 필드 ''{0}''
graphql.validation.unknown.fragment.spread.0=알 수 없는 조각 스프레드 ''{0}''
graphql.validation.unknown.type.0=알 수 없는 타입 ''{0}''