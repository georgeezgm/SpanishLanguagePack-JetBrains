PARSE.0.expected=''{0}'' expected
PARSE.async.keyword.not.expected.here='async' keyword is not expected here
PARSE.console.help.request.warn=IPython introspection syntax error
PARSE.console.multiline.magic.warn=Multiline magic cannot be used as an expression
PARSE.declarator.should.be.empty=Declarator should be empty
PARSE.eq.expected='=' expected
PARSE.expected.@.or.def='@' or 'def' expected
PARSE.expected.case.clause=Case clause expected
PARSE.expected.colon=':' expected
PARSE.expected.colon.or.rbracket=':' or ']' expected
PARSE.expected.comma=',' expected
PARSE.expected.comma.lpar.rpar=',' or '(' or ')' expected
PARSE.expected.comma.or.rpar=',' or ')' expected
PARSE.expected.ellipsis='...' expected
PARSE.expected.else='else' expected
PARSE.expected.expr.or.comma.or.bracket=Expected expression, ',' or ']'
PARSE.expected.expression=Expression expected
PARSE.expected.for.or.bracket=']' or 'for' expected
PARSE.expected.formal.param.name=Formal parameter name expected
PARSE.expected.fstring.colon.or.rbrace=: or '}' expected
PARSE.expected.fstring.quote={0} expected
PARSE.expected.fstring.rbrace='}' expected
PARSE.expected.fstring.type.conversion.or.colon.or.rbrace=Type conversion, ':' or '}' expected
PARSE.expected.identifier=Identifier expected
PARSE.expected.in='en' es obligatorio
PARSE.expected.lpar='(' expected
PARSE.expected.name=Name expected
PARSE.expected.name.or.wildcard=Name or '_' expected
PARSE.expected.number=Number expected
PARSE.expected.pattern=Pattern expected
PARSE.expected.rbrace='}' expected
PARSE.expected.rbracket=']' expected
PARSE.expected.rpar=')' expected
PARSE.expected.statement.break=Statement break expected
PARSE.expected.symbols=''{0}'' or ''{1}'' expected
PARSE.expected.symbols.first.quotation=''{0}'' or {1} expected
PARSE.expected.symbols.second.quotation={0} or ''{1}'' expected
PARSE.expected.tick='`' (backtick) expected
PARSE.expected.type.parameter=Type parameter expected
PARSE.from.expected='from' expected
PARSE.function.return.type.annotations.py2=Return type annotations are unsupported in Python 2
PARSE.function.type.annotations.py2=Type annotations are unsupported in Python 2
PARSE.gt.expected='>' expected
PARSE.keyword.cannot.be.used.as.identifier.py2=''{0}'' keyword can''t be used as an identifier in Python 2
PARSE.newline.expected=Newline expected
PARSE.single.star.parameter.not.supported.py2=Single star parameter is not supported in Python 2
PARSE.string.literal=String literal
PARSE.string.literal.expected=String literal expected
can.t.assign.to.await.expression=Cannot assign to await expression
cannot.assign.to.yield.expression=Cannot assign to 'yield' expression
custom.type.mimic.name=Clase dinámica basada en {0}
def.or.with.or.for.expected='def' or 'with' or 'for' expected
end.of.statement.expected=End of statement expected
except.or.finally.expected='except' or 'finally' expected
expected.statement=declaración requerida
for.expected='for' expected
import.expected='import' expected
indent.expected=Indent expected
rarrow.expected='->' expected
rbracket.or.comma.expected=']' or ',' expected
statement.expected.found.0=Statement expected, found {0}
tuple.expression.expected=Tuple expression expected
unexpected.expression.part=Unexpected expression part
unexpected.expression.syntax=Unexpected expression syntax
unexpected.f.string.token=Unexpected f-string token
unexpected.indent=Unexpected indent
unexpected.tokens=Unexpected tokens
unindent.does.not.match.any.outer.indent=Unindent does not match any outer indentation level
value.expression.expected=Value expression expected
