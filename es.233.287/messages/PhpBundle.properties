action.ChangePHPInterpreter.text=Change PHP Interpreter
action.ChangePHPInterpreter.description=Change project PHP interpreter
action.MessDetectorAddToIgnored.text=Add to PHPMD Ignore List
action.MessDetectorAddToIgnored.description=Add to PHP Mess Detector ignore list
action.PhpCSFixerAddToIgnored.text=Add to PHP CS Fixer Ignore List
action.PhpCSFixerAddToIgnored.description=Add to PHP CS Fixer ignore list
action.PhpCSAddToIgnored.text=Add to PHPCS Ignore List
action.PhpCSAddToIgnored.description=Add to PHP_CodeSniffer Ignore List
group.PHPQualityToolsAddToIgnoredList.text=Add to Ignore List of\u2026
action.ComposerShowLogAction.text=Show Log
action.ComposerShowLogAction.description=Show log of composer actions with this composer.json
action.ComposerClearCacheAction.text=Clear Cache
action.ComposerClearCacheAction.description=Delete all content from Composer's cache directories
action.ComposerSelfUpdateAction.text=Self-Update
action.ComposerSelfUpdateAction.description=Updates Composer itself to the latest version
group.ComposerToolsGroup.text=Composer
action.com.jetbrains.php.composer.ComposerInitSupportAction.text=Init Composer\u2026
action.com.jetbrains.php.composer.ComposerInitSupportAction.description=Init Composer
group.ComposerGroup.text=Composer
action.ComposerDiagnoseAction.text=Diagnose
action.ComposerDiagnoseAction.description=Check for common Composer problems
action.ComposerLicensesAction.text=List Licenses
action.ComposerLicensesAction.description=Lists the name, version and license of every package installed
action.ComposerStatusAction.text=Check for Changes in Dependencies
action.ComposerStatusAction.description=Check if there are local changes in any of dependencies
action.ComposerDryRunUpdate.text=Simulate Update
action.ComposerDryRunUpdate.description=Simulates an update without actually doing it
action.ComposerDumpAutoloadAction.text=Dump Autoloader\u2026
action.ComposerDumpAutoloadAction.description=Regenerate the list of autoloaded classes
action.ComposerValidateAction.text=Validate\u2026
action.ComposerValidateAction.description=Check if composer.json is valid
action.ComposerAddDependencyAction.text=Manage Dependencies\u2026
action.ComposerAddDependencyAction.description=Manage Composer dependencies
action.ComposerUpdateAction.text=Update
action.ComposerUpdateAction.description=Installs latest appropriate versions of packages from composer.json
action.ComposerInstallAction.text=Install
action.ComposerInstallAction.description=Installs packages from composer.json, taking account of composer.lock
action.com.jetbrains.php.internal.PhpViewControlFlowAction.text=PHP Control Flow of Current File
action.com.jetbrains.php.internal.PhpShowFQNInternalAction.text=Show PHP FQN
action.com.jetbrains.php.internal.PhpCreateYoutrackIssueFromFileAction.text=Create a YouTrack issue in WI (PhpStorm) project from file content 
action.com.jetbrains.php.internal.PhpCreateYoutrackIssueFromSelectionAction.text=Create a YouTrack issue in WI (PhpStorm) project from selection content
action.ProfilerJumpToSource.text=Jump To Source
action.ProfilerJumpToSource.description=Jump to source
action.XdebugAnalyzeProfilerSnapshotAction.text=Analyze Xdebug Profiler Snapshot\u2026
group.DBGPProxyGroup.text=DBGp Proxy
action.PhpDebuggerCopyType.text=Copy Type
action.XdebugDetachFromSessionAction.text=Detach from session
action.XDebugger.CopyPath.text=Copy Path
action.PhpDetectPsroRoots.text=Detect PSR-0 Namespace Roots
action.PhpDetectPsroRoots.description=Will detect source namespace roots
action.PhpListenDebugAction.text=Listen for Debug Connections
action.PhpListenDebugAction.description=Listen for debug connections
action.PhpMakeStaticAction.text=Make Static
action.PhpMakeStaticAction.description=Make class method static
action.PhpExtractClassAction.text=Extract Class\u2026
action.PhpExtractClassAction.description=Extracts elements to a separate class

action.PhpNewTest.text=PHP Test
action.PhpNewTest.description=Create new PHP test
group.PhpNewTestGroup.text=PHP Test
action.PhpUnitGenerateTearDownMethod.text=TearDown Method
action.PhpUnitGenerateTearDownMethod.description=Creates PHPUnit tearDown method
action.PhpUnitGenerateSetUpMethod.text=SetUp Method
action.PhpUnitGenerateSetUpMethod.description=Creates PHPUnit setUp method
action.PhpUnitGenerateTestMethod.text=Test Method
action.PhpUnitGenerateTestMethod.description=Creates PHPUnit test method
action.PhpGeneratePhpDocBlocks.text=PHPDoc Blocks\u2026
action.PhpGeneratePhpDocBlocks.description=Add PHPDoc blocks for functions, classes and fields.
action.PhpGenerateSetters.text=Setters\u2026
action.PhpGenerateSetters.description=Create setters for private class fields.
action.PhpGenerateGettersAndSetters.text=Getters and Setters\u2026
action.PhpGenerateGettersAndSetters.description=Create getters and setters for private class fields.
action.PhpGenerateGetters.text=Getters\u2026
action.PhpGenerateGetters.description=Create getters for private class fields.
action.PhpGenerateConstructor.text=Constructor\u2026
action.PhpGenerateConstructor.description=Create a constructor.

# php colors page elements
color.settings.name=PHP
color.settings.php.scripting=PHP Code//Background
color.settings.php.tags=PHP Code//Tags
color.settings.keyword=Keywords
color.settings.comment=Comments
color.settings.number=Numbers
color.settings.string=Strings//Characters
color.settings.escape_sequence=Strings//Escape sequences
color.settings.operation=Braces and Operators//Operators
color.settings.brackets=Braces and Operators//Brackets
color.settings.parentheses=Braces and Operators//Parentheses
color.settings.braces=Braces and Operators//Braces
color.settings.bad_character=Unknown character
color.settings.comma=Braces and Operators//Comma
color.settings.semicolon=Braces and Operators//Semicolon
color.settings.heredoc_id=Heredoc//Heredoc ID
color.settings.heredoc_content=Heredoc//Heredoc content
color.settings.var=Identifiers//Variable
color.settings.var_var=Identifiers//Variable variable
color.settings.this.var=Identifiers//'$this' variable
color.settings.identifier=Identifiers//Default
color.settings.constant=Identifiers//Constant
color.settings.function=Functions and Methods//Declaration
color.settings.parameter=Functions and Methods//Parameter
color.settings.function.call=Functions and Methods//Function Call
color.settings.instance.method=Functions and Methods//Instance Method Call
color.settings.instance.protected.method=Functions and Methods//Protected Instance Method Call
color.settings.instance.private.method=Functions and Methods//Private Instance Method Call
color.settings.static.method=Functions and Methods//Static Method Call
color.settings.magic.member=Identifiers//Magic Member Access
color.settings.class=Classes and Properties//Class
color.settings.interface=Classes and Properties//Interface
color.settings.static.field=Classes and Properties//Static Property
color.settings.instance.field=Classes and Properties//Instance Property
color.settings.instance.protected.field=Classes and Properties//Protected Instance Property
color.settings.instance.private.field=Classes and Properties//Private Instance Property
color.settings.doccomment=PHPDoc//Text
color.settings.doctag=PHPDoc//Tag
color.settings.docmarkup=PHPDoc//Markup
color.settings.doc.identifier=PHPDoc//Identifier
color.settings.doc.parameter=PHPDoc//Parameter
color.settings.doc.var=PHPDoc//Variable
color.settings.doc.method.identifier=PHPDoc//Method Declaration
color.settings.doc.property.identifier=PHPDoc//Property
color.settings.doc.template.type=PHPDoc//Template Type
color.settings.exec_command=Shell command
color.settings.concatenation=Strings//Concatenation
color.settings.predefined.symbols=Identifiers//Predefined symbols
color.settings.goto.label=Identifiers//Goto label
color.settings.alias.reference=Identifiers//Alias reference
color.settings.alias.primitive.type.hint=Identifiers//Primitive Type Hint
color.settings.named.arguments=Named Arguments
color.settings.attributes=Attributes

# annotations
annotation.variable.variable=Variable variable
annotation.new.expression.interface=Cannot instantiate interface ''{0}''
annotation.new.expression.trait=Cannot instantiate trait ''{0}''
annotation.new.expression.abstract=Cannot instantiate abstract class ''{0}''
annotation.new.expression.enum=Cannot instantiate enum ''{0}''
annotation.expression.is.not.allowed.as.class.constant.value=Expression is not allowed as class constant value

#folding
folding.checkbox.collapse.imports=Imports
folding.checkbox.collapse.method.body=Method body
folding.checkbox.collapse.function.body=Function body
folding.checkbox.collapse.php.tags=Tags
folding.checkbox.collapse.heredocs.and.nowdocs=HEREDOC\\NOWDOC
folding.checkbox.collapse.classes=Class body
folding.checkbox.collapse.attribute=Attribute
folding.checkbox.collapse.attribute.list=Attribute list

#gutter
gutter.overriding.select.title=Choose parent method to navigate
gutter.overriden.select.subclass.title=Choose subclass of {0}
gutter.overriden.select.implementation.title=Choose implementation of {0}
#gutter-pinned
gutter.pin.overriding.select.title=Parents of {0}
gutter.pin.overriden.select.subclass.title=Implementations of {0}
gutter.pin.overriden.select.implementation.title=Implementations of {0}

# inspections
inspection.group=PHP
inspection.group.general=General
inspection.group.unused=Unused
inspection.group.unused.quickfix.label=unused element
inspection.group.unused.quickfix.message=Unused element: ''{0}''
inspection.group.undefined=Undefined
inspection.group.control.flow=Control Flow
inspection.group.php.doc=PHPDoc
inspection.group.probably.bug=Probable bugs
inspection.group.type.compatibility=Type compatibility
inspection.group.code.style=Code Style
inspection.group.code.smell=Code Smell
inspection.group.naming.convention=Naming conventions


inspection.dead.code.problem.empty.constant.synopsis=Constant is never used.
inspection.dead.code.problem.single.constant.synopsis=Constant has one usage, but is not reachable.
inspection.dead.code.problem.multiple.constant.synopsis=Constant has {0, choice, 1#1 usage|2#{0,number} usages} but they are not reachable from entry points.
inspection.dead.code.problem.empty.function.synopsis=Function is never used.
inspection.dead.code.problem.recursive.suspicious.function.synopsis=All function usages belong to the calls chain that has no members reachable from entry points.
inspection.dead.code.problem.suspicious.function.synopsis=Function is not reachable from entry points.
inspection.dead.code.problem.trait.synopsis=Trait is never used.
inspection.dead.code.problem.class.nousages.synopsis=Class is never used.
inspection.dead.code.problem.trait.additional.unreachable=Trait has no reachable usages.
inspection.dead.code.problem.trait.additional.reachable=Trait has reachable usages.
inspection.dead.code.problem.class.abstract.several.implementations={0} has {1, choice, 1#direct or indirect implementation|2#{1,number} direct or indirect implementations}, but <ul><li>they are never instantiated OR</li><li>no instantiations are reachable from entry points.</li></ul>

inspection.hierarchyChecks=Class hierarchy checks
inspection.hierarchyChecks.descr=Class must be declared abstract or implement {0}
inspection.hierarchyChecks.should.implement=Class must implement {0}
inspection.hierarchyChecks.field.type.redeclaration.must.not.be.defined=Type must not be defined (as in base class ''{0}'')
inspection.hierarchyChecks.field.type.redeclaration.match.super.type=Type must be ''{0}'' (as in base class ''{1}'')
inspection.wrong_param_type=Expected parameter of type ''{1}'', ''{0}'' provided
inspection.missing_param=Required parameter ''{0}'' missing
inspection.optional.before.required=Optional parameter is provided before required
#inspection -> Super class incompatible with interface
inspection.super.incompatible.with.interface.declaration.must.be.compatible=Declaration of ''{0}'' must be compatible with ''{1}''

#inspection -> Wrong Exception order
inspection.wrong.exception.order.problem.batch=Exception '#ref' is already caught
inspection.wrong.exception.order.problem.same=Exception ''{0}'' is already caught
inspection.wrong.exception.order.problem.super=''{0}'', superclass of exception class ''{1}'', is already caught

inspection.wrong.exception.order.fix.move.display.name=Move ''catch'' clause before ''{0}''
inspection.wrong.exception.order.fix.move.family.name=Move 'catch' clause
#inspection -> Wrong Exception class
inspection.wrong.exception.type.problem.throw = Thrown object must be an instance of 'Exception' or 'Throwable'
inspection.wrong.exception.type.problem.catch = Cannot catch object not derived from 'Exception' or 'Throwable' base class

#inspection -> Assigned value never used
#inspection -> Wrong foreach argument
inspection.wrong.foreach.argument.type.problem.batch=Invalid argument supplied to 'foreach'
inspection.wrong.foreach.argument.type.problem=Invalid argument supplied to ''foreach''. Expected types: ''array'' or ''object'', ''{0}'' provided.

#inspection -> Redundant PHPDoc
inspection.redundant.phpdoc=Redundant PHPDoc comment
inspection.redundant.phpdoc.tag=Redundant PHPDoc tag
quickfix.remove.redundant.phpdoc.tags=Remove all redundant PHPDoc tags


#inspection -> Unused local variable
inspection.unused.local.variable.problem=Unused local variable ''{0}''. {1}
inspection.unused.local.variable.problem.batch=Local variable '#ref' is not used anywhere
inspection.unused.local.variable.problem.case1=The value of the variable is not used anywhere.
inspection.unused.local.variable.problem.case2=The value of the variable is overwritten immediately.
inspection.unused.local.variable.problem.case3=The reference stored in the variable is not used anywhere.
inspection.unused.local.variable.problem.case4=The reference stored in the variable is overwritten immediately.
inspection.unused.local.variable.option.description.foreach=Ignore a foreach value inside 'list()' or when a 'foreach' key exists
inspection.unused.local.variable.option.description.list=Ignore variables inside 'list()'
inspection.unused.local.variable.option.description.include=Ignore variables before 'include'
inspection.unused.local.variable.option.description.file.scope=Enable inspection in global space
inspection.unused.local.variable.option.description.null=Ignore assignment to 'null'
inspection.unused.local.variable.option.indirect.access=Ignore variables accessed via 'get_defined_vars()'
inspection.unused.local.variable.problem.fix.side.effects.found.dialog.title=Side Effects Found
inspection.unused.local.variable.problem.fix.side.effects.found.dialog.message=Expression assigned to ''{0}'' probably contains side effects.\nYou can:\n- <b>Remove</b> variable assignment completely\n- <b>Transform</b> assigned expression into separate statement

#inspection -> Unused parameter
inspection.unused.parameter.problem=Unused parameter ''{0}''. {1}
inspection.unused.parameter.problem.case1=The parameter's value is not used anywhere.
inspection.unused.parameter.problem.case2=The parameter's value is overwritten immediately.
inspection.unused.parameter.problem.case3=The reference stored in the parameter is not used anywhere.
inspection.unused.parameter.problem.case4=The reference stored in the parameter is overwritten immediately.
inspection.unused.parameter.option.description.empty.body=Ignore parameters of methods/functions with empty body
inspection.unused.parameter.option.description.empty.abstract=Ignore parameters of abstract classes' methods
inspection.unused.parameter.option.description.empty.override=Ignore parameters of overriding methods
inspection.unused.parameter.option.description.empty.anonymous=Ignore parameters of anonymous functions
inspection.unused.parameter.option.description.parameter.count=Don't report parameters accessed via 'func_num_args()'

#inspection -> Unused private method
inspection.unused.private.method.problem.batch=Unused private method '#ref'
inspection.unused.private.method.option.ignore.constructor=Ignore method '__construct' usage
inspection.unused.private.method.option.ignore.clone=Ignore method '__clone' usage

#inspection -> Undefined callback
inspection.undefined.callback.method=Method ''{0}'' not found in class ''{1}''
inspection.undefined.callback.field=Property ''{0}'' not found in class ''{1}''
inspection.undefined.callback.class=Undefined class ''{0}''
inspection.undefined.callback.function=Undefined function ''{0}''
inspection.undefined.callback.dont.report.exist.checkbox=Ignore callback from '*_exists' and 'is_callable' functions
inspection.undefined.callback.dont.report.ambiguity.checkbox=Don't report in case of ambiguity

#inspection -> Missing parent call
inspection.missing.parent.call.message=Missing parent method call

#inspection -> Missing parent constructor call
inspection.missing.parent.constructor.call.message=Missing parent constructor call

#inspection - > Undefined variable
inspection.undefined.variable.problem1=Undefined variable '#ref'
inspection.undefined.variable.problem2=Variable '#ref' is probably undefined
inspection.undefined.variable.option.description.enable.in.file.scope=Enable inspection in global space
inspection.undefined.variable.option.description.report.can.be.undefined=Report that variable is probably undefined
inspection.undefined.variable.option.description.ignore.include=Search for variable's definition outside the current file

#inspection -> Wrong String concatenation operator
inspection.wrong.string.concatenation.operator.problem=Wrong string concatenation operator
inspection.wrong.string.concatenation.operator.problem.batch=Wrong string concatenation operator
inspection.wrong.string.concatenation.operator.option.ignore.magic=Ignore properties accessed via magic methods

#inspection -> Dynamic method called as static
inspection.dynamic.method.called.as.static.problem=Non-static method '#ref' should not be called statically
inspection.dynamic.method.called.as.static.problem.magic=Non-static method '#ref' should not be called statically, but the class has the '__magic' method.

#inspection -> Static method called as dynamic
inspection.static.method.called.as.dynamic.problem=Static method '#ref' should not be called dynamically
inspection.static.method.called.as.dynamic.problem.magic=Static method '#ref' should not be called dynamically, but the class has the '__magic' method.

#inspection -> Assignment in condition
inspection.assignment.in.condition=Assignment in condition
inspection.assignment.in.condition.move.assignment.out.of.condition.fix.name=Move assignment out of the condition

#inspection -> Division by zero
inspection.division.by.zero=Division by zero

#inspection -> Dynamic namepsace
#inspection -> Unreachable Statement
inspection.unreachable.statement=Unreachable statement
inspection.unreachable.statement.problem=Unreachable statement

#inspection -> Missing doc comment
inspection.missing.doc.comment.problem=Missing PHPDoc comment
inspection.missing.doc.comment.problem.batch=Missing PHPDoc comment for {0}
inspection.missing.doc.comment.options.panel.constant=C&onstant
inspection.missing.doc.comment.options.panel.function=&Function
inspection.missing.doc.comment.options.panel.class=&Class
inspection.missing.doc.comment.options.panel.method=&Method
inspection.missing.doc.comment.options.panel.field=&Property
inspection.missing.doc.comment.options.panel.class.constant=Class const&ant

#inspection -> Silly assignment
inspection.silly.assignment.problem=The left-hand and right-hand sides of the assignment are equal

#inspection -> Illegal array key type
inspection.illegal.array.key.type.problem=Illegal array key type

#inspection -> Illegal string offset
inspection.illegal.string.offset.problem=Illegal string offset {0}

#inspection -> Missing @return tag
inspection.doc.missing.return.tag.problem=Missing @return tag in function/method PHPDoc comment

#inspection -> Missing @throws tag
inspection.doc.throws.problem=PHPDoc comment doesn't contain all the necessary @throws tags
inspection.doc.throws.option.skip.on.empty.phpdoc=Ignore PHPDoc without @param/@return

#inspection -> Inconsistent return points
inspection.inconsistent.return.points.problem1=Missing 'return' statement
inspection.inconsistent.return.points.problem1.yield=Missing 'yield' statement
inspection.inconsistent.return.points.problem2=Missing return argument
inspection.inconsistent.return.points.option.treat.return=Treat \'return null\' and \'return\' same way in \'void\' functions/methods

#inspection -> Redundant closing tag
inspection.redundant.closing.tag.problem=Redundant closing tag
inspection.redundant.closing.tag.fix.remove=Remove closing tag

#inspection -> Void/Never function result used
inspection.invalid.function.result.used.problem=''{0}'' {1} ''{2}'' result used
inspection.invalid.function.result.used.problem.function=function
inspection.invalid.function.result.used.problem.method=method
inspection.void.function.result.used.problem.type=void
inspection.never.function.result.used.problem.type=never
inspection.void.never.function.result.used.problem.type=void/never

#inspection -> Expression result unused
inspection.expression.result.unused.problem=Expression result is not used anywhere

#inspection -> Missing 'break' statement
inspection.missing.break.statement.problem=Missing 'break' statement

#inspection -> Nested vs outer 'foreach' variables conflict
inspection.nested.vs.outer.foreach.variables.conflict.problem1=Variable ''{0}'' is used as a key in both the inner and outer ''foreach'' loops
inspection.nested.vs.outer.foreach.variables.conflict.problem2=Variable ''{0}'' is used as a value in both the inner and outer ''foreach'' loops

#inspection -> Foreach array is used as value
inspection.foreach.array.is.used.as.value.problem=Variable ''{0}'' is already used as an ''array expression''

#inspection -> Usage of a silence operator
inspection.usage.of.silence.operator.problem=Silence operator used

#inspection -> Language level
#switch language level quick-fix
inspection.language.level.quick.fix.switch.language.level.name.0=Switch to PHP{0} language level

#switch language level in composer file manually quick-fix
inspection.language.level.quick.fix.switch.language.level.in.composer.manually.0=Switch to PHP {0} language level in composer.json manually
inspection.language.level.quick.fix.switch.language.level.in.composer.0=Switch to PHP {0} language level in composer.json


inspection.disabled.quality.tool.inspection.fix=Enable inspection
inspection.disabled.quality.tool.inspection.open.fix=Open inspection settings

inspection.disabled.quality.tool.inspection= {0} inspection is disabled

inspection.json.not.installed.packages=Package is not installed
inspection.json.all.not.installed.packages=Packages are not installed
inspection.json.not.installed.packages.update.fix=Update all packages
inspection.json.not.installed.package.update.fix=Update package
inspection.json.not.installed.packages.install.fix=Install packages
inspection.json.duplicated.packages.0=Duplicate entries for ''{0}'' in require and require-dev
inspection.json.duplicated.packages.fix=Remove duplicate from require-dev

#inspection -> Duplicate array keys
inspection.duplicate.array.keys.display.name=Duplicate array keys
inspection.duplicate.array.keys.problem=Duplicate array key
inspection.duplicate.array.keys.problem.0=Duplicate array key with value ''{0}''

#inspection -> Duplicate PhpDoc type
inspection.duplicate.phpdoc.type.problem=Duplicate type ''{0}''
inspection.duplicate.phpdoc.type.fix=Remove duplicate type from tag

#inspection -> Undefined constant
inspection.undefined.constant.problem1=Undefined constant '#ref'
inspection.undefined.constant.problem2=Constant '#ref' is probably undefined

#inspection -> Undefined function
inspection.undefined.function.problem1=Undefined function '#ref'
inspection.undefined.function.problem2=Function '#ref' is probably undefined

#inspection -> Undefined property
inspection.undefined.field.problem1=Property accessed via magic method
inspection.property.declared.dynamically=Property declared dynamically
inspection.property.declared.dynamically.deprecated=Property declared dynamically, this is deprecated starting from PHP 8.2
inspection.undefined.field.notify.access.magic.method=Notify of access to a property via magic method
inspection.undefined.field.notify.dynamic.declaration=Notify of dynamic property declaration
inspection.undefined.field.notify.dynamic.read=Notify of read access to a dynamic property

#inspection -> Failed line in test
inspection.php.unit.failed.line=Failed line in test

#inspection -> Undefined provider
inspection.undefined.phpunit.provider=Undefined PHPUnit data provider ''{0}''

#inspection -> PHPUnit missing target for test
inspection.phpunit.missing.target.element.ref=No test target elements found for '#ref'

#inspection -> Covered function reference is provided without '::'
inspection.phpunit.covers.function.without.scope.resolution.operator=Covered {0} reference is provided without ''::''

#inspection -> Deprecated assertEquals/assertNotEquals usage
inspection.phpunit.asserts.assertEquals.parameters.many=The optional {0} parameters are deprecated
inspection.phpunit.asserts.assertEquals.parameters.single=The optional {0} parameter is deprecated
inspection.phpunit.asserts.assertEquals.parameters.empty=Call with such parameters is deprecated

#inspection -> Usage assertCount/assertSameSize methods instead of assertEquals
inspection.phpunit.asserts.assert.with.count.function=Method {0} can be used instead of {1}

#inspection -> Misordered assertEquals/assertNotEquals arguments
inspection.phpunit.asserts.assertEquals.misordered.arguments=Misordered ''{0}()'' arguments

#inspection -> Method assertArrayHasKey/assertArrayNotHasKey can be used instead
inspection.phpunit.asserts.array.has.key.can.be.used.instead=Method ''{0}'' can be used instead

#inspection -> Deprecated expectException usage
inspection.phpunit.expectException=Support for using expectException() with {0} is deprecated and will be removed in PHPUnit 10. Use {1}() instead.

#inspection -> Unnecessary fully qualified name
inspection.unnecessary.qualifier.already.imported.message=Qualifier is unnecessary and can be removed
inspection.unnecessary.fully.qualified.name.option.enable.file.scope=Enable in file scope
inspection.unnecessary.fully.qualified.name.option.ignore.global.namespace=Ignore global namespace

#inspection -> Fully qualified name usage
inspection.fully.qualified.name.usage=Qualifier can be replaced with an import
inspection.fully.qualified.name.usage.option.enable.file.scope=Enable in file scope
inspection.fully.qualified.name.usage.name.option.ignore.global.namespace=Ignore global namespace

#inspection -> Multiple classes declaration in one file
inspection.multiple.classes.declarations.in.one.file=Another class is declared in this file\

#inspection -> Namespace name is not matched with project structure
inspection.illegal.psr.class.path.namespace.name.is.not.matched.to.psr0=Namespace name doesn't match the PSR-0/PSR-4 project structure
inspection.illegal.psr.class.path.class.is.not.matched.to.psr0={0} name doesn''t match the containing file name

#inspection -> Traditional Syntax Array Declaration Inspection
inspection.traditional.syntax.array.literal.detected=Traditional syntax array literal used

#inspection -> Too Many Parameters
inspection.too.many.parameters=Parameters number exceeds the specified limit
inspection.too.many.parameters.max.number.of.parameters=Max number of parameters
inspection.too.many.parameters.ignore.constructors=Ignore constructors

#inspection -> Parameters count mismatch
inspection.method.parameters.count.mismatch=Method call is provided {0} parameters, but the method signature uses {1} parameters
inspection.method.parameters.count.mismatch.option.ignore.underscore=Ignore functions/methods with last parameter $_
inspection.method.parameters.count.mismatch.option.ignore.func.get.arg=Ignore functions/methods with func_get_arg/func_get_args call

#inspection -> Method __toString is not implemented
inspection.method.to.string.is.not.implemented.strict.mode=Check __toString exists for each expression type
inspection.method.to.string.is.not.implemented=Method ''__toString'' is not implemented for ''{0}''

#inspection -> Method or class is not case sensitive
inspection.codeSmell.function.call.is.not.casesensitive=Case in function/method call doesn't match the case in declaration
inspection.codeSmell.class.call.is.not.casesensitive=Case in class usage doesn't match the case in declaration
inspection.codeSmell.namespace.reference.is.not.casesensitive=Case in namespace reference doesn't match the case in declaration

#inspection -> Method visibility shouldn't be overridden
inspection.codeSmell.overriding.method.visibility.description=Method visibility shouldn't be overridden

#inspection -> Usage of a variable variable
inspection.variable.variable=Variable variable used

#inspection -> Strict type checking rules violation
inspection.strict.type.checking.parameter=Expected parameter of type ''{0}'', ''{1}'' provided
inspection.strict.type.checking.parameter.batch=Parameter '#ref' type is not compatible with declaration
inspection.strict.type.checking.return=Return value must be of type ''{0}'', ''{1}'' returned
inspection.strict.type.checking.return.batch=Return value type is not compatible with declaration
inspection.strict.type.checking.option=Enable for all files
inspection.strict.type.checking.field.assignment=Property must be of type ''{0}'', ''{1}'' provided
inspection.strict.type.checking.field.assignment.multi.resolve=Assigned value''s type ''{0}'' is not compatible with property''s declared type

#inspection -> Incompatible return type
inspection.incompatible.return.type=Return value is expected to be ''{0}'', ''{1}'' returned
inspection.incompatible.return.type.batch=Return value type is not compatible with declared
inspection.incompatible.return.type.strict.type.checking=Strict type checking\

#inspection -> Missing strict types declaration
inspection.missing.strict.types.declaration=Strict types declaration is missing
inspection.missing.strict.types.declaration.add.declaration=Add strict types declaration

#inspection -> Magic method visibility
inspection.magic.method.visibility.must.be.public=Magic method ''{0}'' must be public
inspection.magic.method.visibility.must.be.static=Magic method ''{0}'' must be static
inspection.magic.method.visibility.cannot.be.static=Magic method ''{0}'' cannot be static

#inspection -> Naming convention
inspection.naming.convention.problem.descriptor.short={0} name <code>#ref</code> is too short ({1} < {2}) #loc
inspection.naming.convention.problem.descriptor.long={0} name <code>#ref</code> is too long ({1} > {2}) #loc
inspection.naming.convention.element.descriptor.regexp={0} name <code>#ref</code> doesn''t match regex ''{1}'' #loc
inspection.naming.convention.element.description.class=Class
inspection.naming.convention.element.description.method=Method
inspection.naming.convention.element.description.property=Property
inspection.naming.convention.element.description.variable=Variable
inspection.naming.convention.element.description.function=Function
inspection.naming.convention.element.description.constant=Constant

#inspection -> Replaceable assignment
inspection.assignment.replaceable.with=<code>#ref</code> can be replaced with ''{0}'' #loc

#inspection -> Constructor style
inspection.constructor.style=Old-Style constructor

#inspection -> Statement has empty body
inspection.statement.has.empty.body.comments.count.as.content=Comments count as content
inspection.statement.has.empty.body.ignore.empty.while=Ignore 'while' loop without body
inspection.statement.has.empty.body.ignore.empty.for=Ignore 'for' loop without body

#inspection -> Convert loop to array_map
inspection.loop.can.be.converted.to.arraymap=Loop can be converted to an 'array_map()' call

#inspection -> Convert loop to array_filter
inspection.loop.can.be.converted.to.arrayfilter=Loop can be converted to an 'array_filter()' call

#inspection -> Convert loop to array_fill
inspection.loop.can.be.converted.to.arrayfill=Loop can be converted to an 'array_fill()' call

#inspection -> Convert closure to first-class callable syntax
inspection.closure.can.be.converted.to.first.class.callable='Closure::fromCallable()' can be converted to the first-class callable syntax

#inspection -> Convert str_pos to str_contains
inspection.str.functions.strpos.call.can.be.converted.to.strcontains='strpos()' call can be converted to 'str_contains()'
inspection.str.functions.substr.call.can.be.converted.to.strstartswith='substr()' call can be converted to 'str_starts_with()'
inspection.str.functions.strpos.call.can.be.converted.to.strstartswith='strpos()' call can be converted to 'str_starts_with()'
inspection.str.functions.substr.call.can.be.converted.to.strendswith='substr()' call can be converted to 'str_ends_with()'
#inspection -> Convert array_map to loop
inspection.arraymap.can.be.converted.to.loop='array_map()' call can be converted to a loop

#inspection -> Convert array_filter to loop
inspection.arrayfilter.can.be.converted.to.loop='array_filter()' call can be converted to a loop

#inspection -> Convert array_fill to loop
inspection.arrayfill.can.be.converted.to.loop='array_fill()' call can be converted to a loop

#inspection -> Ignored class alias declaration
inspection.ignored.class.alias.declaration=Class alias declaration ignored

#inspection -> Format function parameters mismatch
inspection.format.function.parameters.mismatch.parameter=Parameter is not mapped to any conversion specification
inspection.format.function.parameters.mismatch.conversion.specification=Conversion specification is not mapped to any parameter
        
inspection.export.results.const=constant
inspection.export.results.back.traces=Back traces
          
inspection.unused.symbol.check.fields=Properties
inspection.unused.symbol.check.methods=Methods
inspection.unused.symbol.check.classes=Classes
inspection.unused.symbol.check.constants=Constants
inspection.unused.symbol.check.anonymous_classes=Anonymous
inspection.unused.symbol.check.functions=Functions
inspection.unused.symbol.check.magic_method=Magic methods
inspection.unused.symbol.export.calls=calls
inspection.unused.symbol.export.call=call
inspection.unused.symbol.export.label=label
inspection.unused.symbol.export.reachable_element=reachable
inspection.unused.symbol.export.entry=entryPoint
inspection.unused.symbol.export.abstract=abstract
inspection.unused.symbol.export.closure=closure
inspection.unused.symbol.export.test_method=test

inspection.composer.file.reference.problem=Path ''{0}'' not found"

#inspection -> Method may be static
inspection.method.may.be.static=Method can be made 'static'

#inspection -> Missing field type
inspection.missing.field.type=Missing property's type declaration

inspection.unpacked.argument.type.mismatch=Only arrays and Traversables can be unpacked, got {0}

inspection.closure.can.be.converted.to.arrow.function=Closure can be converted to arrow function

inspection.field.assignment.type.mismatch=Incompatible types: Expected property of type ''{0}'', ''{1}'' provided
inspection.field.assignment.type.mismatch.multi.resolve=Assigned value''s type ''{0}'' is not compatible with property''s declared type

inspection.duplicate.switch.case.body=Branch in ''switch'' is a duplicate of ''{0}'' branch

inspection.duplicate.match.arm.body=''match'' arm is a duplicate of ''{0}'' arm

inspection.switch.without.default.case=''Switch'' has no default branch

inspection.doc.field.type.mismatch={0, choice, 0#Property|1#Class constant} type does not match

inspection.nested.ternary.expression=Nested ternary expressions are deprecated since PHP 7.4

inspection.statement.without.braces=Control statement body without braces
inspection.statement.without.braces.fix.name=Add braces to ''{0}'' statement

inspection.single.statement.with.braces=Single-statement body with braces
inspection.single.statement.with.braces.fix.name=Remove braces from ''{0}'' statement

inspection.curly.braces.access.syntax.usage=Curly brace access syntax is deprecated since PHP 7.4

inspection.expression.have.same.operands=Expression has the same operands

inspection.deprecated.cast={0} cast is deprecated since PHP {1}
inspection.deprecated.implode.usage={0} with arguments (array, string) call is deprecated since PHP 7.4 

#inspection -> Static member accessed via instance reference
inspection.static.member.accessed.via.instance.reference=Static member ''{0}'' accessed via instance reference

#inspection -> Add attribute #[Override] to methods
inspection.add.override.attribute=Mark overridden method with #[Override]

#inspection -> Overriden method exists
inspection.method.does.not.override.super=Method does not override the method from its superclass

#inspection -> Convert json_decode() and json_last_error() to json_validate()
inspection.convert.to.json.validate='json_decode()' and 'json_last_error()' can be converted to 'json_validate()'

quickfix.replace.curly.braces.with.brackets=Replace curly braces with brackets

#quickfix
quickfix.is.not.available.in.dump.mode=''{0}'' quick-fix is not available while indexes are updating
quickfix.cannot.find.class.reference=Cannot find class reference to resolve
quickfix.cannot.find.target.class=Cannot resolve class from reference ''{0}''
quickfix.multiple.target.class.resolve=Class ''{0}'' has multiple declarations
quickfix.import.base.no.candidates=Cannot find candidates to import

#quickfix -> PhpCaseSensitiveQuickFix
quickfix.overriding.method.visibility=Remove visibility overriding

#quickfix -> PhpMoveClassToCorrespondingDirectoryQuickFix
quickfix.move.class.to.corresponding.directory=Move to directory ''{0}''
quickfix.move.class.to.corresponding.directory.error.file.exists=File {0} already exists
quickfix.move.class.to.corresponding.directory.error.unable.create.directories=Unable to create missing directories: ''{0}''
quickfix.move.class.to.corresponding.directory.error.unable.move.file=Cannot move file to directory ''{0}''

#quick-fix for:
quickfix.create.class=Create class
quickfix.failed.to.create.class=Failed to create class ''{0}''

#quic fix for:{PhpConstructorStyleInspection} -> Convert constructor to new style
quickfix.convert.to.new.style.constructor=Convert constructor to new style

#quick-fix for: {PhpUnderfinedVariableInspection} -> Create parameter
quickfix.create.parameter=Create parameter
#quick-fix for: {PhpUnderfinedVariableInspection} -> Add to use
quickfix.add.to.use=Add to closure 'use' construct

#quickfix -> PhpImportClassQuickFix
quickfix.import.class.name=Import class
quickfix.import.class.popup.title=Class to import

#quickfix -> PhpImportConstantQuickFix
quickfix.import.constant.name=Import constant
quickfix.import.constant.popup.title=Constant to import

#quickfix -> PhpImportFunctionQuickFix
quickfix.import.function.name=Import function
quickfix.import.function.popup.title=Function to import

#quickfix -> PhpAddFieldDeclarationQuickFix
#quickfix -> PhpAddMethodDeclarationQuickFix
#quickfix -> MakeCallDynamicQuickFix
quickfix.can.not.find.static.method.reference=Cannot find static method reference

#quickfix -> MakeCallStaticQuickFix
quickfix.make.call.static.name=Make call static
quickfix.can.not.find.dynamic.method.reference=Cannot find dynamic method reference

#quickfix -> PhpAddFunctionFromCallback/PhpAddMethodFromCallback/PhpAddFieldFromCallback
quickfix.create.field.from.callback.name=Create property from callback
quickfix.create.field.from.callback.invalid.element=Failed to extract property name from callback
quickfix.create.field.from.callback.unresolved.class.ref=Failed to create property from callback. Cannot resolve target class reference.
quickfix.create.method.from.callback.name=Create method from callback
quickfix.create.function.from.callback.family.name=Create function from callback
quickfix.create.function.from.callback.name=Add function

#quickfix -> PhpChangeParameterTypeQuickFix/PhpChangeReturnTypeQuickFix/PhpExtendReturnTypeQuickFix
quickfix.strict.type.checking.change.parameter.type.name=Change type of the {0, choice, 1#1st|2#2nd|3#3rd|4#{0,number}th} parameter from ''{1}'' to ''{2}''
quickfix.strict.type.checking.change.parameter.type.family=Change parameter type
quickfix.strict.type.checking.change.return.type.name=Change return type from ''{0}'' to ''{1}''
quickfix.strict.type.checking.change.return.type.family=Change return type
quickfix.strict.type.checking.extend.return.type.name=Extend return type from ''{0}'' to ''{1}''
quickfix.strict.type.checking.extend.return.type.family=Extend return type

#quickfix -> PhpChangeTypeDeclarationQuickFix
quickfix.change.type=Change to ''{0}''
quickfix.remove.type=Remove type ''{0}''
quickfix.change.type.declaration.family=Change type

#quickfix -> PhpCaseSensitiveQuickFix
quickfix.case.sensitive.name=Change the case of the {0} to match its declaration

#quickfix -> Replace assignment with operator assignment
quickfix.replace.assignment.with.operator.assignment.family.name=Replace assignment with operator assignment
quickfix.replace.assignment.with.operator.assignment.name=Replace ''='' with ''{0}=''

#quickfix -> Replace assignment with prefix expression
quickfix.replace.assignment.with.prefix.expression.family.name=Replace assignment with prefix expression
quickfix.replace.assignment.operator.with.prefix.expression.family.name=Replace assignment operator with prefix expression

quickfix.replace.one.operator.with.another=Replace ''{0}'' with ''{1}''

#quickfix -> Convert loop to array_map
quickfix.convert.loop.to.arraymap=Convert loop to an 'array_map()' call

#quickfix -> Convert loop to array_filter
quickfix.convert.loop.to.arrayfilter=Convert loop to an 'array_filter()' call

#quickfix -> Convert loop to array_fill
quickfix.convert.loop.to.arrayfilll=Convert loop to an 'array_fill()' call

#quickfix -> Convert array_map to loop
quickfix.convert.arraymap.to.loop=Convert 'array_map()' call to a loop

#quickfix -> Convert array_filter to loop
quickfix.convert.arrayfilter.to.loop=Convert 'array_filter()' call to a loop

#quickfix -> Convert array_fill to loop
quickfix.convert.arrayfill.to.loop=Convert 'array_fill()' call to a loop

#quickfix -> PHPUnit create missing target class
quickfix.phpunit.create.target.class.error.filename.exists=File {0} exists

#quickfix -> Replace current method with alternative 
quickfix.phpunit.replace.current.method.with.alternative=Replace with ''{0}''

#quickfix -> Drop redundant optional parameters
quickfix.phpunit.drop.redundant.optional.parameters=Drop redundant optional parameters

#quickfix -> Flip misordered assertEquals/assertNotEquals arguments
quickfix.phpunit.assert.equals.flip.compared.arguments=Flip compared arguments

#quickfix -> Unnecessary qualifier
quickfix.remove.unnecessary.qualifier=Remove unnecessary qualifier
quickfix.remove.unnecessary.qualifier.on.class.name=Simplify FQN

#quickfix -> Disable for global namespace
quickfix.disable.inspection.for.global.namespace=Disable inspection for global namespace

#quickfix -> Make method static
quickfix.make.method.static=Make 'static'

#quickfix -> Change field type
quickfix.change.field.type.to.match.super=Change type to match parent
quickfix.change.field.type.to.match.super.0=Change type to ''{0}'' to match parent
quickfix.change.field.type.to.match.super.remove=Remove type declaration to match parent
quickfix.change.field.type.add.inferred.type.family.name=Add inferred type as the property's type
quickfix.change.field.type.add.inferred.type.name=Add ''{0}'' as the property''s type
quickfix.change.field.type.add.inferred.type.error.read.only=Cannot modify a read-only file ''{0}''
quickfix.change.field.type.add.inferred.type.error.non.project=Cannot modify a non-project file ''{0}''

#quickfix -> Remove redundant PHPDoc
quickfix.remove.phpdoc=Remove redundant PHPDoc comment

quickfix.remove.phpdoc.signature.tags=Remove unnecessary @param and @return tags
quickfix.remove.phpdoc.param.tag=Remove @param tag
quickfix.remove.phpdoc.return.tag=Remove @return tag

quickfix.phpdoc.update.type=Update PHPDoc type
quickfix.phpdoc.update.field.type=Change {0, choice, 0#property|1#class constant} type to ''{1}'' to match PHPDoc comment

quickfix.replace.nested.ternary.expression=Replace the ternary expression with the {0}-associative version

quickfix.set.inheritance.between.classes=Make {0} {1} {2}

quickfix.navigate.to.duplicate.array.key=Navigate to duplicate key
quickfix.navigate.to.duplicate.condition=Navigate to duplicate condition
quickfix.navigate.to.duplicate.case.value=Navigate to duplicate case value

#quickfix -> Delete return argument
quickfix.delete.return.argument=Delete return argument

quickfix.remove.default.arm=Remove duplicate 'default' match arm

#quickfix -> Access static via class reference
quickfix.access.static.via.class.reference=Replace with ''{0}''
quickfix.can.not.find.class.reference.name=Can't find class by name

quickfix.remove.condition.from.default.arm=Remove non-'default' condition from 'default' arm

#quickfix -> Remove #[Override] attribute
quickfix.remove.override.attribute=Remove '#[Override]'

#quickfix -> Convert json_decode() and json_last_error() to json_validate()
quickfix.convert.to.json.validate=Convert to 'json_validate()'

#intentions

#intentions Replace ?: expression with If
intention.replace.ternary.expression.with.if=Replace '?:' with if

#intentions Replace If with ?: expression
intention.replace.if.with.ternaryExpression=Simplify 'if'

#intentions -> Convert To Short Syntax
intention.convert.to.short.syntax=Convert array to short syntax
intention.convert.to.traditional.syntax=Convert array to traditional syntax

#intentions -> Convert To Short Syntax (list)
intention.convert.to.short.syntax.list=Convert list to short syntax
intention.convert.to.traditional.syntax.list=Convert list to traditional syntax

#intentions -> Declare Field
intention.declare.missing.field=Declare property

#intentions -> Declare Property
intention.declare.missing.property=Add @property

#intentions -> Flip Binary Expression
intention.flip.binary.expression.family.name=Flip binary expression
intention.flip.binary.expression.text1=Flip ''{0}''
intention.flip.binary.expression.text2=Flip ''{0}'' (may change semantics)
intention.flip.binary.expression.text3=Flip ''{0}'' (change semantics)

#intentions -> Namespace Bracing
intention.namespace.bracing=Convert namespace to braced

#intentions -> Smart Line Split
intention.line.split=Split string in two strings and concatenation

#intentions -> Split comma-separated values
intention.split.comma.separated.values=Split comma-separated values into multiple lines
intention.join.comma.separated.values=Join comma-separated values into a single line

#intentions -> Swap Call Arguments
intention.swap.call.arguments.family.name=Swap call arguments
intention.swap.call.arguments.text1=Swap ''{0}'' and ''{1}''

#intention -> Add variable PHPDoc comment
intention.variable.add.phpdoc.comment.family.name=Add PHPDoc comment

#intention -> Inline method
intention.inline.method.family.name=Inline method

#intention -> Import class
intention.import.class=Import Class as Alias
intention.import.class.alias.name=Alias name:
intention.import.class.alias.already.exists=Class with the same alias name is already imported

#intention -> Simplify FQN
#intention -> Generate PHPDoc
intention.generate.phpdoc=Generate PHPDoc

#intention -> Surround With Call
intention.can.not.find.statement.to.surround=Cannot find target statement to surround.
intention.statement.to.surround.failed.message=Failed to surround statement with ''{0}''.

#intention -> Replace quotes
intention.replace.quotes=Unable to replace quotes - invalid escape symbols and \\r are not supported

#intention -> Replace with alias
intention.replace.class.with.alias=Replace with alias

#intention -> Inline alias
intention.inline.alias=Inline alias

#intention -> Add constructor parameters
intention.add.constructor.parameters=Add constructor parameters
intention.add.constructor.parameters.fields.chooser.dialog.title=Choose Properties To Initialize In Constructor

#intention -> Implement the interface
intention.implement.interface=Implement interface

intention.merge.condition.with.outer=Merge with outer condition

#navigation -> Goto Super Method
navigation.goto.super.method.is.not.available=Navigation is not available here during index update

#run and debug
#dbgp debugging protocol
dbgp.invalid.packet=Invalid packet

#annotator
annotator.duplicate.use.statement=Cannot use ''{0}'' because the name is already in use
annotator.duplicate.default.match.condition=Match expressions may only contain one 'default' arm
annotator.only.default.condition.allowed=Only single 'default' condition allowed in 'default' arm 
annotator.unhandled.match.argument=Unhandled 'match' argument
annotator.reserved.class.name=Cannot use ''{0}'' as class name as it is reserved
annotator.invalid.class.name=''{0}'' is an invalid class name
annotator.special.class.name=Cannot use {0} as {1} because ''{1}'' is a special class name
annotator.cannot.break.continue=Cannot break/continue {0} level(s)
annotator.jump.out.of.finally=Jump out of a finally block is disallowed
php.annotator.expecting.interface=Interface reference expected
php.annotator.expecting.class=Class reference expected
php.annotator.exchange.extends.implements.keyword=Change ''{0} {2}'' to ''{1} {2}''
php.annotator.strict.types.first.statement='strict_types' declaration must be the very first statement in the script
php.annotator.strict.types.block.mode='strict_types' declaration must not use block mode
php.annotator.heredoc.indent.validation.mixed.space.and.tab.characters=Mixed space and tab characters in closing identifier indent
php.annotator.heredoc.indent.validation.wrong.content.indent=Wrong indent: should be the same as closing tag indent
php.annotator.typed.property.illegal.value={0, choice, 0#Property|1#Class constant} of type ''{1}'' may not have default value
php.annotator.typed.property.type.mismatch=Default value can only be of type ''{0}''
php.annotator.typed.property.type.mismatch.fix.nullable=Make {0, choice, 0#property|1#class constant} type nullable
php.annotator.typed.parameter.type.mismatch.fix.nullable=Make parameter type nullable
php.annotator.typed.property.type.mismatch.fix.change=Change {0, choice, 0#property|1#class constant} type to ''{1}''
php.annotator.typed.parameter.type.mismatch.fix.change=Change parameter type to ''{0}''
php.annotator.typed.property.type.mismatch.fix.family=Change {0, choice, 0#property|1#class constant} type to match the type of default value
php.annotator.typed.parameter.type.mismatch.fix.family=Change parameter type to match the type of default value
php.annotator.typed.property.callable.is.illegal={0, choice, 0#Property|1#Class constant} cannot have type ''callable''
php.annotator.return.type.non.nullable.null.returned=Cannot return 'null': return type is non-nullable
php.annotator.return.type.make.nullable.fix=Make return type nullable
php.annotator.void.function.must.not.return.value=A void function must not return a value
php.surround.with.if=if

#quality tool
quality.tool.configuration.tool.path.is.empty={0} path is empty for selected configuration
quality.tool.configuration.can.not.find.configuration.by.id=Cannot find {0} configuration by id: ''{1}''
quality.tool.configuration.default.interpreter.is.not.found={0} configuration by default interpreter is selected, but no interpreter is specified
quality.tool.configuration.for.interpreter.is.not.found=Cannot find {0} configuration for interpreter: ''{1}''
quality.tool.configuration.interpreter.is.undefined=Interpreter for {0} configuration is not specified or invalid
quality.tool.phpcs.custom.rules.warning=Select 'Custom' coding standard type to choose custom ruleset.
quality.tool.phpcs.custom.rules.validation.not.xml=Selected ruleset is not an xml
guality.tool.configuration.show.ignored.files=Show ignored files
quality.tool.phpcs.installed.paths=Installed Standard Paths
quality.tool.empty.path.phpcs=Empty path to {0}
quality.tool.phpcbf.location=PHPCBF Location
quality.tool.phpcbf.location.descr=Choose a valid phpcbf launcher
quality.tool.phpcbf.settings=PHP Code Beautifier and Fixer Settings
quality.tool.phpcbf.path=Path to phpcbf:
quality.tool.phpcbf.reformat.action=PHP Code Beautifier and Fixer: fix the whole file
quality.tool.phpcbf.name=PHP Code Beautifier and Fixer
quality.tool.selected.file.is.not.phpcbf=Selected file is not phpcbf executable
quality.tool.cs.fixer.custom.rules.warning=Select 'Custom' type to choose your config.
quality.tool.php_cs.custom.rules.validation.not.php_cs=The selected ruleset is not supported by PHP CS Fixer
quality.tool.php_cs.dir.does.not.contain.custom=The directory does not contain any of the supported files: {0}
quality.tool.php.dir.does.not.contain=The directory doesn''t contain {0}
quality.tool.can.not.determine.version=Cannot determine tool version, got \u2018{0}\u2019
quality.tool.file.not.found=File not found.
quality.tool.path.must.not.be.empty=The path cannot be empty.
quality.tool.can.not.retrieve.standards=Cannot retrieve available rulesets, check the PHP CS Fixer tool configuration.
quality.tool.phpcs.can.not.retrieve.standards=Cannot retrieve available standards, check PHP_CodeSniffer tool configuration.
quality.tool.stardards.has.been.updated=The list of installed rulesets has been updated.
quality.tool.coding.stardards.has.been.updated=The list of installed coding standards has been updated.
quality.tool.cs.fixer.allow.risky.rules=Allow risky rules for built-in rulesets
quality.tool.cs.fixer.reformat.action=PHP CS Fixer: fix the whole file
quality.tool.cs.fixer.ruleset=Ruleset:

quality.tool.phpcs.required.phpcs.version=Required PHP_CodeSniffer version is 1.5.0 or later, found {0}
quality.tool.php.cs.fixer.required.phpcs.version=Supported PHP CS Fixer version is 2.8.0 or later, found {0}

quality.tool.label.check.files.with.extensions=Check files with extensions:
quality.tool.label.coding.standard=Coding standard:
quality.tool.checkbox.installed.standard.paths=Installed standards path:
quality.tool.checkbox.show.sniff.name=Show sniff name
quality.tool.checkbox.show.warning.as=Show warning as:
quality.tool.label.tool.path=Tool path:
quality.tool.label.tool.process.timeout=Tool process timeout, sec [1...60]:
quality.tool.button.validate=Validate
quality.tool.label.validation.label=Validation label
quality.tool.label.custom.rulesets=Custom rulesets:
quality.tool.phpcs.label.path.to.ruleset=Path to ruleset:
quality.tool.label.label=Label
quality.tool.label.configuration=Configuration:

#LaravelPint
quality.tool.laravel.pint=Laravel Pint
quality.tool.laravel.pint.reformat.only.uncommitted.files=Reformat only uncommitted files
quality.tool.laravel.pint.json.path=Path to pint.json:
quality.tool.laravel.pint.should.be.json.file=Select .json file
quality.tool.laravel.pint.quick.fix.text=Laravel Pint: fix the whole file
quality.tool.laravel.pint.ruleset=Ruleset:

#phpunit messages
php.unit.local.run.display.name=PHPUnit
php.unit.local.run.description=PHPUnit
php.not.test.method=Method ''{0}'' in class ''{1}'' is not a test method
php.method.not.found=Method ''{0}'' is not found in class ''{1}''
php.method.name.empty=Test method is not specified
php.unit.radio.button.composite=Composite
php.unit.test.runner.options=Test Runner Options
php.unit.checkbox.use.alternative.patterns.base.path=Use alternative patterns base path:
php.unit.optional=optional
php.unit.label.test.file.template=&Test file template:

choose.php.home=Choose PHP Executable
cleaning.up=Cleaning up\u2026
this.reassignment.is.not.allowed=Cannot reassign $this
cant.use.temporary.expression.in.write.context=Can't use temporary expression in write context
parsing.error.statement.expected=Expecting statement
smarty.configurable.title=Smarty
analyzing.php.sdk=Checking PHP Installation\u2026
include.path.column.info=Path
working.directory.invalid=Working folder ''{0}'' not found
#control flow
#validation common
validation.file.already.exists.in.dir=File with name "{0}" already exists in "{1}"
validation.file.already.exists=File "{0}" already exists
validation.file.not.valid.name="{0}" is not valid file name
validation.class.not.valid.name="{0}" is not valid class name
validation.namespace.not.valid.name="{0}" is not valid namespace name
validation.invalid.identifier="{0}" is not a valid identifier
validation.invalid.identifier.with.no.identifier=Inserted identifier is not valid
validation.invalid.alias="{0}" is not a valid alias name
validation.value.is.not.specified.or.invalid={0} is not specified or invalid.
validation.value.path.to.value.should.be.specified=Path to {0} should be specified in {1}
validation.value.path.to.value.is.invalid=Cannot find {0} by path provided in {1}
validation.value.path.to.value.is.invalid.press.fix.project.configuration=Cannot find {0} by path provided in {1}. Press ''Fix'' to edit {2} configuration.
validation.value.is.not.specified.or.invalid.press.fix.project.configuration={0} is not specified or invalid. Press ''Fix'' to edit your project configuration.
validation.value.is.not.specified.press.fix.project.configuration={0} is not specified in {1} configuration. Press ''Fix'' to edit {1} configuration.
validation.press.fix.to.edit.project.configuration=Press ''Fix'' to edit your project configuration.
validation.value.is.invalid={0} is invalid
validation.0.not.found.at.1=''{0}'' not found at ''{1}''
validation.0.is.not.a.directory=''{0}'' is not a directory
validation.0.extension.is.not.installed=''{0}'' extension is not installed
validation.debug.extension.is.updated=Debug extension settings were updated. Please re-run current configuration to use new values.
validation.0.extension.is.installed.check.configuration.options=''{0}'' extension is installed. Check configuration options.
validation.no.debug.extension.is.installed=No debug extension is installed.
validation.cannot.parse.value.of.0=Cannot parse the value of ''{0}''
validation.connection.was.not.established=Connection was not established.
validation.connection.was.not.established.0=Cannot start debugger session with ''{0}''
validation.connection.was.not.established.no.debug=Debug extension is not installed
validation.connection.was.not.established.update.info=Update interpreter info
validation.connection.was.not.established.validate.installation=Validate installation
validation.function.already.exists = Function with the same name already defined in current namespace
validation.namespace.already.exists = Namespace with the name ''{0}'' already defined in {1}
validation.class.already.exists = Class with the same name already exists in {0}
validation.class.cannot.be.overridden = Class "{0}" cannot be overridden
validation.interface.cannot.be.overridden = Interface "{0}" cannot be implemented
validation.test.no.test.patterns = No patterns were added

validation.ssh.remote.debug.support=Remote debugging via ssh is not supported by ''{0}'' extension.
validation.ssh.remote.code.coverage.support=Code coverage via ssh is not supported for {0} extension
remote.interpreter.path.mappings.validation.title=Path mappings are not configured for selected interpreter.
remote.interpreter.path.mappings.validation.message=Please check that mappings are properly configured at {0}.
remote.interpreter.path.mappings.validation.php.section=<b><i><a href=\"php_mappings\">Settings|PHP</a></i></b>
docker.compose.coverage.file.is.not.found=Coverage file is not found
docker.compose.coverage.file.failed.to.copy=Failed to copy coverage results from docker container
docker.compose.coverage.file.failed.to.extract=Failed to extract coverage results
docker.compose.radio.button.always.start.a.new.container.docker.compose.run=Always start a new container ('docker-compose run')
docker.compose.radio.button.connect.to.existing.container.docker.compose.exec=Connect to existing container ('docker-compose exec')
docker.compose.failed.to.start.container=Failed to start docker-compose service, start it in a command line and retry

#errors common
error.template.unable.parse.internal.template=Unable to parse internal template {0}
error.template.unable.create.from.internal.template=Unable to create file from internal template {0}
error.file.unable.create.selected.directory=Unable to create file {0} in selected directory
error.cannot.connect.to.0.1=Cannot connect to ''{0}'' : {1}
error.cannot.connect.to.0=Cannot connect to ''{0}''

#messages common
0.completion.shortcut=Use {1} for {0} completion

#completion
completion.press.again.to.see.more.variants=Press {0} again to see more variants
completion.press.again.to.see.global.variants=Press {0} again to see global variants
completion.press.again.to.see.all.classes=Press {0} again to see all classes

#unwrap
unwrap.if=Unwrap if\u2026
unwrap.while=Unwrap while\u2026
unwrap.for=Unwrap for\u2026
unwrap.try=Unwrap try\u2026
unwrap.switch=Unwrap switch\u2026
unwrap.else=Unwrap else\u2026
unwrap.elseif=Unwrap elseif\u2026
unwrap.dowhile=Unwrap do-while\u2026
unwrap.foreach=Unwrap foreach\u2026
unwrap.method=Unwrap ''{0}''
remove.else=Remove else\u2026


#refactoring
refactoring.common.not.supported.expression.in.scope={0} for such expression is not supported in the current scope
refactoring.common.not.supported.context={0} is not supported in the current context
refactoring.common.not.extractable.expression=Such expression is not supported
refactoring.common.fail.to.extract.expression=Fail to extract expression from the selected code fragment

refactoring.common.ui.target.namespace.label=&Namespace:
refactoring.common.ui.target.directory.label=Target &destination directory:
refactoring.common.ui.target.directory.edit = Press F2 to edit target directory

refactoring.common.validation.namespace.name="{0}" is not valid namespace name
refactoring.common.validation.class.psi=Cannot perform refactoring: target class "{0}" is invalid
refactoring.common.validation.target.directory.is.not.valid=Path to the directory "{0}" is not valid
refactoring.common.validation.target.directory.not.inside.project=Directory "{0}" is not located inside the project

refactoring.parameter.reserved.name = Parameter name "{0}" is reserved
refactoring.parameter.validation = Parameter {0} is not valid
refactoring.parameter.validation.duplicate.parameter=Duplicate parameter name: {0}
refactoring.parameter.validation.initializer.last=Required parameters are not permitted after optional parameters
refactoring.parameter.validation.variadic.last=Only the last parameter can be variadic
refactoring.parameter.validation.variadic.can.have.default.value=Variadic parameter cannot have a default value
refactoring.parameter.validation.initializer.type=Default value for parameters with a class type hint can only be NULL
refactoring.parameter.validation.pass.by.reference=Only variable can be pass by reference
refactoring.parameter.validation.type=Parameter type ''{0}'' is invalid
refactoring.parameter.validation.default.value=Default value expression ''{0}'' is invalid
refactoring.parameter.validation.initializer=Initializer ''{0}'' is invalid
refactoring.parameter.validation.no.default.value=Initializer or default value should be provided for parameter ''{0}''
refactoring.parameter.validation.name.collision.with.use.list=Parameter name ''{0}'' is not valid. ''{0}'' is already imported in the use list
refactoring.returnType.validation.type=Return type ''{0}'' is invalid

#refactoring - > extract base
refactoring.extract.base.validator.not.valid.identifier="{0}" is not valid PHP identifier.
refactoring.extract.base.validator.reserved.keyword="{0}" is reserved PHP keyword.
refactoring.extract.base.handler.no.expression.selected=Selection does not form a correct expression
refactoring.extract.base.handler.not.supported.expression={0} is not supported for such expression
refactoring.extract.base.handler.not.supported.scope={0} is not supported in the current scope
refactoring.extract.base.dialog.replace.all.occurrences=Replace &all occurrences ({0} occurrences found)
#refactoring -> extract class
refactoring.extract.class.extract.to.class=Extract To Class
refactoring.extract.class.extracting.from.file=Extracting from file:
refactoring.extract.class.extracting.from.class=Extracting from class:
refactoring.extract.class.dialog.class=Class name:
refactoring.extract.class.dialog.generate.accessors=&Generate accessors
refactoring.extract.class.dialog.members.to.be.extracted=Members To Extract
refactoring.extract.class.error.failed.to.create.file=Failed to create file
refactoring.extract.class.conflicts.extract.class.refactoring.is.not.supported.for.dynamically.declared.properties.usages=Extract Class refactoring is not supported for dynamically declared properties usages
refactoring.extract.class.conflicts.method.0.depends.on.property.1.which.needs.getters.in.2=Method \"{0}\" depends on property \"${1}\", which needs getters in \"{2}\"
refactoring.extract.class.conflicts.method.0.depends.on.property.1.which.needs.setters.in.2=Method \"{0}\" depends on property \"${1}\", which needs setters in \"{2}\"
refactoring.extract.class.conflicts.method.0.depends.on.1.method.2=Method "{0}" depends on {1} method "{2}"
refactoring.extract.class.conflicts.method.0.depends.on.1.constant.2=Method "{0}" depends on {1} constant "{2}"
refactoring.extract.class.conflicts.unable.to.add.delegate.property.initialization.to.constructor=Cannot add delegated property initialization to class constructor
refactoring.extract.class.conflicts.unable.to.add.delegate.property.initialization.to.constructor.trait.constructor.will.be.overridden=Cannot add delegated property initialization to class constructor: trait constructor will be overridden
refactoring.extract.class.conflicts.using.write.access.for.non.public.properties.in.array.destructuring.expressions.is.not.supported.in.extract.class.refactoring=Using write access for non-public properties in array destructuring expressions is not supported in Extract Class refactoring
refactoring.extract.class.conflicts.using.write.access.for.non.public.properties.in.multiple.assignment.expressions.in.extract.class.refactoring=Using write access for non-public properties in multiple assignment expressions is not supported in Extract Class refactoring
refactoring.extract.class.error.the.selected.function.should.belong.to.project.sources=Selected function must belong to project sources
refactoring.extract.class.error.extract.class.refactoring.is.not.supported.for.anonymous.functions=Extract Class refactoring is not supported for anonymous functions
refactoring.extract.class.error.extract.class.refactoring.is.not.supported.for.anonymous.classes=Extract Class refactoring is not supported for anonymous classes
refactoring.extract.class.error.extract.class.refactoring.is.not.supported.for.abstract.methods=Extract Class refactoring is not supported for abstract methods
refactoring.extract.class.error.extract.class.refactoring.is.not.supported.for.doc.methods=Extract Class refactoring is not supported for magic methods defined via PHPDoc
refactoring.extract.class.error.extract.class.refactoring.is.not.supported.for.doc.properties=Extract Class refactoring is not supported for magic properties defined via PHPDoc
refactoring.validation.class.error.property.with.name.0.is.already.exists=Property with name \"{0}\" is already exists

#refactoring -> extract variable
refactoring.extract.variable.name=Extract Variable
refactoring.extract.variable.conflict.already.exists=Variable with name \"{0}\" already exists in the scope.
#refactoring -> extract constant
refactoring.extract.constant.name=Extract Constant
refactoring.extract.constant.conflict.already.exists=Constant with name "{0}" already exists in the scope.
refactoring.extract.constant.conflict.exists.in.subclass.with.weaker.access=Access level to "{0}" must be "{1}" (as in class "{2}") or weaker
refactoring.extract.constant.conflict.exists.in.subclass="{0}::{1}" will be overridden by this constant
refactoring.extract.constant.conflict.cannot.override.interface.constant=Cannot override constant "{0}" of interface "{1}"
refactoring.extract.constant.unable.to.add.constant.declaration="Unable to add constant declaration"

#refactoring -> extract field
refactoring.extract.field.name=Extract Property
refactoring.extract.field.validator.reserved.field.name="{0}" is reserved property name
refactoring.extract.field.conflict.already.exists=Property with name \"{0}\" already exists in the class.
refactoring.extract.field.visibility=Visibility
refactoring.extract.field.visibility.public=p&ublic
refactoring.extract.field.visibility.protected=pr&otected
refactoring.extract.field.visibility.private=pr&ivate

#refactoring -> extract parameter
refactoring.extract.parameter.name=Extract Parameter

#refactoring -> rename - > element processor
conflict.method.with.same.name.already.exists=Method with same name is already defined in this class
conflict.field.with.same.name.already.exists=Property with same name is already defined in this class
conflict.class.constant.with.same.name.already.exists=Constant with same name is already defined in this class
conflict.variable.with.same.name.already.exists=Variable with same name is already defined
conflict.parameter.with.same.name.already.exists=Parameter with same name is already defined
conflict.tag.name.contains.close.tag=Text contains "{0}"
conflict.use.with.same.name.already.exists='Use' statement with same name is already defined
conflict.class.with.same.name.already.exists=Class with same name is already defined
conflict.function.with.same.name.already.exists=Function with same name is already defined
conflict.constant.with.same.name.already.exists=Constant with same name is already defined
refactoring.rename.search.in.global.scope=Search in global scope
conflict.template.parameter.with.same.name.already.exists=Template parameter with the same name already exists

#refactoring -> rename - > automatic renamers
refactoring.rename.automatic.renamer.accessors.name=Rename a&ccessors
refactoring.rename.automatic.renamer.field.accessors.dialog.title=Rename Accessors
refactoring.rename.automatic.renamer.field.accessors.dialog.description=Rename property accessors with the following names to:
refactoring.rename.automatic.renamer.field.accessors.entity.name=Accessor


refactoring.rename.automatic.renamer.class.name=Rename &class
refactoring.rename.automatic.renamer.class.dialog.title=Rename Class
refactoring.rename.automatic.renamer.class.dialog.description=Rename Class with the following name to:
refactoring.rename.automatic.renamer.class.entity.name=Class

refactoring.rename.entity.name.inheritor=Inheritor/File
refactoring.rename.inheritors.and.related.files.with.the.following.names.to=Rename inheritors and related files with the following names to:


#refactoring->inline variable
refactoring.inline.variable.cannot.extract.value=Cannot extract value of variable ''${0}''
refactoring.inline.cannot.find.variable.to.inline=Cannot find variable to inline
refactoring.inline.variable.no.occurrences=No occurrences can be safely inlined
refactoring.inline.variable.unary.operation=Cannot inline to decrementing or incrementing operation

#refactoring->inline function
refactoring.inline.function.title=Inline {0} Refactoring
refactoring.inline.function.all.invocations.and.remove.the.method=Inline &all and remove the {0}
refactoring.inline.function.all.invocations.keep.the.method=Inline all and k&eep the {0}
refactoring.inline.function.this.invocation.only.and.keep.the.method=Inline this only and &keep the {0}
refactoring.inline.function.command=Inlining {0}
refactoring.inline.function.cannot.inline.function.with.global.usage=Cannot inline {0} with <code>global</code> usage
refactoring.inline.function.not.accessible.from.caller.site=Member reference <code>{0}</code> is not accessible from caller site
refactoring.inline.function.cannot.parse.function.body=Cannot parse function body
refactoring.inline.function.cannot.inline.library.function=Cannot inline library function
refactoring.inline.function.cannot.inline.magic.method=Cannot inline magic method
refactoring.inline.function.cannot.inline.constructor=Cannot inline constructor
refactoring.inline.function.cannot.inline.overridden.method=Cannot inline overridden method
refactoring.inline.function.cannot.inline.first.class.callable.declaration=Cannot inline first-class callable declaration
refactoring.inline.function.cannot.find.function.declaration=Cannot find function declaration
refactoring.inline.function.only.static.method.is.supported=Only static method is supported
refactoring.inline.function.reference.is.recursive=Recursive call are not supported
refactoring.inline.function.inline.function.refactoring.is.not.supported.when.return.statement.interrupts.the.execution.flow=Inline function refactoring is not supported when return statement interrupts the execution flow
refactoring.inline.function.parent.reference.unresolved=<code>parent</code> class reference is unresolved in {0}
refactoring.inline.function.yield.found.in.function.body=<code>yield</code> usage in function body

#refactoring->inline constant
refactoring.inline.constant.name=Inline Constant
refactoring.inline.constant.command=Inlining constant
refactoring.inline.constant.this.reference.only=Inline this reference only and keep the constant
refactoring.inline.constant.all.references.and.remove=Inline all and remove the constant
refactoring.inline.constant.all.references.and.keep=Inline all and keep the constant
refactoring.inline.constant.cannot.extract.value=Cannot extract value of constant
refactoring.inline.constant.is.never.used=Constant {0} is never used
refactoring.inline.constant.multiple.declarations=There are other constant declarations with the same name.

#refactoring -> extact method/function
refactoring.extract.method.name=Extract Function/Method
refactoring.inplace.extract.method.name=Inplace Extract Function/Method
refactoring.extract.method.error.selected.block.should.represent.a.set.of.statement.or.an.expression=Selected block should represent a set of statements or an expression.
refactoring.extract.method.error.a.set.of.statements.should.be.from.the.same.code.block=A set of statements should be from the same code block.
refactoring.extract.method.error.there.are.break.continue.operators.which.can.interrupt.execution=There are break/continue operators which interrupts execution.
refactoring.extract.method.error.inconsistent.return.points.in.selected.code.fragment=Inconsistent return points in the selected code fragment.
refactoring.extract.method.tooltip=Type $name = 'init'
PhpExtractMethodDialog.extract.method=Extract Method
PhpExtractMethodDialog.extract.function=Extract Function
PhpExtractMethodDialog.visibility=Visibility:
PhpExtractMethodDialog.public=Pu&blic
PhpExtractMethodDialog.protected=Pro&tected
PhpExtractMethodDialog.private=Pri&vate
PhpExtractMethodDialog.method=Method:
PhpExtractMethodDialog.function=Function:
PhpExtractMethodDialog.name=N&ame:
PhpExtractMethodDialog.declare.static=Declare &static
PhpExtractMethodDialog.generate.php.doc=&Generate PhpDoc
PhpExtractMethodDialog.generate.php.doc.inplace=Generate PHPDoc
PhpExtractMethodDialog.parameters=Parameters
PhpExtractMethodDialog.signature.preview=Signature preview
PhpExtractMethodDialog.replace.tail.break.continue.with.return=Replace &tail "break/continue" statements with "return" statement
PhpExtractMethodDialog.return.output.through=Return output variable(s) through:
PhpExtractMethodDialog.return.output.through.return=R&eturn statement
PhpExtractMethodDialog.return.output.through.ref.parameters=&Parameter(s) passed by reference
PhpExtractMethodDialog.transformation.options=Transformation options
PhpExtractMethodDialog.output.variables=Output variable(s)
PhpExtractMethodDialog.duplicates.count=Review and replace duplicates ({0} found)
PhpExtractMethodDialog.duplicates.pending=Searching for Duplicates\u2026
refactoring.extract.method.from.duplicate.code=Extract method from duplicated code

#find usages
find.options.include.child.methods.checkbox=Include o&verriding/implementing methods
find.field.accessors.title=Search Accessors
find.field.accessors.text=Do You Want to Search for Accessors of ''{0}''?
usages.show.this.self.references=Show $this/self references

#refactoring -> change signature
change.signature.find.usages.of.base.interface=Method {0} of class {1}\nimplements method of interface {2}.\nDo you want {3} the base method?
change.signature.find.usages.of.base.class=Method {0} of class {1}\noverrides method of class {2}.\nDo you want {3} the base method?
change.signature.tooltip.parameter=$name = 'init' or &...$array = 'init'
change.signature.tooltip.default.value=Value to be used in all existing calls of this method
change.signature.error.wrong.caret.position=The caret should be positioned at the name of the function to be refactored.
change.signature.usage.view.declarations.header=Functions to be refactored
change.signature.column.name.parameter=Parameter:
change.signature.column.type.parameter=Type:
change.signature.initialize.new.parameters=Create and &initialize class properties
change.signature.parameter.may.have.side.effect=Expression "{0}" which is used as parameter "{1}" may have side effects
change.signature.arg.type.miss.argument=Expected parameter of type ''{0}''
change.signature.arg.type.incompatible=Expected parameter of type ''{0}'', ''{1}'' provided
change.signature.visibility.not.accessible={0} with {1} visibility won''t be accessible in {2}

#refactoring -> pull up/push down
refactoring.pull.up.class.does.not.have.base.classes.interfaces.in.project.files={0} does not have base classes/interfaces in project files
refactoring.pull.up.implement.method = Create methods &stubs in classes that implement interface
refactoring.pull.up.validation.field.into.interface = Cannot pull up properties into interface
refactoring.pull.up.validation.static.method.into.interface = {0} is static and cannot be abstract.
refactoring.pull.up.private.access = {0} access will be changed to {1}
refactoring.pull.up.abstract.method = Class {0} will be marked as abstract
refactoring.pull.up.conflict.duplicate.constant = {0} will conflict with constant from {1}.
refactoring.pull.up.will.not.be.accessible.in.the.target.class={0} will not be accessible in the target class.
refactoring.pull.up.static.reference.is.not.accessible.in.the.target.class=Non-static method {0} should not be called statically in outer class
refactoring.pull.up.may.not.be.accessible.in.the.target.class={0} may not be accessible in the target class.
refactoring.pull.up.is.1.and.will.not.be.accessible.in.the.target.class={0} is private and will not be accessible in the target class.
refactoring.push.down.method.implemented.in.interface={0} must be declared abstract or implement {1}
refactoring.push.down.validation.magic.method=Moving magic method can have side effect

#refactoring -> move class
refactoring.move.class.name = Move Class
refactoring.move.class.action.name = Move Class\u2026
refactoring.move.class.title = Move &Class {0} to namespace:
refactoring.move.class.new.file = &Extract class into a separate file
refactoring.move.class.in.non.code.message=Class references in comments and strings
refactoring.move.class.cannot.move.anonymous.class=Cannot move anonymous class

refactoring.move.classes.dnd.name=Move Classes
refactoring.move.classes.dnd.title=Move selected {0,choice,0#classes|1#namespaces|2#classes and namespaces} to namespace:
refactoring.move.classes.dnd.files.with.the.same.name.error=Multiple files with the same name are not allowed in a single destination.

#refactoring -> move namespace
refactoring.move.namespace.name=Move Namespace
refactoring.move.namespace.action.name=Move Namespace\u2026
refactoring.move.namespace.title=Move Namespace {0}
refactoring.move.namespace.new.namespace=New &Namespace name:
refactoring.move.related.namespace.description=Move files with related namespaces to new directories:
refactoring.move.related.namespace.title=Move Files With Related Namespaces
refactoring.move.related.namespace.name.column=New Namespace name
refactoring.move.related.namespace.directory.column=New Directory
refactoring.move.related.namespace.collect.title=Collecting Child Namespaces
refactoring.move.namespace.header.message=Move namespace
refactoring.move.namespace.message=Namespaces to be moved
refactoring.move.namespace.in.non.code.message=Namespace references in comments and strings

#refactoring -> move member
refactoring.move.method.label.text.field=Move Member To &Class
refactoring.move.member.method.is.overridden.in.a.sublclass={0} is overridden in a subclass {1}
refactoring.move.members.there.are.several.classes.with.specified.name=There are several classes with specified name {0}
refactoring.move.members.is.not.a.valid.class.name="{0}" is not a valid class name
refactoring.move.member.title=Move Static Member
refactoring.move.member.action.name=Move Members\u2026
refactoring.move.members.to.be.moved=Mem&bers to be moved to another class
refactoring.move.members.preview.header=Members to be moved to another class
refactoring.move.members.unable.to.resolve.usage.callback.found=Unable to resolve usage: callback found {0}
refactoring.move.members.unable.to.resolve.usage.late.static.binding.detected=Unable to resolve usage: late static binding detected {0}
refactoring.move.members.late.static.binding.detected=Late static binding detected: {0}
refactoring.move.members.self.from.anonymous.class=self reference to anonymous class cannot be processed
refactoring.move.members.late.static.binding.detected.in.doc=Late static binding detected in doc
refactoring.move.members.is.not.accessible={0} is not accessible in {1}
refactoring.move.members.cannot.find.target.class=Cannot find class {0}
refactoring.move.members.member.will.change.visibility.to.public=Member {0} will change visibility to public
refactoring.move.members.method.implements.abstract.method={0} implements abstract method in {1}
refactoring.move.members.method.implements.method.in={0} implements method in {1}
refactoring.move.members.0.will.be.hidden.in.1=Member {0} will be hidden in {1}
refactoring.move.members.only.constants.can.be.moved.to.interface = Only constants can be moved to interface
refactoring.move.members.move.as.enum.cases=Move as enum cases
refactoring.move.members.enum.0.already.contains.case.with.name.0=Enum {0} already contains case with name ''{1}''
refactoring.move.members.enum.0.already.contains.case.with.value.1=Enum {0} already contains case with value ''{1}''
refactoring.move.members.class.0.does.not.exist=Class {0} does not exist.\nDo you want to create it?
refactoring.move.members.properties.can.not.be.moved.to.enum=Properties can't be moved to enum
refactoring.php.extract.enum=Extract Enum
refactoring.php.create.class=Create New Class
refactoring.php.cannot.create.class=Cannot create new class in the preview
refactoring.move.members.no.members.are.selected=No members are selected

#refactoring -> move file constant
refactoring.move.constant.title=Move Constant
refactoring.move.constant.action.name=Move Constant\u2026
refactoring.move.constant.label.text.field=Move Constant {0} To &Class
refactoring.move.multiple.constant.label.text.field=Move {0} Constants To &Class
refactoring.move.constant.unable.to.resolve=Unable to resolve {0}
refactoring.move.constant.class.already.contains.constant=Class {0} already contains constant {1}

#refactoring -> move function
refactoring.move.function.title=Move Function
refactoring.move.function.action.name=Move Function\u2026
refactoring.move.function.label.text.field=Move Function {0} To &Class
refactoring.move.multiple.functions.label.text.field=Move {0} Functions To &Class
refactoring.move.constant.class.already.contains.method=Class {0} already contains method {1}
refactoring.move.function.interface.cant.contain.method=No method with body is allowed in an interface

#refactoring -> move instance
refactoring.move.method.cannot.move.constructor=Cannot move constructor
refactoring.move.method.cannot.move.magic.method=Cannot move magic method
refactoring.move.instance.method=Move Instance Method
refactoring.move.instance.method.action.name=Move Instance Method\u2026
refactoring.move.instance.method.preview.header=Method to be moved to another class
refactoring.move.instance.method.this.parameter.label=Parameter name to replace the $this reference to class {0}
refactoring.move.instance.method.usage.will.not.be.accessible=Usage {0} will not be accessible. Method visibility should be increased

#refactoring -> make static then move method
refactoring.make.static.then.move.method.select=Move method ''{0}'' to class
refactoring.make.static.then.move.method.message=Method ''{0}'' will be made ''public static''

#refactoring -> extract interface
refactoring.extract.interface.name=Extract Interface
refactoring.extract.interface.title=Extract Interface From Class ''{0}''
refactoring.extract.interface.invalid.caret.location=The caret should be positioned at the class name to be refactored.
refactoring.extract.interface.invalide.extract.from.trait=Cannot extract interface from trait.
refactoring.extract.interface.no.methods=No methods to extract into interface.
refactoring.extract.interface.field=&Interface name:
refactoring.extract.replace.class.reference=Replace class re&ferences with interface where possible
refactoring.extract.interface.members.title=Mem&bers to form interface
refactoring.extract.interface.phpdoc.title=PhpDoc
refactoring.extract.interface.phpdoc.do.nothing=&As Is
refactoring.extract.interface.phpdoc.copy=&Copy
refactoring.extract.interface.phpdoc.move=&Move
refactoring.extract.interface.validation.members.modifier=Modifier will be changed to public for each extracted method.
refactoring.extract.interface.fail.to.create.file=Fail to create file ''{0}''.

#refactoring -> make method static
refactoring.make.method.static=Make Method Static
refactoring.make.method.static.method.calls.found.in.static.context=Method calls found in static context
refactoring.make.method.static.method.converts.method.to.static=Converts method to static
refactoring.make.method.static.dynamic.method.call.found=Instance object should be passed as parameter, dynamic method call found {0}
refactoring.make.method.static.this.found=Instance object should be passed as parameter, $this found
refactoring.make.method.static.references.to.be.changed=References to be changed {0}
refactoring.make.method.static.doc.method.is.not.supported=Doc method is not supported
refactoring.make.method.static.method.is.overridden=Method {0} is overridden
refactoring.make.method.static.object.is.needed=Method {0} uses property {1} that is not passed as parameter
refactoring.make.method.static.private.field.is.not.accessible=Private property {0} is not accessible outside the class
refactoring.make.method.static.protected.field.is.not.accessible=Protected property {0} is not accessible outside the class and its inheritors
refactoring.make.method.static.writeAccess={0} write access detected, instance object should be passed as parameter.
refactoring.make.method.static.magic.method=Magic method cannot be made static
refactoring.make.method.static.add.parameters.for.fields=Add parameters for &properties:

#actions
#action -> detect namespace roots
actions.detect.namespace.roots.notification.id=PHP PSR-0 namespace root detection finished
actions.detect.namespace.roots.notification.title=Detect PSR-0 namespace roots
actions.detect.namespace.roots.progress.title=Detecting PSR-0 namespace roots\u2026
actions.detect.namespace.roots.finished=Detection of PSR-0 namespace roots is completed.
actions.detect.namespace.roots.no.new.roots.detected=No new PSR-0 namespace roots were detected.
actions.detect.namespace.roots.view.configuration=View configuration
actions.detect.namespace.roots.manual.configuration=Configure manually
actions.detect.namespace.roots.idea.view.configuration=You can modify setting in 'Project Structure | Modules'.
actions.detect.namespace.roots.from.composer.title=PSR-0/PSR-4 Roots
actions.detect.namespace.roots.from.composer.idea.title=Source roots
background.task.detect.namespace.roots.progress.title=Detecting namespace roots\u2026

#action -> detect language level
actions.detect.language.level.loaded.from.composer.title=PHP Language Level
actions.detect.language.level.loaded.from.composer.idea.title=Language Level

#action --> common settings
actions.detect.common.setting.from.composer.suggest.title=Sync settings with composer?
actions.detect.common.setting.from.composer.enable=Enable sync
actions.detect.common.setting.from.composer.disable=Do not sync
actions.detect.common.settings.updated.from.composer.title={0} settings were updated
actions.detect.common.settings.composer.sync.state.title=Sync with composer.json was {0}
actions.detect.common.setting.from.composer.show.settings=Show settings

action.detect.user.settings.state.overwritten=If synchronization is turned on, IDE settings (PHP Language Level, PSR-0/PSR-4 roots) may be overwritten
action.detect.user.settings.state.supported=Synchronization for PSR-0/PSR-4 roots and PHP Language Level is supported
action.detect.user.settings.state.overwritten.short=Settings may be overwritten: PSR-0/PSR-4 roots and PHP Language Level.
action.detect.settings.sync.turned.on.title=Synchronized with composer.json
action.detect.settings.sync.turned.on=PHP Language Level is synchronized with composer.json
action.detect.composer.json.not.found.title=composer.json is not found
action.detect.composer.json.not.found=composer.json is not found at path {0}
action.detect.composer.json.open=Open In Editor

#action -> mark directory as namespace root
actions.mark.directory.as.psr.0.root.title=Do you want to mark folder as {0} root?
actions.mark.directory.as.psr.0.root=<i>{0}</i>
actions.mark.directory.as.psr.0.root.with.prefix=<i>{0}</i> with prefix "{1}"?
actions.mark.directory.as.psr.0.root.mark.psr=Mark as {0} root

#action - > new php base
actions.new.php.base.dialog.label.file.name=File name:
actions.new.php.base.dialog.label.extension=File extension:
actions.new.php.base.arrows.extension.tooltip=Pressing Up or Down arrows while in editor changes the file extension
actions.new.php.base.arrows.template.tooltip=Pressing Up or Down arrows while in editor changes the template

#action -> new php file
actions.new.php.file.action.name=PHP File
actions.new.php.file.action.description=Creates new PHP File
actions.new.php.file.dialog.title=Create New PHP File

#action -> new php class
actions.new.php.class.action.name=PHP Class
actions.new.php.class.action.description=Creates new PHP class
actions.new.php.class.dialog.title=Create New PHP Class
actions.new.php.class.dialog.label.class.name=Name:
actions.new.php.class.dialog.label.namespace=Namespace:
actions.new.php.class.dialog.label.directory=Directory:
actions.new.php.class.dialog.label.template=Template:
actions.new.php.class.dialog.label.superclasses.container=Parent classes
actions.new.php.class.dialog.label.superclasses.super.fqn=Extends:
actions.new.php.class.dialog.label.superinterfaces.add.interface=Add Interface\u2026
actions.new.php.class.dialog.label.superinterfaces.to.implement=Implements:
actions.new.php.class.dialog.label.superinterfaces.to.implement.empty=Choose interfaces to implement
actions.new.php.class.dialog.label.superinterfaces.to.extend.empty=Choose interfaces to extend
actions.new.php.class.dialog.border.title.class=Class

#action -> new php test
actions.new.test.class.action.name=New PHP Test
actions.new.test.class.action.description=Create new PHP Test
actions.new.test.class.dialog.title=Create New PHP Test
actions.new.test.class.dialog.title.named=Create New PHP Test for {0}
actions.new.test.class.dialog.label.name=Name:
actions.new.test.class.dialog.label.namespace=Namespace:
actions.new.test.class.dialog.label.directory=Directory:
actions.new.test.class.dialog.label.fqn=Fully qualified name:
actions.new.test.class.dialog.border.title.class.to.test=Class To Test (optional)
actions.new.test.class.dialog.border.title.test.class=Test Class
actions.new.test.class.dialog.border.title.target.class.file.path=File path:
actions.new.test.class.dialog.arrows.libraries.hint=Pressing Up or Down arrows while in editor changes the testing library
actions.new.test.class.dialog.select.methods.show.inherited.methods=Show &inherited methods

#action -> new PHPUnit test
actions.new.phpunit.class.action.name=PHPUnit Test
actions.new.phpunit.class.action.description=Creates new PHPUnit Test

#action -> generate php doc
actions.generate.php.doc.is.not.available=Php Doc generation is not available during index update

unnamed.variable=(unnamed)
server=server
#Connection -> Server Connection
connection.port.is.busy=Port {0} is busy

#Server configuration
debug.server.import.configuration.dialog.title=Import From Deployment Configuration
debug.server.import.configuration.preview.border.title=Preview
debug.server.import.configuration.path.to.remote.root=Absolute path to deployment &root\:
debug.server.import.configuration.path.to.remote.root.sftp=Absolute remote root: ''{0}''
debug.server.import.configuration.path.to.remote.root.sftp.tooltip=Absolute path to the remote files:<br>"Absolute path to the remote root" . "Root path" (from deployment settings) . "Relative deployment path on server" (from deployment path mappings)
debug.server.import.configuration.path.to.remote.root.mounted=Local\: ''{0}'' -> Remote\: ''{1}''
debug.server.import.configuration.path.to.remote.root.mounted.label=&Remote path to mounted folder\:
debug.server.import.configuration.path.to.remote.root.mounted.tooltip=Absolute path to the remote files:<br>"Remote path to mounted folder" . "Relative deployment path on server" (from deployment path mappings)
debug.server.import.configuration.deployment=&Deployment\:
debug.server.import.configuration.local=&Local
debug.server.import.configuration.mounted=&Mounted

debug.server.import.configuration.local.file.path=Local file path\:
debug.server.import.configuration.project=&Project\:
debug.server.import.from.deployment.deployment.configurations.message=Deployment configurations with relevant path mappings was found.
debug.server.import.from.deployment.no.deployment.configurations.message=No suitable deployment configurations was found
debug.server.import.from.deployment.no.deployment.configurations.tooltip=Configure deployment root if it's not empty
debug.server.import.from.deployment.deployment.root.label=Deployment &root:
debug.server.import.from.deployment.radio=&Import mappings from deployment
debug.server.manually.select.file.or.project=&Manually choose local file or project
debug.server.manually.select.file.message=Select a project or a file to debug
debug.server.select.file.mapping=Configure Local File Path
debug.server.detect.path.mappings.from.deployment.progress=Analyzing path mappings for ''{0}'' project
debug.server.detect.path.mappings.from.deployment=Detecting Existing Path Mappings\u2026
debug.server.can.not.detect.path.mappings.from.deployment=Cannot evaluate path mappings: no target deployment server is selected

#Debug
debug.accept.connection=Accept
debug.ignore.connection=Ignore
debug.incoming.connection.title.0=Incoming Connection From {0}
debug.path.on.server=Absolute path on the server
debug.error.cannot.modify.value=Cannot modify value
debug.error.cannot.evaluate.variables=Cannot evaluate variables
debug.error.cannot.evaluate.expression0=Cannot evaluate expression ''{0}''
debug.error.cannot.evaluate.expression=Cannot evaluate expression
debug.process.cannot.find.file.in.project=Cannot find a file with path ''{0}'' in project
debug.process.cannot.find.server.name=Can''t find a source position. Server with name ''{0}'' doesn''t exist.
debug.process.status.disconnected=Disconnected
debug.process.status.wait=Waiting for incoming connection with {0} ''{1}''
debug.process.status.connected=Connected
debug.process.console.error.format={0}: {1} in {2} on line {3}\n
debug.mapping.resolve.dialog.stop.debugger=Stop debugger
debug.zend.error.title.cannot.accept.external.xdebug.connection=Cannot accept external Xdebug connection
debug.zend.required.protocol.version.0.or.higher=Required protocol version is ''{0}'' or higher
debug.error.title.cannot.accept.external.0.connection=Cannot accept external {0} connection
debug.zend.cannot.accept.incoming.connection=Cannot accept incoming connection from Zend Debugger
debug.zend.debugger.settings.broadcasting=Zend Debugger Settings Broadcasting
debug.zend.debugger=Zend Debugger
debug.xdebug=Xdebug
debug.not.installed=<not installed>
debug.process.cannot.find.file.link=More information
debug.process.cannot.find.file=Cannot find file ''{0}'' locally.\nTo fix it set server name by environment variable PHP_IDE_CONFIG and restart debug session.
debug.process.cannot.find.local.file=Cannot find a local copy of the file on server {0}\nLocal path is {1}
debug.process.cannot.find.path.mapping=Remote file path ''{0}'' is not mapped to any file path in project
debug.process.script.outside.project=The script ''{0}'' is outside the project.\n
debug.process.cant.compute.source.position=Can''t compute source position. The script ''{0}'' isn''t associated with any text file type.
debug.edit.path.mappings=Click to set up path mappings
debug.configure.servers=Configure servers
debug.settings.broadcasting.port=Settings broadcasting port:
debug.settings.auto.detect.ide.host=Automatically detect IDE IP:
debug.debug.port=Debug port:
debug.error=error
debug.process.cannot.find.remote.copy.local.file=File path in project ''{0}'' is not mapped to any file path on server
debug.cannot.map.local.file=File path is not mapped to any file path on server. Edit path mappings to fix the problem.
debug.resolve.mapping.problem=Resolve Path Mapping Problem
debug.cannot.start.listening.for.connections.from.0=Can''t start listening for connections from ''{0}''
debug.cannot.find.port=Failed to find free port
debug.check.firewall=Please check your firewall settings
debug.ports.is.updated=All ports specified in settings are busy. Port {0} is free and can be used by Xdebug. Please update php.ini with {1} 
debug.port.is.updated=Port {0} specified in settings is busy. Port {1} is free and can be used by Xdebug. Please update php.ini with {2} 
debug.port.is.updated.descr=Port {0} specified in settings is busy. Port {1} is free and can be used by Xdebug.
debug.cannot.start=Cannot start ''{0}''
debug.stop.listen.debug.connections=Stop Listening for PHP Debug Connections
debug.start.listen.debug.connections=Start Listening for PHP Debug Connections
debug.breakpoint.was.resolved=Debug session is suspended here because breakpoint at ''{0}'' is resolved to this line. <br/>\
  You can <a href="disable">disable</a> breakpoint resolving or <a href="more">read more</a> about it. <a href="dontshow">Don''t show again</a>
debug.breakpoint.was.moved=<br/>Breakpoint is also moved to this line.
debug.breakpoint.resolved.disabled=Breakpoint resolve was disabled, breakpoints won't be resolved starting with the next debug session. You can enable it later at <a href="open">PHP|Debug</a>.
debug.breakpoint.move.disabled=Breakpoint move to resolved position was disabled, breakpoints won't be moved starting with the next debug session. You can enable it later at <a href="open">PHP|Debug</a>.
debug.breakpoint.resolved.notify.disabled=Breakpoint resolve notifications were disabled. You can enable them at <a href="open">PHP|Debug|Advanced settings</a>.
debug.log.invalid.xdebug.message=Failed to stop at the breakpoint because Xdebug message is invalid.\n\
  To fix it, switch to a stable version of Xdebug or collect logs with 'xdebug.remote_log' option and create a bug report. 
debug.log.stop=Stop at (''{0}'':{1})
debug.log.path.mapping.remote.local=remote: ''{0}'' <-> local: ''{1}''
debug.log.path.mapping.remote.extracted=remote: ''{0}'' <-> extracted: ''{1}''
debug.log.stack.frame=frame: {0}:{1}, {2}
debug.log.connection.was.terminated=Debug connection was terminated unexpectedly on ''{0}'':''{1}''
debug.log.cant.register.breakpoint.no.remote=Can''t register breakpoint. No path mapping for local path ''{0}''
debug.log.cant.register.breakpoint.no.template.mapping=Can''t register breakpoint. No mapping to PHP line ''{0}''
debug.log.exception.break=Exception break: {0} ({1})
debug.file.is.ignored=File ''{0}'' is skipped.
debug.edit.ignored.paths.list=<a href="#a">Edit</a> skipped paths.
debug.composite.value.presentation=[{0}]
debug.error.unknown.debugger.id=Debugger extension is not detected
debug.error.wrong.debugger.id={0} is not supported
debug.type.resource=resource
debug.type.int=int
debug.type.float=float
debug.xdebug.error.unsupported.protocol.version=Unsupported Xdebug protocol version
debug.php.line.breakpoint.title=PHP Line Breakpoints
debug.php.exception.breakpoint.title=PHP Exception Breakpoints
debug.php.exception.breakpoint.not.supported=Exception Breakpoints are not supported with loaded debug extension
debug.php.exception.breakpoint.zend.not.supported=Exception Breakpoints are not supported with Zend Debugger
debug.php.exception.breakpoint.dialog.title=Add Exception Breakpoint
debug.php.exception.breakpoint.exception.name=Exception name:
debug.php.method.breakpoint.title=PHP Method Breakpoints
debug.php.method.breakpoint.dialog.title=Add Method Breakpoint
debug.php.method.breakpoint.zend.not.supported=Method Breakpoints are not supported with Zend Debugger
debug.php.breakpoint.failed.to.register=Failed to register breakpoint, try to disable it and enable again.
debug.error.cannot.parse.ssh.connection=Can''t parse port from $_SERVER[''SSH_CONNECTION''] : ''{0}''
debug.error.cannot.parse.server.name.for.external.connection=Cannot parse server name for external {0} connection.
debug.error.cannot.parse.server.name=To fix it create environment variable <i><b>PHP_IDE_CONFIG</b></i> on the remote server.<br/><br/>\
  <i>Windows:</i> set PHP_IDE_CONFIG="serverName=SomeName"<br/> \
  <i>Linux / Mac OS X:</i> export PHP_IDE_CONFIG="serverName=SomeName".
debug.error.server.name.is.empty=<i><b>$_SERVER["SERVER_NAME"]</i></b> is empty, it may be caused by web server misconfiguration.<br/><br/>\
  <i>Nginx:</i> add fastcgi parameter to nginx configuration, <a href="http://wiki.nginx.org/PHPFcgiExample">more</a><br/>\
  <i>Apache:</i> configure ServerName for current VirtualHost, <a href="https://httpd.apache.org/docs/2.4/vhosts/name-based.html">more</a>

debug.php.external.connection.finished.warning.title=Debug session was finished without being paused
debug.php.external.connection.finished.warning=It may be caused by path mappings misconfiguration or not synchronized local and remote projects.<br/><br/>\
  To figure out the problem check path mappings configuration for ''{0}'' server at <b><i><a href=\"servers\">PHP|Servers</a></i></b> \
  or enable <b><i><a href=\"break\">''Break at first line in PHP scripts''</a></i></b> option (from <i>Run</i> menu).\
  <br/><a href=\"ignore\">Do not show again</a>
debug.php.external.connection.finished.break.at.first.line.title=PHP Debug configurations
debug.php.external.connection.finished.break.at.first.line=<b><i>'Break at first line'</i></b> option was enabled

debug.process.smart.step.into.popup=Step Into Function
debug.process.smart.step.into.function.evaluation.error =Can't evaluate target function. Step Into will be performed.
debug.process.smart.step.into.function.was.not.executed=Selected function has not been called.

#rest client
debug.rest.client.error.cannot.evaluate.server.name.title=Cannot find corresponding PHP|Server by server name
debug.rest.client.error.cannot.evaluate.server.name=Cannot evaluate '$_SERVER['SERVER_NAME']'. Please make sure server name is correctly configured for your web server. \
  <br>Follow this <a href=\"help\">link</a> for more information.

# custom actions
debug.function.was.added.to.skip.list=''{0}'' was added to skip list.
debug.action.copy.as.title=Copy Variable As ''{0}''
debug.action.copy.as.was.fail.can.not.get.full.name=Failed to copy variable as ''{0}'', cannot evaluate full variable name
debug.action.copy.value.as.text=Copy Value As\u2026

debug.label.select.a.project.or.a.file.to.debug=Select a project or a file to debug
debug.label.select.a.project.to.debug=Select a project to debug
debug.label.file.path.on.server=File path on server:
debug.label.file.path.in.project=File path in project:
debug.checkbox.can.accept.external.connections=Can accept external connections
debug.checkbox.ignore.z.ray.system.requests=Ignore Z-Ray system requests
debug.label.max.simultaneous.connections=Max. simultaneous connections:

# templates
template.debug.path.to.output.folder.descr=Specify path to cache directory
template.debug.path.to.output.folder=Path to Cache Directory
template.debug.cache.path=Cache path:
template.debug.cache.dir.is.incorrect=Template debug: specified in the settings cache dir path is invalid
template.debug.cache.dir.is.not.specified=Template debug: path to cache dir is not specified in the settings
template.debug.php.file.not.found=Template debug: no corresponding PHP file is found for {0}

postfix.template.provider.display.name=PHP

template.smart.completion.function.parameters.description=Smart function parameters completion

debug.expression.evaluation.fail=Failed to evaluate expression due to unknown return value

dbgp.proxy=Xdebug proxy
dbgp.proxy.port=proxy port
dbgp.proxy.host=proxy host
dbgp.proxy.ide.key=ide key
dbgp.proxy.ide.register.success=IDE successfully registered with ide key ''{0}''
dbgp.proxy.ide.unregister.success=IDE successfully unregistered
dbgp.proxy.ide.register.error=Cannot register IDE with ide key ''{0}''
dbgp.proxy.cannot.connect.to.host=Cannot connect to host ''{0}''
dbgp.proxy.cannot.connect.to.xdebug.proxy=Cannot connect to xdebug proxy on ''{0}:{1}''
dbgp.proxy.sending.request.to.xdebug.proxy=Sending request to Xdebug proxy\u2026

profiler.xdebug.task.title=Analyze Xdebug Profiler Snapshot
profiler.xdebug.task.parsing=Parsing ''{0}''
profiler.xdebug.file.chooser.title=Select Xdebug Profiler Snapshot

profiler.view.execution.statistics.title=Execution Statistics
profiler.view.call.tree.title=Call Tree
profiler.view.callees.title=Callees
profiler.view.callers.title=Callers
profiler.column.time.title=Time
profiler.column.memory.title=Memory (B)
profiler.column.own.memory.title=Own Memory (B)
profiler.column.own.time.title=Own Time
profiler.column.invocation.count.title=Calls
profiler.column.invocation.callable=Callable
profiler.column.script=Script

profiler.measurement.unit.second=second
profiler.measurement.unit.second.short=s
profiler.measurement.unit.millisecond=millisecond
profiler.measurement.unit.millisecond.short=ms
profiler.measurement.unit.microsecond=microsecond
profiler.measurement.unit.microsecond.short=\u00B5s
profiler.button.refresh=Refresh
profiler.label.time=Time:

#phpunit
php.uml.provider.presentable.name=PHP Class Diagrams

#coverage
coverage.is.not.supported.for.selected.run.profile=Code coverage is not compatible with selected run profile

#UI

#run configurations -> components -> command line
PhpCommandLineConfigurationEditor.interpreter.options.editor.dialog.caption=Interpreter Options
PhpCommandLineConfigurationEditor.command.line=Command Line
PhpCommandLineConfigurationEditor.field.interpreter.options=Interpreter options:
PhpCommandLineConfigurationEditor.field.custom.working.directory=Custom working directory:
PhpCommandLineConfigurationEditor.field.environment.variables=Environment variables:

#run configurations -> components -> test runner
PhpUnitTestRunnerConfigurationEditor.test.runner=Test Runner
PhpUnitTestRunnerConfigurationEditor.scope=Test scope:
PhpUnitTestRunnerConfigurationEditor.scope.directory=Directory
PhpUnitTestRunnerConfigurationEditor.scope.class=Class
PhpUnitTestRunnerConfigurationEditor.scope.method=Method
PhpUnitTestRunnerConfigurationEditor.scope.xml=Defined in the configuration file
PhpUnitTestRunnerConfigurationEditor.field.directory=Directory:
PhpUnitTestRunnerConfigurationEditor.field.method=Method:
PhpUnitTestRunnerConfigurationEditor.field.class=Class:
PhpUnitTestRunnerConfigurationEditor.field.file=File:
PhpUnitTestRunnerConfigurationEditor.use.alt.configuration.file=&Use alternative configuration file:
PhpUnitTestRunnerConfigurationEditor.use.alt.bootstrap.file=&Use alternative bootstrap file:
PhpUnitTestRunnerConfigurationEditor.field.test.runner.options=Test Runner &options:
PhpUnitTestRunnerConfigurationEditor.field.test.runner.coverage.engine=Preferred Coverage engine:
PhpUnitTestRunnerConfigurationEditor.dialog.caption.test.runner.options=Test Runner Options

# run configurations
PhpScripRunConfigurationEditor.configuration.display.name=PHP Script
PhpScripRunConfigurationEditor.configuration.description=PHP Script configuration
PhpScripRunConfigurationEditor.file=File:
PhpScripRunConfigurationEditor.arguments=Arguments:
PhpScripRunConfigurationEditor.arguments.caption=Arguments

PhpHttpRequestRunConfiguration.configuration.display.name=PHP HTTP Request
PhpHttpRequestRunConfiguration.configuration.description=HTTP request configuration
PhpHttpRequestRunConfiguration.error.fetch.result=Response body is not available
PhpHttpRequestRunConfiguration.error.server.is.not.specified=Cannot find remote server with name ''{0}''
PhpHttpRequestRunConfiguration.error.host.is.not.specified=Host for server ''{0}'' is not specified or invalid
PhpHttpRequestRunConfiguration.error.url.is.not.specified=Url is not specified or invalid: ''{0}''.
PhpHttpRequestRunConfiguration.error.server.configuration=Cannot execute http request: ''{0}''. Please check server configuration at PHP|Server.

RunConfigurationEditor.configuration=Configuration
RunConfigurationEditor.server=&Server:
RunConfigurationEditor.error.server.is.not.selected=Server is not selected
RunConfigurationEditor.error.server.is.not.exist=Server with name ''{0}'' doesn''t exists

PhpWebAppRunConfigurationEditor.configuration.display.name=PHP Web Page
PhpWebAppRunConfigurationEditor.configuration.description=PHP Web Page configuration
PhpWebAppRunConfigurationEditor.startUrl=Start &URL:
PhpWebAppRunConfigurationEditor.browser=&Browser:
PhpWebAppRunConfigurationEditor.malformed.start.url=Malformed start URL - {0}

PhpRemoteDebugRunConfigurationEditor.configuration.display.name=PHP Remote Debug
PhpRemoteDebugRunConfigurationEditor.configuration.description=PHP Debug configuration
PhpRemoteDebugRunConfigurationEditor.server.label=S&erver:
PhpRemoteDebugRunConfigurationEditor.session.id.label=IDE &key(session id):
PhpRemoteDebugRunConfigurationEditor.auto.config=Filter debug connection by IDE key
PhpRemoteDebugRunConfigurationEditor.session.id.cannot.be.empty=IDE key(session id) cannot be empty
PhpRemoteDebugRunConfigurationEditor.zero.configuration.used.title=Started Listening for Incoming PHP Debug Connections
PhpRemoteDebugRunConfigurationEditor.filter.connections.help.title=Advanced option
PhpRemoteDebugRunConfigurationEditor.filter.connections.help=\
  Useful for complicated server setups, e.g. multiple applications on the same host-port.<p/>\
  Leave unchecked to detect configuration automatically or use <i>"Listen for debug connections"</i> action.
PhpRemoteDebugRunConfigurationEditor.filter.connections.help.link=Read more
PhpRemoteDebugRunConfigurationEditor.zero.configuration.used=<i>Server</i> is not specified for <i>''{0}''</i> run-configuration, \
  therefore PhpStorm will listen for all incoming debug connections.<br/>\
  See <a href="zero_config">Zero-configuration debugging</a> for more information.<br/><br/>\
  To stop listening for debug connection use <a href="stop">Run|Stop Listening for PHP Debug Connections</a>.
PhpRemoteDebugRunConfigurationEditor.zero.configuration.is.already.used="Listen for incoming debug connections" is already enabled, \
  nothing will happen.<br/>See <a href="zero_config">Zero-configuration debugging</a> for more information.<br/><br/>\
  To stop listening for debug connection use <a href="stop">Run|Stop Listening for PHP Debug Connections</a>.
PhpRemoteDebugRunConfigurationEditor.stop.zero.configuration.title=Stopped Listening for Incoming PHP Debug Connections
PhpRemoteDebugRunConfigurationEditor.stop.zero.configuration=PhpStorm stopped listening for incoming debug connections.

PhpBuiltInWebServerRunConfigurationEditor.configuration.display.name=PHP Built-in Web Server
PhpBuiltInWebServerRunConfigurationEditor.configuration.description=PHP Built-in Web Server configuration
PhpBuiltInWebServerRunConfigurationEditor.title=Server Configuration
PhpBuiltInWebServerRunConfigurationEditor.host=Host:
PhpBuiltInWebServerRunConfigurationEditor.port=Port:
PhpBuiltInWebServerRunConfigurationEditor.document.root=Document root:
PhpBuiltInWebServerRunConfigurationEditor.use.router.script=Use router script:

PhpDebugConfigurable.ignore.external.connections.through.unregistered.server.configurations.label=Ignore external connections through unregistered server configurations
PhpDebugConfigurable.xdebug.resolve.breakpoints=Resolve breakpoint if it's not available on the current line (Xdebug 2.8+)
PhpDebugConfigurable.xdebug.force.break.no.path.mapping=Force break at first line when no path mapping specified
PhpDebugConfigurable.xdebug.force.break.when.outside.project=Force break at first line when a script is outside the project
PhpDebugConfigurable.xdebug.debug.port=Xdebug debug port
PhpDebugConfigurable.zend.debug.port=Zend Debugger debug port
PhpDebugConfigurable.zend.settings.broadcasting.port=Zend Debugger settings broadcasting port
PhpDebugConfigurable.zend.settings.ide.hosts=Zend Debugger IDE Hosts
PhpDebugConfigurable.zend.settings.ide.hosts.detect=Detecting\u2026
PhpDebugConfigurable.zend.settings.ide.hosts.detect.progress=Detecting IP for Zend Debugger\u2026
PhpDebugConfigurable.xdebug=Xdebug
PhpDebugConfigurable.zend.debugger=Zend Debugger
PhpDebugConfigurable.safe.evaluation.mode=Safe evaluation mode in value hints and Watches Frame
PhpDebugConfigurable.import.use.statements=Import namespace and 'use' statements from evaluation context
PhpDebugConfigurable.show.array.children.in.repl=Show array and object children in Debug Console
PhpDebugConfigurable.external.connections=External connections
PhpDebugConfigurable.pass.required.configuration.options=Pass required configuration options through command line (still need to enable debug extension manually)
PhpDebugConfigurable.advanced.settings=Advanced settings
PhpDebugConfigurable.notify.session.stopped.without.pause=Notify if debug session was finished without being paused
PhpDebugConfigurable.notify.resolved.breakpoint=Notify if breakpoint was resolved to a different line (Xdebug 2.8+)
PhpDebugConfigurable.detect.path.mappings.from.deployment=Detect path mappings from deployment configurations
PhpDebugConfigurable.break.at.first.line=Break at first line in PHP scripts
PhpDebugConfigurable.evaluation=Evaluation
PhpDebugConfigurable.zero.configuration=Pre-configuration
PhpDebugConfigurable.zero.configuration.install.debugger.php.instruction=1. Install
PhpDebugConfigurable.zero.configuration.install.xdebug.php.instruction=Xdebug
PhpDebugConfigurable.zero.configuration.install.php.instruction=or
PhpDebugConfigurable.zero.configuration.install.zend.debugger.php.action=Zend Debugger
PhpDebugConfigurable.zero.configuration.install.zend.debugger.php.instruction=on the Web Server.
PhpDebugConfigurable.zero.configuration.install.php.validate.action=Validate
PhpDebugConfigurable.zero.configuration.install.php.validate=debugger configuration on the Web Server.
PhpDebugConfigurable.zero.configuration.install.toolbar.instruction.label=2. Install
PhpDebugConfigurable.zero.configuration.install.toolbar.instruction=browser toolbar or bookmarklets.
PhpDebugConfigurable.zero.configuration.listen.for.connections=3. Enable listening for PHP Debug Connections:
PhpDebugConfigurable.zero.configuration.start.session=4. Start debug session in browser with the toolbar or bookmarklets.
PhpDebugConfigurable.zero.configuration.tutorial=For more information follow
PhpDebugConfigurable.zero.configuration.tutorial.action=Zero-configuration Debugging tutorial

PhpDebugConfigurable.zero.configuration.listen.for.connections.action=Start Listening
PhpDebugConfigurable.zero.configuration.stop.listen.for.connections.action=Stop Listening
PhpDebugConfigurable.remote.debug.listen.for.connections=3. Start "PHP Remote Debug" run-configuration.
PhpDebugConfigurable.web.page.pre.config.title=Debug pre-configuration
PhpDebugConfigurable.web.page.listen.for.connections=2. Start "PHP Web Page" run-configuration.

PhpDebugSkippedPathsConfigurable.display.name=Skipped Paths
PhpDebugSkippedPathsConfigurable.notify.about.skipped.files=Notify of skipped files
PhpDebugSkippedPathsConfigurable.column.title=Skipped paths

PhpFrameworksCommonConfigurable.display.name=Frameworks

PhpStepFiltersConfigurable.title.methods=Methods
PhpStepFiltersConfigurable.specify.method.name=Specify method name
PhpStepFiltersConfigurable.add.method=Add Method
PhpStepFiltersConfigurable.skip.magic.methods=Skip magic methods
PhpStepFiltersConfigurable.skip.constructors=Skip constructors
PhpStepFiltersConfigurable.skipped.methods=Skipped Methods
PhpStepFiltersConfigurable.title.files=Files
PhpStepFiltersConfigurable.skipped.files=Skipped Files
PhpStepFilters.log.frame=Frame is skipped. Function name: {0}. Remote File url: {1}  

PhpServerConfigurable.shared=&Shared
PhpServerConfigurable.host=Host
PhpServerConfigurable.host.label=&Host
PhpServerConfigurable.port=Port
PhpServerConfigurable.port.label=&Port
PhpServerConfigurable.debugger.label=&Debugger

# web server validation for debug
php.web.server.validation.title=Validate Debugger Configuration on Web Server
php.web.server.validation.action.text=Web Server Debug Validation
php.web.server.validation.local.web.server.radio=&Local Web Server or Shared Folder
php.web.server.validation.remote.web.server.radio=&Remote Web Server
php.web.server.validation.local.path.to.script=&Path to create validation script:
php.web.server.validation.local.path.to.script.tooltip=Selected path should be accessible via web server
php.web.server.validation.url.to.validation.script=&URL to validation script:
php.web.server.validation.url.to.validation.script.tooltip=Selected web path will be used to run validation script
php.web.server.validation.deployment.server=&Deployment server:
php.web.server.validation.deployment.server.tooltip=Selected server will be used to deploy validation script to the remote server
php.web.server.validation.process.title=Validate Web Server
php.web.server.validation.dialog.validate.button=&Validate
php.web.server.validation.synonym=Validate debug
php.web.server.validation.synonym2=Validate Xdebug
php.web.server.validation.chose.path.to.script=Select Path to Validation Script
php.web.server.validation.chose.path.to.script.description=Select local folder to create validation script
php.web.server.validation.invalid.path.to.script=Path to the validation directory is invalid
php.web.server.validation.failed.to.unzip=Unable to extract data from {0} 
php.web.server.validation.configure.local=Please, configure local and web path to validation script
php.web.server.validation.configure.remote=Please, configure path to validation script and select deployment server
php.web.server.validation.configure.phpinfo=Please paste the full output of <i>phpinfo()</i>
php.web.server.validation.configure.validation.script=Please download validation script archive and specify web path to script directory
php.web.server.validation.configure.phpinfo.desc=Either a copy & paste of the HTML version, the HTML source or <i>php -i</i> output
php.web.server.validation.failed.to.find.web.path=Please, configure web path to validation script
php.web.server.validation.failed.to.find.deployment.settings=Failed to find deployment settings for the server
php.web.server.validation.failed.to.map.deployment.folder=Please, configure remote path mapping for the validation directory
php.web.server.validation.failed.to.map.deployment.folder.to.web=Please, configure web path mapping for the validation directory
php.web.server.validation.uploading.validation.script=Uploading validation script to {0}
php.web.server.validation.failed.to.deploy.validation.script=Failed to deploy validation script to the server
php.web.server.validation.failed.to.fetch.script.result=Failed to fetch the result of validation script
php.web.server.validation.script.result.is.empty=The result of validation script is empty
php.web.server.validation.script.result.wrong.format=The result of validation script has unexpected format
php.web.server.validation.script.local.result.path.mapping.check=Please, check that web path to validation script is correctly configured for <b>''{0}''</b> directory
php.web.server.validation.script.result.path.mapping.check=Please, check that remote and web path mappings are correctly configured for <b>''{0}''</b> directory in deployment settings
php.web.server.validation.failed.to.execute.script=Specified URL is not reachable, caused by: ''{0}''
php.web.server.validation.configuration.files=<b>Loaded php.ini:</b> {0}
php.web.server.validation.additional.configuration.files=<b>Additional .ini files parsed:</b> {0}
php.web.server.validation.no.configuration.files=No php.ini file was found
php.web.server.validation.server.name=<b>Server name:</b> {0}
php.web.server.validation.server.name.is.empty=Server name is empty
php.web.server.validation.client.host.is.reachable=<b>Debug client host:</b> reachable
php.web.server.validation.client.phpstorm.is.reachable=<b>PhpStorm:</b> ready to receive Xdebug connections
php.web.server.validation.client.phpstorm.is.unreachable=<b>PhpStorm:</b> unable to receive Xdebug connections
php.web.server.validation.os=<b>Client host operating system:</b> {0}
php.web.server.validation.os.server=<b>Server host operating system:</b> {0}
php.web.server.validation.docker=<b>In Docker container:</b> {0}
php.web.server.validation.client.host.is.unreachable=<b>Debug client host:</b> unreachable
php.web.server.validation.client.host.is.unreachable.descr=Make sure that <i>xdebug.remote_host</i> (for Xdebug 2), <i>xdebug.client_host</i> (for Xdebug 3), or zend_debugger are properly configured. The value can be a host name (for example, localhost) or an IP address of the machine where PhpStorm is running, and it must be pingable from the server. When using Xdebug, <i>xdebug.remote_connect_back</i> (for Xdebug 2) or <i>xdebug.discover_client_host</i> (for Xdebug 3) can be used for troubleshooting.
php.web.server.validation.server.name.is.empty.description=Server name is necessary for identification inside PhpStorm.<br> Please, configure it at web server configuration file.
php.web.server.validation.no.debugger.extension=No debug extension is loaded
php.web.server.validation.multi.debugger.extension=Both Xdebug and Zend Debugger extensions are loaded
php.web.server.validation.multi.debugger.extension.description=Only one debugger extension can be loaded in php.ini file.
php.web.server.validation.loaded.debugger.extension=<b>Debugger extension:</b> {0}
php.web.server.validation.xdebug.debugger.host=<b>Remote host:</b> {0}
php.web.server.validation.xdebug.debugger.localhost=Remote host is configured as ''{0}'' despite server host is probably not local
php.web.server.validation.xdebug.debugger.host.remote.addr=<br/><br/>In php.ini file set <b>''{0}''</b> to <i>''{1}''</i> or \
  IP address of local machine visible from web server.
php.web.server.validation.xdebug.debugger.host.description=The host where the debugger <b>client</b> is running.
php.web.server.validation.xdebug.zend.extension.load=Xdebug must be loaded by 'zend_extension' instead of 'extension'
php.web.server.validation.xdebug.zend.extension.load.description=Use <b>'zend_extension=path_to_xdebug.so'</b> line in php.ini file to load xdebug extension.
php.web.server.validation.xdebug.port=<b>Remote port:</b> {0}
php.web.server.validation.xdebug.port.require.sudo=<b>Remote port:</b> {0}, root privileges are required to use it
php.web.server.validation.xdebug.port.require.sudo.description=Root privileges are necessary to use ports less than 1024 on Linux and Mac.
php.web.server.validation.xdebug.wrong.port.format=<b>Xdebug port is invalid:</b> ''{0}''
php.web.server.validation.xdebug.wrong.port=Xdebug port (''{0}'') differs from PHP->Debug IDE settings (''{1}'')
php.web.server.validation.xdebug.wrong.port.description=Xdebug port from php.ini (<b>{0}</b>) should be equal to the one configured inside IDE (at <b>PHP->Debug</b>).
php.web.server.validation.xdebug.remote.is.not.enable=Remote debug is not enabled
php.web.server.validation.xdebug.remote.is.not.enable.description=Add <b>''{0}''</b> line to php.ini file.
php.web.server.validation.xdebug3.option.in.invalid.mode=''{0}'' option is set to ''{1}'' which is invalid mode for xdebug3.
php.web.server.validation.xdebug.remote.autostart.description=Debug session will attempt to start for each request.
php.web.server.validation.xdebug3.start.with.request.description=Debug session will attempt to autostart based on the corresponding configuration.
php.web.server.validation.xdebug3.option.is.enabled.message=<b>{0}:</b> option is set to ''{1}''
php.web.server.validation.xdebug.option.is.not.enabled.description=<b>{0}:</b> option is not enabled
php.web.server.validation.xdebug3.start.upon.error.description=Debug session will attempt to autostart on error based on the corresponding configuration.
php.web.server.validation.xdebug.option.is.enabled=<b>{0}:</b> option is enabled
php.web.server.validation.xdebug3.discover.client.with.discover.header=Xdebug will try to connect to the client automatically based on the values in <b>$_SERVER[''{0}'']</b>. If fails, then falls back to <b>''xdebug.discover_client_host''</b> with empty <b>''xdebug.client_discovery_header''</b>.
php.web.server.validation.xdebug3.discover.client=Xdebug will try to connect to the client automatically based on the values in <b>$_SERVER['HTTP_X_FORWARDED_FOR']</b> and <b>$_SERVER['REMOTE_ADDR']</b>. If fails, then falls back to <b>'xdebug.client_host'</b>.
php.web.server.validation.xdebug3.discover.client.message=<b>Discover client host:</b> xdebug will try to automatically fetch the host of the client.
php.web.server.validation.xdebug3.discover.client.no=<b>Discover client host:</b> is OFF
php.web.server.validation.xdebug.option.is.ignored.description=<b>{0}:</b> option will be ignored.
php.web.server.validation.xdebug.remote.mode.jit=<b>Remote mode:</b> 'jit'
php.web.server.validation.xdebug.remote.mode.jit.description=The debug session will be initiated only after an error.
php.web.server.validation.xdebug.remote.mode.req=<b>Remote mode:</b> 'req'
php.web.server.validation.xdebug.remote.mode.req.description=The debug session will be initiated on script start.
php.web.server.validation.xdebug3.remote.mode.emulation.description=The debug session will be initiated on script start as with <b>remote_mode=''{0}''</b> of xdebug2.
php.web.server.validation.xdebug3.remote.mode.emulation.message=<b>Remote mode:</b> ''{0}'' of xdebug2 is emulated. 
php.web.server.validation.xdebug3.cloud.xdebug.doesnt.accept.connections.message=Xdebug is not accepting external connections right now
php.web.server.validation.xdebug3.cloud.xdebug.wrong.cloud.id.message=<b>Cloud id in IDE:</b> does not equal to the one on the server
php.web.server.validation.xdebug3.cloud.xdebug.wrong.cloud.id.description=<b>Cloud id in IDE:</b> {0}<br><b>Cloud id on server:</b> {1}
php.web.server.validation.xdebug3.cloud.xdebug.disabled.message=<b>Connect via xdebug cloud:</b> disabled. Please enable it in IDE settings: <b>PHP->Debug->Xdebug Cloud </b>
php.web.server.validation.xdebug3.cloud.php.ini.xdebug.disabled.message=<b>Php.ini cloud debug:</b> disabled. 
php.web.server.validation.xdebug3.cloud.xdebug.correct.cloud.id.message=<b>Cloud id in IDE:</b> equals to the one on the server
php.web.server.validation.xdebug.mode.is.not.supported=Remote mode ''{0}'' is not supported
php.web.server.validation.xdebug.remote.log=<b>{0}:</b> {1}
php.web.server.validation.xdebug.protocol.is.not.supported=Debug protocol ''{0}'' is not supported
php.web.server.validation.zend.debugger.host=<b>Remote hosts:</b> {0}
php.web.server.validation.zend.debugger.localhost=Debug session is allowed only for localhost despite server is not located locally.
php.web.server.validation.zend.debugger.localhost.description=Add the host where the debugger <b>client</b> is running to <b>'zend_debugger.allow_hosts'</b> option.
php.web.server.validation.zend.debugger.deny.host=<b>Deny hosts:</b> {0}
php.web.server.validation.zend.debugger.deny.host.description=It's not possible to debug from the client with the deny host.
php.web.server.validation.zend.expose.remotely=<b>Property ''expose_remotely''</b> is set to ''{0}''
php.web.server.validation.zend.expose.remotely.allowed.hosts.description=Debugger session will attempt to start for hosts from <b>'zend_debugger.allow_hosts'</b> option.
php.web.server.validation.zend.expose.remotely.always.description=Debugger session will attempt to start for each client.
php.web.server.validation.zend.expose.remotely.never.description=Debugger session won't be initiated, <b>'zend_debugger.allow_hosts'</b> option will be ignored.<br>Set an option <b>'zend_debugger.expose_remotely'</b> to 'allowed_hosts' or 'always' to enable web server debugging.
php.web.server.validation.reference.to.documentation=See <a href=\"{0}\">{0}</a> for more information.

PhpPathMappingsConfigurable.use.path.mappings.label=Use path mappings (select if the server is remote or symlinks are used)

DBGPProxyConfigurable.display.name=DBGp Proxy
DBGPProxyConfigurable.ide.key=IDE key:
DBGPProxyConfigurable.host=Host:
DBGPProxyConfigurable.port=Port:

xdebug.initializing.debugger.connection=Connecting to {0}\u2026
xdebug.initializing.connection.failed.with.timeout=Cannot connect to {0}: timeout exceed
xdebug.initializing.connection.debugger=debugger
xdebug.initializing.connection.xdebug.cloud=Xdebug Cloud

XdebugCloudConfigurable.display.name=Xdebug Cloud
XdebugCloudConfigurable.connect.via.xdebug.cloud=Connect to Xdebug Cloud
XdebugCloudConfigurable.cloud.id=Cloud ID:
XdebugCloudConfigurable.custom.server=Connect to on-premise Xdebug Cloud
XdebugCloudConfigurable.base.host=Cloud Host:
XdebugCloudConfigurable.port=Cloud Port:

xdebug.cloud.validation.cloud.id.not.defined=Cloud ID is not defined
xdebug.cloud.validation.host.not.defined=On-premise Xdebug Cloud host is not defined
xdebug.cloud.validation.port.invalid=On-premise Xdebug Cloud port is invalid

xdebug.cloud.cannot.connect=Cannot connect to Xdebug Cloud
xdebug.cloud.cannot.connect.unknown.host=Xdebug Cloud is unreachable: {0}
xdebug.cloud.cannot.register.cloud.id=Cannot register Cloud ID on Xdebug Cloud
xdebug.cloud.cannot.register.cloud.id.unexpected.response=Cannot register Cloud ID due to unexpected response
xdebug.cloud.cannot.open.new.debug.connection=Cannot open new debug connection

PhpIncomingLocalConnectionDialog.file.path=File path:

PhpIncomingConnectionDialog.server.name=Server name:
PhpIncomingConnectionDialog.server.port=Server port:
PhpIncomingConnectionDialog.request.uri=Request URI:
PhpIncomingConnectionDialog.file.path.on.server=File path on server:

PhpInterpreter.php.sdk.type=PHP Interpreter
PhpInterpreter.php.dependent.configuration.exists.title=PHP Interpreter Dependent Configuration
PhpInterpreter.php.dependent.configuration.exists=There is {0} configuration for selected PHP Interpreter. Are you sure you want to delete this interpreter?
PhpInterpreter.php.home.path.label=PHP executable:
PhpInterpreter.php.debugger.label=Debugger:
PhpInterpreter.php.general.title=General
PhpInterpreter.configuration.in.project.settings.title=PHP Interpreter Configuration
PhpInterpreter.configuration.in.project.settings.message=PHP interpreter cannot be specified as default SDK. You can configure it for the current project at "Settings | PHP"
PhpInterpreter.configuration.duplicate.interpreter.name=PHP Interpreters with not unique name ''{0}'' were found.
PhpInterpreter.configuration.selection.list.title=Select CLI Interpreter
PhpInterpreter.configuration.interpreter.is.invalid=Enable "PHP Remote Interpreters" plugin to edit the interpreter.
PhpInterpreterConfigurable.configuration.title=Additional
PhpInterpreterConfigurable.reload.phpinfo=Reload phpinfo
PhpInterpreterConfigurable.show.phpinfo=Show phpinfo
PhpInterpreterConfigurable.install.xdebug.extension=Download and install Xdebug extension
PhpInterpreterConfigurable.generate.xdebug.extension=Generate installation script
PhpInterpreterConfigurable.updated.phpinfo=Successfully updated phpinfo
PhpInterpreterConfigurable.can.not.updated.phpinfo=Cannot update phpinfo
PhpInterpreterConfigurable.php.version=PHP version: {0}
PhpInterpreterConfigurable.not.installed=Not installed
PhpInterpreterConfigurable.configuration.project.level=Visible only for this project
PhpInterpreterConfigurable.configuration.project.tooltip=Check if don't want to share intepreter between projects
PhpInterpreterConfigurable.configuration.default.project.tooltip=It's not possible to save interpreter only for default project.
PhpInterpreterConfigurable.debugger.extension.label=Debugger extension:
PhpInterpreterConfigurable.debugger.extension.title=Choose path to Debugger Extension
PhpInterpreterConfigurable.debugger.extension.description=Debugger extension will be loaded only for debug session started from cli run-configurations
PhpInterpreterConfigurable.configuration.options.table.empty.text=Set a custom value for any of the configuration directives allowed in php.ini
PhpInterpreterConfigurable.configuration.options.with.empty.name.are.not.allowed=Configuration options with empty name are not allowed
PhpInterpreterConfigurable.configuration.options.dialog.caption=Configuration Options
PhpInterpreterConfigurable.configuration.options.label=Configuration options:
PhpInterpreterConfigurable.configuration.options.table.name=Configuration directive
PhpInterpreterConfigurable.configuration.options.table.value=Value
PhpInterpreterConfigurable.configuration.options.description=These options will be passed using the ''-d'' command line option
PhpInterpreterConfigurable.configuration.file.path=Configuration file: {0}
PhpInterpreterConfigurable.configuration.file.path.not.found=Configuration php.ini file does not exist
PhpInterpreterConfigurable.configuration.file.evaluate.dir=Evaluating Configuration File Directory\u2026
PhpInterpreterConfigurable.configuration.file.fix.title=Configuration php.ini file does not exist
PhpInterpreterConfigurable.configuration.file.hhvm.fix=Create php.ini file in <b>/etc/hhvm</b> directory,<br><br>Follow this <a href=\"http://docs.hhvm.com/manual/en/configuration.file.php\">link</a> for more information.
PhpInterpreterConfigurable.configuration.file.fix=Create php.ini file in {0} directory,<br><br>Configuration file templates can be found at php root folder:<br>"php.ini-development" - default settings<br>"php.ini-production" - recommended settings.<br>
PhpInterpreterConfigurable.configuration.file.fix.failed.to.detect=Use \"{0} --ini\" command to determine configuration file directory.<br>
PhpInterpreterConfigurable.configuration.file.fix.link=<br>Follow this <a href=\"http://php.net/manual/en/configuration.file.php\">link</a> for more information.
PhpInterpreterConfigurable.configuration.file.can.not.find.title=Cannot Find Configuration File
PhpInterpreterConfigurable.configuration.file.can.not.find=Cannot find file by path: ''{0}''
php.info.parse.exception=Cannot parse php information: {0} is empty
PhpInterpreterConfigurable.update.helpers.title=Updating Helpers Directory\u2026
PhpInterpreter.php.interpreter.name.conflict.title=Interpreters names conflict
PhpInterpreter.php.interpreter.name.conflict=Conflict in project level and application level interpreters names was found. To resolve the issue these project level interpreters were renamed:
remote.interpreter.browse.action.is.not.supported.for.docker=Browse action is not supported for Docker based remote interpreters
php.interpreter.info.failed.to.parse.validation.script=Failed to parse validation script output

php.interpreter.base.configuration.interpreter.is.invalid=Cannot run {0}, because interpreter for {1} configuration is invalid.
php.interpreter.base.configuration.is.not.provided.or.empty=Path to {0} for {1} is not configured. You can fix it at "PHP|{0}"
php.interpreter.base.configuration.working.directory=Cannot detect working directory, please configure it in run-configuration.
php.interpreter.base.configuration.fix.interpreter={0}. To fix it <a href=''{1}''>change</a> project interpreter or \
  <a href=''{2}''>check</a> settings.

PhpProjectConfigurable.language.level=&PHP language level:
PhpProjectConfigurable.interpreter=CLI Interpreter:
PhpProjectConfigurable.include.path=Include Path
PhpProjectConfigurable.0.interpreter.include.path=''{0}'' interpreter include path
PhpProjectConfigurable.specify.other=Specify Other\u2026
PhpProjectConfigurable.all=All
PhpProjectConfigurable.provide.include.path=Provide include path
PhpProjectConfigurable.docker.default.project.error.tooltip=Open or create project to configure docker container
PhpProjectConfigurable.php.runtime=PHP Runtime
PhpProjectConfigurable.advanced.settings=Ad&vanced settings
PhpProjectConfigurable.default.stubs.path=&Default stubs path:
PhpProjectConfigurable.select.default.stubs.path.title=Select Default Stubs Path
PhpProjectConfigurable.select.default.stubs.path.description=Select default stubs path
PhpProjectConfigurable.analysis=Analysis
PhpProjectConfigurable.exception.analysis=Exception Analysis
PhpProjectConfigurable.exception.analysis.depth=Call tree analysis depth:
PhpProjectConfigurable.exception.analysis.unchecked.exceptions=Unchecked Exceptions:
PhpProjectConfigurable.analysis.custom.format.functions=Custom Format Functions
PhpProjectConfigurable.include.analysis=Include Analysis
PhpProjectConfigurable.select.document.root.path.title=Select $_SERVER['DOCUMENT_ROOT'] Path
PhpProjectConfigurable.select.document.root.path.description=Select $_SERVER['DOCUMENT_ROOT'] Path

custom.format.functions.dialog.validation.class.not.found=Class {0} not found
custom.format.functions.dialog.validation.function.not.found=Function {0} not found
custom.format.functions.dialog.validation.method.not.found=Method {0} not found in {1}
custom.format.functions.dialog.validation.format.index=Index must be non-negative number
custom.format.functions.dialog.format.index.title=Index of a format string template
custom.format.functions.dialog.class.placeholder=Leave empty to add a plain function

PhpUnitConfigurableForm.phpunit.library=PHPUnit library
PhpUnitConfigurableForm.use.custom.loader=Use Composer autoloader
PhpUnitConfigurableForm.custom.loader.is.empty=Path to the autoloader file is empty
PhpUnitConfigurableForm.can.not.find.custom.loader=Cannot find autoloader script at ''{0}''
PhpUnitConfigurableForm.phpunit.phar.is.empty=Path to phpunit.phar is empty
PhpUnitConfigurableForm.phpunit.paratest.is.empty=Path to ParaTest is empty
PhpUnitConfigurableForm.can.not.find.phpunit.phar=Cannot find phpunit.phar at ''{0}''
PhpUnitConfigurableForm.can.not.find.paratest=Cannot find ParaTest at ''{0}''
PhpUnitConfigurableForm.specified.wrong.paratest.binary=Wrong ParaTest binary specified, use 'paratest_for_phpstorm' instead
PhpUnitConfigurableForm.unsupported.paratest.version=<html>The installed version of ParaTest doesn't support integration with PHPStorm.<br> Update ParaTest to 6.5.0 or later.</html>
PhpUnitConfigurableForm.custom.loader.is.directory=Autoloader should not be a directory, for default composer config set path to "vendor/autoload.php"
PhpUnitConfigurableForm.download.phpunit.phar.link.text=Download phpunit.phar from {0}
PhpUnitConfigurableForm.path.to.script=Path to script:
PhpUnitConfigurableForm.path.to.phpunit.phar=Path to phpunit.phar
PhpUnitConfigurableForm.test.runner=Test Runner
PhpUnitConfigurableForm.use.configuration.file=Default configuration file:
PhpUnitConfigurableForm.use.bootstrap.file=Default bootstrap file:
PhpUnitConfigurableForm.use.configuration.file.validation.warning=Provide path to configuration file for ''{0}'' or disable "Default configuration file" option
PhpUnitConfigurableForm.use.bootstrap.file.validation.warning=Provide path to bootstrap file for ''{0}'' or disable "Default bootstrap file" option

phpunit.config.label=Test roots
phpunit.config.directory.label=Directory:
phpunit.config.empty.pattern=Empty Pattern
phpunit.getting.phpunit.version=Updating PhpUnit Version\u2026
phpunit.not.tests.was.executed.title=PHPUnit is not configured
test.not.tests.was.executed.title={0} is not configured. Press ''Fix'' to install composer packages.
phpunit.not.tests.was.executed.message=To fix it <a href="config">configure</a> \
  autoload file or path to PHPUnit phar for <i>{0}</i>.
phpunit.can.not.rerun.failed.tests.title=Cannot execute failed PHPUnit tests.
frameworks.settings.none.installed=No framework settings providers are available.<br/>\
Consider installing Drupal Support, Joomla! Support, or WordPress Support plugins.
framework.composer.packages.were.changed.0.test.config.title=Composer packages were changed
framework.composer.packages.were.changed.0.test.config.popup={0} config was updated according to composer.json

PhpUnitConfiguration.interpreter.conflict=Conflict in application level PHPUnit configurations was found. To resolve the issue project level copies of these configurations was created:
PhpUnitConfiguration.interpreter.conflict.title=PHPUnit configuration conflict

# php test framework
php.test.framework.select.type.of.settings.popup.title=Select Configuration Type
php.test.framework.configuration.ui.library={0} library
php.test.framework.configuration.ui.test.runner=Test Runner
php.test.framework.configuration.ui.path.to.exe=Path to {0} executable\:
php.test.framework.configuration.ui.use.configuration.file=Default configuration file\:
php.test.framework.download.hyperlink={0} releases: <a href={1}>{1}</a>
php.test.framework.configuration.ui.version={0} version: {1}
php.test.framework.configuration.ui.not.installed=Not installed
php.test.framework.configuration.ui.select.interpreter=Please select PHP Interpreter to load {0} version
php.test.framework.configuration.ui.select.local.interpreter=Please select local PHP Interpreter to load {0} version
php.test.framework.configuration.updated.version=Successfully updated {0} version
php.test.framework.configuration.can.not.update=Cannot update {0} version
php.test.framework.default.interpreter.is.not.local={0} version can''t be detected. Default PHP interpreter is not local

php.test.framework.version.getting.version.title=Getting {0} version\u2026
php.test.framework.version.path.to.exe.is.invalid=Path to {0} executable is empty or invalid.
php.test.framework.version.detector.empty.output=''{0}'' command output is empty.
php.test.framework.version.configuration.ui.can.not.parse.version=Cannot parse version command output.\n{0}

php.test.framework.by.sdk.new.settings.dialog.title={0} By Remote Interpreter
php.test.framework.by.sdk.dialog.label=&Interpreter:
php.test.framework.by.sdk.settings.select.server=Select remote interpreter to configure remote {0}
php.test.framework.by.sdk.settings.already.exist={0} settings for selected interpreter already exists
php.test.framework.by.sdk.settings.remote.path.title=Select Path On The Server

php.test.framework.run.configuration.ui.scope=Test scope\:
php.test.framework.run.configuration.ui.type.radio.button=&Type
php.test.framework.run.configuration.ui.directory.radio.button=&Directory
php.test.framework.run.configuration.ui.file.radio.button=&File
php.test.framework.run.configuration.ui.scenario.radio.button=&Method
php.test.framework.run.configuration.ui.configuration.radio.button=Defined in the &configuration file
php.test.framework.run.configuration.ui.type.combo.box=Type:
php.test.framework.run.configuration.ui.directory.text.field=Directory\:
php.test.framework.run.configuration.ui.file.text.field=File\:
php.test.framework.run.configuration.ui.scenario.text.field=Method\:
php.test.framework.run.configuration.ui.alternative.configuration.file=&Use alternative configuration file:
php.test.framework.run.confuguration.ui.dialog.caption.test.runner.options=Test Runner Options
php.test.framework.field.test.runner.options=Test Runner &options:
php.test.framework.run.configuration.ui.custom.file.radio.button=Defined in the {0}
php.test.framework.run.configuration.ui.alternative.custom.file=&Use alternative {0}
php.test.framework.settings.is.not.provided.or.empty=Path to {0} for {1} is not configured. Press ''Fix'' to edit your {0} configuration.

php.test.framework.interpreter.conflict=Conflict in application level {0} configurations was found. To resolve the issue project level copies of these configurations was created:
php.test.framework.interpreter.conflict.title={0} Configuration Conflict
php.test.framework.project.level=(current project)
php.test.framework.no.configuration.types.are.available=No additional configuration types are available

# validation
php.test.framework.validation.run.configuration.no.type=Cannot run tests if no type is selected.
php.test.framework.validation.run.configuration.unsupported.type=Cannot run tests by ''{0}'' command.
php.test.framework.validation.run.configuration.working.directory=Directory should be a subfolder of working directory: ''{0}''
php.test.framework.validation.run.configuration.file.working.directory=File should be a child of working directory: ''{0}''
php.test.framework.validation.run.configuration.method=Cannot find ''{0}'' in ''{1}''

php.test.framework.untrusted.reload=Refreshing the Test Frameworks' versions is prohibited in Safe Mode

php.executable.macro.description=Php executable file configured in project settings
inspection.undefined.class.ignore.phpdoc=Ignore PHPDoc

inspection.missing.ext.composer.json=''{0}'' is missing in composer.json
inspection.ext.is.specified.in.require.dev.but.used.outside.tests=''{0}'' is specified in ''require-dev'' section but used outside of tests
inspection.ext.is.specified.in.suggest=''{0}'' is specified in ''suggest'' and may be unavailable
inspection.missing.ext.require.bundled=Require PHP bundled extensions
add.to.composer.json.quick.fix=Add ''{0}'' to composer.json

configure.php.include.paths=C&onfigure PHP Include Paths\u2026

interpreter=Interpreter

XdebugShowUserDefinedConstantsToggleAction.text=Show user defined constants
XdebugShowUserDefinedConstantsToggleAction.description=Disabling it stops getting user defined constants information and improves debugger performance 
XdebugAddMethodToSkipListToggleAction.text=Add Method to Skip List
PhpDebugHideEmptySuperGlobalsToggleAction.text=Show empty superglobals variables
PhpDebugBreakAtFirstLineToggleAction.text=Break at first line in PHP scripts
PhpUserDefinedConstantsGroup.name=Constants

PhpLanguageLevel.5.3.0.presentable.name=5.3
PhpLanguageLevel.5.3.0.short.description=namespaces, closures
PhpLanguageLevel.5.4.0.presentable.name=5.4
PhpLanguageLevel.5.4.0.short.description=traits, short array syntax
PhpLanguageLevel.5.5.0.presentable.name=5.5
PhpLanguageLevel.5.5.0.short.description=finally, generators
PhpLanguageLevel.5.6.0.presentable.name=5.6
PhpLanguageLevel.5.6.0.short.description=variadic functions, argument unpacking
PhpLanguageLevel.7.0.0.presentable.name=7.0
PhpLanguageLevel.7.0.0.short.description=return types, scalar type hints
PhpLanguageLevel.7.1.0.presentable.name=7.1
PhpLanguageLevel.7.1.0.short.description=const visibility, nullables, multiple exceptions
PhpLanguageLevel.7.2.0.presentable.name=7.2
PhpLanguageLevel.7.2.0.short.description=object type hint, abstract function override
PhpLanguageLevel.7.3.0.presentable.name=7.3
PhpLanguageLevel.7.3.0.short.description=references in list assignments, flexible heredocs
PhpLanguageLevel.7.4.0.presentable.name=7.4
PhpLanguageLevel.7.4.0.short.description=typed properties, short closures, null coalescing operator
PhpLanguageLevel.8.0.0.presentable.name=8.0
PhpLanguageLevel.8.0.0.short.description=union types, named arguments, attributes, match expression
PhpLanguageLevel.8.1.0.presentable.name=8.1
PhpLanguageLevel.8.1.0.short.description=enumerations, 'never' return type, intersection types, 'readonly' properties
PhpLanguageLevel.8.2.0.presentable.name=8.2
PhpLanguageLevel.8.2.0.short.description='readonly' classes, 'true' type, standalone 'null' and 'false'
PhpLanguageLevel.8.3.0.presentable.name=8.3
PhpLanguageLevel.8.3.0.short.description=typed class constants

PhpLanguageFeature.traits.not.supported=Trait uses are only allowed since PHP 5.4
PhpLanguageFeature.short.array.syntax.not.supported=Short array syntax is only allowed since PHP 5.4
PhpLanguageFeature.array.dereferencing.not.supported=Array dereference on call is only allowed since PHP 5.4
PhpLanguageFeature.class.member.access.on.instantiation.not.supported=Class member access on instantiation is only allowed since PHP 5.4
PhpLanguageFeature.this.in.closure.not.supported=$this in Closure is only allowed since PHP 5.4
PhpLanguageFeature.self.in.closure.not.supported=self in Closure is only allowed since PHP 5.4
PhpLanguageFeature.parent.in.closure.not.supported=parent in Closure is only allowed since PHP 5.4
PhpLanguageFeature.static.in.closure.not.supported=static in Closure is only allowed since PHP 5.4
PhpLanguageFeature.binary.literal.not.supported=Binary literals are only allowed since PHP 5.4
PhpLanguageFeature.literal.in.static.call.not.supported=Literals in static calls are only allowed since PHP 5.4
PhpLanguageFeature.built.in.web.server=Built-in web server is only available since PHP 5.4
PhpLanguageFeature.var.break.argument.not.supported='break' operator with non-constant operand is no longer supported in PHP 5.4
PhpLanguageFeature.var.break.zero.argument.not.supported='break' operator accepts only positive numbers since PHP 5.4
PhpLanguageFeature.var.continue.not.supported='continue' operator with non-constant operand is no longer supported in PHP 5.4
PhpLanguageFeature.var.continue.zero.not.supported='continue' operator accepts only positive numbers since PHP 5.4
PhpLanguageFeature.call.time.pass.by.reference.not.supported=Call-time pass-by-reference has been removed in PHP 5.4

PhpLanguageFeature.finally.not.supported='Finally' clause is only allowed since PHP 5.5
PhpLanguageFeature.generators.not.supported=Generators are only allowed since PHP 5.5
PhpLanguageFeature.foreach.list.not.supported=List in foreach is only allowed since PHP 5.5
PhpLanguageFeature.empty.any.expression.not.supported=Arbitrary expressions in 'empty' are only allowed since PHP 5.5
PhpLanguageFeature.immediate.dereferencing.not.supported=Immediate dereferencing is only allowed since PHP 5.5
PhpLanguageFeature.class.name.const.not.supported=Class name constant is only allowed since PHP 5.5

PhpLanguageFeature.constant.scalar.expressions=Constant scalar expressions are only allowed since PHP 5.6
PhpLanguageFeature.variadic.functions=Variadic functions are only allowed since PHP 5.6
PhpLanguageFeature.argument.unpacking=Argument unpacking is only allowed since PHP 5.6
PhpLanguageFeature.exponentiation=Exponentiation is only allowed since PHP 5.6
PhpLanguageFeature.use.function.and.const=Use function and const only allowed since PHP 5.6

PhpLanguageFeature.return.types=Return type declaration is only allowed since PHP 7.0
PhpLanguageFeature.scalar.type.hints=Scalar type hints are only allowed since PHP 7.0
PhpLanguageFeature.spaceship.operator=Spaceship operator is only allowed since PHP 7.0
PhpLanguageFeature.coalesce.operator=Coalesce operator is only allowed since PHP 7.0
PhpLanguageFeature.grouped.use=Grouped use declaration is only allowed since PHP 7.0
PhpLanguageFeature.keyword.names=Keywords can be used as name in PHP 7.0
PhpLanguageFeature.uniform.variable.syntax=Uniform variable syntax is only allowed since PHP 7.0
PhpLanguageFeature.anonymous.classes=Anonymous classes are only allowed since PHP 7.0

PhpLanguageFeature.return.void=Return type 'void' is only allowed since PHP 7.1
PhpLanguageFeature.return.never=Return type 'never' is only allowed since PHP 8.1
PhpLanguageFeature.nullables=Nullables is only allowed since PHP 7.1
PhpLanguageFeature.iterable.type.hint=Iterable type hint is only allowed since PHP 7.1
PhpLanguageFeature.catch.multiple=Catch multiple statements is only allowed since PHP 7.1
PhpLanguageFeature.class.constant.visibility=Class constant visibility is only allowed since PHP 7.1
PhpLanguageFeature.list.keys=Keys in list unpacking is only allowed since PHP 7.1
PhpLanguageFeature.list.assign=[] in list unpacking is only allowed since PHP 7.1
PhpLanguageFeature.negative.numeric.indices=Negative numeric indices is only allowed since PHP 7.1

PhpLanguageFeature.object.type.hint=Object type hint is only allowed since PHP 7.2
PhpLanguageFeature.abstract.function.override=Abstract function override is only allowed since PHP 7.2
PhpLanguageFeature.trailing.comma.in.group.uses=Trailing comma in group use list is only available since PHP 7.2

PhpLanguageFeature.literal.in.instanceof=Literal as the first operand is only allowed since PHP 7.3
PhpLanguageFeature.references.in.list=References in [] and list() assignments are only allowed since PHP 7.3
PhpLanguageFeature.trailing.comma.in.function.calls=Trailing comma in function calls is only available since PHP 7.3
PhpLanguageFeature.trailing.comma.in.parameter.list=Trailing comma in parameters list is only available since PHP 8.0
PhpLanguageFeature.trailing.comma.in.closure.use.list=Trailing comma in closure use list is available in PHP 8.0 only
PhpLanguageFeature.flexible.heredocs=Flexible heredoc/nowdoc syntax

PhpLanguageFeature.typed.properties=Typed properties are only allowed since PHP 7.4
PhpLanguageFeature.spread.operator.in.array=Spread operators in arrays are only allowed since PHP 7.4
PhpLanguageFeature.coalesce.assign='??=' is only allowed since PHP 7.4
PhpLanguageFeature.arrow.function=Arrow function syntax is only allowed since PHP 7.4
PhpLanguageFeature.numeric.literals.separators=Numeric literals separators are only allowed since PHP 7.4
PhpLanguageFeature.exception.throw.from.toString=Throwing an exception from ''__toString'' is only allowed since PHP 7.4, ''{0}.__toString'' may throw an exception

PhpLanguageFeature.union.types=Union types are only allowed since PHP 8.0
PhpLanguageFeature.intersection.types=Intersection types are only allowed since PHP 8.1
PhpLanguageFeature.new.in.init='new' in initializers is only allowed since PHP 8.1
PhpLanguageFeature.enum.classes=Enumerations are only allowed since PHP 8.1
PhpLanguageFeature.final.class.constants='final' class constants are only allowed since PHP 8.1
PhpLanguageFeature.readonly.properties='readonly' properties are only allowed since PHP 8.1
PhpLanguageFeature.explicit.octal.literal=Explicit octal literals are only allowed since PHP 8.1
PhpLanguageFeature.first.class.callable.syntax=First-class callable syntax is only allowed since PHP 8.1
PhpLanguageFeature.namespaced.name.as.single.token=Keywords as a part of namespace are only allowed since PHP 8.0
PhpLanguageFeature.nullsafe.dereferencing=Nullsafe operator is only allowed since PHP 8.0
PhpLanguageFeature.abstract.private.trait.methods=Abstract private trait methods are only allowed since PHP 8.0
PhpLanguageFeature.mixed.type.hint='mixed' type hint is only allowed since PHP 8.0
PhpLanguageFeature.static.type.hint='static' return type declaration is only allowed since PHP 8.0
PhpLanguageFeature.named.arguments=Named arguments are only allowed since PHP 8.0
PhpLanguageFeature.match.expression=Match expression is only allowed since PHP 8.0
PhpLanguageFeature.throw.expression=Throw expression is only allowed since PHP 8.0
PhpLanguageFeature.non.capturing.catches=Catching exceptions without capturing them to variables is only possible since PHP 8.0
PhpLanguageFeature.class.name.literal.on.object='::class' on objects is only allowed since PHP 8.0
PhpLanguageFeature.attributes=Attributes are only allowed since PHP 8.0
PhpLanguageFeature.property.promotion=Constructor property promotion is only allowed since PHP 8.0
PhpLanguageFeature.readonly.classes='readonly' classes are only allowed since PHP 8.2
PhpLanguageFeature.standalone.null.false='null' and 'false' as standalone types are only allowed since PHP 8.2
PhpLanguageFeature.true.type=Type hint named 'true' is only allowed since PHP 8.2
PhpLanguageFeature.intersection.and.union.in.same.type=Mixing intersection and union types is only allowed since PHP 8.2
PhpLanguageFeature.constants.in.traits=Constants in traits are only allowed since PHP 8.2
PhpLanguageFeature.typed.class.constants=Typed class constants are only allowed since PHP 8.3
PhpLanguageFeature.anonymous.readonly.classes=Anonymous 'readonly' classes are only allowed since PHP 8.3
PhpLanguageFeature.dynamic.class.constant=Dynamic class constant fetch is only allowed since PHP 8.3
PhpLanguageFeature.arbitrary.static.variable.initializers=Expressions and other arbitrary static variable initializers are only allowed since PHP 8.3
PhpLanguageFeature.attribute.override='#[Override]' is only allowed since PHP 8.3

#Empty project generation
php.empty.project.generator.name=PHP Empty Project
php.empty.project.generator.description=Create empty project for PHP

#UML
error.cant.create.edge=Cannot Create Relationship Link
relationship.already.exists=Relationship between {0} and {1} already exists
this.will.remove.relationship.link.between.classes=This will remove relationship link between classes and modify class {0}. Continue?
remove.relationship.link=Remove Relationship Link
final.class.cant.be.inherited=Class {0} is final
node.is.interface=Interface can only extend an interface
inspection.undefined.member.downgrade=&Downgrade severity if __magic methods are present in class

#Phar
phar.include.into.project.action.title=Include phar into project
phar.exclude.from.project.action.title=Exclude phar from project
phar.exclude.or.include.into.project.action.title=Include or exclude phar from project
phar.failed.to.parse=Failed to parse
filetype.phar.description=Php Phar
filetype.phar.display.name=Php Phar

#Composer

framework.composer.name.composer=Composer
framework.composer.path.dialog.path.to.composer=Path to Composer
framework.composer.path.dialog.path.to.composer.json=Path to composer.json
framework.composer.path.dialog.specify.composer.phar=Specify Composer phar:
framework.composer.path.dialog.specify.composer.executable=Specify Composer executable:
framework.composer.path.dialog.specify.composer.json=Specify composer.json:
framework.composer.configurable.title=Composer
framework.composer.init.dialog.title.composer.settings=Composer Settings
framework.composer.file.0.is.not.found=File ''{0}'' is not found.

framework.composer.add.dependency.task.title=Adding dependency
framework.composer.add.dependency.install.button=Install
framework.composer.add.dependency.update.button=Update
framework.composer.add.dependency.close.button=&Close
framework.composer.failed.to.0=Failed to {0}.
framework.composer.0.1.version.2={0} {1}, version {2}
framework.composer.add.dependency.show.output=Show output
framework.composer.add.dependency.hide.tooltip=Hide
framework.composer.add.dependency.successfully.installed.0.version.1=Successfully installed {0}, version {1}.
framework.composer.add.dependency.running=Running
framework.composer.add.composer.dependency.title=Manage Composer Dependencies
frameworks.composer.could.not.get.packages.info.0=Could not get packages info. {0}
frameworks.composer.could.not.get.package.info=Could not get package info.
framework.composer.label.version.to.install=&Version to install\:
framework.composer.empty.package.name.in.0=Empty package name in {0}
framework.composer.no.package.versions.in.0=No package versions in {0}
framework.composer.expected.name.0.versions.0.description.got.1=Expected <name> {0} <versions> {0} <description>, got {1}
framework.composer.add.dependency.available.packages.label=Available packages
framework.composer.package.default.version=<default>
framework.composer.add.dependency.no.package.selected=No package selected
framework.composer.add.dependency.no.such.package=No such package on packagist
framework.composer.path.form.execution.validation.wrapper=<html>Execution not set up.<br/>{0}</html>
framework.composer.path.form.empty.path.to.composer.phar=Empty path to composer.phar
framework.composer.path.form.empty.path.to.composer.executable=Empty path to composer executable
framework.composer.project.generator.name=Composer Package Project
framework.composer.project.generator.description=Create project by Composer command.
framework.composer.failed.to.download.composer.phar=Failed to download composer-stable.phar
framework.composer.project.generator.failed.to.copy.temp.directory.0.content.to.project.root=Failed to copy temp directory ''{0}'' content to project root
framework.composer.project.generation.error.title=Failed to create Composer project
framework.composer.project.generator.notification.content.failed.to.find=Failed to find {0}
framework.composer.project.generator.notification.content.failed.to.find.composer.json=Failed to find composer.json in project root
framework.composer=Composer
framework.composer.create.project.progress.title=Creating project
framework.composer.create.project.from=create project from
framework.composer.install.action.name=install
framework.composer.require.action.name=require
framework.composer.path.validation.0.is.a.directory={0} is a directory
framework.composer.path.form.empty.path.to.composer.json=Empty path to composer.json
framework.composer.vendors.library.name=Composer Vendors
framework.composer.selected.file.is.not.composer.json=Selected file is not composer.json
framework.composer.notification.title.init.composer=Init composer
framework.composer.file.0.set.as.composer.config.change.setting.a.href.here.a=File ''{0}'' set as Composer config.
framework.composer.failed.to.parse.package.names=Failed to parse package names.
framework.composer.failed.to.load.package.names=Failed to load package names.
framework.composer.failed.to.parse.package.description=Failed to parse package description.
framework.composer.add.dependency.no.version.selected=No version selected
framework.composer.add.dependency.settings.cl.dialog.title=Parameters
framework.composer.add.dependency.settings.cl.label=Command line &parameters\:
framework.composer.add.dependency.settings.interpreter.label=PHP interpreter\:
framework.composer.add.dependency.settings.title=&Settings
framework.composer.no.description.available=No description available.
framework.composer.packages.were.moved.to.0.php.include.paths.popup=Composer packages were moved from Composer External Libraries to PHP include paths.
framework.composer.packages.were.changed.0.excluded.folders.popup=Composer packages were changed, so excluded folders were updated.
framework.composer.packages.were.changed.0.php.include.paths.popup=Composer packages were changed, so PHP include paths were updated.
framework.composer.packages.were.removed.0.excluded.folders.popup=Composer packages were removed from excluded folders.
framework.composer.packages.were.removed.0.php.include.paths.popup=Composer packages were removed from PHP include paths.
framework.composer.packages.were.added.0.excluded.folders.popup=Composer packages were added to excluded folders.
framework.composer.packages.were.added.0.php.include.paths.popup=Composer packages were added to PHP include paths.
framework.composer.failed.to.0.1.script.was.cancelled=Failed to {0} {1}. Script was cancelled.
framework.composer.add.dependency.successfully.updated.0=Successfully updated {0}.
framework.composer.add.dependency.no.new.version.found.for.0=No new version found for {0}.
framework.composer.add.dependency.successfully.removed.0=Successfully removed {0}.
framework.composer.updating.package.task.title=Updating package
framework.composer.removing.package.task.title=Removing package
framework.composer.update.action.name=update
framework.composer.remove.action.name=remove
framework.composer.self.update.action.name=self-update
framework.composer.label.installed.version=Installed version\:
framework.composer.path.to.php.executable.titled=Path to PHP Executable
framework.composer.specify.php.executable.0=Specify PHP executable {0}
framework.composer.empty.path.to.0=Empty path to {0}
framework.composer.default.project.interpreter=Default project interpreter
framework.composer.default.interpreter.is.not.configured=Default interpreter is not configured for this project yet.
framework.composer.default.interpreter.for.this.project.is.remote=Default interpreter for this project is a remote one, it can't be used.
framework.composer.default.composer.interpreter.name=Interpreter for Composer
framework.composer.interpreters.combo.default.interpreter=< Default interpreter >
framework.composer.interpreters.combo.default.project.interpreter=< Default project interpreter >
framework.composer.interpreters.combo.no.default.interpreter=There is no default interpreter in default settings
framework.composer.interpreters.combo.no.default.interpreter.in.project=There is no default interpreter in this project
framework.composer.interpreters.combo.default.interpreter.no.php.path=Default interpreter has no PHP path provided
framework.composer.initialize.popup=Composer configuration file {0} found. Project settings are synchronized with it.
framework.composer.initialize.popup.multi.composer={0} composer configuration files found. Project settings are synchronized with them.
framework.composer.install.task.title=Installing packages
framework.composer.require.task.title=Installing package {0}
framework.composer.update.task.title=Updating packages
framework.composer.self.update.task.title=Updating Composer
framework.composer.script.run.configuration.name=Composer Script
framework.composer.script.run.configuration.description=Composer script run configuration
framework.composer.run.path.to.composer.json=Path to composer.json:
framework.composer.run.script=Script:
framework.composer.run.script.missing=Composer script is not specified
framework.composer.available.version=Available version:
framework.composer.package.version.available.0=updates to {0}
framework.composer.failed.check.for.update=Failed to run 'update --dry-run' command.
framework.composer.checking.for.update=Checking for update\u2026
framework.composer.loading.packages=Loading Composer Packages
framework.composer.loading.package.description=Loading Package Description
framework.composer.load.update.availability=Check for available package updates
framework.composer.loading.update.availability=Checking for Composer package updates

# Guzzle
guzzle.name=Guzzle
guzzle.http.request.gutter.name=Guzzle HTTP request
guzzle.open.http.request=Open in HTTP Request Editor
guzzle.unable.to.add.new.request.to.file=Unable to add new request to ''{0}'' file
guzzle.invalid.http.request.file=File ''{0}'' is invalid HTTP Request file
guzzle.unable.to.extract.request.parameters=Unable to extract request parameters
http.client.request.init.debug.connection.title=Initializing debug connection

php.interpreter.not.configured.title=PHP Interpreter is not configured
php.interpreter.not.configured=Please <a href="">configure PHP Interpreter</a> to use built-in web server
php.interpreter.is.remote.title=Remote PHP Interpreter is configured
php.interpreter.is.remote.message=Please <a href="">select local PHP Interpreter</a> to use built-in web server

php.cgi.not.found.title={0} not found
php.cgi.not.found=Please ensure that <a href="">configured PHP Interpreter</a> built as CGI program (--enable-fastcgi was specified)

php.smart.indent.codestyle.indent.in.php=Indent code in PHP tags

phpdoc.code.style.title=PHPDoc

phpdoc.code.style.generated.doc.blocks=Generated PHPDoc tags
phpdoc.code.style.sort.doc.blocks=PHPDoc tags order

phpdoc.code.style.force.null.position=Place \u2018null\u2019 in types:
phpdoc.code.style.in.beginning.position=In the beginning
phpdoc.code.style.in.end.position=In the end

phpdoc.code.style.convert.true.false.to=Convert True/False constants to:
phpdoc.code.style.convert.null.to=Convert Null constant to:
php.code.style.convert.keyword.to.lowercase=Convert Keywords to lower case
php.code.style.convert.lower.case=Lower case
php.code.style.convert.upper.case=Upper case
php.code.style.sort.use.stmt=Sort 'use' statements:
php.code.style.sort.alphabetically=Alphabetically
php.code.style.sort.by.length=By length

phpdoc.code.style.convert.else.if.to=Convert else if/elseif to:
phpdoc.code.style.convert.else.if.separate=else if
phpdoc.code.style.convert.else.if.combine=elseif

phpdoc.code.style.throws.analysis.depth.performance.note.title=Performance Note
phpdoc.code.style.throws.analysis.depth.performance.note.message=It's not recommended to analyze more than one level deep because it may affect IDE performance. Would you like to proceed?

phpdoc.code.style.param.spaces.panel=PHPDoc '@param' spaces
phpdoc.code.style.param.spaces.between.tag.and.type=Between tag and type:
phpdoc.code.style.param.spaces.between.type.and.name=Between type and name:
phpdoc.code.style.param.spaces.between.name.and.description=Between name and description:

php.conversion.code.style.title=Code Conversion

php.generation.code.style.title=Code Generation

array.declaration.style=Array/List Declaration Style

variable.naming.style.panel=Variable Naming Style
variable.naming.style.mixed=Mixed
variable.naming.style.camel.case=camelCase
variable.naming.style.snake.case=snake_case

php.prefdefined.codestyle.psr12.chosen.title=PSR-12 code style
php.prefdefined.codestyle.psr12.chosen.message=You may enable additional PSR-12 inspections, which are currently disabled.
php.prefdefined.codestyle.psr12.enabled.message=PSR-12 inspections were enabled.

fields.default.visibility.panel=Properties Default Visibility
fields.default.visibility.private=private
fields.default.visibility.protected=protected
fields.default.visibility.public=public

getters.setters.style=Getters/Setters style
getters.setters.order=Getters/Setters order:
getters.setters.getters.first=getters first
getters.setters.setters.first=setters first
getters.setters.naming.style=Naming style:
getters.setters.configure=Configure\u2026

php.embedded.stubs.incorrect.path.warning.title=Incorrect default stubs path
php.embedded.stubs.incorrect.path.warning.message=Configured default stubs path ''{0}'' does not exist, embedded stubs are used instead.
php.embedded.stubs.notification.provider.notification=You're looking at immutable embedded stubs. To be able to edit them you need to clone a stubs project, then provide a default stubs path via PHP / PHP Runtime / Advanced settings.
php.embedded.stubs.notification.provider.clone=Clone on GitHub
php.embedded.stubs.notification.provider.provide=Provide default stubs path
php.embedded.stubs.notification.provider.do.not.show.again=Don't show again

auto.import.in.file.scope=Enable auto-import in file scope
auto.import.in.namespace.scope=Enable auto-import in namespace scope
auto.import.from.global.space=Treat symbols from the global space
auto.import.from.global.space.class=Class:
auto.import.from.global.space.function=Function:
auto.import.from.global.space.constant=Constant:
auto.import.from.global.space.prefer.fallback=prefer fallback
auto.import.from.global.space.prefer.import=prefer import
auto.import.from.global.space.prefer.fqn=prefer FQN
# non-strict
quickfix.non.strict.object.equality=Non-strict object equality comparison
inspection.non.strict.object.equality=Non-strict object equality comparison

exception.analysis.settings.path=PHP / Analysis
inspection.severity.with.magic=When __magic is present show

import.references.on.paste.dialog.title=Select {0} To Import
import.references.on.paste.dialog.message=<html>The pasted code fragment uses {0} that are not accessible by imports in the target scope.<br/>Select the {0} that you want to import to the scope.</html>
skip.constant.params=Skip calls with constant params
inspection.unused.declaration.option.test.entry_points=Assume test declarations as entry points
inspection.unused.declaration.option.show.unused_from_entries=Show all declarations
inspection.unused.declaration.option.show_strictly_unused=Show only unused
inspection.unused.declaration.option.test.suppressGettersAndSetters=Suppress getters/setters
inspection.code.patterns.panel.errors.class = Pattern must be a valid php fqn, only '*' are accepted as placeholders
inspection.code.patterns.panel.errors.member = Method pattern {0} must be a valid php identifier, only ''*'' are accepted as placeholders
inspection.code.patterns.panel.description.label = Mark code as entry point if fqn name matches
inspection.code.patterns.panel.description.text = Leave method blank to represent constructors \n Any * will match against one or more characters in the fqn name
inspection.unusedd.description.code.patterns.button.label=Code patterns
inspection.unused.description.code.suppressed.annotations=Suppressed annotations
inspection.undefined.member.warnOnMixed=Notify on accessing member of mixed, object, stdClass, undefined type, null
configurable.PhpServerConfigurable.display.name=Server
configurable.PhpDebugConfigurable.display.name=Debug
configurable.PhpProjectConfigurable.display.name=PHP
configurable.PhpSmartKeysConfigurable.display.name=PHP
configurable.QualityToolCommonConfigurable.display.name=Quality Tools
configurable.quality.tool.php.code.sniffer=PHP_CodeSniffer
configurable.quality.tool.php.cs.fixer=PHP CS Fixer
configurable.quality.tool.laravel.pint=Laravel Pint
configurable.quality.tool.mess.detector=Mess Detector
class.implements.solely.traversable=Class ''{0}'' must implement interface Traversable as part of either Iterator or IteratorAggregate
configurable.PhpServersConfigurable.display.name=Servers
configurable.PhpTestFrameworksConfigurable.display.name=Test Frameworks
configurable.PhpTemplatesCommonConfigurable.display.name=Templates
PhpStepFiltersConfigurable.display.name=Step Filters
remote.connection.settings.interpreter.is.not.remote=Current project interpreter is not remote
remote.connection.settings.default.remote.interpreter=Default Remote Interpreter
php.element.is.available.starting.with.php.version=''{0}'' is available starting with {1} PHP version
php.element.was.removed.in.php.version=''{0}'' was removed in {1} PHP version
settings.smart.keys.title=PHP
settings.smart.keys.enable.smart.function.parameters.completion=Enable smart function parameters completion
settings.smart.keys.select.variable.name.without.dollar.sign.on.double.click=Select variable name without '$' sign on double click
settings.smart.keys.remove.php.open.close.tags.while.pasting.in.php.context=Remove PHP open/close tags while pasting in PHP context
settings.smart.keys.escape.symbols.on.paste.in.string.literals=Escape symbols on paste in string literals
settings.smart.keys.auto.insert.tag.after.typing=Auto-insert '<?php' tag after typing '<?'
settings.smart.keys.auto.insert.semicolon=Auto-insert semicolon when it is typed inside a function call 
settings.smart.keys.find.usages.of.base.method.prompt=Show additional options when searching for method usages
settings.smart.keys.replace.unnecessary.double.quotes.on.paste=Replace unnecessary double quotes on paste
php.exception.is.never.thrown=Exception ''{0}'' is never thrown in the function
php.remove.exception.from.throws=Remove ''{0}'' from @throws tag
php.remove.throws.tag=Remove @throws tag
php.add.exception=Add ''{0}'' to the existing @throws tag
ternary.condition.can.be.replaced.with.condition.expression=Expression can be safely replaced with ''{0}''
php.replace.with=Replace with ''{0}''
php.tag.is.deprecated={0} is deprecated and will be removed in PHPUnit 9
potentially.polymorphic.call.multiple.subclasses=Potentially polymorphic call. The code may be inoperable depending on the actual class instance passed as the argument.
trait.already.contains.method=Trait {0} already contains method {1}
potentially.polymorphic.call.single.subclass=Potentially polymorphic call. {0} does not have members in its hierarchy
navigate.to.meta.declaration=Navigate to ''{0}''
meta.declaration.exists=Meta declaration ''{0}'' exists for ''{1}''
meta.multiple.declaration.exists=Multiple meta declarations exists for ''{0}''
meta.declaration.line.marker.name=Meta declarations exists
unnecessary.local.variable=Unnecessary local variable
phpunit.10.won.t.support.classname.annotations=PHPUnit 10 won't support ClassName::<*> annotations
returned.by.iterator.aggregate.should.be.traversable=Objects returned by \\IteratorAggregate::getIterator() must be traversable or implement interface Iterator
inspection.probably.undefined.property=Property '#ref' declared dynamically and probably undefined
find.classes.without.member=Find classes without member
classes.without.member=Classes Without ''{0}'' in Hierarchy 
remove.pass.by.ref=Remove '\\&'
pass.by.ref.is.not.effectively.used.inside.body=Reference is unnecessary because the argument is neither assigned nor further passed by reference
suppress.if.annotated.by.tag=Suppress if annotated by ''{0}''
configure.suppressed.annotations=Configure Suppressed Annotations
enter.annotation=Enter annotation
suppressed.annotation.title=Suppressed Annotation
move.class.to.separate.file.text.family=Move class to separate file
type.primitive.false.null.hints.names.are.forbidden=Type hints named 'false' and 'null' are only allowed since PHP 8.0
type.primitive.true.hints.names.are.forbidden=Type hint named 'true' is only allowed since PHP 8.2
primitive.hints.name.are.forbidden.in.php.7=Classes named 'int', 'string', 'float', 'bool', 'true', 'false', and 'null' are forbidden in PHP 7
classes.named.void.and.iterable.are.forbidden.in.php.7.1=Classes named 'void' and 'iterable' are forbidden in PHP 7.1
classes.named.never.is.forbidden.in.php.8.1=Classes named 'never' are forbidden in PHP 8.1
classes.named.object.are.forbidden.in.php.7.2=Classes named 'object' are forbidden in PHP 7.2
switch.statements.may.only.contain.one.default.clause.in.php.7=Switch statements may only contain one 'default' clause in PHP 7
show.composer.settings.action.name=Show Composer Settings
composer.change.setting.action.name=Change Settings
composer.diagnose.task.title=Diagnosing
composer.simulating.update.task.title=Simulating Update
composer.generating.autoloader.task.title=Generating Autoloader
composer.autoloader.generation.settings.name=Autoloader Generation Settings
composer.generate.list.popup.title=Generate
install.composer.packages.task.title=Install Composer Packages
composer.require.package.task.title=Require Composer Package
composer.listing.licenses.task.title=Listing Licenses
composer.update.composer.task.title=Update Composer
composer.checking.for.changes.in.code.of.dependencies.task.title=Checking for Changes in Dependencies' Code
composer.update.composer.packages.task.title=Update Composer Packages
composer.validating.task.title=Validating
composer.validation.settings.name=Validation Settings
composer.validate.dialog.action.button.title=Validate
composer.revert.action.name=Revert
composer.clearing.cache.action.name=Clearing Cache
composer.remove.action.name=&Remove
composer.checkbox.download.composer.phar.from.getcomposer.org=Download composer-stable.phar from getcomposer.org
composer.label.phar=composer.phar
composer.label.executable='composer' executable
composer.checkbox.check.if.composer.lock.is.up.to.date=Check if composer.lock is up-to-date
composer.checkbox.autoload.classes.from.the.classmap.only=Autoload classes from the classmap only
composer.label.can.be.time.consuming=Can be time-consuming
composer.checkbox.disable.autoload.dev.dependencies=Disable autoload-dev dependencies
composer.checkbox.optimize.autoloader.convert.psr.0.4.rules.to.a.classmap=Optimize autoloader (Convert PSR-0/4 rules to a classmap)
composer.checkbox.skip.scripts.execution=Skip scripts execution
composer.checkbox.use.apcu.to.cache.found.not.found.classes=Use APCu to cache found/not-found classes
composer.checkbox.allow.unbound.version.constraints=Allow unbound version constraints
composer.checkbox.check.if.the.package.is.packagist.ready=Check if the package is Packagist-ready
composer.checkbox.validate.package.dependencies=Validate package dependencies
composer.checkbox.synchronize.ide.settings.with.composer.json=&Synchronize IDE Settings with composer.json
composer.label.path.to.composer.json=Path to &composer.json:
composer.label.the.settings.php.language.level.directories.may.be.updated=The settings (PHP Language Level, Directories) may be updated
composer.border.title.package=Package
composer.label.package=Package:
composer.label.version.to.install=Version to install:
composer.label.filter.packages=&Filter packages:
composer.label.label=Label
composer.border.title.execution=Execution
php.run.label.server=Server:
php.run.label.https=HTTPS:
php.run.label.url=URL:
php.run.label.query.string=Query String:
php.run.label.request.body=Request body:
php.run.label.request.method=Request method:
php.run.label.send.request.body.as=Send Request Body as:
php.run.radio.button.key.value=Key-Value
php.run.http.border.title.configuration=Configuration
php.run.label.interpreter=Interpreter:
php.run.radio.button.text=Text
replace.with.alias.from.target.scope=Replace with Alias from Target Scope
php.information.dialog.title=PHP Information
extract.method.parameter.name.column.title=Parameter
constant.with.same.name.already.exists.in.0=Constant with the same name already exists in {0}
path.0.is.invalid=Path ''{0}'' is invalid
rename.parameters.dialog.title=Rename Parameters
rename.parameter.dialog.description=Rename parameter in hierarchy to:
quality.tools.custom.coding.standard=Custom Coding Standard
quality.tools.0.added.to.ignored.files.list={0} added to ignored files list.
exclude.0.from.1.analysis.a=Exclude {0} from {1} analysis.
create.new.field.dialog.title=Create New Field
uml.wrong.name=Wrong name
uml.0.already.exists.in.class.1=''{0}'' already exists in class {1}
rename.filename.quick.fix=Rename file ''{0}'' to ''{1}''
rename.psi.element.quick.fix=Rename {0} ''{1}'' to ''{2}''
fix.package.text=Replace namespace ''{0}'' with ''{1}''
fix.package.text.family=Fix namespace 
variable.always.have.value.0=Variable is always ''{0,choice,0#false|1#true}'' when reached
introduce.named.constant.for.value.0=Introduce named constant for value ''{0}''


checkbox.add.packages.as.libraries=&Add packages as libraries
phpunit.label.data.set=Data set: 
label.insert.imports.on.paste=Insert imports on paste:
border.title.php=PHP
label.class.fqn=Class FQN
label.method.name=Method name
checkbox.move.to.another.class=&Move to another class
label.visibility=&Visibility
label.initialize.in=&Initialize in
radio.button.const=&const
radio.button.define=&define
border.title.constant.syntax=Constant Syntax
border.title.visibility=Visibility
radio.button.default=de&fault
radio.button.public=p&ublic
radio.button.private=pr&ivate
radio.button.protected=pr&otected
radio.button.by.concatenation=By &concatenation
radio.button.by.embeding=By &embedding
radio.button.class.constructor=Clas&s constructor
radio.button.current.method=Curren&t method
radio.button.field.declaration=Property &declaration
border.title.initialize.in=Initialize in
border.title.introduce.field=Introduce Property
radio.button.setup=set&Up
border.title.introduce.variable=Introduce Variable
label.name=Name:
label.visibility2=Visibility:
checkbox.static=static
checkbox.check.clone.method=Check '__clone' method
checkbox.check.destruct.method=Check '__destruct' method
checkbox.check.sleep.method=Check '__sleep' method
checkbox.check.wakeup.method=Check '__wakeup' method
checkbox.align.parameter.property.names=Align parameter/property names
checkbox.align.tag.comments=Align tag comments
checkbox.blank.line.before.the.first.tag=Blank line before the first tag
checkbox.blank.lines.around.parameters=Blank lines around parameters
checkbox.keep.blank.lines=Keep blank lines
checkbox.sort.phpdoc.tags=Sort PHPDoc tags
checkbox.use.fully.qualified.class.names=Use fully qualified class names
checkbox.wrap.long.lines=Wrap long lines
checkbox.use.as.a.default.template=Use as a default template
label.server.document.root=$_SERVER['DOCUMENT_ROOT']
tooltip.defaults.to.project.folder=Defaults to project folder
border.title.include.analysis=Include Analysis
button.sync.extensions.with.interpreter=Sync Extensions with Interpreter
checkbox.add.a.comma.after.last.element.in.multiline.array=Add a comma after last element in multiline array
checkbox.add.a.comma.after.last.parameter=Add a comma after last parameter in parameter list
checkbox.add.a.comma.after.last.var.in.closure.use.list=Add a comma after last variable in closure use list
checkbox.add.a.comma.after.last.argument.in.function.call=Add a comma after last argument in function call
checkbox.add.a.comma.after.last.match.arm=Add a comma after last match arm
checkbox.force.short.declaration.style=Force short declaration style
checkbox.add.phpdoc=Add PHP&Doc:
radio.button.copy.from.base.class=Co&py from base class
radio.button.default.empty.template=D&efault/Empty template
radio.button.with.inheritdoc.tag=With @&inheritDoc tag
label.constant.syntax=&Constant syntax
php.interpreter.label.label=Label
no.expression.found=No expression found
empty.type=Empty type
add.catch.clause.quick.fix=Add 'catch' clause(s)
php.delete.catch.clause.quick.fix=Delete 'catch' clause
php.delete.exception.quick.fix=Delete exception
php.surround.with.try.catch.quick.fix=Surround with 'try-catch'
trait.use.rule.type.name=Trait use rule method
member.has.0.access.but.class.has.magic.method.1=Member has {0} visibility but can be accessed via ''{1}'' magic method
member.has.0.access=Member has {0} visibility
declaration.must.be.compatible.with.0=Declaration must be compatible with {0}
declaration.must.be.compatible.with.super=Declaration must be compatible with parent
return.type.declaration.must.be.compatible.with.super=Return type declaration must be compatible with parent
array.only.updated.but.never.queried=Array is only updated, but never queried
composer.json.open.tool.settings.intention=Open tool settings
composer.json.path.not.configured=Custom repos can't be loaded. Path to composer.json is not configured
composer.json.exec.not.configured=Custom repos can't be loaded. Path to Composer executable is not configured
composer.json.custom.packages.done=Custom repos are loaded
composer.json.custom.packages.empty=No packages found. Please check your repositories
composer.json.custom.invalid.json=Invalid json
composer.json.packagist.packages.done=Only packagist repos are loaded
composer.json.packages.loading.error=Packages were not reloaded
composer.json.packages.refresh=Packages are being refreshed
cant.save.interpreter=Can''t save ''{0}'': {1}
method.is.undefined.in.class=Method ''#ref'' {1,choice,0#not found|1#might be undefined} in {0}
method.is.undefined=Method ''#ref'' {0,choice,0#is undefined|1#might be undefined}
property.is.undefined.in.class=Property ''#ref'' {1,choice,0#not found|1#might be undefined} in {0}
property.is.undefined=Property ''#ref'' {0,choice,0#is undefined|1#might be undefined}
find.cause=Find cause
find.exception.cause.table.title=Exceptions Cause
php.find.clause.throws=Might throw: {0}
action.PhpStanAddToIgnored.text=Add to PHPStan Ignore List
action.PhpStanAddToIgnored.description=Add to PHPStan Ignore List
inspection.php.unused.display.name=Unused declaration
inspection.php.expression.always.constant.inspection.display.name=Variable is always true/false when reached
inspection.composer.json.file.references.inspection.display.name=Unresolved file references
inspection.php.doc.duplicate.type.inspection.display.name=Type already exists in PHPDoc tag
inspection.php.class.implements.solely.traversable.inspection.display.name=Class can't implement Traversable directly
inspection.php.array.used.only.for.write.inspection.display.name=Array used only with write access
inspection.php.private.field.can.be.local.variable.inspection.display.name=Private property can be local
inspection.php.foreach.variable.overwrite.already.defined.variable='foreach' variable overwrites already defined variable
inspection.php.inappropriate.inherit.doc.usage.inspection.display.name=Inappropriate @inheritDoc usage
inspection.php.expression.with.same.operands.inspection.display.name=Logical expression has same operands
inspection.php.foreach.over.single.element=Foreach over array literal with single element
inspection.php.traits.use.list.inspection.display.name=One-per-line trait uses
inspection.php.long.type.form.inspection.display.name=Short form of type keywords
inspection.php.compound.namespace.depth.inspection.display.name=Compound namespace depth is more than 2
inspection.php.separate.else.if.inspection.display.name=Else if
inspection.php.new.class.missing.parameter.list.inspection.display.name=Missing parameter list
inspection.php.var.usage.inspection.display.name=Usage of var
inspection.php.modifier.order.inspection.display.name=Order of modifiers
inspection.php.missing.visibility.inspection.display.name=Missing visibility
inspection.php.parameter.by.ref.is.not.used.as.reference.inspection.display.name=Unnecessary pass-by-ref
inspection.php.accessed.array.is.always.empty=Array is always empty at the point of access
inspection.php.if.can.be.merged.with.sequential.condition='if' can be merged with subsequent condition
inspection.php.instanceof.is.always.true=Result of 'instanceof' is always 'true'
inspection.php.in.array.can.be.replaced.with.comparison='in_array' can be replaced with comparison
inspection.php.func.get.arg.can.be.replaced.with.parameter.access='func_get_arg()' call can be replaced with parameter access
inspection.php.idempotent.operation=Idempotent operation in binary expression
inspection.php.modulo.operation.with.one=Modulo operation with '1' as operand
inspection.php.format.function.call.with.single.argument=Format function call with single argument
inspection.php.invalid.instanceof.argument.type=Argument of 'instanceof' should be only objects or strings
inspection.php.condition.always.evaluates.to.constant=Condition always evaluates to 'true/false'
inspection.php.condition.checked.by.next.condition=Condition inside logical expression checked by subsequent condition
inspection.php.array.write.access.is.not.used=Array write access is not used
inspection.php.redundant.optional.argument=Redundant optional argument
inspection.php.property.only.written=Property usages have same access
inspection.php.to.string.may.produce.exception='__toString' may throw an exception
inspection.php.loop.never.iterates.name=Loop does not iterate
inspection.php.loop.never.iterates=''{0}'' statement does not loop
inspection.php.ternary.expression.can.be.replaced.with.condition.inspection.display.name=Ternary expression can be replaced with condition
inspection.php.ternary.expression.can.be.replaced.with.short.version=Ternary expression can be replaced with short version
inspection.php.unnecessary.local.variable.inspection.display.name=Unnecessary local variable
inspection.php.unnecessary.semicolon.inspection.display.name=Unnecessary semicolon
inspection.php.unnecessary.spread.operator.for.function.call.argument=Unnecessary spread operator for function call argument
inspection.php.curly.brace.access.syntax.usage.inspection.display.name=Curly brace access syntax usage
inspection.php.single.statement.with.braces.inspection.display.name=Single-statement body with braces
inspection.php.statement.without.braces.inspection.display.name=Control statement body without braces
inspection.php.str.functions.inspection.display.name='str*()' calls can be replaced with PHP 8 'str_*()' calls
inspection.php.duplicate.character.in.str.function.call=Duplicate character in function call
inspection.php.nested.ternary.expression.usage.inspection.display.name=Nested ternary operator usage
inspection.php.doc.field.type.mismatch.inspection.display.name=Type doesn't match property's declared type
inspection.php.switch.case.without.default.branch.inspection.display.name=Switch statement without default branch
inspection.php.strict.comparison.of.operands.with.different.types=Strict comparison of operands with incompatible types
inspection.php.suspicious.name.combination.inspection.name=Suspicious names combination
inspection.php.duplicate.switch.case.body.inspection.display.name=Duplicate branch in switch statement
inspection.php.duplicate.switch.catch.body.inspection.display.name=Duplicate branch in 'catch' statement
inspection.php.duplicate.operand.in.comparison=Duplicate operand in comparison
inspection.php.exception.is.immediately.rethrown=Exception is immediately rethrown
inspection.php.continue.targeting.switch='continue' is targeting 'switch' statement
inspection.php.redundant.continue.break.argument=Redundant 'continue/break' argument
inspection.php.redundant.array.call.in.foreach.iterated.value=Redundant 'array_values' call on a value iterated in 'foreach'
inspection.php.duplicate.match.arm.body.inspection.display.name=Duplicate arm in 'match' expression
inspection.php.field.assignment.type.mismatch.inspection.display.name=Type mismatch in property assignment
inspection.php.closure.can.be.converted.to.short.arrow.function.inspection.display.name=Closure can be converted to arrow function
inspection.php.concatenation.with.arithmetic.usage=Concatenation with arithmetic usage
inspection.php.parameter.always.have.same.value=Parameter's value is always the same
inspection.switch.with.single.case='switch' with single 'case'
inspection.php.method.return.value.is.never.used=Method's return value is never used
inspection.php.isset.can.be.replaced.with.coalesce='isset' can be replaced with coalesce
inspection.php.cast.is.unnecessary=Type cast is unnecessary
inspection.php.unnecessary.curly.variable.syntax=Unnecessary curly braces syntax for variable
inspection.php.deprecated.dollar.brace.string.interpolation=Deprecated '${' string interpolation
inspection.php.unpacked.argument.type.mismatch.inspection.display.name=Invalid type of unpacked argument
inspection.php.missing.return.type.inspection.display.name=Missing return type declaration
inspection.php.missing.parameter.type.inspection.display.name=Missing parameter's type declaration
inspection.php.missing.field.type.inspection.display.name=Missing property's type declaration
inspection.php.expression.without.clarifying.parentheses.inspection.display.name=Expression without clarifying parentheses
inspection.php.unnecessary.parentheses.inspection.display.name=Unnecessary parentheses
inspection.php.method.may.be.static.inspection.display.name=Method can be made 'static'
inspection.php.format.function.parameters.mismatch.inspection.display.name=Format function parameters mismatch
inspection.php.ignored.class.alias.declaration.display.name=Ignored class alias declaration
inspection.php.composer.duplicated.requirement.inspection.display.name=Duplicate package entries in composer.json
inspection.php.not.installed.packages.inspection.display.name=Non-installed Composer packages
inspection.php.disabled.quality.tool.composer.inspection.display.name=Quality tool inspection is disabled
inspection.php.composer.extension.stubs.inspection.display.name=Extension is missing in composer.json
inspection.php.disabled.extension.stubs.inspection.display.name=Disabled extension stubs
inspection.php.array.fill.can.be.converted.to.loop.inspection.display.name='array_fill' can be converted to loop
inspection.php.loop.can.be.converted.to.array.fill.inspection.display.name=Loop can be converted to 'array_fill()' call
inspection.php.closure.can.be.converted.to.first.class.callable.inspection.display.name='Closure::fromCallable()' can be converted to the first-class callable syntax
inspection.php.get.class.can.be.replaced.with.class.name.literal.inspection.display.name='get_class()' call can be replaced with '::class'
inspection.php.array.filter.can.be.converted.to.loop.inspection.display.name='array_filter()' call can be converted to loop
inspection.php.loop.can.be.converted.to.array.filter.inspection.display.name=Loop can be converted to 'array_filter()' call
inspection.php.loop.can.be.converted.to.array.map.inspection.display.name=Loop can be converted to 'array_map()' call
inspection.php.array.map.can.be.converted.to.loop.inspection.display.name='array_map()' call can be converted to loop
inspection.php.pow.call.can.be.replace.with.pow.operator='pow()' call can be replaced with '**' operator
inspection.php.short.open.tag.inspection.display.name=Short open tag usage
inspection.php.open.echo.tag.inspection.display.name=Open 'echo' tag usage
inspection.php.short.open.echo.tag.inspection.display.name=Short open 'echo' tag usage
inspection.php.constructor.style.inspection.display.name=Old style constructor
inspection.php.assignment.replaceable.with.prefix.expression.inspection.display.name=Assignment can be replaced with increment or decrement
inspection.php.assignment.replaceable.with.operator.assignment.inspection.display.name=Assignment can be replaced with operator assignment
inspection.php.invalid.magic.method.modifiers.inspection.display.name=Invalid magic method modifiers
inspection.php.incorrect.magic.method.signature.inspection.display.name=Incorrect magic method signature
inspection.php.array.access.on.illegal.type.display.name=Array offset access on illegal type
inspection.php.parameter.name.chaged.during.inhertiance=Parameter's name changed during inheritance
inspection.php.named.argument.may.be.unresolved=Named argument may be unresolved
inspection.php.argument.without.name.identifier=Argument without name identifier
inspection.php.named.argument.usage=Argument with name identifier
inspection.php.named.arguments.with.changed.order=Named arguments order does not match parameters order
inspection.php.mixed.return.type.can.be.reduced='mixed' return type can be narrowed
inspection.php.null.is.not.compatible.with.parameter='null' is not compatible with parameter's declared type
inspection.php.nested.dirname.call.can.be.replaced.with.levels.usage=Nested 'dirname()' call can be replaced with 'levels' parameter usage
inspection.php.nested.min.max.call=Nested 'min/max' call
inspection.php.trait.method.use.is.located.inside.different.target.class=Trait use rule resolved to method with different containing class 
inspection.php.trait.usage=Trait usage is not allowed
inspection.php.class.cant.be.used.as.attribute=Class cannot be used as attribute
inspection.php.redundant.match.expression='match' expression has only default arm and should be simplified
inspection.php.loop.can.be.replaced.with.str.repeat=Loop can be replaced with 'str_repeat'
inspection.php.concatenation.with.empty.string.can.be.merged=Concatenation to empty string can be merged with assignment
inspection.php.class.constant.accessed.via.child.class=Class constant referenced via child class
inspection.php.match.expression.can.be.replaced.with.ternary='match' expression can be replace with ternary expression
inspection.php.switch.can.be.replaced.with.match.expression='switch' can be replaced with 'match' expression
inspection.php.if.can.be.replaced.with.match.expression='if' can be replaced with 'match' expression
inspection.php.match.can.be.replaced.with.switch.statement='match' can be replaced with 'switch' statement
inspection.php.implicit.octal.literal.can.be.replaced.with.explicit.one=Implicit octal literal can be replaced with explicit one
inspection.php.inapplicable.attribute.target.declaration=Non-applicable attribute target declaration
inspection.php.expected.values.should.be.used=Expected values should be used
inspection.php.immutable.property.is.written.in.invalid.scope=Immutable property written in invalid scope
inspection.php.attribute.is.not.repeatable=Non-repeatable attribute
inspection.php.attribute.no.return.can.be.added=NoReturn attribute can be added
inspection.php.pure.contract.attribute.can.be.added='#[Pure]' attribute can be added
inspection.php.pure.function.may.produce.side.effect=Pure function may produce side effects
inspection.php.attribute.array.shape.can.be.added='#[ArrayShape]' attribute can be added
inspection.php.attribute.can.be.overridden=Attribute can be added to overriding member 
inspection.php.array.key.does.not.match.array.shape=Array key does not match array shape 
inspection.php.missing.strict.types.declaration.inspection.display.name=Missing strict types declaration
inspection.php.incompatible.return.type.inspection.display.name=Incompatible return type
inspection.php.strict.type.checking.inspection.display.name=Strict type checking rules violation
inspection.php.non.canonical.elements.order.inspection.display.name=Non-canonical order of elements
inspection.php.null.safe.operator.can.be.used=Nullsafe operator '?->' can be used
inspection.php.variable.variable.inspection.display.name=Usage of a variable variable
inspection.php.traditional.syntax.array.literal.inspection.display.name=Traditional syntax array literal detected
inspection.php.illegal.psr.class.path.inspection.display.name=Class path doesn't match project structure
inspection.php.multiple.classes.declarations.in.one.file.display.name=Multiple classes declarations in one file
inspection.php.redundant.catch.clause.inspection.display.name=Redundant catch clause
inspection.php.unhandled.exception.inspection.display.name=Unhandled exception
inspection.php.non.strict.object.equality.inspection.display.name=Non-strict object equality
inspection.php.duplicate.case.inspection.display.name=Duplicate case in switch statement
inspection.php.duplicate.match.condition.inspection.display.name=Duplicate condition
inspection.php.unused.match.arm.condition.inspection.display.name=Unused 'match' condition
inspection.php.unused.switch.case.inspection.display.name=Unused 'switch' branch
inspection.php.var.export.used.without.return.argument='var_export' or 'print_r' call is used without 'return' argument
inspection.php.comment.will.be.parsed.as.attribute=Comment is parsed as attribute in PHP 8.0
inspection.php.redundant.attribute.parenthesis=Redundant parentheses in attribute
inspection.php.fully.qualified.name.usage.inspection.display.name=Fully qualified name usage
inspection.php.unnecessary.fully.qualified.name.inspection.display.name=Unnecessary fully qualified name
inspection.mess.detector.validation.inspection.display.name=PHP Mess Detector validation
inspection.php.CS.fixer.validation.inspection.display.name=PHP CS Fixer validation
inspection.php.CS.validation.inspection.display.name=PHP_CodeSniffer validation
inspection.php.laravel.pint.inspection.display.name=Laravel Pint validation
inspection.php.usage.of.silence.operator.inspection.display.name=Usage of a silence operator
inspection.php.useless.trailing.comma.inspection.display.name=Useless trailing comma
inspection.php.useless.trailing.comma.inspection.desc=Useless trailing comma
inspection.php.remove.useless.trailing.comma=Remove useless trailing comma
inspection.php.add.line.break.after.trailing.comma=Add line break after trailing comma
inspection.php.foreach.array.is.used.as.value.inspection.display.name=Foreach array is used as value
inspection.php.foreach.nested.outer.key.value.variables.conflict.inspection.display.name=Nested vs outer 'foreach' variables conflict
inspection.php.missing.break.statement.inspection.display.name=Missing 'break' statement
inspection.php.never.typed.function.returning.value='never'-typed function returns a value
inspection.php.preg.match.without.regular.expression='preg_match' can be replaced with 'str_contains'
inspection.php.preg.split.can.be.replaced.with.explode='preg_split' can be replaced with 'explode'
inspection.php.unit.covers.by.access.modifier.is.deprecated.inspection.display.name=Deprecated @covers/@uses by access modifier annotation
inspection.php.unit.expected.exception.doc.tag.is.deprecated.inspection.display.name=Deprecated exception handling via doc tags
inspection.php.unit.invalid.mocking.target=Invalid PHPUnit mocking target
inspection.php.mockery.invalid.mocking.target=Invalid Mockery mocking target
inspection.php.unit.deprecated.expect.exception.inspection.display.name=Deprecated expectException usage
inspection.php.unit.deprecated.call.in.phpunit.10=Method is deprecated in PHPUnit 10
inspection.php.unit.assert.array.has.key.inspection.display.name=Method 'assertArrayHasKey/assertArrayNotHasKey' can be used instead
inspection.php.unit.misordered.assert.equals.arguments.inspection.display.name=Misordered PHPUnit equality assertion method arguments
inspection.php.unit.assert.count.inspection.display.name=Usage 'assertCount/assertSameSize' methods instead of assertEquals
inspection.php.unit.assert.contains.inspection.display.name=Deprecated 'assertContains/assertNotContains' usage
inspection.php.unit.assert.can.be.replaced.with.fail=Assertion can be replaced with 'fail'
inspection.php.unit.assert.can.be.replaced.with.assert.true.false=Assertion can be replaced with 'assertTrue/assertFalse'
inspection.php.unit.assert.empty.inspection.display.name=Assertion can be replaced with 'assertEmpty/assertNotEmpty'
inspection.php.unit.assert.always.execute.to.same.result='assertTrue()' with incompatible argument type
inspection.php.unit.assert.file.equals.inspection.display.name=Deprecated 'assertFileEquals/assertStringEqualsFile' usage
inspection.php.unit.assert.equals.inspection.display.name=Deprecated 'assertEquals/assertNotEquals' usage
inspection.php.unit.covers.function.without.scope.resolution.operator.inspection.display.name=Covered function reference is provided without \u2018::\u2019
inspection.php.unit.undefined.data.provider.inspection.display.name=Undefined PHPUnit data provider
inspection.php.unit.deprecated.data.provider.signature.inspection.display.name=Deprecated usage of data provider since PHPUnit 10
inspection.php.unit.missing.target.for.test.inspection.display.name=Missing target element for PHPUnit test
inspection.php.constant.naming.convention.inspection.display.name=Constant name is not following coding convention
inspection.php.variable.naming.convention.inspection.display.name=Variable name is not following coding convention
inspection.php.property.naming.convention.inspection.display.name=Property name is not following coding convention
inspection.php.method.naming.convention.inspection.display.name=Method name is not following coding convention
inspection.php.function.naming.convention.inspection.display.name=Function name is not following coding convention
inspection.php.class.naming.convention.inspection.display.name=Class name is not following coding convention
inspection.php.overriding.method.visibility.inspection.display.name=Method visibility should not be overridden
inspection.php.method.or.class.call.is.not.case.sensitive.inspection.display.name=Case mismatch in method call or class usage
inspection.php.expression.result.unused.inspection.display.name=Expression result unused
inspection.php.throwable.not.thrown.inspection.display.name=Throwable is not thrown
inspection.php.void.function.result.used.inspection.display.name=Void function result used
inspection.php.redundant.closing.tag.inspection.display.name=Redundant closing tag
inspection.php.too.many.parameters.inspection.display.name=Too many parameters in function declaration
inspection.php.method.parameters.count.mismatch.inspection.display.name=Parameters number mismatch declaration
inspection.php.inconsistent.return.points.inspection.display.name=Inconsistent return points
inspection.php.redundant.variable.doc.type.inspection.display.name=Redundant @var tag
inspection.php.doc.redundant.throws.inspection.display.name=Redundant @throws tag(s)
inspection.php.doc.missing.throws.inspection.display.name=Missing @throws tag(s)
inspection.php.redundant.doc.comment.inspection.display.name=Redundant PHPDoc comment
inspection.php.doc.signature.inspection.display.name=PHPDoc comment matches function/method signature
inspection.php.doc.is.not.complete.inspection.display.name=PHPDoc comment signature is not complete
inspection.php.return.doc.type.mismatch.inspection.display.name=Return type in PHPDoc comment does not match the actual return type
inspection.php.type.tag.without.variable.name=Type tag without variable name
inspection.php.illegal.string.offset.inspection.display.name=Illegal string offset
inspection.php.illegal.array.key.type.inspection.display.name=Illegal array key type
inspection.php.empty.index.operator.not.supported.for.strings.display.name=Empty index operator not supported for strings
inspection.php.invalid.string.offset.usage=Invalid string offset usage
inspection.php.empty.index.operator.not.supported.for.strings='[]' operator not supported for strings
inspection.php.silly.assignment.inspection.display.name=Redundant assignment
inspection.php.missing.doc.comment.inspection.display.name=Missing PHPDoc comment
inspection.php.enforce.doc.comment.inspection.display.name=Enforce PHPDoc comment
inspection.php.unused.parameter.inspection.display.name=Unused parameter
inspection.php.wrong.foreach.argument.type.inspection.display.name=Invalid argument supplied for 'foreach()'
inspection.php.division.by.zero.inspection.display.name=Division by zero
inspection.php.assignment.in.condition.inspection.display.name=Assignment in condition
inspection.php.condition.can.be.replaced.with.min.max.call=Condition can be replaced with 'min()'/'max()' call
inspection.php.enum.case.with.value.not.found=Case with specified value not found in enum
inspection.php.wrong.catch.clauses.order.inspection.display.name=Wrong catch clauses order
inspection.php.wrong.string.concatenation.inspection.display.name=Wrong string concatenation
inspection.php.constant.reassignment.inspection.display.name=Constant reassignment
inspection.php.non.compound.use.inspection.display.name=Unnecessary statement use
inspection.php.private.method.may.be.inaccessible.in.late.static.binding.call=Private method may be inaccessible during late static binding call
inspection.php.to.string.implementation.inspection.display.name=Method '__toString' implementation
inspection.php.to.string.return.inspection.display.name=Method '__toString' return type
inspection.php.internal.entity.used.inspection.display.name=Usage of internal entity
inspection.php.deprecated.implode.usage.inspection.display.name=Deprecated 'implode/join' usage
inspection.php.deprecated.partially.supported.callables.display.name=Deprecated partially supported callables
inspection.php.deprecated.serializable.interface.usage.inspection.display.name=Deprecated 'Serializable' interface usage
inspection.php.expression.always.null.inspection.display.name=Expression is always 'null'
inspection.php.deprecated.cast.inspection.display.name=Deprecated cast
inspection.php.define.constant.name.with.leading.slash=Constant name defined with a leading slash
inspection.php.define.constant.can.be.replaced.with.const.syntax=Define constant name can be replaced with 'const' syntax
inspection.php.element.is.not.available.in.current.php.version.inspection.display.name=Element is not available in configured PHP version
inspection.php.deprecation.inspection.display.name=Deprecated
inspection.php.plural.mixed.can.be.replaced.with.array='mixed' type can be replaced with 'array'
inspection.php.language.level.inspection.display.name=Language level
inspection.php.unused.field.default.value.inspection.display.name=Redundant property initializer
inspection.php.unused.alias.inspection.display.name=Unused import
inspection.php.unused.local.variable.inspection.display.name=Unused local variable
inspection.php.write.access.to.referenced.array.value.without.unset=Write access to referenced array value without 'unset'
inspection.php.boolean.expression.can.be.simplified=Boolean expression can be simplified
inspection.php.array.search.can.be.replaced.with.in.array='array_search()' can be replaced with 'in_array()' call
inspection.php.array.push.with.single.element='array_push()' with single element
inspection.array.access.can.be.replaced.with.foreach.value=Array access can be replaced with 'foreach' value
inspection.php.unused.private.field.inspection.display.name=Unused private property
inspection.php.unused.private.method.inspection.display.name=Unused private method
inspection.php.goto.into.loop.inspection.display.name=Goto into loop statement
inspection.php.pass.by.ref.inspection.display.name=Pass parameter by reference
inspection.php.optional.before.required.parameters.inspection.display.name=Optional before required parameter
inspection.php.params.inspection.display.name=Parameter type
inspection.php.include.inspection.display.name=Unresolved include
inspection.php.undefined.constant.inspection.display.name=Undefined constant
inspection.php.undefined.field.inspection.display.name=Undefined property
inspection.php.dynamic.field.declaration=Dynamic property declaration
inspection.php.too.long.member.reference.chain=Member reference chain is too long to analyze
inspection.php.statement.has.empty.body.inspection.display.name=Statement has empty body
inspection.php.missing.parent.call.magic.inspection.display.name=Missing parent call for magic methods
inspection.php.missing.parent.call.common.inspection.display.name=Missing parent call for method
inspection.php.missing.parent.constructor.inspection.display.name=Missing parent call for constructor
inspection.php.undefined.class.constant.inspection.display.name=Undefined class constant
inspection.php.super.class.incompatible.with.interface.inspection.display.name=Method declaration in parent class is incompatible with implemented interface
inspection.php.covered.element.in.class=Element in class is already covered
inspection.php.ranges.in.class.can.re.merged=Ranges in class can be merged
inspection.php.signature.mismatch.during.inheritance.inspection.display.name=Declaration of overridden method should be compatible with parent class
inspection.php.abstract.static.method.inspection.display.name=Static function should not be abstract
inspection.php.static.as.dynamic.method.call.inspection.display.name=Static method called as dynamic
inspection.php.dynamic.as.static.method.call.inspection.display.name=Dynamic method called as static
inspection.php.class.static.member.accessed.via.instance.inspection.display.name=Class static member accessed via instance
inspection.php.possible.polymorphic.invocation.inspection.display.name=Possible polymorphic call
inspection.php.promoted.field.usage=Promoted property usage
inspection.php.rand.arguments.in.revers.order=Misordered 'rand' function arguments
inspection.field.can.be.promoted=Property can be promoted
inspection.php.redundant.assignment.to.promoted.field=Redundant assignment to promoted property
inspection.php.undefined.callback.inspection.display.name=Undefined callback
inspection.php.undefined.function.inspection.display.name=Undefined function
inspection.php.undefined.class.inspection.display.name=Undefined class
inspection.php.multiple.class.declarations.inspection.display.name=Multiple class declarations
inspection.php.undefined.namespace.inspection.display.name=Undefined namespace
inspection.php.undefined.method.inspection.display.name=Undefined method
inspection.php.undefined.variable.inspection.display.name=Undefined variable
inspection.php.undefined.goto.label.inspection.display.name=Undefined goto label
inspection.php.group.undefined=Undefined symbols
inspection.php.group.probable.bugs=Probable bugs
inspection.php.group.general=General
inspection.php.group.regexp=Regular expressions
inspection.php.group.strict.standards=PHP strict standards
inspection.php.group.type.compatibility=Type compatibility
inspection.php.group.control.flow=Control flow
inspection.php.group.code.smell=Code smell
inspection.php.group.psr.12=PSR-12
inspection.php.group.phpdoc=PHPDoc
inspection.php.group.code.style=Code style
inspection.php.group.composer=Composer
inspection.php.group.unused=Unused symbols
inspection.php.group.naming.conventions=Naming conventions
inspection.php.group.phpunit=PHPUnit
inspection.php.group.quality.tools=Quality tools
inspection.php.group.replacable.assignments=Replaceable assignments
inspection.php.group.error.handling=Error handling
inspection.php.group.attributes=Attributes
list.item.update.phpdoc.comment=Update PHPDoc Comment
inspection.php.unnecessary.return.inspection.display.name=Unnecessary 'return/continue' statement
inspection.php.unnecessary.else.inspection.display.name=Unnecessary 'else' branch
inspection.php.unnecessary.return.function='return' is unnecessary as the last statement in a function
inspection.php.unnecessary.return.method='return' is unnecessary as the last statement in a method
inspection.php.unnecessary.continue='continue' is unnecessary as the last statement in a loop
php.unit.create.target.method.quick.fix.family.name=Create missing target method
inspection.php.missing.return.type.description=Missing function's return type declaration
inspection.php.missing.param.type.description=Missing parameter's type declaration
quickfix.php.missing.param.type.description=Add ''{0}'' as the parameter''s type
quickfix.php.missing.param.type.batch.description=Add inferred type as the parameter's type
php.add.method.declaration.quick.fix.text=Add method
php.add.tag.base.quick.fix.family.name=Add {0} tag
inspection.php.unused.field.default.value.description=Property initializer is redundant
php.change.function.signature.manually.quick.fix.family.name=Change signature manually
php.change.function.signature.from.usage.quick.fix.family.name=Change function signature from usage
searching.for.usages=Searching For Usages\u2026
php.replace.with.local.variable.quick.fix.family.name=Replace property with local variable
inspection.php.private.field.can.be.local.variable.description=Property can be replaced with local variable
inspection.php.abstract.static.method.description=PHP Strict Standards: Static method '#ref' should not be abstract
php.replace.argument.with.cast.quick.fix.family.name=Cast argument to {0}
php.change.cast.operation.quick.fix.family.name=Change cast to {0}
php.replace.with.null.quick.fix.family.name=Replace with 'null'
php.replace.try.from.with.null.quick.fix.family.name=Replace 'tryFrom()' call with 'null'
inspection.php.expression.always.null.description='#ref' is always 'null'
inspection.unnecessary.static.reference=Redundant 'static' in final class
inspection.unnecessary.string.cast=Redundant cast to string
inspection.array.to.string.conversion=Array to string conversion
inspection.unnecessary.bool.cast=Redundant cast to boolean
php.configure.extensions.quick.fix.family.name=Configure extension stubs
php.enable.extension.quick.fix.family.name=Enable extension stub
php.enable.extension.quick.fix.text=Enable ''{0}'' extension stub
inspection.php.disabled.extension.stubs.description=Disabled ''{0}'' extension stub
inspection.php.unnecessary.semicolon.description=Unnecessary ;
inspection.php.inappropriate.inherit.doc.usage.description=@inheritDoc used for member without parent members with doc comments
inspection.php.inappropriate.inherit.doc.usage.class.description=@inheritDoc used for class without parent class with doc comments
inspection.php.inappropriate.inherit.doc.usage.description2=@inheritDoc should be used only on class members
php.inline.variable.quick.fix.family.name=Inline variable
update.php.doc.type.family.name=Update PHPDoc type
update.php.doc.type.comment=Replace with ''{0}''
inspection.php.return.doc.type.mismatch=Return type in PHPDoc does not match the actual return type
inspection.php.doc.signature.description=Duplicate argument PHPDoc
inspection.php.doc.signature.description2=Return type does not match the declared
inspection.php.doc.signature.description3=PHPDoc for non-existing argument
inspection.php.doc.signature.description5=Argument type does not match the declared
php.flip.variable.and.type.quick.fix.family.name=Flip variable and type
inspection.php.non.canonical.elements.order.description=Variable and its type are listed in non-canonical order
php.make.class.abstract.quick.fix.family.name=Make class abstract
php.remove.doc.tag.quick.fix.family.name=Remove {0}
php.make.method.non.final.quick.fix.family.name=Make method non-final
inspection.php.short.open.tag.description=Short opening tag usage
inspection.php.short.echo.open.tag.description=Short echo opening tag usage
php.make.method.non.static.quick.fix.family.name=Make method non-static
php.flip.arguments.quick.fix.family.name=Flip first and second argument
inspection.php.unused.alias.description=Import '#ref' is unnecessary
inspection.php.unused.alias.description2=Import '#ref' is never used
php.rename.wrong.reference.quick.fix.family.name=Rename reference
php.append.doc.static.fix.family.name=Prepend function reference with '::'
inspection.php.include.description=Can''t resolve target of expression ''{0}''
inspection.php.include.description2=Path ''{0}'' not found
make.call.dynamic.quick.fix.family.name=Make call dynamic
inspection.php.undefined.class.description=Multiple definitions exist for class '#ref'
inspection.php.undefined.class.description2=Undefined class '#ref'
inspection.php.undefined.class.description5=Other declarations of class '#ref' exist
php.dead.code.entries=PHP dead code entries
inspection.php.redundant.variable.doc.type.description=@var tag specifies the type already inferred from source code
php.remove.all.unused.parameters.quick.fix.text=Remove all unused parameters
transform=Transform
remove=Remove
php.remove.unused.local.variable.without.successor.quick.fix.family.name=Remove variable ''{0}''
php.replace.with.float.cast.quick.fix.family.name=Replace with '(float)' cast
php.create.data.provider.quick.fix.family.name=Create data provider
inspection.php.undefined.namespace.description=Undefined namespace '#ref'
fix.not.available=Fix Not Available
php.unit.create.target.class.quick.fix.family.name=Create missing target class
initialize.var.quick.fix.family.name=Initialize with a value
inspection.php.statement.has.empty.body.description=Statement has empty body
php.replace.with.interface.quick.fix.family.name=Replace with {0}
remove.redundant.suppression.quick.fix.family.name=Remove ''{0}'' suppression
php.change.method.modifiers.quick.fix.family.name=Change modifiers
php.change.method.modifiers.quick.fix.text=Remove modifiers
php.remove.statement.fix.family.name=remove
php.make.method.non.abstract.quick.fix.family.name=Make method non-abstract
replace.plus.asgn.to.concat.asgn.quick.fix.family.name=Replace '+=' with '.='
replace.plus.to.concat.quick.fix.family.name=Replace '+' with '.'
replace.with.0=Replace with {0}
php.remove.ref.from.function.declaration.quick.fix.family.name=Remove '&' from function declaration
php.remove.ref.from.assignment.quick.fix.family.name=Replace '=\\&' with '='
php.remove.pass.by.ref.from.parameter.quick.fix.family.name=Remove '&' from the parameter
inspection.php.pass.by.ref.description=Only variables can be returned by reference
php.non.strict.object.equality.quick.fix.text=Replace with identity comparison
php.add.field.declaration.quick.fix.text=Add property
quick.fix.error=Quick-Fix Error
the.original.class.0.does.not.belong.to.the.project.and.cannot.be.modified=The original class {0} does not belong to the project\nand cannot be modified.
add.constant.declaration.quick.fix.text=Add constant
add.enum.declaration.quick.fix.text=Add enum case
constant.ref.not.found.in=Constant ''#ref'' not found in {0}
php.remove.parameters.quick.fix.text=Remove unused parameter
replace.extends.implements=Replace 'extends'/'implements'
inspection.php.undefined.class.other.declaration.exists=Other declarations of class ''#ref'' exist at {0}
inspection.php.undefined.class.other.declaration.exists.and=Other declarations of class ''#ref'' exist at {0} and {1} other
show.implementations.for.0=Implementations of {0}
show.super.types.for.0=Show super types for {0}
display.name.directory.0=Directory ''{0}''
hint.text.element.doesn.t.have.fqn=Element does not have FQN
instanceof.is.always.true={0} is already in hierarchy of {1}
dialog.message.server.host.cannot.be.empty=Server host cannot be empty
dialog.message.port.cannot.be.negative.number=Port number cannot be negative
dialog.message.query.string.cannot.start.with=Query string cannot start with '?'
inspection.message.code.fragment.too.complex.to.parse.this.piece.code.will.be.treated.as.plain.text=Code fragment is too complex to parse and will be treated as plain text
inspection.message.control.flow.too.big.to.analyze=Control flow is too big to analyze
remove.variable=Remove variable
annotator.fix.remove=Remove ''{0}''
inspection.message.class.may.inherit.from.final.class=Class may not inherit from final class
inspection.message.key.element.cannot.be.reference=Key element cannot be a reference
inspection.message.absolute.method.reference.should.be.specified.for.insteadof.trait.use.rule=Absolute method reference should be specified for the 'insteadof' trait use rule
inspection.message.generators.may.only.declare.return.type.generator.iterator.or.traversable.or.iterable.permitted=Generators may only declare a return type of ''Generator'', ''Iterator'' or ''Traversable'', or ''iterable'', {0} is not permitted
find.usages.button.base.method=Base Method
find.usages.button.current.method=Current Method
find.usages.prompt.dialog.implements=Method ''{0}()'' of class ''{1}'' implements {3,choice,0#method|1#methods} in ''{2}''\nDo you want to find usages of base {3,choice,0#method|1#methods}?
find.usages.prompt.dialog.overrides=Method ''{0}()'' of class ''{1}'' overrides {3,choice,0#method|1#methods} in ''{2}''\nDo you want to find usages of base {3,choice,0#method|1#methods}?
more.actions=More actions\u2026
show.log.of.composer.related.actions=Show log of Composer-related actions
show.log=Show log
members.to.report=Members to Report
entry.points=Entry points
entry.points.tab=Entry Points
constructors=constructors
inspection.message.type.mismatch.should.be.conditional.expression=Type mismatch: should be a conditional expression
filetype.doctrine.query.description=Doctrine query language
inspection.php.typed.property.might.be.uninitialized.inspection.display.name=Typed property might be uninitialized
inspection.php.typed.property.might.be.uninitialized.inspection.problem=Typed property ''{0}'' might be uninitialized
inspection.message.primitive.types.can.t.be.used.as.instanceof.argument=Only objects or strings should be used as ''instanceof'' argument, current: ''{0}''
another.definition.with.same.name.exists.in.this.file=Another definition with same name exists in this file
method.with.same.name.already.defined.in.this.class=Method with same name already defined in this class
global.code.should.be.enclosed.in.global.namespace.declaration=Global code should be enclosed in global namespace declaration
static.property.cannot.be.unset=Static property cannot be unset
the.yield.expression.can.only.be.used.inside.a.function=The 'yield' expression can only be used inside a function
multiple.modifiers.are.not.allowed=Multiple modifiers are not allowed
access.type.for.interface.member.must.be.omitted=Access type for interface member must be omitted
final.modifier.is.not.allowed.here='Final' modifier is not allowed here
private.constant.cannot.be.final='private' constant cannot be 'final' as it is not visible to other classes
fields.cannot.be.declared.final=Properties cannot be declared final
abstract.modifier.is.not.allowed.here='Abstract' modifier is not allowed here
fields.cannot.be.declared.abstract=Properties cannot be declared abstract
static.modifier.is.not.allowed.here='Static' modifier is not allowed here
static.property.cannot.be.readonly='static' property cannot be 'readonly'
jump.into.a.finally.block.is.disallowed=Jump into a 'finally' block is disallowed
cannot.use.static.as.function.return.type.declaration='static' is not allowed as a return type declaration outside of the class scope
void.type.cannot.be.nullable=Void type cannot be nullable
can.only.be.used.as.standalone.type={0} can only be used as a standalone type
void.can.only.be.used.as.return.type=Void can only be used as a return type
never.can.only.be.used.as.return.type='never' can only be used as a return type
static.is.not.allowed.in.parameter.type.declaration='static' is not allowed in parameter type declaration
cannot.use.this.as.parameter=Cannot use $this as parameter
only.the.last.parameter.can.be.variadic=Only the last parameter can be variadic
expression.is.not.allowed.as.parameter.default.value=expression is not allowed as parameter default value
argument.passed.must.be.of.the.type.0.1.given=Argument passed must be of the type {0}, {1} given
variadic.parameter.cannot.have.a.default.value=Variadic parameter cannot have a default value
only.simple.expressions.are.allowed=Only simple expressions are allowed
target.trait.should.be.specified=Target trait should be specified
call.to.0.1.construct.from.invalid.context=Call to ''{0} {1}::__construct()'' from invalid context
constants.defined.using.the.const.keyword.must.be.declared.at.the.top.level.scope=Constants defined using the 'const' keyword must be declared at the top-level scope
expression.is.not.allowed.as.constant.value=Expression is not allowed as constant value
cannot.redeclare.constant.0=Cannot redeclare constant ''{0}''
expression.is.not.allowed.as.field.default.value=expression is not allowed as field default value
cannot.declare.self.referencing.constant=Cannot declare self-referencing constant
a.class.constant.must.not.be.called.class.it.is.reserved.for.class.name.fetching=A class constant must not be called 'class'; it is reserved for class name fetching
redefinition.of.parameters.is.not.allowed=Redefinition of parameters is not allowed
method.0.clone.cannot.accept.any.arguments=Method ''{0}::__clone()'' cannot accept any arguments
return.type.declaration.is.not.allowed=Return type declaration is not allowed
method.should.not.be.finished.with=Method should not be finished with ';'
method.should.either.have.body.or.be.abstract=Method should either have body or be abstract
interface.method.can.t.have.body=Interface method cannot have body
anonymous.function.expected=Anonymous function expected
label.with.same.name.already.defined.in.current.scope=Label with same name already defined in current scope
interfaces.may.not.include.member.variables=Interfaces may not include member variables
0.with.same.name.already.defined.in.this.class={0} with same name already defined in this class
field=Field
cannot.redeclare.static.0.1.as.non.static.2.3=Cannot redeclare static ''{0}::${1}'' as non static ''{2}::${3}''
cannot.redeclare.non.static.0.1.as.static.2.3=Cannot redeclare non static ''{0}::${1}'' as static ''{2}::${3}''
0.and.1.define.the.same.property.2=''{0}'' and ''{1}'' define the same property ''{2}''
access.level.to.0.1.must.be.2.as.in.class.3.or.weaker=Access level to ''{0}::${1}'' must be ''{2}'' (as in class ''{3}'') or weaker
access.level.to.0.1.must.be.2.as.in.class.3.or.weaker2=Access level to ''{0}::{1}'' must be ''{2}'' (as in class ''{3}'') or weaker
cannot.inherit.previously.inherited.or.override.constant.0.from.interface.1=Cannot inherit previously-inherited or override constant ''{0}'' from interface ''{1}''
cannot.override.final.constant=Cannot override final constant ''{0}'' from ''{1}''
empty.implements.list=Empty implements list
a.trait.cannot.implement.an.interface=A trait cannot implement an interface
class.cannot.implement.previously.implemented.interface=Class cannot implement previously implemented interface
class.should.not.implement.itself=Class should not implement itself
empty.extends.list=Empty extends list
a.trait.cannot.extend.a.class=A trait cannot extend a class
interface.cannot.extend.previously.extended.interface=Interface cannot extend previously extended interface
class.cannot.extend.from.trait=Class cannot extend from trait
0.should.not.extend.itself={0} should not extend itself
class=Class
class.declarations.may.not.be.nested=Class declarations may not be nested
cannot.use.traits.inside.of.interfaces=Cannot use traits inside of interfaces
trait.expected.class.found=Trait expected, class found
absolute.reference.is.not.allowed=Absolute reference is not allowed
cannot.use.0.as.lexical.variable=Cannot use ''${0}'' as lexical variable
duplicate.variable.0=Duplicate variable ''{0}''
trailing.comma.is.not.allowed=Trailing comma is not allowed
the.use.keyword.must.be.declared.in.the.outermost.scope.of.a.file.the.global.scope.or.inside.namespace.declarations=The 'use' keyword must be declared in the outermost scope of a file (the global scope) or inside namespace declarations
static.is.not.allowed.in.compile.time.constants='static::' is not allowed in compile-time constants
list.is.not.allowed.as.class.reference=List is not allowed as class reference
multiple.namespaces.in.a.file.should.use.same.preferably.braced.syntax=Multiple namespaces in a file should use same (preferably braced) syntax
no.content.allowed.before.namespace.declaration=No content allowed before namespace declaration
an.object.s.clone.method.cannot.be.called.directly=An object's '__clone()' method cannot be called directly
property.write=@property-write
property.read=@property-read
isset.only.works.with.variables.and.arrays=isset only works with variables and arrays
cannot.use.positional.argument.after.argument.unpacking=Cannot use positional argument after argument unpacking
cannot.use.positional.argument.after.argument.unpacking.named.argument.81=Positional argument after argument unpacking are available only from PHP 8.1
function.name.must.be.callable.a.string.closure.or.class.implementing.invoke.currently.0=Function name must be callable -  a string, Closure or class implementing ''__invoke'', currently ''{0}''
using.this.when.not.in.object.context=Using '$this' when not in object context
array.can.t.be.used.for.array.destructuring.assignment='array()' cannot be used for array destructuring assignment
function.call.is.not.allowed.here=Function call is not allowed here
expression.is.not.assignable=Expression is not assignable
call.to.method.clone.from.invalid.context=Call to method '__clone' from invalid context
cannot.use.for.reading=Cannot use '[]' for reading
it.s.not.possible.to.unpack.array.argument.by.reference=It is not possible to unpack array argument by reference
spread.operators.in.arrays.are.not.supported.for.multiassignments.variables=Spread operators in arrays are not supported for multiassignment variables
it.s.not.possible.to.unpack.array.value.with.associated.key=It is not possible to unpack array value with associated key
it.s.not.possible.to.unpack.array.key=It is not possible to unpack array key
cannot.use.empty.array.elements.in.arrays=Cannot use empty array elements in arrays
invalid.octal.literal.won.t.be.reported.by.php.but.will.work.incorrectly=Invalid octal literal: it will not be reported by PHP but will work incorrectly
multiple.subsequent.underscores.in.a.numeric.literal.are.not.allowed=Multiple subsequent underscores in a numeric literal are not allowed
expression.is.not.allowed.as.static.initializer=expression is not allowed as static initializer
namespace.declarations.cannot.be.nested=Namespace declarations cannot be nested
global.namespace.should.use.braced.syntax=Global namespace should use braced syntax
halt.compiler.can.only.be.used.from.the.outermost.scope='__halt_compiler()' can only be used from the outermost scope
cannot.use.match.as.identifier=Cannot use 'match' as an identifier. It is a reserved keyword since PHP 8.0
cannot.use.readonly.as.identifier=Cannot use 'readonly' as an identifier. It is a reserved keyword since PHP 8.1
cannot.use.class.on.primitive.type='::class' is only allowed on objects
intention.name.replace.nullable.notation.with.null.as.part.union.type=Replace '?' with '|null' as part of union type
intention.name.replace.null.as.part.union.type.with.nullable.notation=Replace '|null' as part of union type with '?'
union.types.and.the.nullable.type.notation.cannot.be.mixed=Union types and the nullable type notation cannot be mixed
intersection.types.and.the.nullable.type.notation.cannot.be.mixed=Intersection types and the nullable type notation cannot be mixed
union.types.mixed.cannot.be.nullable=Mixed types cannot be nullable, 'null' is already part of the mixed type
cannot.mix.amp.and.pipe.in.type.declaration=Cannot mix '\\&' and '|' in type declaration
quick.fix.delete=Delete ''{0}''
is.duplicated.by.0=Type Is duplicated by ''{0}''
intention.name.remove.duplicated.type=Remove duplicated type
popup.title.select.reference.to.remove=Select Type to Remove
intention.family.name.append=Append ''{0}''
intention.family.name.change.to.mixed=Change type to 'mixed'
inspection.php.redundant.type.in.union.type=Type declaration is redundant and could be simplified
inspection.php.redundant.type.in.union.type.template=Type declaration could be simplified to ''{0}''
inspection.php.redundant.type.in.union.type.fix.name=Simplify redundant type

inspection.message.always.true.because=Condition is always ''{0,choice,0#false|1#true}'' because ''{1}'' is already ''{2,choice,0#false|1#true}'' at this point
inspection.message.always.true=Condition is always ''{0,choice,0#false|1#true}''
inspection.message.assertion.always.true=Assertion is always ''{0,choice,0#false|1#true}''
inspection.message.assertion.always.true.because=Assertion is always ''{0,choice,0#false|1#true}'' because ''{1}'' is already ''{2,choice,0#false|1#true}'' at this point
inspection.message.assertion.always.true.because.evaluated=Assertion is always ''{0,choice,0#false|1#true}'' because ''{1}'' is evaluated at this point
inspection.nullsafe.deref.unnecessary.because=Nullsafe operator {0,choice,0#will always produce ''null''|1#is unnecessary} because ''{1}'' is already ''{2,choice,0#false|1#true}'' at this point
inspection.nullsafe.deref.unnecessary.because.evaluated=Nullsafe operator ''{0,choice,0#will always produce ''null''|1#is unnecessary}'' because ''{1}'' is evaluated at this point
inspection.message.always.true.because.evaluated=Condition is always ''{0,choice,0#false|1#true}'' because ''{1}'' is evaluated at this point
hint.evaluation.makes.subsequent.condition.always.true=Evaluation makes subsequent condition always ''{0,choice,0#false|1#true}''
hint.evaluation.fully.contains=Evaluation result fully covers possible result of ''{0}''
hint.evaluation.makes.array.always.empty=Evaluation makes array always empty
intention.family.name.navigate.to.cause=Navigate to cause
intention.family.name.replace.ternary.expression.with.true.branch=Replace ternary expression with ''{0}'' branch
intention.family.name.replace.elseif.with.else=Replace 'elseif' with 'else'
extract.condition=Extract condition
delete.if=Delete 'if'
delete.elseif=Delete 'elseif'
delete.case=Delete 'case'
action.show.in.log.text=Show in Log
action.add.file.s.to.list.text=Add Files to the List
quality.tool.action.remove.file.s.from.list.text=Remove Files from the List
quality.tool.action.clean.list.text=Clear the List
quality.tool.border.title.ignored.files=Ignored Files
quality.tool.ignored.files={0} Ignored Files
intention.family.name.remove.redundant.arguments=Remove redundant {0,choice,0#argument|1#arguments}
inspection.message.redundant.argument=A{0,choice,0#rgument|1#rguments} {0,choice,0#matches|1#match} the {0,choice,0#parameter''s|1#parameters''} default {0,choice,0#value|1#values}
plural.types.are.not.allowed.in.real.types=Plural types are allowed only in doc types
intention.name.remove.brackets=Delete brackets
intention.name.replace.brackets.with.types=Replace with 'array'
inspection.message.only.variables.can.be.passed.by.reference=Only variables can be passed by reference
expression.0=expression {0}
expression=expression
notification.content.language.level.was.changed.to.based.on.project.usage=Language level was set to {0} based on the features used in the project
action.revert.back.to.text=Revert to {0}
expected.class.reference=Expected: class reference
expected.expression=Expected: expression
expected.expression.after.spread.operator=Expected: expression after spread operator
parser.unexpected=Unexpected: {0}
parser.expected=Expected: {0}
namespace.cannot.start.with.namespace.due.to.conflict.with.ns.relative.names=Namespace cannot start with "namespace" due to conflict with ns-relative names
inspection.php.language.level.description='fn' is a reserved keyword in PHP 7.4
incorrect.null.safe.operator=Incorrect nullsafe operator
replace.with.quest=Replace with '?'
required.parameters.missing=Required parameters ''{0}'' missing
parameter.ref.type.is.not.compatible.with.declaration=Parameter '#ref' type is not compatible with declaration
add.remote.interpreter=Add Remote Interpreter
the.remote.hosts.access.plugin.is.missing.please.enable.the.plugin.in.0.plugins=One or both of the ''FTP/SFTP/WebDAV Connectivity'' and ''Terminal'' plugins are missing. Please enable the plugins in {0} | Plugins.
extract.side.effect=Extract side effect
delete.unused.element=Delete unused element
suppress.all.for.file=Suppress all for file
callers=Callers
callees=Callees
call.tree=Call tree
execution.statistics=Execution statistics
suppress.for.method=Suppress for method
suppress.for.function=Suppress for function
suppress.for.field=Suppress for field
delete.redundant.switch.branch=Delete redundant 'switch' branch
suppress.for.phpdoc.comment=Suppress for PhpDoc comment
dynamically.declared.field=Dynamically declared field
convert.closure.to.arrow.function=Convert closure to arrow function
suppress.for.file=Suppress for file
choose.a.valid.0.launcher=Choose a valid {0} launcher
0.location={0} location
0.path={0} path:
configure=Configure
file.0.does.not.exists=File {0} does not exists
expressions=Expressions
target=Target
action.NewComposerJsonFile.description=Creates a composer.json file
action.NewComposerJsonFile.text=composer.json File
implement.method=Implement method
split.elseif=Split 'elseif'
add.setter=Add setter
php=PHP
filetype.php.description=PHP
remove.redundant.initializer=Remove redundant initializer
delete.assignment=Delete assignment
in.0=\ in {0}
merge.nested.conditions=Merge nested conditions
replace.quotes=Replace quotes
variable.dereferenced=Variable dereferenced
0.1={0}, {1}
declaration.in.parent.class.is.incompatible.with.interface=Declaration in parent class is incompatible with interface
copy.switch.branch=Copy 'switch' branch
default=Default:
replace.if.with.switch=Replace 'if' with 'switch'
choose.an.alias.to.use=Choose an Alias to Use
update.signature.to.match.phpdoc.comment=Update signature to match PHPDoc Comment
no.members.to.pull.up.found=No members to pull up found
inject.language.using.phpdoc=Inject language using PHPDoc
negate.boolean.expression=Negate boolean expression
no.members.to.push.down.found=No members to push down found
replace.if.clause.with.ternary.expression=Replace if clause with ternary expression
0.pushing.members.down.will.result.in.them.being.deleted={0}\nPushing members down will result in them being deleted
remove.pass.by.ref.sign=Remove '\\&'
make.non.nullable=Make non-nullable
reference=Reference
function=function
foreach=foreach
while=while
0=\ ({0})
for=for
filetype.composer.log.description=Composer log
clear.log=Clear Log
align.composer.log.console=Align Composer Log console
all.0=All ({0})
choose.executable.class.to.run.0=Choose executable class to run {0}
choose.test.method.to.run.dataset.0=Choose Test Method to Run Dataset {0}
show.settings=Show Settings
enable=Enable
composite.test.patterns=Composite test patterns
add.test.class.method=Add Test class/method\u2026
empty.pattern=Empty pattern
ignore.imports.and.formatting=Ignore imports and formatting
sort.the.elements.by.visibility.public.protected.private=Sort the elements by visibility: public, protected, private
sort.by.visibility=Sort by Visibility
copy=Copy
add=Add
replace.ternary.expression.with.if.clause=Replace ternary expression with if clause
information=Information
always.show.pass.by.reference=Always show pass-by-reference
show.name.for.all.arguments=Show name for all arguments
composer.packages.versions=Composer packages versions
constructor.field=Constructor field
inspection.php.illegal.array.key.type.description={0} {1}
edit.template=Edit Template
remove.rule=Remove Rule
add.rule=Add Rule
choose.super.class.or.interface=Choose super class or interface
choose.super.method=Choose super method
extends.implements.overrides=Extends/Implements/Overrides
remove.unnecessary.semicolon=Remove unnecessary semicolon
choose.properties=Choose Properties
composer=composer
composer.executable='composer' executable
0.12={0}:{1}
label=Label
namespace=Namespace
alias=Alias
constant=Constant
enum.case=Enum Case
field1=Field
class.constant=Class constant
function2=Function
method=Method
class1=Class
interface=Interface
parameter=Parameter
variable=Variable
cancel=Cancel
do.not.override=Do Not Override
override=Override
method.name=Method name
template.parameter=Template parameter
proceed=Proceed
add.custom.format.function=Add Custom Format Function\u2026
02={0}::
add.class=Add Class\u2026
all.exceptions.considered.checked=All exceptions considered checked
html.note.core.extensions.are.part.of.the.php.core.and.cannot.be.left.out.of.a.php.binary.with.compilation.options.html=<html>Note: core extensions are part of the PHP core and cannot be left out of a PHP binary with compilation options.</html>
choose.elements.to.generate.phpdoc.for=Choose Elements to Generate PHPDoc For
no.elements.to.generate.phpdoc.for=No elements to generate PHPDoc for
invalid.class.name=Invalid class name
target.class=Target class: 
03=({0})
constant.0=Constant {0}
usage.in.return.type=Usage in return type
usage.in.import.statement=Usage in import statement
overriding.implementing.methods=Overriding/implementing methods
usage.in.type.hinting=Usage in type hinting
usage.in.implements.clause=Usage in implements clause
usage.in.extends.clause=Usage in extends clause
method.call=Method call
function.call=Function call
04={0}:
field.ref.not.found=Field '#ref' not found
method.ref.not.found=Method '#ref' not found
0.extends.1={0} extends {1}
0.1.choice.0.extends.1.implements.2={0}{1, choice, 0# extends |1# implements }{2}
remove.link.between.0.and.1=Remove link between {0} and {1}
import.from.deployment.configuration=Import from deployment configuration
import=Import
php.control.flow.viewer.0=PHP Control Flow Viewer: {0}
php.control.flow.viewer=PHP Control Flow Viewer
close=&Close
build.control.flow=&Build Control Flow
build.control.flow.with.exit.points=Build Control Flow with &Exit points
change.member.access=Change member access
php.make.class.non.final.quick.fix.family.name=Make class non-final
squash.repetitive.underscores=Squash repetitive underscores
replace.with.01=Replace with {0}
filetype.profiler.snapshot.description=Profiler Snapshot
proxy.configuration=Proxy configuration
surround.with.0=Surround with ''{0}''
rename.constructor=Rename constructor
rename=Rename
replace.with.alias=Replace with alias
strict.type.declaration.is.available.in.php.7.only=Strict type declaration is only allowed since PHP 7.0
recursive.call=Recursive call
smarty=Smarty
add.property=Add @property
all.scripts=<All scripts>
summary=Summary
can.t.use.nullsafe.operator.in.write.context=Cannot use nullsafe operator in write context
intention.family.name.collapse.whitespaces=Collapse whitespaces
inspection.message.qualified.name.can.t.contain.whitespaces=Qualified name cannot contain whitespaces
php.language.level.widget=PHP Language Level
tooltip.configured.php.language.level.widget=Configured PHP language level
tooltip.configured.php.language.level.widget.composer=PHP language level configured via Composer
change.php.language.level=Change PHP Language Level
function.fqn=Function FQN
choose.class=Choose Class
older=Older\u2026
intention.family.name.replace.with=Replace with ''{0}''
intention.family.name.replace.with.dnf=Replace with DNF type declaration
inspection.message.redundant.static.in.final.class=Redundant 'static' in final class
link.label.inspection={0} inspection
intention.name.add.as.function.s.return.type=Add ''{0}'' as the function''s return type
add.return.type=Add return type
php.class=Class
php.interface=Interface
php.trait=Trait
clearing.cache=Clearing Cache
diagnosing=Diagnosing
simulating.update=Simulating Update
generating.autoloader=Generating Autoloader
listing.licenses=Listing Licenses
checking.for.changes.in.code.of.dependencies=Checking for Changes in Code of Dependencies
validating=Validating
add.custom.format.function1=Add Custom Format Function
edit.custom.format.function=Edit Custom Format Function
no.item=no item
no.interpreter=<no interpreter>
open.in.editor=Open in Editor
how.to.fix=How to Fix
path.to.php=<path_to_php>
constructor.already.exists=Constructor already exists
fluent.setters=Fluent setters
no.private.fields.to.generate.getters.for=No private fields to generate getters for
no.private.fields.to.generate.both.getters.and.setters.for=No private fields to generate both getters and setters for
no.private.fields.to.generate.setters.for=No private fields to generate setters for
choose.methods.to.implement=Choose methods to implement
make.0.1=Make ''{0}'' {1}
arrays.are.not.supported.as.operands.for.0=Arrays are not supported as operands for ''{0}''
types.not.supported.as.operands.for.0.1.2=Unsupported operand types in ''{1} {0} {2}'' will cause a PHP 8 TypeError 
trait.method.0.will.not.be.applied.because.it.collides.with.1=Trait method ''{0}'' will not be applied because it collides with ''{1}''
method.0.can.t.be.overridden.with.same.trait.1=Method ''{0}'' can''t be overridden with same trait ''{1}''
intention.name.make.non.final=Make ''{0}'' non-final
replace.with.absolute.reference=Replace with absolute reference
debug.output=Output
no.candidate.methods.to.implement=No candidate methods to implement
choose.methods.to.implement1=Choose methods to implement
choose.methods.to.override=Choose methods to override
no.candidate.methods.to.override=No candidate methods to override
cannot.call.abstract.method.0.1=Cannot call abstract method ''{0}::{1}''
intention.name.flip=Flip {0} and {1}
method.ref.is.deprecated=Method '#ref' is deprecated
parameter.is.deprecated=Parameter ''{0}'' is deprecated
function.ref.is.deprecated=Function '#ref' is deprecated
class.ref.is.deprecated=Class '#ref' is deprecated
constant.ref.is.deprecated=Constant '#ref' is deprecated
field.ref.is.deprecated=Field '#ref' is deprecated
constant.ref.is.deprecated1=Constant '#ref' is deprecated
inspection.message.duplicate.case.expression=Duplicate case expression
inspection.message.duplicate.case.expression.ref=Duplicate case expression: #ref
replace.qualifier.with.an.import=Replace qualifier with an import
inspection.message.method.ref.marked.as.internal=Method '#ref' is marked as @internal
inspection.message.function.ref.marked.as.internal=Function '#ref' is marked as @internal
inspection.message.class.ref.marked.as.internal=Class '#ref' is marked as @internal
inspection.message.constant.ref.marked.as.internal=Constant '#ref' is marked as @internal
inspection.message.field.ref.marked.as.internal=Field '#ref' is marked as @internal
remove.from.the.parameter.0=Remove ''\\&'' from the parameter ''{0}''
remove.from.function.0.declaration=Remove ''\\&'' from function ''{0}'' declaration
remove.numeric.literals.separators=Remove numeric literals separators
intention.name.remove=Remove {0}
intention.name.convert.array.syntax.to.short=Convert array to short syntax
inspection.message.call.chain.too.long.to.analyse.break.it.into.fragments.up.to.calls=Call chain is too long to analyse. Break it into fragments of up to {0} calls
inspection.message.undefined.goto.label.ref=Undefined goto label '#ref'
inspection.message.unused.private.property.ref=Unused private property '#ref'
intention.name.add.method.stubs=Add method stubs
inspection.message.from.php.this.allowed={0}. This is only allowed starting with PHP {1}.
intention.name.make.abstract=Make {0} abstract
inspection.message.expression.without.parentheses=Expression without parentheses
add.clarifying.parentheses=Add clarifying parentheses
replace.all.occurrences.with.php=Replace all occurrences with '<?php'
replace.all.occurrences.with.php.echo=Replace all occurrences with '<?php echo'
replace.all.occurrences.with.short.php.echo=Replace all occurrences with '<?='
inspection.message.parentheses.are.unnecessary=Parentheses are unnecessary
remove.unnecessary.parentheses=Remove unnecessary parentheses
inspection.message.goto.labels.inside.loops.or.switch.statements.are.not.allowed='goto' labels inside loops or switch statements are not allowed
dialog.title.configure.code.patterns=Configure Code Patterns\u2026
intention.family.name.generate.phpdoc.comment=Generate PHPDoc Comment
intention.family.name.copy.phpdoc.from.parent=Copy PHPDoc from parent
inspection.message.constant.reassignment=Constant reassignment
merge.with.0.branch=Merge with ''{0}'' branch
inspection.message.use.statement.with.non.compound.name.ref.has.no.effect=The 'use' statement with non-compound name '#ref' has no effect
insert.default.branch=Insert 'default' branch
inspection.message.tostring.method.must.return.string='__toString' method must return a string
inspection.message.psr.compound.namespace.with.depth.more.than.two.levels=PSR-12: Compound namespace with the depth of more than two levels
psr.12.extract.namespace=PSR-12: extract namespace
inspection.message.psr.short.form.type.keywords.should.be.used=PSR-12: Short form of type keywords should be used
psr.12.convert.to.short.form=PSR-12: convert to short form
inspection.message.psr.missing.visibility.definition=PSR-12: Missing visibility definition
psr.12.add.public.visibility=PSR-12: add 'public' visibility
inspection.message.psr.order.modifiers.incorrect=PSR-12: Order of modifiers is incorrect
psr.12.fix.modifiers.order=PSR-12: Fix modifiers order
inspection.message.psr.missing.parameter.list=PSR-12: Missing parameter list
psr.12.add.missing.parameter.list=PSR-12: add missing parameter list
inspection.message.psr.usage.else.if.construct=PSR-12: Usage of 'else if' construct
inspection.message.psr.traits.must.be.included.one.per.line=PSR-12: Traits must be included one-per-line
psr.12.split.to.several.use.statements=PSR-12: split to several 'use' statements
inspection.message.psr.usage.var=PSR-12: Usage of 'var'
psr.12.replace.var.with.public=PSR-12: replace 'var' with 'public'
change.method.modifiers.to.0=Change method modifiers to ''{0}''
intention.family.name.remove=Remove {0}
create.new.class.quickfix=Create a new class
add.class1=Add Class
intention.name.suppress.for.statement=Suppress for statement
intention.name.change.cast.to=Change {0} cast to {1}
intention.name.cast.to=Cast {0} to {1}
add.fluent.setter=Add fluent setter
intention.family.name.add.getter.setter=Add getter and setter
intention.family.name.add.getter=Add getter
intention.family.name.add.number.separators=Add number separators
convert.the.arrow.function.to.a.traditional.closure=Convert the arrow function to a traditional closure
intention.name.extract.if=Extract if ({0})
intention.family.name.initialize.properties=Initialize properties
merge.into.elseif=Merge into 'elseif'
intention.family.name.replace.switch.with.if=Replace 'switch' with 'if'
make.01=Make ''{0}''
group.use.statements.by.selected.prefix=Group 'use' statements by selected prefix
intention.family.name.convert.heredoc.nowdoc.to.string.literal=Convert HEREDOC/NOWDOC to a string literal
intention.family.name.convert.heredoc.to.string.literal=Convert HEREDOC to a string literal
intention.family.name.convert.nowdoc.to.string.literal=Convert NOWDOC to a string literal
convert.concatenation.to.sprintf.call=Convert concatenation to 'sprintf()' call
convert.string.interpolation.to.concatenation=Convert string interpolation to concatenation
convert.string.interpolation.to.sprintf.call=Convert string interpolation to a 'sprintf()' call
intention.name.convert.sprintf.call.to.concatenation=Convert 'sprintf()' call to concatenation
copy.concatenated.string.to.clipboard=Copy concatenated string to clipboard
extract.selected.string.part.as.concatenation.operand=Extract selected string part as a concatenation operand
extract.selected.string.part.as.format.function.argument=Extract selected string part as a format function argument
surround.with.if.0.1=Surround with ''if({0}({1}))'{'...'}'''
command.name.new.file=New File
dialog.title.inline.variable=Inline variable
property.declaration=property declaration
class.constructor=class constructor
label.global.namespace=<global namespace>
cannot.use.positional.argument.after.named.argument=Cannot use a positional argument after a named argument
named.parameter.overwrites.previous.argument=Named parameter overwrites the previous argument
unknown.named.parameter=Unknown named parameter ''{0}''
docker.compose.border.title.lifecycle=Lifecycle
action.configuration.text=Configuration\u2026
inspection.message.constructor.cannot.be.static=Constructor cannot be static
inspection.message.destructor.cannot.be.static=Destructor cannot be static
inspection.message.clone.method.cannot.be.static='Clone' method cannot be static
inspection.message.cannot.make.non.abstract.method.abstract=Cannot make non-abstract method abstract
inspection.message.cannot.override.final.method=Cannot override final method
inspection.message.cannot.make.method.visibility.lower.than.super.s=Cannot make method's visibility lower than its parent's
parsing.error.not.allowed=''{0}'' is not allowed
parsing.error.unexpected.token=Unexpected token: {0}
parsing.error.expression.not.assignable=Expression is not assignable
live.template.name.comment=Comment
live.template.name.empty.file=Empty PHP file
php.remote.debug.name=PHP Remote Debug
php.web.application.name=PHP Web Application
live.template.name.statement=Statement
live.template.name.method.statement=Statement in class member
live.template.name.string.literal=String literal
live.template.name.expression=Expression
live.template.name.method.expression=Expression in class member
cli.interpreters.name=CLI Interpreters
code.style.option.group.use=Group 'use'
code.style.option.attributes=Attributes
code.style.option.parameter.attributes=Attributes for parameters
code.style.option.in.namespace=In namespace
code.style.option.php.opening.tag=PHP opening tag
code.style.option.new.line.after.php.tag=New line after '<?php' tag
code.style.option.multiline.arrays.lambdas=Treat multiline arrays/anonymous functions as multiline arguments
code.style.option.align.inline.comments=Align inline comments
code.style.option.function.return.type=Function return type
code.style.option.return.type.on.new.line=Return type on new line
code.style.option.align.key.value.pairs=Align key-value pairs
code.style.option.match.expression='match' expression
code.style.option.match.expression.align.match.arm.bodies=Align 'match' arm bodies
code.style.option.place.on.new.line=Place ';' on new line
code.style.option.class.field.constant.groups=Class property/constant groups
code.style.option.align.properties.in.columns=Align properties in columns
code.style.option.align.constants=Align constants
code.style.option.align.enum.cases=Align enum cases
code.style.option.align.consecutive.assignments=Align consecutive assignments
code.style.option.keep.and.on.one.line=Keep ')' and '{' on one line
code.style.option.for.foreach.statements=for()/foreach() statements
code.style.option.place.for.constructor=Place '()' for constructor
code.style.option.in.anonymous.class.declaration=In anonymous class declaration
code.style.option.force.empty.functions.braces.in.one.line=Place braces for empty functions/methods on one line
code.style.option.function.constructor.call.arguments=Function/constructor call arguments
code.style.option.function.declaration.parameters=Function declaration parameters
code.style.option.in.closure.declaration=In closure declaration
code.style.option.in.function.declaration=In function declaration
code.style.option.place.on.new.line2=New line after last element
code.style.option.new.line.after=New line before first element
code.style.option.after=After '{':
code.style.option.before.return.statement=Before 'return' statement:
code.style.option.after.function=After function:
code.style.option.after.opening.tag=After opening tag:
code.style.option.between.group.use.statements=Between group 'use' statements:
code.style.option.around.class.constants=Around class constants:
code.style.option.around.enum.cases=Around enum cases:
code.style.option.after.class.body=After class body:
code.style.option.before.class.body=Before class body:
code.style.option.after.use.statements=After 'use' statements:
code.style.option.before.use.statements=Before 'use' statements:
code.style.option.after.namespace=After namespace:
code.style.option.before.namespace=Before namespace:
code.style.option.around.property=Around property:
code.style.option.multiplicative.operators=Multiplicative operators (*, /, %, **)
code.style.option.arrow.function.parentheses=Arrow function parentheses
code.style.option.anonymous.function.parentheses=Anonymous function parentheses
code.style.option.shift.operators=Shift operators (<<,>>)
code.style.option.and=<?= and ?>
code.style.option.brackets.around.variable.expression=Brackets around variable/expression
code.style.option.between.and=Between '?' and ':'
code.style.option.unary.additive.operators=Unary additive operators (+,-,++,--)
code.style.option.after.unary.not=After unary Not (!)
code.style.option.before.unary.not=Before unary Not (!)
code.style.option.array.initializer.parentheses=Array initializer parentheses
code.style.option.function.left.brace=Function left brace
code.style.option.function.declaration.parentheses=Function declaration parentheses
code.style.option.function.call.parentheses=Function call parentheses
code.style.option.after.colon.in.return.type=After colon in return type
code.style.option.space.around.pipe.in.union.types=Around | in union type
code.style.option.before.colon.in.return.type=Before colon in return type
code.style.option.before.colon.in.named.argument=Before colon in named argument
code.style.option.after.colon.in.named.argument=After colon in named argument
code.style.option.before.colon.in.enum.backed.type=Before colon next to type declaration in backed enum
code.style.option.after.colon.in.enum.backed.type=After colon next to type declaration in backed enum
code.style.option.assignment.in.declare.statement=Assignment in declare statement
code.style.option.null.coalescing.operator=Null coalescing operator (??)
code.style.option.object.access.operator=Object access operator (->)
code.style.option.concatenation=Concatenation (.)
code.style.option.relational.operators=Relational operators (<, >, <=, >=, <=>)
code.style.option.place.braces.for.constructor.as.is=As is
code.style.option.place.braces.for.constructor.always=Always
code.style.option.place.braces.for.constructor.never=Never
link.label.languages.frameworks.php=PHP
inspection.message.cannot.make.static.method.non.static=Cannot make static method {0} non-static
inspection.message.cannot.make.non.static.method.static=Cannot make non-static method {0} static
dialog.title.select.properties.to.initialize=Select Properties To Initialize
split.selected.group.use.statement=Split selected group 'use' statement
intention.family.name.convert.string.literal.to.heredoc.nowdoc=Convert string literal to HEREDOC/NOWDOC
intention.name.convert.string.literal.to.heredoc=Convert string literal to HEREDOC
intention.name.convert.string.literal.to.nowdoc=Convert string literal to NOWDOC
intention.name.convert.concatenation.to.string.interpolation=Convert concatenation to string interpolation
intention.name.convert.concatenation.to.scalar.value=Convert concatenation to a scalar value
intention.name.convert.sprintf.call.to.string.interpolation=Convert a 'sprintf()' call to string interpolation
intention.name.convert.sprintf.call.to.scalar.value=Convert a 'sprintf()' call to a scalar value
parsing.error,at.expected='@' expected
parsing.error.method.label.expected=Method label expected
live.template.class.member=Class member
live.template.interface.member=Interface member
live.template.trait.member=Trait member
dialog.error.title.php.extract.class=PHP Extract Class
quality.tools.label.by.default.project.interpreter=By default project interpreter
file.0.does.not.exist=File {0} does not exist
languages.frameworks.php.php.runtime=PHP / PHP Runtime
do.not.ask.again=Don't ask again
enable.support=Enable support
validating1=Validating\u2026
cache.creating=Creating psalm cache\u2026
can.not.parse.phpunit.version.output.0=Cannot parse PHPUnit version output: {0}
zend.debugger.settings.broadcasting.is.already.launched=Zend Debugger settings broadcasting is already launched
directories=Directories
can.not.run.command.composer.execution.plugin.was.unloaded=Can not run command: Composer execution plugin was unloaded
can.not.find.specified.interpreter=Cannot find specified interpreter
no.response.from.0.after.1.ms=No response from {0} after {1} ms
cannot.register.handler=Cannot register handler
handler.with.the.same.session.id.is.already.registered=Handler with the same session id is already registered
unknown.debugger.type=Unknown debugger type
functions.to.be.extracted=Functions To Be Extracted
failed.to.parse.php.ini.output.0=Failed to parse php --ini output: {0}
can.not.find.0.helper.script=Cannot find ''{0}'' helper script
can.not.execute.tests=Cannot execute tests
failed.to.run.interpreter=Failed to run interpreter
failed.to.find.interpreter=Failed to find interpreter
set=Set
proxy.init=Proxy init
register.ide=Register IDE
0.for.1.run.configuration={0} for {1} run configuration
project.is.already.disposed=project is already disposed
can.not.execute.transfer.task.project.is.already.disposed=Cannot execute transfer task: project is already disposed
proxy.stop=Proxy stop
cancel.ide.registration=Cancel IDE Registration
getting.installed.standards=Getting installed standards\u2026
php.remote.interpreter.plugin.is.not.installed=PHP Remote Interpreter plugin is not installed
execution.result.is.null=execution result is null
can.not.delete.temporary.file.because.it.was.not.created=Cannot delete temporary file because it was not created
quality.tool.settings.link.inspection={0} inspection:
failed.to.find.valid.interpreter.path=Failed to find valid interpreter path
with.data.set.0={0} with data set {1}
add.phpunit.test.pattern=Add PHPUnit Test Pattern
unused.code.rules=Unused Code Rules
naming.rules=Naming Rules
design.rules=Design Rules
controversial.rules=Controversial Rules
code.size.rules=Code Size Rules
remote.interpreter.can.t.be.executed.please.enable.the.php.remote.interpreter.plugin=Remote interpreter cannot be executed. Enable the PHP Remote Interpreter plugin.
create.target.class.quick.fix=Create target class quick-fix
create.missing.target.method.fix=Create missing target method fix
php.extract.class=PHP Extract Class
local=Local
project.files=Project files
include.path=Include path
inspection.message.parameter.name.changed.from.to=Parameter''s name changed from ''{0}'' to ''{1}''
intention.family.name.rename.parameter.to.match.super=Rename parameter to match parent
intention.name.rename.to=Rename to ''{0}''
inspection.message.name.parameter.may.be.different.depending.on.instance.class=Named argument might be unresolved in ''{0}.{1}'' 
tooltip.update=Update {0}
inspection.message.constant.ref.not.found=Constant '#ref' not found
hint.text.can.not.find.target.class.for.modification=Cannot find target class for modification.
hint.text.target.class.not.writable=The target class {0} is not writable.
hint.text.target.class.does.not.belong.to.project.can.not.be.modified=The target class {0} does not belong to the project\nand cannot be modified.
inspection.message.cannot.make.non.abstract.method.abstract.1=Cannot make non-abstract method {0} abstract
inspection.message.cannot.override.final.method.1=Cannot override final method {0}
inspection.message.return.type.declaration.must.be.compatible.with=Return type declaration must be compatible with {0} : {1}
inspection.message.cannot.make.method=Cannot make {0} method {1} {2}
inspection.message.declaration.should.be.compatible.with=Declaration should be compatible with {0}
inspection.message.declaration.should.be.compatible.with.super=Declaration should be compatible with parent
command.name.make.method.static=Make method static
show.constants=Show Constants
show.properties=Show Properties
show.includes=Show Includes
show.private.members=Show Private Members
show.protected.members=Show Protected Members
group.methods.by.type=Group Methods By Type
undefined.interpreter=Undefined interpreter
column.name.annotation.name=Annotation name
inspection.message.exception.never.thrown.in.corresponding.try.block=Exception ''{0}'' is never thrown in the corresponding ''try'' block
dialog.title.edit.phpunit.test.pattern=Edit PHPUnit Test Pattern
notification.title.incorrect.profiler.snapshot.format=Incorrect profiler snapshot format
notification.title.cannot.read.snapshot=Cannot read snapshot
label.lt.no.server=<no server>
executable.0.was.not.found.in.path.please.make.sure.it.s.there.possible.solutions=Executable ''{0}'' was not found in %PATH%. Make sure a valid path is specified. Possible solutions:
if.you.ve.changed.the.path.recently.restart.the.ide=If you've changed the %PATH% recently, restart the IDE.
provide.the.full.path.to.executable=Provide the full path to executable.
select.composer.phar.and.provide.the.full.path.to.it.or.select.download.composer.stable.phar.from.getcomposer.org=Select 'composer.phar' and provide the full path to it or select 'Download composer-stable.phar from getcomposer.org'.
executable.0.was.not.found.in.path.please.make.sure.it.s.there.possible.solutions1=Executable ''{0}'' was not found in $PATH. Make sure a valid path is specified. Possible solutions:
if.you.ve.changed.the.path.recently.restart.the.ide1=If you've changed the $PATH recently, restart the IDE.
select.composer.phar.and.provide.the.full.path.to.it.or.select.download.composer.stable.phar.from.getcomposer.org1=Select 'composer.phar' and provide the full path to it or select 'Download composer-stable.phar from getcomposer.org'.
label.authentication.data.not.specified=Authentication data is not specified
configured.is.incorrect=Configured {0} is incorrect
validation.script.was.created.but.it.cannot.be.executed.check.possible.reasons=Validation script was created but cannot be executed. Possible reasons:
validated.web.server.is.not.running=Validated Web Server is not running.
target.directory.for.validation.script.is.not.public=Target directory for validation script is not public.
url.to.validation.script='URL to validation script'
follow.this.links.to.install.and.configure.0.or.1=Follow these links to install and configure {0} or {1}.
if.you.have.already.configured.debug.extension.in.php.ini.file.check.possible.reasons.why.it.was.not.loaded=If you have already configured debug extension in the php.ini file, check for possible reasons why it was not loaded:
you.did.not.reload.web.server.after.changes.in.php.ini.file=You did not reload web server after changes in php.ini file.
you.are.configuring.debug.extension.in.the.wrong.php.ini.see.the.loaded.php.ini.files.below=You are configuring debug extension in the wrong php.ini (see the loaded php.ini files below).
there.are.errors.on.attempt.to.load.debug.extension.e.g.version.incompatibility=There are errors on attempting to load debug extension, such as version incompatibility.
intention.name.change.signature=Change signature of {0}({1})
dialog.title.enter.tag.name=Enter tag name
method1=method
open.inspection.settings=Open {0} Inspection Settings 
popup.content.enabled.disabled.extensions=Enabled {0} and disabled {1} extensions
popup.content.configuration.remains.unchanged=Current configuration is in sync with the interpreter
unhandled.0=Unhandled {0}
unhandled.exceptions=Unhandled exceptions
label.docker.container=Docker container:
dialog.message.docker.account.not.specified=Docker account not specified
dialog.message.docker.account.not.found=Docker account not found
dialog.message.could.not.find.network.interface=Could not find {0} network interface
dialog.message.no.interface.addresses.for.network.interface=No interface addresses for {0} network interface
validation.script.will.be.created.in.0.directory=Validation script will be created in {0} directory.
files.in.the.directory.should.be.accessible.by.0.request=Files in the directory should be accessible by {0} request.
caused.by.0=Caused by: "{0}"
validation.script.will.be.created.in.0.directory.and.deployed.to.the.1.server=Validation script will be created in {0} directory and deployed to the {1} server.
files.in.the.remote.directory.should.be.accessible.by.0.request=Files in the remote directory should be accessible by {0} request.
follow.this.0.for.more.information.about.path.mappings=Follow this {0} for more information about path mappings.
validation.script.will.be.created.locally.and.the.result.will.be.fetched.by.http.request=Validation script will be created locally and the result will be fetched by http request.
validation.script.will.be.created.locally.and.deployed.to.the.remote.server=Validation script will be created locally and deployed to the remote server.
the.result.of.validation.will.be.fetched.by.http.request=The result of validation will be fetched by http request.
follow.this.0.for.more.information.about.deployment=Follow this {0} for more information about deployment.
link=link
no.type=NO_TYPE
in=in
action.configure.php.runtime.text=Configure PHP Runtime\u2026
action.configure.project.directories.text=Configure Project Directories
inspection.message.interpolated.string.dereferencing.available.in.php.only=Interpolated string dereferencing is only allowed since PHP 8.0
inspection.message.magic.constant.dereferencing.available.in.php.only=Magic constants dereferencing is only allowed since PHP 8.0
intention.family.name.add.name.identifiers.to.all.arguments.starting.from.current=Add name identifiers to all arguments starting from current
intention.name.add.name.identifier=Add name identifier ''{0}''
inspection.message.argument.without.name.identifier=Argument without name identifier
tooltip.wsl2.mappings=WSL2 mappings
name=Name
file=File
tooltip.from=From {0}:
tooltip.from.volumes=From {0} volumes:
intention.family.name.sort.arguments=Sort arguments
open.tool.settings=Open {0} settings
turn.off.inspection.tool=Turn off {0} inspection
init.cache=Init cache
or.disable.inspection=or
inspection.message.type.can.be.reduced.to=Type can be narrowed to ''{0}''
an.alias.was.defined.for.method.0.which.exists.in.1=An alias was defined for method {0}(), which exists in {1}
intention.family.name.append.absolute.trait=Append ''{0}::''
intention.family.name.remove.argument.name=Remove argument name
intention.name.remove.argument.names.from.all.arguments.up.to.current=Remove argument names from all arguments up to current
frameworl.composer.show.quick.actions=Show composer.json top panel with quick actions
framework.composer.notify.about.missing.vendor=Notify about missing 'vendor' directory
cannot.make.interface.method.non.static=cannot make interface method non-static
cannot.make.interface.method.static=cannot make interface method static
access.must.be.public=access must be public
inspection.message.method.reference.resolves.to.method.with.containing.class=''Use'' rule resolves to a method from the containing class ''{0}''
intention.name.move.trait.use.rule.to.use.list=Move trait ''use'' rule to ''{0}'' ''use'' list
intention.family.name.move.trait.use.rule.to.resolved.class.use.list=Move trait 'use' rule to resolved class 'use' list
required.trait.0.wasn.t.added.to.1=Required Trait ''{0}'' was not added to ''{1}''
intention.family.name.add.trait.to.use.list=Add trait to use list
intention.name.add.trait.to.use.list=Add trait ''{0}'' to use list
intention.family.name.add.break.as.last.statement=Add 'break' as last statement
inspection.message.class.does.not.have.attribute=Class ''{0}'' is not annotated with ''Attribute''
intention.family.name.add.attribute.attribute=Annotate with 'Attribute'
constant.expression.contains.invalid.operations=Constant expression contains invalid operations
attribute.must.be.first.child.of.parent.element=Attribute must be first child of parent element
intention.family.name.move.attribute.to.start.element=Move attribute to start of the element
quickfix.remove.match.arm=Remove 'match' arm
quickfix.remove.duplicate.condition=Remove duplicate condition
quickfix.remove.unused.condition=Remove unused condition
inspection.duplicate.match.condition.message=Duplicate condition
inspection.message.attribute.can.t.be.applied.to.because.it.doest.contains=Attribute cannot be applied to a {0} because it does not contain the  ''{1}'' flag
inspection.message.attribute.is.not.repeatable=Attribute is not repeatable because it does not contain the ''Attribute::IS_REPEATABLE'' flag
class2=class
class.constant1=class constant
property=property
parameter1=parameter
inspection.message.comment.will.be.parsed.as.attribute.starting.with.php=Comment is parsed as attribute starting with PHP 8.0
intention.family.name.insert.space.after=Insert a space after '#'
inspection.message.condition.is.never.matched=Condition is never matched
inspection.message.branch.is.unused='switch' branch is never executed
inspection.php.arithmetic.type.check=Arithmetic operation with unsupported operands
introduce.variable.fix=Introduce variable
hint.text.use.statement.choice.s.removed={0} ''use'' statement{1, choice, 0#s|1#} removed
hint.text.use.statements.checked.nothing.was.removed={0} ''use'' statements checked, nothing was removed
no.name=No name
debugger.method=Method
inspection.message.named.argument.usage=Named argument usage
percentage.lines={0}% lines
column.name.parameter=Parameter
column.name.file.directory=File/Directory
unknown=unknown
intention.family.name.replace.with.get.class.call=Replace with 'get_class()' call
intention.family.name.replace.with.implicit.octal.notation=Replace with implicit octal notation
intention.family.name.replace.with.class.name.literal=Replace with '::class'
inspection.message.get.class.call.can.be.replaced.with.class.name.literal='get_class()' call can be replaced with '::class'
intention.family.name.remove.parenthesis=Remove parentheses
inspection.message.redundant.parenthesis=Redundant parentheses
intention.family.name.simplify.expression=Simplify expression
intention.family.name.replace.match.with.ternary=Replace with ternary expression
attribute.can.be.added.to.overridden.method=Attribute can be added to overriding method
attribute.can.be.added.to.overridden.parameter=Attribute can be added to overriding parameter
intention.family.name.add.attribute.to.overridden.method=Add attribute to overriding methods
intention.family.name.add.attribute.to.overridden.method.of.abstract.method=Add attribute to overriding methods of abstract method
intention.family.name.add.attribute.to.overridden.parameter=Add attribute to overriding parameters
inspection.message.match.can.be.replaced.with.ternary='match' expression can be replaced with ternary expression
intention.family.name.replace.with.traditional.property.declaration=Replace with traditional property declaration
cannot.declare.promoted.property.outside.a.constructor=Cannot declare promoted property outside a constructor
only.visibility.modifiers.can.be.applied.to.promoted.property=Only visibility modifiers can be applied to promoted property
intention.family.name.replace.with.public=Replace with 'public'
cannot.declare.variadic.promoted.property=Cannot declare variadic promoted property
cannot.declare.promoted.property.in.an.abstract.constructor=Cannot declare promoted property in an abstract constructor
inspection.message.promoted.field.usage=Promoted property usage
inspection.message.redundant.assignment=Redundant assignment to promoted property
remove.assignment=Remove assignment
inspection.message.switch.can.be.replaced.with.match='switch' statement can be converted to 'match' expression
inspection.message.match.can.be.replaced.with.switch='match' expression can be converted to 'switch' statement.
inspection.message.match.can.be.replaced.with.switch.changing.semantics='match' expression can be converted to 'switch' statement. Note that 'switch' statements rely on loose comparison, which may change the expression semantics.
inspection.message.replace.implicit.octal.literal.with.explicit.one=Implicit octal literal can be replaced with explicit one
intention.family.name.replace.switch.with.match.expression=Replace 'switch' with 'match' expression
intention.family.name.replace.if.with.match.expression=Replace 'if' with 'match' expression
intention.family.name.replace.match.with.switch.statement=Replace 'match' with 'switch' statement
intention.family.name.replace.match.with.switch.statement.changing.semantics=Replace 'match' with 'switch' statement (may change comparison semantics)
inspection.family.name.replace.implicit.octal.literal.with.explicit.one=Replace implicit octal literal with explicit one
intention.family.name.split.into.multiple.catch.statements=Split into multiple 'catch' statements
exception.class=exception class
variable1=variable
identifier=identifier
field.name=field name
object.property=object property
class.reference=class reference
array.index=array index
line.separator=line separator
initializer=initializer
label1=label
expression1=expression
type=type
static.value=static value
property.or.function=property or function
expected.property=property
default.value=default value
extends=extends
interface.name=interface name
extends.or.implements=extends or implements
class.name=class name
modifier=modifier
return.type=return type
inspection.message.duplicates.catch.statement=Duplicates ''{0}'' statement
intention.name.merge.with=Merge with ''{0}''
intention.family.name.merge.with.duplicated.catch.statement=Merge with duplicated 'catch' statement
intention.name.merge.with.match.arm=Merge with ''{0}'' arm
intention.family.name.merge.with.duplicated.match.arm=Merge with duplicated 'match' arm
intention.family.name.add.default.match.arm=Add 'default' 'match' arm
intention.family.name.add.attribute=Add ''#[{0}]''
intention.family.name.add.attribute.to=Add ''#[{0}]'' to ''{1}''
inspection.message.exitpoint.attribute.can.be.added=#[NoReturn] attribute can be added
intention.family.name.convert.to.promoted.field=Convert to promoted property
intention.family.name.convert.to.promoted.field.remove.doc.comment=Convert to promoted property and remove property PHPDoc comment
inspection.message.field.assignment.can.be.converted.to.promoted.field=Property can be promoted
cannot.use.unpacking.in.attribute.argument.list=Cannot use unpacking in attribute argument list
spread.operator.on.named.arguments.is.forbidden=Spread operator on named argument is forbidden
inspection.message.should.be.one=Value should be one of: {0}
0.by.remote.interpreter={0} by Remote Interpreter
0.local={0} Local
inspection.message.double.quotes.are.unnecessary=Double quotes are unnecessary
inspection.php.unnecessary.double.quotes.display.name=Unnecessary double quotes
inspection.php.unnecessary.leading.backslash.in.use.statement=Unnecessary leading '\\' in 'use' statement
replace.unnecessary.double.quotes=Replace unnecessary double quotes
quality.tool.can.not.create.temporary.file=PhpStorm couldn't create temp file
dialog.message.cannot.create.file.because.project.already.disposed=Cannot create file because project is already disposed
dead.code.commented.out=Commented out
dead.code.deleted=Deleted
intention.family.name.add.arrayshape.attribute=Add '#[ArrayShape]' attribute
intention.family.name.add.arrayshape.to.doc=Add ArrayShape to PHPDoc
inspection.message.arrayshape.can.be.added=ArrayShape can be added
inspection.option.label.php.severity=PHP {0} Severity:
inspection.option.label.php8.severity=PHP 8 Severity:
inspection.option.label.php73.severity=PHP 7.3 Severity:
inspection.message.pure.can.be.added=''{0}'' can be added
intention.name.add.to.parameter=Add ''\\&'' to parameter ''{0}''
intention.family.name.add.to.parameter=Add '\\&' to parameter
inspection.message.array.write.access.unused=Array write access is unused
inspection.message.array.key.unused=Array key is unused
intention.family.name.remove.attribute=Remove ''#[{0}]''
inspection.message.function.may.produce.side.effects=Function may produce side effects
inspection.message.method.may.produce.side.effects=Method may produce side effects
inspection.message.immutable.property.write.scope.does.not.allow.write.access.here=Invalid immutable property write: scope ''{0}'' does not allow write access here
php.console=PHP Console
inspection.message.illegal.array.offset.access=Trying to access array offset on value of type ''{0}''
attributes.are.inapplicable.for.constants=Attributes are inapplicable for constants
intention.family.name.replace.with.define.call=Replace with 'define()' call
inspection.message.leading.slash.in.constant.fqn.will.not.be.trimmed.by.php=Leading slash in constant's FQN will not be trimmed by PHP
intention.family.name.remove.leading=Remove leading '\\'
intention.family.name.replace.with.const.syntax=Replace with 'const' syntax
inspection.message.can.be.replaced.with.const.syntax=Can be replaced with 'const' syntax
intention.family.name.force.fqcn.for.references.in.phpdoc=Force FQCN for references in PHPDoc
constants.may.only.evaluate.to.scalar.values.arrays.or.resources=Constants may only evaluate to scalar values, arrays or resources
intention.family.name.merge.with.following.attribute.list=Merge attributes list with following one
intention.family.name.extract.attribute.into.separate.list=Extract attribute into separate list
intention.family.name.flip.attributes.lists=Flip attributes lists
inspection.message.too.many.messages.per.line=Too many messages per line
inspection.message.too.many.messages.per.file.only.first.errors.warnings.are.shown=Too many messages per file. Only the first {0} are shown.
can.not.correctly.run.the.tool.with.parameters=Cannot correctly run the tool with parameters:
possible.tool.process.hangup.after.0.sec=Possible tool process hangup after {0} sec.
inspection.message.write.access.to.variable.that.still.references.array.value=Write access to variable that still references the array value previously used in 'foreach'
if.with.common.parts='if' with common parts
switch.with.common.parts='switch' with common parts
intention.family.name.insert.unset.before=Insert ''unset(${0});'' before
intention.family.name.collapse.if.statement=Collapse ''{0}'' statement
intention.family.name.extract.common.parts.with.removing.branch=Extract common parts and remove branch
intention.family.name.extract.common.parts=Extract common parts
inspection.message.if.statement.with.common.parts=''{0}'' statement with common parts
intention.name.replace.with=Replace ''{0}'' with ''{1}''
inspection.message.property.only.written.but.never.read=Property is only written but never read
inspection.message.property.only.read.but.never.written=Property is only read but never written
intention.family.name.delete.field=Delete property
intention.family.name.replace.with.class.constant=Replace with class constant
invalid.condition.to.body.separator.should.be.used=Invalid separator between condition and body: '=>' should be used instead
intention.family.name.invert.if.statement=Invert 'if' statement
intention.family.name.unwrap.else=Unwrap 'else'
inspection.message.unnecessary.else=Unnecessary 'else'
inspection.message.array.always.empty.at.this.point=Array is always empty at this point
intention.family.name.can.be.merged.with.sequential=''if'' can be merged with subsequent ''{0}''
intention.family.name.merge.with.sequential=Merge with subsequent ''{0}''
inspection.message.behavior.unparenthesized.expressions.containing.both.will.change.in.php=Unparenthesized expression containing both ''.'' and ''{0}'' may produce unexpected results
intention.name.wrap.left.operand.in.parentheses=Wrap left operand in parentheses
intention.name.wrap.right.operand.in.parentheses=Wrap right operand in parentheses
parameter.type.is.not.convertible.from.null=Parameter's type is not convertible from 'null'
inspection.message.value.parameter.always=Parameter''s value is always ''{0}''
intention.family.inline.value.for.parameter=Inline parameter's value
intention.name.inline.value=Inline value ''{0}''
inspection.message.can.be.replaced.with.version=Expression can be replaced with '??' version
inspection.message.if.can.be.replaced.with.version='if' can be replaced with '??' version
intention.family.name.replace.with.version=Replace with '??' version
intention.family.name.replace.with.ternary.expression=Replace with ternary expression
intention.family.name.replace.with.closure.fromCallable=Replace with 'Closure::fromCallable(...)'
popup.title.multiple.write.scopes.found=Multiple Write Scopes Found
closest.scope=Variables from closest scope
all.values=All variables
checkbox.rename.only.nearest.scope=Rename only variables from closest scope
intention.family.name.make.method.void=Make method 'void'
inspection.message.return.value.method.never.used=Method's return value is never used
inspection.message.unnecessary.leading.slash=Unnecessary leading '\\'
inspection.message.cast.redundant=Type cast is redundant
inspection.message.unnecessary.curly.braces=Unnecessary curly braces
intention.family.name.unwrap.curly.braces=Unwrap curly braces
command.name.disable.synchronisation.with.composer=Disable Synchronization with composer.json
navigate.to.composer.json=Navigate to composer.json
notification.content.language.level.synchronisation.with.composer.was.disabled=Language level synchronization with composer.json was disabled
inspection.message.can.be.replaced.with.direct.parameter.access='func_get_arg' can be replaced with direct parameter access
intention.family.name.replace.with.parameter.access=Replace with parameter access
intention.family.name.unwrap.function.call=Unwrap function call
inspection.message.with.single.string.argument=''{0}'' with single string argument
inspection.message.for.loop.can.be.replaced.with.str.repeat='for' loop can be replaced with 'str_repeat'
intention.family.name.replace.with.str.repeat.call=Replace with 'str_repeat()' call
inspection.message.for.loop.can.be.replaced.with.implode='foreach' loop can be replaced with 'implode()'
intention.family.name.replace.with.implode.call=Replace with 'implode()' call
intention.family.name.unwrap.cast=Unwrap cast
inspection.message.unnecessary.cast.to.string=Unnecessary cast to ''{0}''
intention.family.name.merge.with.assignment=Merge with assignment
inspection.message.concatenation.can.be.merged.with.assignment.empty.string.literal=Concatenation can be merged with assignment of empty string literal
inspection.message.operands.have.incompatible.types=Operands have incompatible types
short.arrow.function.cannot.return.void=Arrow functions cannot have 'void' return type
delete.void.return.type=Delete 'void' return type
array.callback.must.have.exactly.two.elements=Array callback must have exactly two elements
intention.family.name.split.into.separate.case.statements=Split into separate 'case' statements
invalid.syntax.for.multiple.case.expressions=Invalid syntax for multiple 'case' expressions
cannot.mix.keyed.and.unkeyed.array.entries.in.assignments=Cannot mix keyed and unkeyed array entries in assignments
cannot.use.empty.array.entries.in.keyed.array.assignment=Cannot use empty array entries in keyed array assignment
cannot.use.empty.list=Cannot use empty list
unsupported.declare.0=Unsupported declare ''{0}''
inspection.message.continue.targeting.switch.equivalent.to.break='continue' targeting 'switch' is equivalent to 'break'
inspection.message.redundant.expression=Redundant expression
strict.types.declaration.must.have.0.or.1.as.its.value='strict_types' declaration must have 0 or 1 as its value
private.methods.cannot.be.final=Private methods cannot be final as they are never overridden by other classes
cannot.use.yield.from.inside.a.by.reference.generator=Cannot use 'yield from' inside a by-reference generator
intention.family.name.replace.with.check=Replace with '!==' check
dialog.title.select.methods.to.propagate.safe.delete=Select Methods To Propagate Safe Delete
dialog.title.select.parameters.to.propagate.safe.delete=Select Parameters To Propagate Safe Delete
referenced.calls=Referenced Calls
cannot.mix.and.list=Cannot mix [] and list()
intention.family.name.replace.with.array=Replace with array
intention.family.name.replace.with.list=Replace with 'list'
inspection.message.can.be.replaced.with=Can be replaced with ''{0}''
intention.family.name.remove.unused.postfix.operation=Remove unused postfix operation
inspection.message.results.postfix.expression.unused=Result of postfix expression is unused
intention.family.name.add.doc.tag.with.throws.tags=Add PHPDoc comment with @throws tags
replace.variable.assignment.with.named.argument=Replace variable assignment with named argument
action.run.composer.install.text=Run 'composer install'
notification.content.vendor.directory.not.found='vendor' directory is not found
intention.family.name.move.from.to.composer.json.section=Move ''{0}'' from ''{1}'' to ''{2}'' composer.json section
intention.family.name.flip=Flip '?:'
inspection.message.can.be.removed=''{0}'' can be removed
intention.family.name.remove.unused.property=Remove unused property
intention.family.name.simplify.ternary.expression=Simplify '?:'
inspection.message.should.probably.not.be.passed.as.parameter=''{0}'' should probably not be passed as parameter ''{1}''
inspection.message.should.probably.not.be.assigned=''{0}'' should probably not be assigned to ''{1}''
extract.method.selector.title=Code To Extract
intention.family.name.replace.with.operator=Replace with '?->' operator
inspection.message.can.be.replaced.with.operator=Can be replaced with '?->' operator
add.throw.before.exception=Add 'throw' before the exception
intention.family.name.replace.with.dirname.call=Replace with 'dirname()' call
inspection.php.redundant.method.override=Redundant method override
inspection.php.loop.can.be.replaced.with.implode=Loop can be replaced with 'implode()'
inspection.message.redundant.method.override=Method override is redundant
delete.redundant.method.override=Remove method
intention.family.name.replace.if.with.version=Replace 'if' with '??' version
anonymous.class=anonymous class
anonymous.0=anonymous {0}
lambda=Lambda
checkbox.anonymous.classes=Anonymous Classes
checkbox.lambdas=Lambdas
inspection.message.trait.usage=Trait usage is not allowed
inspection.message.will.be.covered.by=Condition is unnecessary because it is checked by ''{0}''
inspection.message.can.be.replaced.with.fail=Can be replaced with ''{0}''
inspection.message.can.be.replaced.with.assert.false=Can be replaced with ''assertFalse''
inspection.message.can.be.replaced.with.assert.true=Can be replaced with ''assertTrue''
intention.name.replace.coalesce.expression.with.operand=Replace coalescing expression with operand
intention.name.replace.coalesce.expression.with=Replace coalescing expression with ''{0}''
label.align.named.arguments=Align named arguments
delete.catch.statement=Delete 'catch' statement
inspection.message.exception.immediately.rethrown=Exception is immediately rethrown
inspection.message.dangerous.array.initialization=Dangerous array initialization
inspection.message.comment.can.be.replaced.with.named.argument=Comment can be replaced with named argument
replace.with.array=Replace with direct assignment '$array = array($value)'
replace.with.array.short.syntax=Replace with direct assignment '$array = [$value]'
intention.family.name.replace.with.comparison=Replace with comparison
quickfix.undefined.function.add.function=Add function
enum.may.not.include.0=Enum may not include ''{0}''
enum.may.not.include.extend=Enum may not extend other classes
enums.may.not.include.properties=Enums may not include properties
enums.may.not.be.cloned=Enums may not be cloned
intention.family.name.make.containing.class.enum=Make containing class enum
enum.properties.are.immutable=Enum properties are immutable
enum.backing.type.must.be.int.or.string=Enum backing type must be 'int' or 'string'
enum.case.type.0.does.not.match.enum.backing.type.1=Enum case type ''{0}'' does not match enum backing type ''{1}''
all.cases.of.backed.enum.must.have.a.value=All cases of backed enum must have a value
case.of.non.backed.enum.must.not.have.a.value=Case of non-backed enum must not have a value
intention.family.name.delete.initializer=Delete initializer
intention.family.name.add.to.containing.enum=Add '' : {0}'' to containing enum
intention.family.name.remove.backed.type.from.containing.enum=Remove backed type from containing enum
enum.case.should.be.located.only.inside.enum.classes=Enum case should be located only inside enum classes
enum.case.value.must.be.constant=Enum case value must be constant
enum.backing.type.must.be.int.or.string.0.given=Enum backing type must be ''int'' or ''string'', ''{0}'' given
enums.may.not.implement.the.serializable.interface=Enums may not implement the 'Serializable' interface
cannot.redeclare.methods.from.enum.implicit.interfaces=Cannot redeclare methods from enum implicit interfaces
cannot.implement.interface.0=Cannot implement interface ''{0}''
cannot.implement.interface.0.directly=Cannot implement interface ''{0}'' directly
non.enum.class.cannot.implement.interface=Non-enum class cannot implement interface ''{0}''
non.backed.enum.cannot.implement.interface.backedenum=Non-backed enum cannot implement interface 'BackedEnum'
intention.family.name.count.comments.as.content=Count comments as content
inspection.message.constant.from.base.class.referenced.via.child.class=Constant from base class ''{0}'' referenced via child class
intention.family.name.replace.with.class.reference.with.base.class=Replace with class reference to base class
intention.replace.with.method.call=Replace with a call to existing method
inspection.php.uncovered.enum.cases=Some enum cases are uncovered
inspection.message.uncovered.enum.cases='match' expression has uncovered enum cases
inspection.message.uncovered.enum.cases.switch='switch' statement has uncovered enum cases
intention.family.name.add.remaining.enum.cases=Add remaining enum cases
intention.family.name.split.into.two.separate.match.arms=Extract condition into separate 'match' arm
multiple.enum.identifiers.should.be.stated.in.different.cases=Multiple enum identifiers should be stated in separate cases
intention.family.name.split.into.multiple.enum.cases=Split into multiple enum cases
intention.family.name.initialize.property.in.constructor=Initialize property in constructor
inspection.message.not.valid.backing.value.for.enum={0} is not a valid backing value for enum
intention.name.add.enum.case.with.value=Add enum case with ''{0}'' value
intention.family.name.replace.with.concatenation=Replace with concatenation
intention.family.name.remove.empty.index.operator=Remove '[]' operator
inspection.missing.doc.comment.options.panel.ignore.private.members=Ignore private members
intention.family.name.unwrap.foreach=Unwrap 'foreach'
inspection.message.foreach.over.array.literal.with.single.element='foreach' over array literal with single element
inspection.message.can.be.replaced.with.min.max.call=Can be replaced with ''{0}'' call
intention.family.name.replace.with.min.max.call=Replace with 'min()'/'max()' call
intention.name.replace.with.min.max.call=Replace with ''{0}'' call
duplicate.value.in.enum.for.cases.0.and.1=Duplicate value in enum for cases ''{0}'' and ''{1}''
inspection.message.expression.not.changed.after.applying=Expression will not change after applying ''{0}''
inspection.message.array.push.with.single.element='array_push' with single element
inspection.message.switch.has.only.default.case=Switch has only 'default' case
inspection.message.switch.has.only.single.case=Switch has only single case
intention.family.name.replace.with.if=Replace with 'if'
inspection.message.never.returning.function.must.not.return=A 'never'-returning function must not return
intention.name.prepend.default.case=Prepend 'default'
inspection.php.internal.array.index.reset.is.unnecessary=Array internal pointer reset is unnecessary
inspection.php.internal.array.index.reset.is.unnecessary.navigate.to.function=Navigate to function that resets array internal pointer
inspection.php.acessing.static.trait.members=Accessing static trait members
inspection.php.deprecated.stdlib.call=Deprecated Standard Library call
inspection.php.array.index.immediately.rewritten=Array index is immediately rewritten 
inspection.php.field.immediately.rewritten=Property is immediately rewritten 
inspection.php.object.fields.are.only.written=Local object is used only for writing properties
remove.unnecessary.reset=Remove unnecessary 'reset'
intention.family.name.replace.with.array.assignment=Replace with array assignment
intention.family.name.replace.with.in.array.call=Replace with 'in_array()' call
inspection.message.can.be.replaced.with.in.array.call=Can be replaced with ''{0}'' call
inspection.message.can.be.replaced.with.str.function=Can be replaced with ''{0}''
intention.family.name.replace.with.str.function.call=Replace with ''{0}'' call
intention.family.name.replace.in.array.with.disjunction=Replace 'in_array()' with '||'
intention.message.replace.in.array.with.disjunction=Replace ''in_array()'' with ''{0}''
intention.family.name.evaluate.cast=Replace with ''{0}''
intention.name.evaluate.cast=Evaluate cast
inspection.message.cast.evaluable=Cast can be replaced with ''{0}''
inspection.php.cast.is.evaluable=Type cast on a scalar value
globals.can.only.be.modified.using.the.globals.name.value.syntax='$GLOBALS' can only be modified using the '$GLOBALS[$name] = $value' syntax
inspection.message.calling.static.trait.member=Calling static trait member directly is deprecated. It should only be accessed on a class using the trait.
intention.family.name.replace.with.self.access=Replace with 'self::' access
inspection.message.returning.by.reference.from.void.function.deprecated=Returning by reference from a void function is deprecated
intention.family.name.collapse.statement.into.parameter.default.value=Collapse statement into parameter's default value
inspection.message.statement.can.be.collapsed.into.parameter.default.value=Statement can be collapsed into parameter's default value
inspection.message.element.already.covered.by=''{0}'' is already covered by ''{1}''
intention.family.name.delete.covered.element=Delete covered element

label.successors=Successors
label.predecessors=Predecessors
inspection.message.can.be.merged.with=Can be merged with ''{0}''
intention.family.name.merge.with.adjustment.range=Merge with adjusted range
popup.title.select.target.code.block=Select Target Code Block
popup.select.target.code.block.closure=Arrow function body (transforms to closure)
popup.select.target.code.block.containing.block=Containing block
php.intention.category=PHP
inspection.message.argument.with.type.deprecated.for.this.call=Argument with type ''{0}'' is deprecated for this call
inspection.message.call.without.arguments.deprecated=''{0}'' call without arguments is deprecated
inspection.message.call.with.two.arguments.deprecated=''{0}'' call with two arguments is deprecated
inspection.message.call.with.negative.width.deprecated='mb_strimwidth' call with negative 'width' argument is deprecated
intention.family.name.navigate.to.rewrite.expression=Navigate to rewrite expression
inspection.message.array.index.immediately.rewritten.before.accessing=Array index is immediately overwritten before accessing
inspection.message.field.immediately.rewritten.before.accessing=Property is immediately overwritten before accessing
readonly.property.must.have.type='readonly' property must have type specified
readonly.property.cannot.have.default.value='readonly' property cannot have default value
inspection.message.local.object.used.only.for.writing.properties=Local object is used only for writing properties
intention.family.name.replace.with.argument=Replace with argument
inspection.message.array.values.call.redundant='array_values' call is redundant
extract.method.link.label.more.options=More options
inspection.message.assert.always.will.be.false=Type of argument is incompatible because 'assertTrue()' performs strict comparison to 'true' 
inspection.message.array.to.string.conversion=Array to string conversion
inspection.message.cannot.use.string.offset.as.object=Cannot use string offset as an object
inspection.message.cannot.use.assign.op.operators.with.string.offsets=Cannot use combined operator assignments with string offsets
inspection.message.cannot.unset.string.offsets=Cannot unset string offsets
inspection.message.cannot.increment.decrement.string.offsets=Cannot increment/decrement string offsets
inspection.message.cannot.create.references.to.from.string.offsets=Cannot create references to/from string offsets
inspection.message.cannot.use.string.offset.as.array=Cannot use string offset as an array
inspection.message.cannot.assign.empty.string.to.string.offset=Cannot assign an empty string to a string offset
inspection.message.only.first.byte.will.be.assigned.to.string.offset=Only the first byte will be assigned to the string offset
inspection.message.second.write.to.readonly.property=Cannot modify 'readonly' property
inspection.php.second.write.to.readonly.property=Second write to 'readonly' property
inspection.message.spread.operator.can.be.unwrapped=Spread operator can be unwrapped
inspection.message.spread.operator.over.literal.unnecessary.for.arguments.resolved.to.variadic.parameter=Spread operator over literal is unnecessary for arguments resolved to variadic parameter
intention.family.name.unwrap.spread.operator=Unwrap spread operator
inspection.message.write.access.to.readonly.property.outside.declaration.scope=Cannot write to 'readonly' property outside of declaration scope
inspection.message.write.access.to.readonly.property.outside.declaration.scope.ret.by.ref='readonly' property is returned by reference and might leak outside the declaration scope
inspection.php.write.access.to.readonly.property.outside.declaration.scope=Write access to 'readonly' property outside of declaration scope
intention.family.name.replace.with.named.argument=Replace with named argument
inspection.message.can.be.replaced.with.named.argument=Can be replaced with named argument
cannot.create.closure.for.new.expression=Cannot create 'Closure' for 'new' expression
replace.with.arrow.function=Replace with arrow function
replace.with.anonymous.function=Replace with anonymous function
label.interpreter=Interpreter: {0}
cannot.combine.nullsafe.operator.with.closure.creation=Cannot combine nullsafe operator with 'Closure' creation
replace.with.coalesce.operator=Replace with coalesce operator
inspection.redundant.intersection.type=Redundant intersection type
inspection.redundant.intersection.type.fix=Intersection type could be simplified to ''{0}''
inspection.redundant.intersection.type.fix.name=Simplify intersection type
anonymous.function=Anonymous function
inspection.message.nested.call.can.be.unwrapped=Nested ''{0}'' call can be unwrapped
intention.family.name.unwrap.call=Unwrap call
type.0.cannot.be.part.of.an.intersection.type=Type ''{0}'' cannot be part of an intersection type
replace.with.first.class.callable.family.name=Replace with first-class callable syntax
inspection.message.duplicate.character=Duplicate character
inspection.php.autovivification.on.false.values=Automatic conversion of 'false' to array is deprecated
class.implements.the.serializable.interface.which.is.deprecated=Implementing 'Serializable' interface without '__serialize()'/'__unserialize()' methods is deprecated
add.serialize.magic.methods=Add {0} methods
add.serialize.magic.method=Add {0} method
inspection.message.variable.already.equal.to.assigned.value=Variable already equals the assigned value
intention.family.name.replace.with.zero=Replace with ''{0}''
inspection.message.expression.always.choice=Expression is always ''{0}''
intention.family.name.replace.with.compile.time.result=Replace with compile-time result
group.advanced.settings.php=PHP
advanced.setting.php.max.chain.resolve.depth=Maximum depth of resolving member references
function.has.parameter.with.incompatible.default.value.type=Function has a parameter whose default value is incompatible with its declared type
intention.family.name.replace.with.suggested.call.in.phpunit=Replace with a call suggested in PHPUnit 10
inspection.message.function.deprecated.will.be.removed.in.phpunit=Method is deprecated and removed in PHPUnit 10
inspection.php.autovivification.on.false.values.possible=Might cause deprecated conversion of 'false' to array
php.change.signature.conflict.with.local.var=Parameter ''{0}'' collides with local variable inside function ''{1}''
php.change.signature.conflict.with.local.var.method=Parameter ''{0}'' collides with local variable inside method ''{1}'' from ''{2}''
dialog.message.execution.quality.tools.in.untrusted.project.prohibited=Execution of Quality Tools in untrusted projects is prohibited
untrusted.composer.dialog.text=\
  Installing or updating dependencies, or running Composer commands may execute potentially malicious code.\n\n\
  If you do not trust the source, stay in Safe Mode.
inspection.message.instanceof.checks.in.catch.can.be.replaced.with.specific.catches='instanceof' checks in 'catch' block can be replaced with specific catches
inspection.php.instanceof.checks.in.catch.can.be.replaced.with.specific.catches='instanceof' checks in 'catch' block can be replaced with specific catches
intention.family.name.replace.instanceof.checks.in.catch.with.specific.catches=Replace 'instanceof' checks in 'catch' block with specific catches
no.in.line.parameter.name.hints.will.be.shown.for.methods.matching.any.of.these.patterns=No inlay parameter name hints will be shown for methods matching any of these patterns.
patterns.are.matched.on.fully.qualified.name.parameter.count.and.parameter.names=Patterns are matched on fully qualified name, parameter count, and parameter names.
you.can.always.add.a.precise.exclusion.via.alt.enter.and.then.edit.it.to.broaden.as.needed=You can always add a precise exclusion via Alt-Enter and then edit it to broaden as needed.
code.global.code.matches.function.with.two.parameters={0} matches function with two parameters.
code.info.code.matches.all.single.parameter.methods.where.the.parameter.name.ends.with.em.info.em={0} matches all single-parameter methods where the parameter name ends with {1}.
code.key.value.code.matches.all.methods.with.parameters.em.key.em.and.em.value.em={0} matches all methods with parameters {1} and {2}.
code.fully.qualified.classname.methodname.key.value.code.example.precise.match={0} is an example precise exclusion.
key=key
value=value
inspection.message.can.be.replaced.with.match.expression='if' statement can be replaced with 'match' expression
intention.family.name.remove.duplicate.operand=Remove duplicate operand
inspection.message.expression.have.duplicate.operand=Expression has duplicate operand {0}
replace.all.occurrences.without.side.effects=Replace all occurrences without side effects
inspection.message.max.must.be.greater.than.or.equal.to.argument.min='max' argument must be greater than or equal to 'min'
inspection.php.class.constant.can.be.final=Class constant can be 'final'
inspection.message.can.be.final=Can be 'final'
intention.family.name.make.final=Make 'final'
inspection.php.array.append.using.count=Using 'count()' as index for appending value to array
inspection.message.count.used.as.array.index.to.append.element='count' used as array index to append element
inspection.php.pointless.boolean.expression=Pointless boolean expression inside 'if' condition
inspection.message.pointless.boolean.expression=Boolean expression can be simplified
info=info
inspection.message.readonly.property.non.readonly=Cannot redeclare 'readonly' property as non-'readonly'
inspection.message.non.readonly.property.readonly=Cannot redeclare non-'readonly' property as 'readonly'
intention.family.name.remove.readonly.modifier=Remove 'readonly' modifier
intention.family.name.add.readonly.modifier=Add 'readonly' modifier
inspection.message.methods.cannot.be.mocked=''{0}'' methods cannot be mocked
inspection.mockery.protected.method.cannot.be.mocked='protected' methods cannot be mocked without calling 'Mock.shouldAllowMockingProtectedMethods' 
final=final
enum=enum
inspection.message.classes.cannot.be.doubled=''{0}'' classes cannot be doubled
inspection.message.cannot.stub.or.mock.using.method.list.that.contains.duplicates=Cannot stub or mock using a methods list containing duplicates
intention.family.name.navigate.to.duplicate.method.name=Navigate to duplicate method
inspection.php.property.can.be.readonly=Property can be 'readonly'
inspection.message.property.can.be.readonly=Property can be 'readonly'
text.plain=text/plain
enum.value.cannot.referer.to.enum.cases=Enum value cannot refer to enum cases
replace.with.pow.operator=Replace with '**' operator
inspection.message.existing.overriding.private.method.may.be.inaccessible=Existing overriding private method may be inaccessible
inspection.message.existing.overriding.private.method.may.be.inaccessible.method=Overriding private method ''{0}'' may be inaccessible
intention.family.name.navigate.to.possibly.inaccessible.methods=Navigate to possibly inaccessible methods
overriding.private.methods=Overriding private methods
inspection.php.autoload.declaration.is.deprecated=Deprecated '__autoload()' function declaration
intention.family.name.replace.with.spl.autoload.register.call=Replace with 'spl_autoload_register()' call
inspection.message.deprecated.autoload.declaration='__autoload()' declaration is deprecated
inspection.message.prohibited.autoload.declaration='__autoload()' declaration is forbidden
inspection.php.assert.declaration.is.deprecated=Deprecated 'assert()' function declaration
inspection.message.defining.custom.assert.function.forbidden=Defining a custom 'assert()' function is forbidden
inspection.message.defining.custom.assert.function.deprecated=Defining a custom 'assert()' function is deprecated
inspection.php.preg.match.can.be.replaced.with.comparison='preg_match()' can be replaced with comparison
checkbox.use.composer=Add 'composer.json'
border.title.require.dependencies='require' dependencies
border.title.require.dev.dependencies='require-dev' dependencies
require='require'
status.text.no.dependencies=No dependencies
border.title.additional.dependencies=Additional dependencies
inspection.php.redundant.modifier.key=Redundant modifier
inspection.php.redundant.modifier=Redundant ''{0}'' modifier
inspection.php.remove.modifier=Remove modifier ''{0}''
inspection.php.unsupported.modifier.key=Unsupported modifier
inspection.php.unsupported.modifier=Modifier ''{0}'' is not supported since PHP {1}
inspection.php.deprecated.modifier=Modifier ''{0}'' is deprecated since PHP {1}
inspection.php.unknown.modifier=Unknown modifier ''{0}''
notification.content.usage.found.in.project={0} usage is found in the project
action.enable.plugin.text=Enable ''{0}'' Plugin
inspection.message.doc.tag.without.variable.name.doesn.t.provide.type.information.for.any.expression=Doc tag without variable name doesn't provide type information for any expression
intention.family.name.add=Add ''${0}''
intention.family.name.add.variable.name=Add variable name
inspection.php.int.ranges.mismatch=Number ranges mismatch
inspection.message.value.ranges.mismatch.expected.actual=Value ranges mismatch. Expected: {0}, Actual: {1}
composer.version.update.hint=The current version and available updates for installed packages.
inspection.php.preg.replace.with.empty.replacement.name='preg_replace()' can be replaced with '(l|r)trim' call
inspection.php.loop.can.be.replaced.with.in.array=Loop can be replaced with 'in_array()' or 'array_key_exists()' call
inspection.message.loop.can.be.replaced.with.0=Loop can be replaced with ''{0}()''
PhpInterpreterConfigurable.php.ini.title=Select configuration file or directory
php.interpreter.custom.ini.label=Configuration file:
label.system.php=System PHP
intention.family.name.replace.array.traversable.with.iterable=Replace 'array|Traversable' with 'iterable'
inspection.message.array.traversable.can.be.replaced.with.iterable=Type hint 'array|Traversable' can be replaced with 'iterable'
inspection.php.array.traversable.can.be.replaced.with.iterable=Type hint 'array|Traversable' can be replaced with 'iterable'
intention.family.name.combine.multiple.isset.calls.into.one=Combine multiple 'isset' calls into one
inspection.message.multiple.isset.calls.can.be.combined.into.one=Multiple 'isset' calls can be combined into one
inspection.php.multiple.isset.calls.can.be.replaced.with.one=Multiple 'isset' calls can be replaced with one
inspection.php.invalid.delimiter.key=Invalid delimiter
inspection.php.regexp.delimiter.is.alphanumeric.or.backslash=Delimiter is alphanumeric or backslash
inspection.php.regexp.delimiter.is.used.in.reg.exp=Delimiter is used in regular expression
inspection.php.regexp.replace.with.valid.delimiter=Replace with valid delimiter
php.enum=Enum
intention.family.name.add.should.allow.mocking.protected.methods.call=Add 'shouldAllowMockingProtectedMethods' call
php.external.formatter.title=External Formatters
php.external.formatter=PHP External Formatter
external.formatter.phpcsfixer=PHP CS Fixer
external.formatter.phpcbf=PHP Code Beautifier and Fixer
no.external.formatter=No External Formatter
external.formatter.couldnt.run.tool={0} couldn''t be started. Please check your configuration. 
notification.content.formatter.couldn.t.apply.result.external.tool=Formatter couldn't apply result of the external tool
notification.content.process.exited.with.non.zero.code=Process exited with non-zero code
inspection.php.name.variable.is.used.only.inside.closure=Variable is only used inside closure
inspection.php.move.variable.inside.closure=Move variable assignment inside closure
inspection.php.navigate.to.variable.assignment=Navigate to variable assignment
inspection.php.highlight.only.closures.with.multiple.statements.option=Highlight only closures with multiple statements
label.configured.as.external.formatter=Configured as {0}
label.can.be.configured.as.external.formatter=Can be configured as {0}
notification.group.composer.language.level=Composer language level synchronisation disabled
notification.group.php=PHP
notification.group.php.plugin.suggestion=PHP Plugin suggestions
notification.group.php.interpreters=PHP interpreter problem
notification.group.php.profiler=PHP profiler problem
notification.group.php.code.style=PHP code style inspections suggested
notication.group.php.debugger=PHP debugger
notification.group.phpunit=PHPUnit
notification.group.default.stubs=PHP default stubs path incorrect
notification.group.debug.listener=PHP debug listener
notification.group.quality.tools=PHP external quality tools
notification.group.dbgp.proxy=PHP debugger proxy
notification.group.php.cgi=PHP-CGI server
notification.group.composer.install=Composer 'install' command suggested
notification.group.php.3v4l=PHP 3v4l integration
bit.shift.by.negative.number=Bit shift by negative number
shows.dialog.with.methods.from.implemented.interface.selected.methods.will.be.inserted.into.the.class.after.dialog.confirmation=Shows dialog with methods from implemented interface. Selected methods will be inserted into the class after dialog confirmation.
inspection.php.preg.match.redundant.closure=Redundant closure '.*'
rerun.with.ignore.platform.reqs=Rerun with --ignore-platform-reqs
platform.reqs.are.missing=Platform requirements are missing.
notification.content.composer.executable.was.automatically.set.to.global.composer=Composer executable was automatically set to global 'composer'
notification.content.configure.manually=Configure manually
border.title.options=Options
the.button.shows.whether.inspection.is.on.or.off=The button shows whether inspection is on or off
config.file.doesnt.exist=Configuration file doesn't exist
robo=Robo
robo.task.method=Robo task method
turn.off.external.formatter=Turn off external formatter
add.to.excluded.files.action=Add `{0}` to ignored files
quality.inspection.button.tooltip=The button shows whether the corresponding inspection is on or not
php.title.docker.compose.settings=Docker Compose Settings
cannot.apply.0.to.trait=Cannot apply {0} to trait
cannot.apply.0.to.interface=Cannot apply {0} to interface
cannot.apply.0.to.readonly.class=Cannot apply {0} to 'readonly' class
inspection.message.non.readonly.class.cannot.extend.readonly.class=Non-''readonly'' class cannot extend 'readonly' class ''{0}''
inspection.message.readonly.class.cannot.extend.non.readonly.class=''readonly'' class cannot extend non-'readonly' class ''{0}''
intention.family.name.replace.readonly.with.public=Replace 'readonly' with 'public'
intention.family.name.delete.readonly=Delete 'readonly'
inspection.message.readonly.modifier.redundant='readonly' modifier is redundant
cannot.declare.static.properties.in.readonly.class=Cannot declare 'static' properties in 'readonly' class
inspection.message.class.can.be.readonly=Class can be 'readonly'

type.contains.both.true.and.false.bool.should.be.used.instead=Type contains both true and false, bool should be used instead
intention.family.name.make.class.readonly=Make class 'readonly'
PhpUnitConfigurableForm.paratest.path=Default ParaTest binary
PhpUnitConfigurableForm.use.paratest=Use ParaTest:
flip.key.value.intention.family.name=Flip key and value
flip.key.value.intention.message.all.in.array=Flip all keys and values in array
flip.key.value.intention.message.single=Flip key and value
intention.family.name.unwrap.intersection.type=Unwrap intersection type
usage.of.intersection.types.grouping.is.allowed.only.as.part.of.union.type=Usage of intersection types grouping is allowed only as part of union type
intention.family.name.replace.with.union.type=Replace with union type
only.intersection.type.can.be.used.for.grouping=Only intersection type can be used for grouping
only.intersection.type.can.be.used.for.grouping1=Only intersection type can be used for grouping
nested.type.groups.are.not.allowed=Nested type groups are not allowed
intention.family.name.group.intersection.types=Group intersection types
type.0.is.redundant.as.it.is.more.restrictive.than.type.1=Type ''{0}'' is redundant as it is more restrictive than type ''{1}''
action.quality.tools.provider.description=File is excluded from External Quality Tools Analysis and Formatter
action.quality.tools.provider=Quality Tools
quality.tools.provider.tooltip=This file is excluded from External Quality Tools Analysis and Formatting. You can remove the file from Ignored Files List.
remove.from.ignored.list=Remove
php.debug.state.widget=Stop/Start Debug Listening
inspection.message.using.in.strings.deprecated.use.instead=Using {0} in strings is deprecated, use {1} instead
inspection.message.using.variable.variables.in.strings.deprecated.use.instead=Using {0} (variable variables) in strings is deprecated, use {1} instead
intention.family.name.replace.with.interpolation=Replace with '{$' interpolation
use.0.in.callables.is.deprecated=Use of ''{0}'' in callables is deprecated
deprecated.form.of.callables=Deprecated form of callables
replace.deprecated.from.of.callable=Replace deprecated form of callable
paratest=ParaTest
run.with.paratest=Run with ParaTest
run.with.paratest.mnemonic=Run%s with ParaTest
paratest.is.not.supported.for.selected.run.profile=ParaTest is not compatible with selected run profile
PhpUnitConfigurableForm.default.paratest.binary=Default ParaTest binary:
paratest.runner.description=Run selected configuration with ParaTest
action.synonym.listening=listening
action.synonym.stop.listening=Stop listening for PHP Xdebug connections
action.synonym.start.listening=Start listening for PHP Xdebug connections
null.cannot.be.marked.as.nullable='null' cannot be marked as nullable
inspection.php.unpacking.arrays.with.string.keys.inspection=Unpacking arrays with string keys is forbidden for PHP < 8.1
intention.family.name.replace.with.array.merge.expression=Replace with 'array_merge' expression
intention.family.name.unwrap.type=Unwrap type
add.constant.0.to.class.1.and.opens.containing.file.in.editor=Adds constant ''{0}'' to class ''{1}'' and opens containing file in editor
creates.new.class.0.in.a.separate.file=Creates new class named ''{0}'' in a separate file
creates.new.class.method.0.in.a.separate.file=Creates new class named ''{0}'' with method ''{1}'' in a separate file
cannot.declare.dynamic.properties.in.readonly.class=Cannot declare dynamic properties in 'readonly' class
intention.family.name.replace.true.argument.with.false=Replace 'true' argument with 'false'
intention.family.name.add.true.argument.to.var.export.call=Add 'true' argument to 'var_export' call
inspection.message.var.export.with.return.argument.equals.false.always.returns.null=''{0}'' with ''return'' argument equals ''false'' always returns ''{1}''
inspection.message.var.export.without.return.argument.always.returns.null=''{0}'' without ''return'' argument always returns ''{1}''
opens.composer.json.to.change.php.property=Opens 'composer.json' to change 'php' property
checkbox.show.class.namespace.separators=Show PHP class and namespace separators
intention.family.name.show.example.date.time.output=Show example date time output
classes.can.not.have.backed.type=Classes can't have backed type
php.debug.action.include.return.value.breakpoint.step.description=Enables extra 'return from function' debug step
php.debug.action.watches.method.return.value.enable=Enable Function Return Value Debugging
php.debug.action.watches.method.return.value.unavailable.reason=Return Value Debugging Is Supported Only from Xdebug 3.2
enable.return.function.value.debugging.xdebug.3.2=Enable return function value debugging (Xdebug 3.2+)
shows.list.of.child.classes.without.without.resolved.member=Shows list of child classes without resolved member
shows.list.of.child.classes.with.inaccessible.methods=Shows list of child classes with inaccessible methods
add.slash.to.the.start=Add '/' to the start
intention.php.replace.class.with.enum=Replace class with enum
intention.php.replace.class.with.enum.title=Replace Class With Enum
intention.php.replace.class.with.enum.error.message=Cannot replace class with enum because of constructor call
set.the.following.option=Set the following option: 
enables.inspection.0=Enables inspection ''{0}''
show.0.settings.window=Show ''{0}'' settings window
reformats.file.with.0=Reformats file with ''{0}''
shows.0.dialog=Shows ''{0}'' dialog
enable.the.following.extension=Enables the following extension stub in PHP Runtime options:
navigate=... Navigate
enable.navigate.links.for.class.and.member.references=Enable '... Navigate' links for class and member references
list.of.causes.0=// List of places which might throw exceptions:\n{0}
suppress.unused.preview=Suppresses ''Unused declaration'' inspection for entities annotated with ''{0}''
seconds.since.the.unix.epoch.january.1.1970.00.00.00.gmt=Seconds since the Unix Epoch, January 1, 1970 00:00:00 GMT ({0})
rfc.2822.rfc.5322.formatted.date=RFC 2822/RFC 5322 formatted date ({0})
iso.8601.date=ISO 8601 date ({0})
timezone.offset.in.seconds=Timezone offset in seconds (-43200 to 50400)
timezone.abbreviation.if.known.otherwise.the.gmt.offset=Timezone abbreviation, if known, otherwise the GMT offset (EST, MDT, +05)
the.same.as.p.but.returns.z.instead.of.00.00.available.as.of.php.8.0=The same as P, but returns Z instead of +00:00, available as of PHP 8.0 (+02:00)
difference.to.greenwich.time.gmt.with.colon.between.hours.and.minutes=Difference to Greenwich time (GMT) with colon between hours and minutes (+02:00)
difference.to.greenwich.time.gmt.without.colon.between.hours.and.minutes=Difference to Greenwich time (GMT) without colon between hours and minutes (+0200)
whether.or.not.the.date.is.in.daylight.saving.time.1.or.0=Whether the date is in daylight saving time (1 or 0)
timezone.identifier=Timezone identifier (UTC, GMT, Atlantic/Azores)
milliseconds=Milliseconds (654)
microseconds=Microseconds (654321)
seconds.with.leading.zeros=Seconds with leading zeros (00 to 59)
minutes.with.leading.zeros=Minutes with leading zeros (00 to 59)
24.hour.format.of.an.hour.with.leading.zeros=24-hour format of an hour with leading zeros (00 to 23)
12.hour.format.of.an.hour.with.leading.zeros=12-hour format of an hour with leading zeros (01 to 12)
24.hour.format.of.an.hour.without.leading.zeros=24-hour format of an hour without leading zeros (0 to 23)
12.hour.format.of.an.hour.without.leading.zeros=12-hour format of an hour without leading zeros (1 to 12)
swatch.internet.time=Swatch Internet time (000 to 999)
uppercase.ante.meridiem.and.post.meridiem.am.pm=Uppercase Ante meridiem and Post meridiem (AM/PM)
lowercase.ante.meridiem.and.post.meridiem.am.pm=Lowercase Ante meridiem and Post meridiem (am/pm)
a.two.digit.representation.of.a.year=A two digit representation of a year (22)
a.full.numeric.representation.of.a.year.at.least.4.digits.with.for.years.bce=A full numeric representation of a year, at least 4 digits, with - for years BCE (2022)
an.expanded.full.numeric.representation.if.requried.or.a.full.numeral.representation.like.y=An expanded full numeric representation if requried, or a full numeral representation (2022)
an.expanded.full.numeric.representation.of.a.year.at.least.4.digits.with.or=An expanded full numeric representation of a year, at least 4 digits with - or + (+2022)
iso.8601.week.numbering.year=ISO 8601 week-numbering year (2022)
whether.it.s.a.leap.year.1.or.0=Whether it's a leap year (1 or 0)
number.of.days.in.the.given.month=Number of days in the given month (28 to 31)
numeric.representation.of.a.month.without.leading.zeros=Numeric representation of a month, without leading zeros (1 to 12)
a.short.textual.representation.of.a.month.three.letters=A short textual representation of a month, three letters (Jan to Dec)
numeric.representation.of.a.month.with.leading.zeros=Numeric representation of a month, with leading zeros (01 to 12)
a.full.textual.representation.of.a.month.such.as.january.or.march=A full textual representation of a month (January to December)
iso.8601.week.number.of.year.weeks.starting.on.monday=ISO 8601 week number of year, weeks starting on Monday (42)
the.day.of.the.year.starting.from.0=The day of the year (0 to 365)
numeric.representation.of.the.day.of.the.week=Numeric representation of the day of the week (0 to 6)
english.ordinal.suffix.for.the.day.of.the.month.2.characters=English ordinal suffix for the day of the month, 2 characters (st, nd, rd, th)
iso.8601.numeric.representation.of.the.day.of.the.week=ISO 8601 numeric representation of the day of the week (1 to 7)
a.full.textual.representation.of.the.day.of.the.week=A full textual representation of the day of the week (Sunday through Saturday)
day.of.the.month.without.leading.zeros=Day of the month without leading zeros (1 to 31)
a.textual.representation.of.a.day.three.letters=A textual representation of a day, three letters (Mon to Sun)
day.of.the.month.2.digits.with.leading.zeros=Day of the month, 2 digits with leading zeros (01 to 31)
inspection.php.regexp.n.modifier.can.be.replaced.with.non.capturing.groups='n' modifier can be replaced with non-capturing groups
inspection.php.regexp.replace.n.modifier.with.non.capturing.groups=Replace 'n' modifier with non-capturing groups
action.copy.to.clipboard.text=Copy to Clipboard
action.copy.port.to.clipboard.text=Copy Port Value to Clipboard
inlay.hints.usages.text={0,choice, 0#no usages|1#1 usage|2#{0,number}'{1,choice, |1#+}' usages}
code.vision.implementations.hint={0, choice, 1#1 implementation|2#{0,number}'{1,choice, |1#+}' implementations}
code.vision.overrides.hint={0, choice, 1#1 override|2#{0,number}'{1,choice, |1#+}' overrides}
code.vision.inheritors.hint={0, choice, 1#1 inheritor|2#{0,number}'{1,choice, |1#+}' inheritors}
inspection.message.enum.field.reference.in.constant.expression.allowed.only.from.php=Enum field reference in constant expression is allowed only from PHP 8.2
code.vision.used.in.hint=used by {0}{1, choice, |1#+}
add.port.in.ide.settings=Add Port {0} to Settings
checkbox.always.enable.php.code.background.highlighting=Always enable PHP code background highlighting
php.web/server.validation.validation.script=Debug Validation Script
label.failed=Failed
download.validation.script=Download Xdebug validation script
refactoring.copy.class.name=Copy Class
copy.to.namespace=Target namespace:
label.new.name=New name:
link.label.go.to.documentation=Go to Documentation
global.variable.from.globals.array.assignment=Global variable from $GLOBALS array assignment
xdebug.validation.download.script.label=Download script command:
xdebug.validation.ip.not.found={0} is not found among automatically detected IDE IPs
xdebug.validation.ip.not.found.descr=Automatically detected IDE IPs: {0}
inspection.php.invalid.function.result.used.inspection.display.name=Invalid function result used
php.debug.validate.got.it=Debug Validation
php.debug.validate.got.it.descr=You can validate your settings with a debug validation dialog 
show.validation.dialog=Show Validate Debugger dialog
inspection.php.redeclaration.stdlib.function=Redeclaration of standard library function
inspection.php.redeclaration.stdlib.function.description=Cannot redeclare standard library function ''{0}''
notification.title.paratest.doesn.t.support.filter.option=ParaTest doesn't support --filter option
notification.content.tests.have.been.run.without.paratest=Tests have been run without ParaTest
notification.content.disable.paratest=Disable ParaTest
notification.paratest.mute=Mute
php.web.server.validation.client.phpstorm.is.unreachable.descr=Listening to incoming debug connections might be disabled or wrong port for incoming connections might be specified in the settings
docker.host.name.error=Host name differs from <i>host.docker.internal</i>
docker.host.name.error.descr=<i>host.docker.internal</i> resolves to the internal IP address used by the host
add.global.variable.quick.fix.family.name=Add global variable
add.global.variable.quick.fix.text=Add ''global ${0}''
set.close.on.exec.flag.on.the.opened.file.descriptor.only.available.in.php.compiled.on.posix.1.2008.conform.systems=Set close-on-exec flag on file descriptor. Only available on POSIX.1-2008\u2013compliant systems.
reading.and.writing.starts.at.the.beginning.of.the.file.creates.files.if.not.exists=Read/Write. Start at the beginning of file. Create file if it doesn't exist.
writing.only.starts.at.the.beginning.of.the.file.creates.files.if.not.exists=Write only. Start at the beginning of file. Create file if it doesn't exist.
reading.and.writing.creates.files.if.not.exists.fails.otherwise=Read/Write. Create file if it doesn't exist, fail if file is found.
writing.only.creates.files.if.not.exists.fails.otherwise=Write only. Create file if it doesn't exist, fail if file is found.
reading.and.writing.start.at.the.the.end.of.the.file.creates.files.if.not.exists=Read/Write. Start at the end of file. Create file if it doesn't exist.
writing.only.start.at.the.the.end.of.the.file.creates.files.if.not.exists=Write only. Start at the end of file. Create file if it doesn't exist.
reading.and.writing.start.at.the.beginning.of.the.file.and.truncate.the.file.to.zero.length.creates.files.if.not.exists=Read/Write. Start at the beginning of file, truncate it to zero length. Create file if it doesn't exist.
writing.only.start.at.the.beginning.of.the.file.and.truncate.the.file.to.zero.length.creates.files.if.not.exists=Write only. Start at the beginning of file, truncate it to zero length. Create file if it doesn't exist.
reading.and.writing.start.at.the.beginning.of.the.file=Read/Write. Start at the beginning of file.
reading.only.start.at.the.beginning.of.the.file=Read only. Start at the beginning of file.
machine.type.eg.i386=Machine type. eg. i386
version.information.varies.a.lot.between.operating.systems=Version information. Varies a lot between operating systems
release.name.eg.5.1.2.release=Release name. eg. 5.1.2-RELEASE
host.name.eg.localhost.example.com=Host name. eg. localhost.example.com
operating.system.name.eg.freebsd=Operating system name. eg. FreeBSD
this.is.the.default.contains.all.modes.in.the.sequence.s.n.r.v.m=This is the default. Contains all modes in the sequence "s n r v m"
action.run.on.3v4l.org.text=Run on 3v4l.org
action.submits.code.to.3v4l.org.show.result.in.preview.editor.description=Submits code to 3v4l.org and shows the result in the preview editor
error.during.access.to.3v4l.org=Error during access to 3v4l.org
waiting.for.3v4l.org.response=Waiting for 3v4l.org response...
include.eol.slow=Include eol (slow)
all.versions=All versions
ction.run.on.3v4l.org.promotion.tooltip=You may now run scratch files on 3v4l.org on different PHP versions
move.from.another.ide.or.code.editor=Move from another IDE or code editor
explore.migration.guides=Explore Migration Guides
action.PhpStormMigrationGuide.text=PhpStorm Migration Guide
switching.from.another.vs.code.sublime.text.or.another.ide.check.out.our.migration.guides.to.get.started.faster=Switching from VS Code, Sublime Text or another IDE? Check out our migration guides to get started faster.
notification.content.link.copied.to.clipboard=Link {0} copied to clipboard
action.open.3v4l.link.in.browser.text=Open 3v4l link in browser
action.copy.3v4l.link.text=Copy 3v4l link to clipboard
notification.content.timeout.while.fetching.data.from=Timeout while fetching data from {0}
action.retry.text=Retry
progress.text.submitting.code.to.3v4l.org=Submitting code to 3v4l.org
progress.text.fetching.result.from=Fetching result from {0}
progress.title.executing.3v4l.org=Executing code on 3v4l.org
checkbox.ignore.test.methods=Ignore test methods
checkbox.ignore.empty.functions=Ignore empty functions
advanced.setting.php.code.vision.usages.limit=Code vision: maximum number of usages to search
advanced.setting.php.code.vision.hierarchy.limit=Code vision: maximum number of inherited entities to process
intention.family.name.make.function.return.by.reference=Make function return by reference
advanced.setting.php.sql.completion.recursive.jumps.limit=Completion: maximum number of elements to resolve to find SQL query
inspection.php.isset.can.check.nested.access.directly='isset' can check nested access directly
inspection.php.delete.redundant.isset.calls=Delete redundant 'isset' calls
inspection.php.isset.can.check.nested.array.access.subproperties.directly='isset' can check nested array access and sub properties directly
inspection.message.0.overrides.method.with.final.tag=''{0}'' overrides method with @final tag
inspection.message.overrides.method.with.final.tag=Overrides method with @final tag
inspection.php.overriding.method.extending.class.marked.as.final=Overriding method/extending class marked as '@final'
inspection.message.0.extends.class.with.final.tag=''{0}'' extends class with @final tag
inspection.message.extends.class.with.final.tag=Extends class with @final tag
inspection.message.remove.final.tag.from.0=Remove '@final' tag from ''{0}'' PHPDoc comment
inspection.message.remove.final.tag=Remove '@final' tag
action.ProjectFromVersionControl.text=New Project from Version Control...
action.ProjectFromVersionControl.ProjectWidgetPopup.text=Get from Version Control...
copy.handler.is.dumb.during.indexing=Copying classes while indexing is in progress will result in simply copying containing files. \
  You will have to change namespaces and imports manually. Proceed anyway?
found.roots.configured=PSR-0 roots were detected and configured
psr.roots.revert=Revert
dialog.message.do.you.want.to.upload.content.scratch.file.to.3v4l.org.make.it.public=Do you want to upload the content of scratch file to the 3v4l.org and make it public?
global.this.is.deprecated=Cannot use $this as global variable, it has been deprecated in PHP 7.1
intention.family.name.add.missing.parameters=Add missing parameters
php.xdebug.move.to.resolve.breakpoint=Move breakpoint to resolved position if it's different from the source
notification.content.disable.breakpoint.move.to.resolved.position=Disable breakpoint move to resolved position
terminal.add.interpreter.to.path=Add default project PHP interpreter to {0}
run.install.update.with.platform.reqs=&Run install/update with --ignore-platform-reqs
enable.tostring.object.view=Enable '__toString' object view
output.phpinfo=Output phpinfo():
output.phpinfo.title=Output phpinfo() 
opens.inspection.0.setting=Opens inspection ''{0}'' setting
php.check.validity.reg.exp=Check validity of your regular expressions in a dedicated dialog
php.run.check.reg.exp=Run Check RegExp intention {0}
php.path.was.updated={0} customization
php.turn.off.path.modification=Turn off {0} customization 
php.path.was.updated.text=Project default interpreter was added to {0}
validation.vendor.doesnt.exit=Vendor directory doesn't exist
php.xdebug.enable.dfa.assist=Predict future condition values analyzing program data flow
php.xdebug.enable.dfa.assist.gray.mode=Gray out blocks of code that are predicted to be unreachable
inspection.message.data.provider.method.should.be=Data provider method should be {0}
and=and
public.and.static='public' and 'static'
intention.family.name.make.data.provider.method.public.static=Make data provider method 'public' and 'static'
intention.name.change.method.to=Change method ''{0}'' to {1}
inspection.message.data.provider.method.should.not.require.arguments=Data provider method should not require arguments
php.project.configurable.composer.configs.tab.name=Composer Files
php.project.configurable.composer.duplicate.configurations=Configuration with the same composer.json already exists
php.project.configurable.composer.main=Main
inspection.array.modification.will.not.have.any.effect=Modification of the array returned from function by value won't have any effect
php.quick.documentation.namespace.classes=Namespace classes:
label.highlight.target.parameter.attributes.applied.to.promoted.property=Allow only 'TARGET_PARAMETER|TARGET_PROPERTY' attributes with promoted properties
promoted.property=promoted property
hint.text.installed.version=Installed version
radio.only.for.properties.without.declared.type=For methods without a declared type
radio.for.all.properties=For all methods
action.DisableXdebugDfaAssist.text=Turn Off Data Flow Assist Permanently
action.DisableXdebugDfaAssist.description=Switch off data flow\u2013aided debugging permanently
settings.smart.keys.auto.insert.closing.html.tag.in.php.doc=Auto-insert closing HTML tag in PHPDoc blocks
notification.content.xdebug.extension.not.installed=Xdebug extension is not installed
connection.failed.message=Connection failed. Please check network connection and try again.
method.template.parameter.shadows.class.template.parameter=Method template parameter ''{0}'' shadows class template parameter
php.5.6.is.not.supported=Downloading Xdebug extension for PHP version 5.6 is not supported
inspection.php.object.shape.can.be.added=ObjectShape can be added
intention.php.doc.add.object.shape=Add ObjectShape to PHPDoc
intention.php.add.object.shape.attribute=Add '#[ObjectShape]' attribute
mute.until.restart=Mute until restart
php.framework.install.plugin=Install plugin
php.framework.enable.plugin=Enable plugin
php.framework.settings.page=Settings
php.framework.laravel.plugin=Laravel Idea
php.framework.symfony.plugin=Symfony
please.enter.your.password.to.make.install.xdebug.extension=Enter your password to install Xdebug extension: 
xdebug.compile.task=Compile Xdebug extension
dialog.message.unable.to.create.configurations.with.same.executable.path=Conflicting configurations with the same interpreter for the same Composer project: {0}
inspection.php.field.reference.does.not.match.object.shape=Field reference does not match object shape 
button.turn.off.listening=Disable Debug Listening
button.turn.off.listening.descr=Disable debug listening for selected project
php.test.frameworks.form.application=\ (Application)
php.testframework.local.interpreter=Local Interpreter
php.testframework.local.interpreter.version=Local PHP {0}
php.testframework.remote.interpreter=Remote {0}
php.test.framework.undefined.interpreter=undefined
php.annotator.typed.class.constant.callable.is.illegal=Class constant cannot have type 'callable'
newUiOnboarding.php.connections.header=Listening for PHP Debug Connections
newUiOnboarding.php.connections.step.text=Click to start/stop listening for incoming PHP debug connections. \
  For more information see {0}
newUiOnboarding.php.connections.link=Debug with PhpStorm: Ultimate Guide
couldnt.update.php.ini='zend_extension=xdebug' was not added to {0}. Access is denied.
static.variable.with.same.name.already.defined.in.current.scope=Duplicate declaration of static variable ''{0}''
inspection.php.doctrine.annotation.can.be.replaced.with.attribute=Doctrine annotation can be replaced with attribute
inspection.php.unit.annotation.can.be.replaced.with.attribute=PHPUnit annotation can be replaced with attribute
inspection.php.symfony.annotation.can.be.replaced.with.attribute=Symfony annotation can be replaced with attribute
inspection.php.annotation.can.be.replaced.with.attribute={0} annotation can be replaced with attribute
inspection.php.replace.annotation.with.attribute=Replace annotation with attribute
progress.title.initializing.git.repository=Initializing Git repository
php.include.path.action.add.text=Add Include Path
php.include.path.action.exclude.text=Exclude
php.include.path.action.exclude.description=Excludes the selected file from being indexed
php.include.path.action.excluded.text=Excluded
php.include.path.action.excluded.description=Includes the selected file back into the indexing
php.include.path.invalid.file.description=File not found
php.include.path.excluded.file.description=Excluded from indexing
php.include.path.library.file.description=Included in indexing
class.constant.reference.fetch.with.non.string.type=Only elements of 'string' type can be used for class constant lookup
inspection.missing.class.constant.type=Class constant type is missing
quick.fix.missing.class.constant.type=Add ''{0}'' as the class constant type
php.structure.view.dumb.mode.resolving=Resolving...