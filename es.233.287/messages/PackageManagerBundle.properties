cmake.hints.view.action.name=CMakeLists.txt에 패키지 활성화 삽입
cmake.hints.view.window.hint=이 코드를 CMakeLists.txt로 복사하고 필요한 경우 대상을 변경하세요
cmake.hints.view.window.name=CMakeLists.txt에 패키지 활성화 삽입
cmake.hints.view.window.ok.button.name=Copiar al portapapeles
full.error.output.view.action.name=전체 출력 열기
json.file.modificator.error.read.json=파일 {0} 읽기 실패
json.file.modificator.read={0} 읽기
json.file.modificator.update={0} 업데이트
json.file.modificator.write={0} 쓰기
label.checking.correctness.package.manager=패키지 관리자의 정합성 확인 중
label.error.when.checking.package.manager.make.sure.path.correct.cloned.repository.lies.there.that.it.was.bootstrap=패키지 관리자를 확인하는 중 오류가 발생했습니다. \n경로가 정확한지, 복제된 저장소가 있는지, 부트스트랩인지 확인하세요.
manifest.manager.unable.to.create.file=파일 ${0} 생성 실패
progress.title.checking.for.install=설치된 패키지 관리자 확인 중
remove.package.manager.window.checkbox.delete.files=패키지 관리자와 디스크의 모든 파일을 삭제
remove.package.manager.window.name=패키지 관리자 삭제
remove.package.manager.window.task.remove.from.disk=디스크에서 파일 삭제 중
remove.package.manager.window.want.to.remove=이 패키지 관리자를 제거하시겠어요?
switch.to.manifest.mode.window.check.all=모두 확인
switch.to.manifest.mode.window.description=임포트할 패키지 이름을 선택하세요. 매니페스트모드로 전환한 후 다른 패키지는 사용할 수 없게 됩니다.
switch.to.manifest.mode.window.name=매니페스트 모드로 전환
switch.to.manifest.mode.window.table.package.name=이름
switch.to.manifest.mode.window.table.version.name=버전
switch.to.manifest.mode.window.uncheck.all=모두 체크 해제
toolwindow.button.edit.package.manager.description=선택된 패키지 관리자를 편집합니다
toolwindow.button.edit.package.manager.name=Editar
toolwindow.button.new.package.manager.name={0} 추가
toolwindow.console.placeholder=[{0}줄]
toolwindow.install.multiple.window.label.choose.one=목록에서 패키지 선택
toolwindow.install.multiply.window.name=패키지 설치
toolwindow.install.multiply.window.notification.broken.package.manager=설치 중에 오류가 발생했습니다. 현재 패키지 관리자를 사용할 수 없습니다
toolwindow.install.multiply.window.notification.can't.find.package.manager=패키지 관리자의 도구 창 콘텐츠를 찾을 수 없습니다
toolwindow.install.multiply.window.task.find.packages=저장소에서 패키지 검색 중
toolwindow.install.multiply.window.task.find.packages.failed=저장소에서 패키지를 로드할 수 없습니다.\n{0}
toolwindow.left.panel.linked.to={1} 중 {0}에 연결됨
toolwindow.left.panel.linked.to.single="{0}"에 연결됨
toolwindow.left.panel.tooltip=다음에 연결됨: {0}
toolwindow.left.panel.tooltip.on.empty=이 vcpkg 인스턴스는 CMake 프로파일에서 사용되지 않습니다. 인스턴스를 편집하여 연결하세요.
toolwindow.name.console=콘솔: {0}
toolwindow.name.vcpkg=패키지
toolwindow.not.selected.package.manager=패키지 관리자가 선택되지 않았습니다. 패키지 관리자를 선택하세요
toolwindow.notification.key=패키지 관리자 알림
toolwindow.problem.cmake.description=패키지 {0}을(를) 찾을 수 없습니다
toolwindow.problem.cpp.description=파일 {0}을(를) 찾을 수 없습니다
toolwindow.problem.do.not.show.this.button.name=다시 제안 안 함
toolwindow.problem.do.not.show.this.button.notification=제안이 비활성화되었습니다. 활성화하려면 Vcpkg 도구 창의 설정 메뉴에서 해당 옵션을 선택하세요
toolwindow.problem.notification.profile.cant.find.package.manager=툴체인 매개변수 경로에 대한 패키지 관리자가 없습니다
toolwindow.problem.notification.profile.cant.found.toolchain=툴체인 매개변수 경로가 지정되지 않았습니다
toolwindow.problem.problem.name=수정...
toolwindow.problem.solve.by.installing.another.package.manager.install.new.name="{0}" 설치
toolwindow.problem.solve.by.installing.another.package.manager.install.new.with.description={0}. {1}. 새 ''{1}''을(를) 설치하세요
toolwindow.problem.solve.by.installing.another.package.manager.install.new.without.description={0}. 새 ''{1}''을(를) 설치하세요
toolwindow.problem.solve.by.installing.many.packages.description.with.description={0}. {1}. 다음 중 하나를 설치하세요. {1}
toolwindow.problem.solve.by.installing.many.packages.description.without.description={0}. 다음 중 하나를 설치하세요. {1}
toolwindow.problem.solve.by.installing.many.packages.name=후보 표시
toolwindow.problem.solve.by.installing.one.package.description.with.description={0}. {1}. ''{2}''을(를) 설치하세요
toolwindow.problem.solve.by.installing.one.package.description.without.description={0}. ''{1}''을(를) 설치하세요
toolwindow.problem.solve.by.installing.one.package.name={0} 설치
toolwindow.problem.solve.by.use.another.package.manager.name="{0}"을(를) 사용하시겠어요
toolwindow.problem.solve.by.use.another.package.manager.with.description={0}. {1}. 대신 vcpkg ''{1}''을(를) 사용하세요
toolwindow.problem.solve.by.use.another.package.manager.without.description={0}. 대신 vcpkg ''{1}''을(를) 사용하세요
vcpkg.add.new.package.manager.field.local.path=디렉토리:
vcpkg.add.new.package.manager.field.local.path.name.window=디렉터리 선택
vcpkg.add.new.package.manager.field.name=이름:
vcpkg.add.new.package.manager.field.url=주소(URL):
vcpkg.add.new.package.manager.name.must.be.not.blank=이름이 있어야 합니다.
vcpkg.add.new.package.manager.name.must.be.unique=이름은 고유해야 합니다
vcpkg.add.new.package.manager.name.of.triple.select=vcpkg 통합을 기존 CMake 프로필에 추가
vcpkg.add.new.package.manager.name.tooltip=패키지 관리자가 IDE에 표시될 때마다 해당 이름이 사용됩니다
vcpkg.add.new.package.manager.path.already.exists=디렉터리 {0}이(가) 이미 존재합니다. 해당 콘텐츠는 패키지 관리자로 처리됩니다.
vcpkg.add.new.package.manager.path.must.be.correct=경로가 정확해야 합니다
vcpkg.add.new.package.manager.path.must.be.not.blank=경로는 비워둘 수 없습니다
vcpkg.add.new.package.manager.path.tooltip=저장소가 클론될 경로:
vcpkg.add.new.package.manager.rename.package.manager=이름 {0}이(가) {1}(으)로 변경된 패키지 관리자
vcpkg.add.new.package.manager.table.profile.already.enabled=({0} 사용)
vcpkg.add.new.package.manager.url.must.be.valid=URL은 유효해야 합니다
vcpkg.add.new.package.manager.window.name=Vcpkg 패키지 관리자 추가
vcpkg.edit.package.manager.advanced.settings=고급 설정
vcpkg.edit.package.manager.force.cmake.ninja.sources.description=VCPKG_FORCE_SYSTEM_BINARIES 변수를 설정하고 CMake 및 Ninja를 PATH에 추가합니다
vcpkg.edit.package.manager.force.cmake.ninja.sources.name=시스템 바이너리 사용
vcpkg.edit.package.manager.window.name=Vcpkg 패키지 관리자 편집
vcpkg.indicator.task.label.install.package={0} 설치 중
vcpkg.indicator.task.label.installed.find=설치된 패키지 검색 중
vcpkg.indicator.task.label.remove.package={0} 제거 중
vcpkg.indicator.task.label.search.package=패키지 검색 중
vcpkg.name=vcpkg
vcpkg.return.status.exit.code.is=코드 {0}(으)로 종료
vcpkg.return.status.failed.on.execution=디렉터리 "{0}" 내의 vcpkg 실행 파일을 실행할 수 없습니다. 가능한 사유: 권한이 거부됨
vcpkg.return.status.process.failed=디렉터리 "{0}" 내의 vcpkg 실행 파일을 실행할 수 없습니다. 지정된 파일을 찾을 수 없습니다
vcpkg.scheme.name=스키마: Vcpkg
vcpkg.table.column.name=이름
vcpkg.table.column.version=버전
vcpkg.toolwindow.button.auto.reload.cmake.after.install.description=패키지가 설치된 후 CMake를 자동으로 로드합니다
vcpkg.toolwindow.button.auto.reload.cmake.after.install.name=패키지 설치 후 CMake를 다시 로드
vcpkg.toolwindow.button.check.for.update.description=Git 저장소 업데이트를 확인합니다
vcpkg.toolwindow.button.check.for.update.name=업데이트 확인
vcpkg.toolwindow.button.console.check.error.description=콘솔 출력에 빠른 수정을 제공합니다
vcpkg.toolwindow.button.console.check.error.name=출력 뷰에 빠른 수정 표시
vcpkg.toolwindow.button.install.package.name=Instalar
vcpkg.toolwindow.button.pull.and.update.description=Git 저장소 업데이트 및 vcpkg 업데이트
vcpkg.toolwindow.button.pull.and.update.name=당겨서 업데이트
vcpkg.toolwindow.button.remove.repository.description=저장소를 삭제합니다. 제거하는 중에 IDE에서만 제거할지 아니면 디스크의 파일도 함께 제거할지 묻는 메시지가 표시됩니다.
vcpkg.toolwindow.button.remove.repository.name=저장소 삭제
vcpkg.toolwindow.button.repository.on.start.update.description=IDE 시작 시 패키지 관리자가 자동으로 업데이트됩니다
vcpkg.toolwindow.button.repository.on.start.update.name=IDE 시작 시 저장소를 자동 업데이트
vcpkg.toolwindow.button.settings.description=패키지 관리자 설정
vcpkg.toolwindow.button.settings.name=설정
vcpkg.toolwindow.button.show.console.description=vcpkg 출력과 함께 콘솔을 표시합니다
vcpkg.toolwindow.button.show.console.name=콘솔 표시
vcpkg.toolwindow.button.switch.to.manifest.mode.description=프로젝트를 매니페스트 모드로 전환합니다
vcpkg.toolwindow.button.switch.to.manifest.mode.name=매니페스트 모드로 전환
vcpkg.toolwindow.button.update.git.repository.description=Git 저장소를 최신 버전으로 업데이트합니다
vcpkg.toolwindow.button.update.git.repository.name=Git 저장소 업데이트
vcpkg.toolwindow.button.update.repository.description=현재 버전의 vcpkg가 현재 버전의 Git 저장소로부터 현재 설치된 패키지를 업데이트할 수 있는지 확인합니다.\n참고: 이는 최신 버전의 패키지가 설치된다는 것을 보증하지 않으며, 완전한 업데이트를 위해서는 Git 저장소를 업데이트해야 합니다
vcpkg.toolwindow.button.update.repository.name=저장소 업데이트
vcpkg.toolwindow.button.upgrade.all.description=Git 저장소 업데이트 및 vcpkg 업그레이드
vcpkg.toolwindow.button.upgrade.all.name=모두 업그레이드
vcpkg.toolwindow.button.upgrade.repository.description=현재 버전의 Git 저장소로부터 업데이트할 수 있는 모든 패키지를 업데이트합니다.\n참고: 이는 최신 버전의 패키지가 설치된다는 것을 보증하지 않으며, 완전한 업데이트를 위해서는 Git 저장소를 업데이트해야 합니다
vcpkg.toolwindow.button.upgrade.repository.name=저장소 업데이트
vcpkg.toolwindow.mode.classic=클래식
vcpkg.toolwindow.mode.manifest=매니페스트
vcpkg.toolwindow.package.info.vcpkg.json.install=vcpkg.json에 추가
vcpkg.toolwindow.package.info.vcpkg.json.remove=vcpkg.json에서 제거
vcpkg.toolwindow.package.not.selected=패키지 또는 소스가 선택되지 않았습니다. 정보를 표시하려면 커서를 올려 패키지 또는 소스를 선택하세요.
vcpkg.toolwindow.package.triplet.action.remove.tooltip=패키지 삭제
vcpkg.toolwindow.package.triplet.action.upgrade.tooltip=패키지 업그레이드
vcpkg.toolwindow.package.triplet.dependencies=종속 요소: {0}
vcpkg.toolwindow.package.triplet.dependencies.failed=종속 요소를 로드할 수 없습니다
vcpkg.toolwindow.package.triplet.dependencies.load=종속 요소 로드...
vcpkg.toolwindow.package.triplet.dependencies.no=종속성이 없습니다
vcpkg.toolwindow.package.triplet.installed.triplets=설치된 트리플렛:
vcpkg.toolwindow.package.triplet.lets.cmake.decide=vcpkg가 결정하게 하기
vcpkg.toolwindow.package.triplet.name=트리플렛:
vcpkg.toolwindow.package.triplet.name.and.version={0} ({1})
vcpkg.toolwindow.package.triplet.no.triplets.found=패키지가 설치되어 있지 않습니다
vcpkg.toolwindow.table.model.name.with.count=({0}개 발견)
vcpkg.toolwindow.table.splitter.all=모두
vcpkg.toolwindow.table.splitter.installed.classic=설치됨 | 클래식 모드
vcpkg.toolwindow.table.splitter.installed.manifest=추가됨 | 매니페스트 모드
vcpkg.toolwindow.table.warning.not.upgraded=패키지를 업그레이드할 수 있습니다({0} -> {1})
vcpkg.toolwindow.table.warning.not.upgraded.no.version=<버전 없음>
vcpkg.toolwindow.task.bootstrap.failed=부트스트랩에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.bootstrap.vcpkg=vcpkg 부트스트랩 중
vcpkg.toolwindow.task.check.for.update.failed=업데이트를 확인할 수 없음
vcpkg.toolwindow.task.check.for.update.label=Comprobando actualizaciones
vcpkg.toolwindow.task.check.for.update.successful.can.be.updated=저장소를 업데이트할 수 있습니다
vcpkg.toolwindow.task.check.for.update.successful.updated=저장소가 업데이트되었습니다
vcpkg.toolwindow.task.clone.and.bootstrap.successful=복제 및 부트스트랩 성공
vcpkg.toolwindow.task.get.dependencies=종속 요소 가져오기
vcpkg.toolwindow.task.get.dependencies.failed=종속 요소 가져오기 명령어가 실패했습니다
vcpkg.toolwindow.task.git.clone.failed=Git 복제에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.git.update.and.vcpkg.update=Git 및 vcpkg 업데이트 중
vcpkg.toolwindow.task.git.update.and.vcpkg.update.failed.git=Git 풀에 실패했습니다. 이유: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.update.failed.vcpkg=vcpkg 업데이트에 실패했습니다. 이유: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.update.successful=Git 풀 및 vcpkg 업데이트에 성공했습니다. 패키지를 업데이트할 수 있습니다.\n{0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade=Git 풀 및 vcpkg 업그레이드
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.failed.git=Git 풀에 실패했습니다. 이유: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.failed.vcpkg=vcpkg 업그레이드에 실패했습니다. 이유: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.successful=Git 풀 및 vcpkg 업그레이드에 성공했습니다. 업그레이드된 패키지:\n{0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.successful.no.packages=Git 풀 및 vcpkg 업그레이드에 성공했습니다. 업데이트할 패키지가 없습니다
vcpkg.toolwindow.task.install.failed=설치에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.install.manifest.failed=vcpkg.json에 추가할 수 없습니다. {0}
vcpkg.toolwindow.task.install.manifest.successful=패키지가 vcpkg.json에 추가되었습니다
vcpkg.toolwindow.task.install.successful.top=설치에 성공했습니다. 설치된 패키지:\n{0}
vcpkg.toolwindow.task.install.vcpkg=vcpkg 설치
vcpkg.toolwindow.task.installed.failed=설치된 항목 검색에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.installed.successful=설치된 패키지 목록이 로드되었습니다
vcpkg.toolwindow.task.query.failed=검색에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.remove.failed=제거에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.remove.manifest.failed=vcpkg.json에서 제거할 수 없습니다. {0}
vcpkg.toolwindow.task.remove.manifest.successful=패키지가 vcpkg.json에서 제거되었습니다
vcpkg.toolwindow.task.remove.package.manager={0} 제거
vcpkg.toolwindow.task.remove.package.manager.asked.to.delete.but.there.is.nothing.to.delete=파일 삭제를 요청받았으나 삭제할 항목이 없습니다
vcpkg.toolwindow.task.remove.package.manager.error.on.deleting=삭제 중 알 수 없는 오류
vcpkg.toolwindow.task.remove.package.manager.failed=패키지 관리자 삭제 실패: {0}
vcpkg.toolwindow.task.remove.package.manager.success=패키지 관리자를 성공적으로 삭제했습니다
vcpkg.toolwindow.task.remove.successful.no.packages=제거할 항목이 없습니다
vcpkg.toolwindow.task.remove.successful.top=제거에 성공했습니다. 제거된 패키지:\n{0}
vcpkg.toolwindow.task.start.check.folder.is.not.empty="{0}"은(는) 빈 디렉터리나 vcpkg 저장소여야 합니다
vcpkg.toolwindow.task.start.check.folder.is.not.exist.or.not.folder="{0}"은(는) 존재하지 않거나 디렉터리가 아닙니다
vcpkg.toolwindow.task.start.check.folder.is.not.folder="{0}"은(는) 디렉터리가 아닙니다
vcpkg.toolwindow.task.start.package.manager=패키지 관리자 시작 중
vcpkg.toolwindow.task.start.package.manager.failed=패키지 관리자를 시작하지 못했습니다
vcpkg.toolwindow.task.start.package.managers=패키지 관리자 시작 중
vcpkg.toolwindow.task.successful.more=및 그 외 {0}개의 패키지
vcpkg.toolwindow.task.update.failed=업데이트에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.update.git.repository=Git 저장소 업데이트 중
vcpkg.toolwindow.task.update.git.repository.failed=Git 저장소 업데이트에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.update.git.repository.successful=Git 저장소 업데이트 성공
vcpkg.toolwindow.task.update.manifest.failed=vcpkg.json을 업데이트 수 없습니다. {0}
vcpkg.toolwindow.task.update.manifest.successful=성공적으로 vcpkg.json을 업데이트했습니다
vcpkg.toolwindow.task.update.packages=패키지 업데이트 중
vcpkg.toolwindow.task.update.successful=업데이트에 성공했습니다. 패키지를 업데이트할 수 있습니다.\n{0}
vcpkg.toolwindow.task.update.successful.no.packages=업데이트에 성공했습니다. 업데이트할 패키지가 없습니다
vcpkg.toolwindow.task.upgrade.failed=업그레이드에 실패했습니다. 이유:\n{0}
vcpkg.toolwindow.task.upgrade.packages=패키지 업그레이드 중
vcpkg.toolwindow.task.upgrade.successful=업그레이드에 성공했습니다. 업그레이드된 패키지:\n{0}
vcpkg.toolwindow.task.upgrade.successful.no.packages=업그레이드에 성공했습니다. 업그레이드할 패키지가 없습니다
wait.until.install.package.manager=패키지 관리자가 설치되기를 기다리는 중
