ApiTasks.container.is.in.target.state.error=Possibly, container is in the target state already
ContextFolderArchive.done=Done
ContextFolderArchive.sending.build.context.to.docker.daemon=Sending build context to Docker daemon\u2026
DockerAgentApplication.cant.retrieve.image.id=Can't retrieve image ID from build stream
DockerAgentApplicationBase.unknown=<unknown>
DockerAgentContainerImpl.cannot.inspect.container.0.not.found=Cannot inspect container {0} - not found
DockerAgentContainerImpl.not.connected=Not connected
DockerAgentDeploymentImpl.checking.implicitly.required.image.dependencies=Checking implicitly required image dependencies: {0}
DockerAgentDeploymentImpl.container.id=Container Id: {0}
DockerAgentDeploymentImpl.container.name=Container name: {0}
DockerAgentDeploymentImpl.creating.container=Creating container\u2026
DockerAgentDeploymentImpl.either.image.tag.or.id.is.required=Either image tag or id is required
DockerAgentDeploymentImpl.existing.container.found.removing=Existing container found: {0}, removing\u2026
DockerAgentDeploymentImpl.no.such.image=No such image {0}
DockerAgentDeploymentImpl.starting.container=Starting container {0}
DockerAgentDeploymentImpl.unable.to.find.image.locally=Unable to find image ''{0}'' locally
DockerAgentDeploymentImpl.warning=Warning: {0}
DockerAgentImpl.cannot.connect.to.the.docker.without.host=Cannot connect to the Docker daemon. Is the docker daemon running?
DockerAgentImpl.cannot.connect.to.the.docker=Cannot connect to the Docker daemon at {0}. Is the docker daemon running?
DockerAgentImpl.cannot.connect.to.the.docker.details=Cannot connect to the Docker daemon at {0}. Is the docker daemon running? (Details: {1})
DockerAgentImpl.cant.locate.certificate.files=Can''t locate certificate files under {0}
DockerAgentImpl.certificates.path.is.not.specified=Certificates path is not specified
DockerAgentImpl.docker.host.is.not.specified=Docker host is not specified
DockerAgentImpl.docker.scheme.is.not.specified=Scheme is not specified
DockerAsyncCmdAbstractPipe.disconnected.from.container=Disconnected from container.
DockerAttachPipe.connected=Connected.
DockerCallbackWithTtySink.error.response.from.daemon=Error response from daemon: {0}
DockerCallbackWithTtySink.internal.error=Internal error: {0}
DockerDefaultImageBuilder.building.image=Building image\u2026
DockerDefaultImageBuilder.not.connected.to.docker=Not connected to docker
Dockerfile.done=Done
Dockerfile.preparing.build.context.archive=Preparing build context archive\u2026
DockerResponseItemTtyHandler.authentication.is.required=authentication is required
DockerResponseItemTtyHandler.from=(from {0})
PullImageResultCallbackImpl.status.download.complete=Download complete
PullImageResultCallbackImpl.status.downloading=Downloading
PullImageResultCallbackImpl.status.extracting=Extracting
PullImageResultCallbackImpl.status.pull.cancelled=Pull cancelled
PullImageResultCallbackImpl.status.pull.complete=Pull complete
UserFriendlyMessage.error.code=Error code: {0}
DockerRegistryProvider.error.incorrect.credentials=Incorrect authentication credentials
DockerSearchContext.BadResponseException.message=Response code: {0} from url: {1}
DockerDevcontainerModelExtractor.creating.temporary.folder=Creating temporary folder for extracting model...
DockerDevcontainerModelExtractor.extract.devcontainer.model.from.repository=Extract devcontainer model from repository...
DockerDevcontainerModelExtractor.can.not.find.directory=Can not find ''{0}'' directory
DockerDevcontainerModelExtractor.can.not.find.file=Can not find ''{0}'' file
DockerDevcontainerModelExtractor.can.not.parse.file=Can not parse ''{0}'' file
DockerDevcontainerModelExtractor.model.successfully.extracted=Model successfully extracted...
DockerDevcontainerModelExtractor.process.failed.with.non.zero.exit.code=Process failed with non zero exit code: {0}
DockerDevcontainerModelExtractor.temporary.folder.created=Temporary folder created: {0}
devcontainer.feature.missing.mandatory.identifier=Missing mandatory identifier
devcontainer.invalid.feature.reference=Invalid feature reference, should contain at least registry/path/id
devcontainer.features.server.did.not.provide.authentication.method=The server did not provide authentication method
devcontainer.features.missing.authentication.data=Missing authentication data
devcontainer.features.missing.token=Missing token: {0}
devcontainer.features.downloading.manifest=Downloading {0} feature manifest...
devcontainer.features.unknown.authentication.method=Unknown authentication method
devcontainer.features.cannot.retrieve.manifest=Cannot retrieve manifest
devcontainer.features.failed.to.download.tar.file.from.0=Failed to download .tar file from {0}
devcontainer.features.file.not.found=File {0} not found.
devcontainers.feature.can.not.get.manifest=Cannot get manifest for {0} feature
devcontainer.features.setting.up=Setting up container features:
devcontainers.feature.installation.data.not.found={0} installation data is not found.
devcontainers.feature.install.script.is.missing={0} install.sh is missing.
devcontainers.feature.creating.base.image=Creating {0}...
devcontainer.features.http.request.failed=HTTP request failed with status code: {0}
DockerAgentDeploymentImpl.cannot.find.created.container=Cannot find created container: {0}
devcontainers.feature.can.t.be.found=The feature can''t be found at {0}
DockerCliImageBuilder.image.build.failed.message=Image build failed with exit code {0}.
DockerCliImageBuilder.output.command=COMMAND:
devcontainer.features.extract.tar.creating.directory=Creating direcotry {0}
devcontainer.features.extract.tar.writing.file=Writing file {0}
devcontainer.features.extract.tar.error.skip=Skipping file outside target directory: {0}