inspection.extension.class.should.not.be.open.text=Las clases de extensión no deben estar abiertas.
inspection.light.service.must.not.be.open.message=Los servicios de luz no pueden permanecer abiertos
inspections.companion.object.in.extension=Objeto complementario dentro de la extensión
inspections.companion.object.in.extension.message=Los objetos complementarios dentro de una implementación de extensión IDE solo pueden contener registradores y constantes
inspections.create.object.and.move.prohibited.declarations.fix.text=Crea un objeto y mueve la declaración prohibida.
inspections.forbidden.method.in.suspend.context=Prohibido en el uso del método de contexto de suspensión
inspections.forbidden.method.in.suspend.context.check.canceled.fix.text=Reemplace 'ProgressManager.checkCanceled' con 'checkCancelled' compatible con corrutinas
inspections.forbidden.method.in.suspend.context.check.canceled.text='ProgressManager.checkCanceled' no debe llamarse en un contexto de suspensión. Utilice la función de nivel superior 'checkCancelled'
inspections.forbidden.method.in.suspend.context.default.modality.state.text='defaultModalityState()' no funciona en contexto de suspensión. Si realmente lo necesita, utilice 'contextModality()'
inspections.forbidden.method.in.suspend.context.invoke.and.wait.fix.text=Reemplace la llamada 'invokeAndWait' con 'Dispatchers.EDT) {}'
inspections.forbidden.method.in.suspend.context.invoke.and.wait.text='invokeAndWait' puede bloquear la rutina actual. Utilice 'Dispatchers.EDT' en su lugar
inspections.forbidden.method.in.suspend.context.invoke.later.fix.launch.text=Reemplace 'invokeLater' con 'launch(Dispatchers.EDT)'
inspections.forbidden.method.in.suspend.context.invoke.later.fix.with.context.text=(La semántica puede cambiar) Reemplace la llamada 'invokeLater' con 'withContext(Dispatchers.EDT) {}'
inspections.forbidden.method.in.suspend.context.invoke.later.text='invokeLater' no es idiomático en contexto suspendido. Utilice 'Dispatchers.EDT' en su lugar
inspections.forbidden.method.in.suspend.context.navigate.to.suspend.context=Ir al contexto de suspensión
inspections.forbidden.method.in.suspend.context.text=Método ''{0}'' anotado con @RequiresBlockingContext. Este método no está diseñado para ser llamado desde funciones de suspensión.
inspections.plugin.extension.registers.kotlin.object=Las clases de extensión son objetos Kotlin
inspections.plugin.kotlin.object.registered.as.extension=Objeto Kotlin registrado como extensión
