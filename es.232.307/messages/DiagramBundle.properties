uml.class.diagram.file.name=''{0}'' Class Diagram
building.diagram=Building {0}
error=Error
new.class=New Class
new.enum=New Enum
new.record=New Record
new.interface=New Interface
cant.create.element=Can''t create {0} in directory {1}
add.new.field.title=Add new field or constant to {0}
add.new.enum.constant.title=Add new enum constant to {0}
create.new.method.dialog.title=Create New Method
create.new.constructor.dialog.title=Create New Constructor
create.method=&Create
final.class.cant.be.inherited=Class {0} is final
node.is.interface=Interface can only extend an interface
error.cant.create.edge=Cannot Create Relationship Link
preview=Preview
this.will.remove.relationship.link.between.classes=This will remove relationship link between classes and modify class {0}. Continue?
remove.relationship.link=Remove Relationship Link
class.must.be.abstract.or.implement.methods=Class ''{0}'' must either be declared abstract or implement required abstract methods
class.must.be.abstract.title=Implement Methods or Declare Class Abstract
generate.methods=Generate Methods
make.abstract=Make Abstract
initializer.is.empty=Initializer is empty
constant.in.interface.must.have.initializer=Constant in interface must have initializer
class.is.readonly=Class ''{0}'' is read only
file.is.readonly=File ''{0}'' is read only
annotation.class.cant.be.extended.or.implemented=Annotations can't extend/implement other classes/interfaces
remove.annotation.from.class=Remove annotation @{0} from {1}
relationship.already.exists=Relationship between {0} and {1} already exists
show.supers.for=Super classes for {0}
UML=UML
uml.change.list.name=Changes
uml.file.name.for.changes=Changes for ''{0}''
other=Other
select.uml.provider=Select Diagram Type
dependencies=Dependencies
uml.structure.view=Diagram Elements
abstract=A&bstract
set.up.jdk=JDK is not set up
make.class.abstract=Make Class Abstract
change.visibility.group.text=Change Visibility Level
change.ordering.group.text=Change Item Ordering
change.scope.group.text=Change Scope
modules.diagram.presentable.name=Project Modules
uml.0.presentable.name={0} Classes
uml.jigsaw.presentable.name=Java Modules
diff.presentable.name=Show Difference
add.modules.libraries=Add Module and Libraries...
looking.for.dependencies=Looking for dependencies
dependencies.for.module=Dependencies for module ''{0}''
show.modules.dependencies=Show Module Dependencies
fit.content.after.layout=&Fit content after layout
do.relayout.when.new.elements.were.added=Do &relayout when new elements were added
default.layout=Default &Layout:
default.scope=Default &Scope:
layout.on.category.switch=Layout on &category switch:
diagram.node.item.style=Node item style
shorten.node.items.on.length=Shorten node &items on length:
layout.animation.duration=Layout &animation duration:
show.grid.by.default=&Show grid by default
enable.node.items.syntax.highlighting=&Enable node items syntax highlighting
change.list.contains.too.many.files=Change list ''{0}'' contains more than {1} files
show.categories.title=Show Categories
uml.java.calculating.dependencies=Calculating dependencies
uml.java.analyzing.0=Analyzing {0}
uml.java.package.title=package
uml.java.default.package.title=Top-level package
action.UML.Find.text=Find Elements Diagram
action.UML.ShowStructure.text=View Structure
action.UML.SaveDiagram.text=IDEA .uml
action.Uml.ShowDiff.text=Show Diff as UML
action.Uml.ExpandNodes.text=Expand Nodes
action.Uml.CollapseNodes.text=Collapse Nodes
action.Diagram.Layout.CustomLayouter.text=Diagram Specific
action.Diagram.DeselectAll.text=Deselect All
action.Diagram.SelectAll.text=Select All
action.UML.ShowChanges.text=Show Local Changes as UML
action.ShowUmlDiagramPopup.text=Show Diagram Popup\u2026
action.ShowUmlDiagram.text=Show Diagram\u2026
action.Uml.NewElement.text=New
action.Diagram.DeleteSelection.text=Delete
group.Uml.NewGroup.text=New Diagram
group.UML.Group.text=Diagrams
group.UML.Group.description=Diagrams
group.UML.Group.Simple.text=Diagrams
group.UML.Group.Simple.description=Diagrams
group.UML.EditorGroup.text=Diagrams
group.UML.EditorGroup.description=Diagrams
configurable.UmlConfigurable.display.name=Diagrams
settings.select.categories.text=Select categories that will be enabled on showing the diagram

diagram.build.progress.preparing.data=Preparing the data\u2026
diagram.build.progress.starting.data.model.build=Starting data model build\u2026
diagram.build.progress.building.data.model=Building data model\u2026
diagram.build.progress.opening.diagram=Opening the diagram\u2026
diagram.build.progress.finishing.diagram.build=Finishing\u2026

diagram.export.progress=Exporting\u2026

# here '//' signs must be preserved as is, it is a technical separator and won't be shown in the UI
color.descriptor.node.header=Nodes//Node header
color.descriptor.node.background=Nodes//Node background
color.descriptor.node.sloppy.background=Nodes//Overview node background
color.descriptor.node.border=Nodes//Node border
color.descriptor.selected.node=Nodes//Selected node border
color.descriptor.highlighted.node=Nodes//Highlighted node border
color.descriptor.note.background=Notes//Note background
color.descriptor.note.sloppy.background=Notes//Overview note background
color.descriptor.note.border=Notes//Note border
color.descriptor.realization.edge=Edges//Realization edge
color.descriptor.generalization.edge=Edges//Generalization edge
color.descriptor.default.edge=Edges//Default edge
color.descriptor.annotation.edge=Edges//Annotation edge
color.descriptor.inner.class.edge=Edges//Inner class edge
color.descriptor.bad.edge=Edges//Bad edge
color.descriptor.selected.edge=Edges//Edge selection
color.descriptor.bend=Bends//Bend
color.descriptor.selected.bend=Bends//Bend selection
color.descriptor.hot.spot=Hot spots
color.descriptor.port=Port
color.descriptor.snap.lines=Snapping lines
color.descriptor.fine.grid=Fine grid
color.descriptor.coarse.grid=Coarse grid
color.descriptor.selection.box.border=Selection Box//Selection box border
color.descriptor.selection.box.background=Selection Box//Selection box background

notification.can.t.open.diagram.while.indexing.is.in.progress=Diagrams are not available while indexing is in progress
dialog.message.can.t.save.converted.content.into.file.check.read.only.status=Can't save converted content into file. Check read-only status.
dialog.title.old.diagram.format=Old Diagram Format
dialog.message.this.file.has.old.format.would.you.like.to.convert.it=This file has old format. Would you like to convert it?
action.text.show.0.1=Show {0}{1}...
dialog.description.save.uml.class.diagram.as.uml=Save UML class diagram as .uml
dialog.title.save.file=Save File
configurable.display.name.diagrams=Diagrams
group.change.content.name=Content
group.action.text.new=New
dialog.title.edit.note=Edit Note
dialog.message.note.text=Note text
popup.title.select.target.node=Select Target Node                         
goto.class.prompt.text.enter.class.name.to.add=Enter class name to add
dialog.title.add.a.note=Add a Note
popup.title.select.change.list=Select Change List
filetype.diagram.description=Diagram
filetype.diagram.display.name=Diagram
task.title.calculating.paths=Calculating Paths
dialog.message.can.t.show.more.than.0.changes.at.one.diagram=Can''t show more than {0} changes at one diagram.
action.name.show.diagram.structure=Show Diagram Structure
action.name.set.edge.creation.mode=Set Edge Creation Mode
action.name.select.all=Select All
command.edit.note=Edit Note
notification.message.scope.has.been.changed.to.b.all.b=Scope has been changed to <b>All</b>
action.name.change.visibility.to.0=Change Visibility to {0}
action.name.change.ordering.to.0=Change Items Ordering to {0}
action.name.safe.delete=Safe Delete
action.name.show.dependencies=Show Dependencies
action.name.collapse.nodes=Collapse Nodes
action.name.expand.nodes=Expand nodes
action.name.change.scope.to.0=Change Scope to {0}
action.name.create.line=Create Line
action.name.add.note=Add Note
action.name.save.diagram=Save Diagram
action.name.deselect.all=Deselect All
action.name.add.elements2=Add elements
action.name.enable.category=Enable {0}
action.name.disable.category=Disable {0}
show.intentions.for.node=Show Intentions for Node
add.class.to.diagram=Add Class to Diagram...
show.parents=Show Parents
show.implementations=Show Implementations
creates.a.relationship.between.nodes=Creates a relationship between nodes
line.to=Line to...
searching.for.elements=Searching For Elements
can.t.save.diagram.to.0=Can''t save diagram to {0}
edge.creation.mode=Edge Creation Mode
changes.for.revision.0=Changes for revision {0}
add.note.action.title=Note
add.note.with.docs.action.title=Note with element docs
add.note.no.docs.found=No documentation found
uml.dependencies.settings.group.title=Dependencies
category.name.show.neighbours.of.selected.nodes=Show Neighbours of Selected Nodes
category.name.show.paths.root.selection=Show Paths: Root -> Selection
category.name.show.borders=Show Borders
category.name.fields=Fields
category.name.constructors=Constructors
category.name.methods=Methods
category.name.properties=Properties
category.name.inner.classes=Inner Classes
category.name.dependencies=Dependencies
category.name.all=All
category.name.constants=Constants
category.name.details=Details
uml.action.name=Diagram
ordering.as.in.source.code=Sort by Declaration Order
ordering.alphabetically=Sort Alphabetically
ordering.by.visibility=Sort by Visibility
visibility.level.public=public only
visibility.level.package=public + package
visibility.level.protected=public + package + protected
visibility.level.all=all
delete.selection.command.name=Remove selected
add.element.to.diagram=Add Element to Diagram
unknown.uml.file=Unknown UML File
show.diagram.popup.title={0} for {1}
unknown.uml.action=Unknown UML action
cant.annotate.class.0=Can''t annotate class {0}
diagram.edge.origins=Edge Origins

# suppress inspection "UnusedProperty"
diagram.layout.compact.orthogonal=Compact
# suppress inspection "UnusedProperty"
diagram.layout.component=Components
# suppress inspection "UnusedProperty"
diagram.layout.directed.orthogonal=Directed (Bottom to Top)
# suppress inspection "UnusedProperty"
diagram.layout.hierarchic=Hierarchic
# suppress inspection "UnusedProperty"
diagram.layout.hierarchic.compact=Hierarchic Compact
# suppress inspection "UnusedProperty"
diagram.layout.orthogonal.groups=Orthogonal Groups
# suppress inspection "UnusedProperty"
diagram.layout.channel=Channel
# suppress inspection "UnusedProperty"
diagram.layout.series.parallel=Series Parallel
# suppress inspection "UnusedProperty"
diagram.layout.circular=Circular
# suppress inspection "UnusedProperty"
diagram.layout.circular.edge.bundled=Edge Bundled Circular
# suppress inspection "UnusedProperty"
diagram.layout.radial=Radial
# suppress inspection "UnusedProperty"
diagram.layout.radial.edge.bundled=Edge Bundled Radial
# suppress inspection "UnusedProperty"
diagram.layout.single.cycle=Single Cycle
# suppress inspection "UnusedProperty"
diagram.layout.ar.tree=Compact
# suppress inspection "UnusedProperty"
diagram.layout.balloon=Balloons
# suppress inspection "UnusedProperty"
diagram.layout.balloon.edge.bundled=Edge Bundled Balloons
# suppress inspection "UnusedProperty"
diagram.layout.family.tree=Family
# suppress inspection "UnusedProperty"
diagram.layout.generic.tree=Generic
# suppress inspection "UnusedProperty"
diagram.layout.hv.tree=Wide
# suppress inspection "UnusedProperty"
diagram.layout.organic=Organic
# suppress inspection "UnusedProperty"
diagram.layout.organic.edge.bundled=Edge Bundled Organic
# suppress inspection "UnusedProperty"
diagram.layout.random=Random
# Specific for the concrete diagram type
# suppress inspection "UnusedProperty"
diagram.layout.custom=Custom

diagram.scope.all=All
diagram.scope.project.files=Project Files
diagram.scope.non-project.files=Non-Project Files
diagram.scope.production=Production
diagram.scope.tests=Tests

diagram.node.style.plain=Plain
diagram.node.style.with.types.aligned=With types aligned

diagram.layout.on.category.switch.never=Never
diagram.layout.on.category.switch.with.current.layouter=With current layouter
diagram.layout.on.category.switch.with.light.layouter=With light layouter

group.Diagram.AppearanceGroup.text=Appearance
group.Diagram.ExportAndCopyGroup.text=Export Diagram
group.Diagram.ExportGroup.text=Export Diagram
group.Diagram.ExportToFileGroup.text=Export to File
group.Diagram.OpenInOnlineEditorGroup.text=Open in Web Editor
group.Diagram.CopyToClipboardGroup.text=Copy to Clipboard

action.Diagram.ExportToFileGroup.DotWithPositions.text=Graphviz .dot with Positions
action.Diagram.ExportToFileGroup.Dot.text=Graphviz .dot
action.Diagram.ExportToFileGroup.Mxgraph.text=JGraph .drawio
action.Diagram.ExportToFileGroup.Mermaid.text=Mermaid .md
action.Diagram.ExportToFileGroup.Plantuml.text=PlantUML
action.Diagram.ExportToFileGroup.Graphml.text=YEd .graphml

action.Diagram.OpenInOnlineEditorGroup.DotWithPositions.text=Graphviz Online with Positions
action.Diagram.OpenInOnlineEditorGroup.Dot.text=Graphviz Online
action.Diagram.OpenInOnlineEditorGroup.Mxgraph.text=JGraph diagrams.net
action.Diagram.OpenInOnlineEditorGroup.Mermaid.text=Mermaid Live
action.Diagram.OpenInOnlineEditorGroup.Plantuml.text=PlantUML Web Server
action.Diagram.OpenInOnlineEditorGroup.Graphml.text=yEd Live

action.Diagram.CopyToClipboardGroup.DotWithPositions.text=as Graphviz DOT with Positions
action.Diagram.CopyToClipboardGroup.Dot.text=as Graphviz DOT
action.Diagram.CopyToClipboardGroup.Mermaid.text=as Mermaid
action.Diagram.CopyToClipboardGroup.Plantuml.text=as PlantUML

action.Diagram.RefreshDataModelManually.text=Refresh Data Model
action.Diagram.OpenSettings.text=Open Diagrams Settings

group.Diagram.MergeEdgesGroup.text=Merge Edges
action.Diagram.SearchItemOnWeb.text=Search with Google

group.Uml.Refactoring.text=Refactor
group.UML.SourceActionsGroup.text=Selected Element Actions
group.Uml.SourceActionsGroup.QuickActions.text=Show
group.Uml.SourceActionsGroup.GoTo.text=Go To

group.Uml.NodeCellEditorPopup.QuickActions.text=Show
group.Uml.NodeCellEditorPopup.GoTo.text=Go To

java.build.progress.searching.for.classes=Searching for classes\u2026
java.build.progress.searching.for.class.members=Searching for class members\u2026
java.build.progress.inferring.nullability=Inferring nullity\u2026
java.build.progress.inferring.relationships=Inferring relationships\u2026
java.build.progress.analyzing=Analyzing {0}
diagram.settings.layout.title=Layout
diagram.settings.appearance.title=Appearance
diagram.settings.enable.animations=Enable &animations

diagram.focusview.focus.view=Focus View
dialog.diagram.focus.view.on=Focus View On

dialog.diagram.focus.view.on.paths.between.two.nodes.title=Focus View On Paths Between Two Nodes
dialog.diagram.focus.view.on.node.neighbourhood.title=Focus View On Node Neighbourhood
dialog.diagram.focus.view.on.cycles.title=Focus View On Cycles
dialog.diagram.focus.view.on.directed.paths.from.0.to.1=Directed paths from {0} to {1}
dialog.diagram.focus.view.on.directed.paths.from.0=Directed paths from {0}
dialog.diagram.focus.view.on.directed.paths.to.0=Directed paths to {0}
dialog.diagram.focus.view.on.directed.paths.in.both.directions=Directed paths in both directions
dialog.diagram.focus.view.on.undirected.paths=Undirected paths
dialog.diagram.focus.view.on.directed.cycles=Directed cycles
dialog.diagram.focus.view.on.undirected.cycles=Undirected cycles
dialog.diagram.focus.view.find.button.title=Find

diagram.focus.view.no.path.has.been.found.notification=No path has been found

dialog.diagram.focus.view.path.filter=Show Paths
dialog.diagram.focus.view.path.filter.all=All
dialog.diagram.focus.view.path.filter.k.shortest=K shortest:

dialog.diagram.focus.view.cycles.filter=Show Cycles
dialog.diagram.focus.view.cycles.filter.all=All
dialog.diagram.focus.view.cycles.filter.containing.all.selected.nodes=Containing all selected nodes
dialog.diagram.focus.view.cycles.filter.containing.any.selected.node=Containing any selected node

dialog.diagram.measure.centrality=Measure Centrality
dialog.diagram.centrality.number.of.connected.edges=Number of connected edges
dialog.diagram.centrality.number.of.connected.edges.description=Shows the number of the incoming, outgoing or overall edges incident to a node (measures incoming, outgoing and overall degree)
dialog.diagram.centrality.graph.centrality=Graph centrality
dialog.diagram.centrality.graph.centrality.description=Shows reciprocal of the maximum of all shortest path distances from a node to all other nodes
dialog.diagram.centrality.nodes.betweenness.centrality=Node betweenness centrality
dialog.diagram.centrality.nodes.betweenness.centrality.description=Shows how often a node/edge lies on a shortest path between each pair of nodes
dialog.diagram.centrality.closeness.centrality=Closeness centrality
dialog.diagram.centrality.closeness.centrality.description=Shows the reciprocal of the sum of shortest path distances of a node to all other nodes
dialog.diagram.centrality.edges.to.consider=Edges to Consider
dialog.diagram.centrality.edges.to.consider.incoming=Incoming
dialog.diagram.centrality.edges.to.consider.outgoing=Outgoing
dialog.diagram.centrality.consider.edge.directions=Consider edge directions
dialog.diagram.centrality.measure.button.title=Measure

dialog.diagram.auto.clustering=Automatic Clustering
dialog.diagram.auto.clustering.biconnected=Biconnected components
dialog.diagram.auto.clustering.biconnected.description=Nodes will be grouped such that the nodes within each group are biconnected. Nodes that belong to multiple biconnected components will be assigned to exactly one of these components.
dialog.diagram.auto.clustering.edge.betweenness=Edge betweenness
dialog.diagram.auto.clustering.edge.betweenness.description=In each iteration the edge with the highest betweenness centrality is removed from the graph. The method stops if there are no more edges to remove or if the requested maximum number of groups is found.
dialog.diagram.auto.clustering.quality.time.ratio=Quality/Time Ratio
dialog.diagram.auto.clustering.kmeans=K Means
dialog.diagram.auto.clustering.kmeans.description=The nodes of the graph will be partitioned in K clusters based on their positions such that their distance from the cluster's mean (centroid) is minimized
dialog.diagram.auto.clustering.button.title=Run

diagram.auto.clustering.cluster=Cluster

diagram.path.finding=Path finding\u2026
diagram.computing.characteristics=Computing graph characteristics\u2026
diagram.measuring.centrality=Measuring centrality\u2026
diagram.auto.clustering=Automatic clustering\u2026

dialog.diagram.graph.characteristics.title=Graph Common Characteristics
diagram.graph.characteristics.group.common=Common
diagram.graph.characteristics.group.connectivity=Connectivity
diagram.graph.characteristics.group.cycles=Cycles
diagram.graph.characteristics.node.count=Node count:
diagram.graph.characteristics.node.count.context.help=Number of nodes in the graph
diagram.graph.characteristics.edge.count=Edge count:
diagram.graph.characteristics.edge.count.context.help=Number of edges in the graph
diagram.graph.characteristics.average.degree=Average degree:
diagram.graph.characteristics.average.degree.context.help=The <i>average degree</i> measures the number of edges in comparison to the number of nodes and is defined as: <code>numberOfEdges / numberOfNodes</code>
diagram.graph.characteristics.density=Density:
diagram.graph.characteristics.density.context.help=The <i>density</i> is the ratio of edges of the graph to the maximum possible number of edges and is defined as: <code>numberOfEdges / (numberOfNodes * (numberOfNodes - 1))</code>
diagram.graph.characteristics.contains.self.loops=Contains self-loops:
diagram.graph.characteristics.contains.self.loops.context.help=An edge is called <i>self-loop</i> if its source and target are the same node
diagram.graph.characteristics.is.simple=Is simple:
diagram.graph.characteristics.is.simple.context.help=A graph is called <i>simple</i> if it contains no two distinct edges <code>e1, e2</code> where <code>e1.source()</code> equals <code>e2.source()</code> and <code>e1.target()</code> equals <code>e2.target()</code>
diagram.graph.characteristics.contains.multiple.edges=Contains multiple edges:
diagram.graph.characteristics.contains.multiple.edges.context.help=Two distinct edges <code>e1, e2</code> are called <i>multiple edges</i> if they connect the same pairs of nodes in either direction
diagram.graph.characteristics.is.connected=Is connected:
diagram.graph.characteristics.is.connected.context.help=A graph is called <i>connected</i> if there exists an undirected path of edges between every pair of nodes
diagram.graph.characteristics.is.biconnected=Is biconnected:
diagram.graph.characteristics.is.biconnected.context.help=A graph is called <i>biconnected</i> if it has no cut vertex or articulation point, i.e. no node whose removal disconnects the graph
diagram.graph.characteristics.is.strongly.connected=Is strongly connected:
diagram.graph.characteristics.is.strongly.connected.context.help=A graph is called <i>strongly connected</i> if there exists a directed path between each pair of nodes
diagram.graph.characteristics.is.acyclic=Is acyclic:
diagram.graph.characteristics.is.acyclic.context.help=A graph is called <i>acyclic</i> if it contains no directed cycle
diagram.graph.characteristics.is.bipartite=Is bipartite:
diagram.graph.characteristics.is.bipartite.context.help=A graph is called <i>bipartite</i> if its nodes can be partitioned into two sets such that each edge connects two nodes of different sets
diagram.graph.characteristics.is.planar=Is planar:
diagram.graph.characteristics.is.planar.context.help=A graph is called <i>planar</i> if it can be drawn on the plane without edge crossings
diagram.graph.characteristics.is.forest=Is forest:
diagram.graph.characteristics.is.forest.context.help=A graph is called a <i>forest</i> if its connected components are trees
diagram.graph.characteristics.is.tree=Is tree:
diagram.graph.characteristics.is.tree.context.help=A graph is called a <i>tree</i> if it is an acylic connected graph
diagram.graph.characteristics.yes=Yes
diagram.graph.characteristics.no=No

group.Diagram.AnalyzeGraphGroup.text=Analyze Graph
action.Diagram.AnalyzeGraph.ShowCharacteristics.text=Show Graph Characteristics\u2026
action.Diagram.AnalyzeGraph.DropFocus.text=Drop Focus
action.Diagram.AnalyzeGraph.FocusOnSelectedNodes.text=Focus On Selected Nodes
action.Diagram.AnalyzeGraph.FocusOnNodeNeighbourhood.text=Focus On Node Neighbourhood\u2026
action.Diagram.AnalyzeGraph.FocusOnPathsBetweenTwoNodes.text=Focus On Paths Between Two Nodes\u2026
action.Diagram.AnalyzeGraph.FocusOnCycles.text=Focus On Cycles\u2026
action.Diagram.AnalyzeGraph.MeasureCentrality.text=Measure Centrality\u2026
action.Diagram.AnalyzeGraph.DropCentralityValues.text=Drop Centrality Labels
action.Diagram.AnalyzeGraph.AutoClustering.text=Automatic Clustering\u2026
action.Diagram.AnalyzeGraph.DropClustering.text=Drop Clustering

popup.content.unable.to.find.diagrams=Unable to find diagrams for the selected elements