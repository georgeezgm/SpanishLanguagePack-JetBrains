debug.expression.exception.retrieve.error.name=예외를 가져올 수 없음
debug.expression.getter.name=Reactor 표현식 getter
debug.expression.result.empty.flux=Flux가 비어 있습니다
debug.expression.result.empty.mono=Mono가 비어 있습니다
debug.expression.result.name=결과
debug.message.expression.flux.result.get=... collectList()
debug.message.expression.mono.result.get=... get()
debug.message.flux.tooltip=첫 {0}개의 스트림 요소를 가져오려면 퍼블리셔를 구독하세요
debug.message.mono.tooltip=퍼블리셔를 구독하고 Mono 값을 가져옵니다
inspections.debug.initialization.description=Intellij IDEA는 애플리케이션 시작 시 Reactor 디버그 모드를 초기화합니다.
inspections.debug.initialization.description.additional=<code>ReactorDebugAgent.init()</code> 및 <code>Hooks.onOperatorDebug()</code>가 호출됩니다. 호출되면 스택프레임이 2배가 됩니다.
inspections.debug.initialization.disable.quickfix=자동 초기화 비활성화
inspections.debug.initialization.remove.quickfix=명시적 초기화 메서드 호출 제거
inspections.monovoid.mono.with.map.transformation.description=Mono<Void>에서 변환 메서드 {0}을(를) 호출해도 아무 효과가 없습니다
inspections.monovoid.mono.with.zip.transformation.description={0} 메서드를 Mono<Void> 매개변수로 호출하면 아무 효과가 없습니다
inspections.subscribe.in.non.blocking.scope.name=블록되지 않은 범위에 있는 ''subscribe'' 호출
inspections.unfinished.step.verifier.description=완료되지 않은 StepVerifier
intention.filter.and.map.to.handle.name=필터 호출을 축소 표시하고 호출을 하나의 핸들 호출로 매핑
intention.finish.step.verifier.quickfix.name={0} 호출로 StepVerifier 완료
intention.replace.map.with.mapnotnull.quickfix.message=map을 mapNotNull로 바꾸기
intention.replace.map.with.then.quickfix.message={0}을(를) ''then''으로 바꾸기
intention.replace.map.with.trow.to.handle.quickfix.message=throw가 있는 map() 대신 핸들을 사용하세요
intention.replace.zip.with.when.quickfix.message={0}을(를) ''when''으로 바꾸기
