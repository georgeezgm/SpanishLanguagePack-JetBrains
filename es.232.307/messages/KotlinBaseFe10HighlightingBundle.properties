always.null=Siempre nulo
cannot.be.inferred=No se puede inferir
defined.in=Definido en
found.space=Artículos encontrados:
function.arguments=Tomar el control:
function.receiver.0=Receptor: {0}
html.0.has.no.corresponding.expected.declaration.1.html=No hay declaración requerida correspondiente a {0}{1}
html.0.is.not.abstract.and.does.not.implement.abstract.base.class.member.br.1.html={0} no es abstracto y no implementa ningún miembro de clase base abstracto<br/>{1}
html.0.is.not.abstract.and.does.not.implement.abstract.member.br.1.html={0} no es abstracto y no implementa ningún miembro abstracto<br/>{1}
html.0.method.may.be.missing.none.of.the.following.functions.will.be.called.ul.1.ul.html=El método ''{0}'' no parece existir. No se llama a ninguna de las siguientes funciones: <ul>{1}</ul>
html.0.must.override.1.br.because.it.inherits.many.implementations.of.it.html=Dado que {0} hereda muchas implementaciones de {1}, debemos<br />anularlas.
html.accidental.override.0.html=Anulación accidental: {0}
html.actual.class.0.has.no.corresponding.members.for.expected.class.members.1.html=El miembro correspondiente al miembro de clase requerido no existe en la clase real ''{0}''.{1}
html.assignment.operators.ambiguity.all.these.functions.match.ul.0.ul.table.html=El operador de asignación es ambiguo. Todas estas funciones coinciden. <ul>{0}</ul></table>
html.candidate.resolution.will.be.changed.soon.please.use.fully.qualified.name.to.invoke.the.following.closer.candidate.explicitly.ul.0.ul.html=La resolución del candidato cambiará pronto. Utilice el nombre completo para llamar explícitamente al siguiente candidato más cercano. <ul>{0}</ul>
html.cannot.choose.among.the.following.candidates.without.completing.type.inference.ul.0.ul.html=Si no completa la inferencia de tipos, no podrá elegir entre los siguientes candidatos. <ul>{0}</ul>
html.expected.0.has.no.actual.declaration.in.module.1.2.html=El {0} obligatorio no tiene una declaración real en el módulo {1}{2}
html.function.return.type.mismatch.table.tr.td.expected.td.td.1.td.tr.tr.td.found.td.td.2.td.tr.table.html=Los tipos de retorno de funciones no coinciden.<table><tr><td>Obligatorio:</td><td>{1}</td></tr><tr><td>Encontrado:</ td><td >{2}</td></tr></table>
html.getter.return.type.must.be.equal.to.the.type.of.the.property.table.tr.td.expected.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.html=El tipo de devolución del captador debe ser el mismo que el tipo de propiedad.<table><tr><td>Obligatorio:</td><td>{0}</td></tr><tr><td>Elementos encontrados :</td><td>{1}</td></tr></table>
html.internal.error.occurred.while.analyzing.this.expression.br.0.html=<strong>Se produjo un error al analizar esta expresión</strong><br/>{0}
html.javascript.0.html=JavaScript: {0}
html.loop.parameter.type.mismatch.table.tr.td.iterated.values.td.td.0.td.tr.tr.td.parameter.td.td.1.td.tr.table.html=Los tipos de parámetros de bucle no coinciden.<table><tr><td>Valor repetido:</td><td>{0}</td></tr><tr><td>Parámetro:</td>< td>{1}</td></tr></table>
html.method.contains.from.concurrenthashmap.may.have.unexpected.semantics.it.calls.containsvalue.instead.of.containskey.br.use.explicit.form.of.the.call.to.containskey.containsvalue.contains.or.cast.the.value.to.kotlin.collections.map.instead.br.see.https.youtrack.jetbrains.com.issue.kt.18053.for.more.details.html=El método 'contiene' de ConcurrentHashMap puede tener un significado inesperado. Este método llama a 'containsValue' en lugar de 'containsKey'.<br/>Utilice una forma explícita de la llamada 'containsKey'/'containsValue'/'contains' o convierta el valor con kotlin.collections.Map.<br/> br />Para obtener más información, consulte https://youtrack.jetbrains.com/issue/KT-18053
html.method.iterator.is.ambiguous.for.this.expression.ul.0.ul.html=El método ''iterator()'' es ambiguo en esta expresión.<ul>{0}</ul>
html.none.of.the.following.functions.can.be.called.with.the.arguments.supplied.ul.0.ul.html=Ninguna de las siguientes funciones se puede llamar con los argumentos proporcionados: <ul>{0}</ul>
html.overload.resolution.ambiguity.all.these.functions.match.ul.0.ul.html=La resolución de sobrecarga es ambigua. Todas estas funciones coinciden. <ul>{0}</ul>
html.overload.resolution.ambiguity.on.method.0.all.these.functions.match.ul.1.ul.html=La resolución de sobrecarga para el método ''{0}'' es ambigua. Todas estas funciones coinciden. <ul>{1}</ul>
html.platform.declaration.clash.0.html=Conflicto de declaración de plataforma: {0}
html.property.delegate.must.have.a.0.method.none.of.the.following.functions.are.suitable.ul.1.ul.html=La delegación de propiedad debe tener el método ''{0}''. Ninguna de las siguientes funciones es adecuada: <ul>{1}</ul>
html.property.type.is.0.which.is.not.a.subtype.type.of.overridden.br.1.html=El tipo de propiedad es {0}, que no es un subtipo del elemento redefinido<br/>{1}
html.return.type.is.0.which.is.not.a.subtype.of.overridden.br.1.html=El tipo de devolución es ''{0}'', que no es un subtipo del elemento redefinido<br/>{1}
html.return.types.of.inherited.members.are.incompatible.br.0.br.1.html=Los tipos de devolución de los miembros heredados son incompatibles.<br/>{0},<br/>{1}
html.setter.parameter.type.must.be.equal.to.the.type.of.the.property.table.tr.td.expected.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.html=El tipo de parámetro de establecimiento debe ser el mismo que el tipo de propiedad.<table><tr><td>Obligatorio:</td><td>{0}</td></tr><tr><td>Elemento encontrado :</td><td>{1}</td></tr></table>
html.type.argument.is.not.within.its.bounds.table.tr.td.expected.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.html=El argumento de tipo no está dentro de sus límites.<table><tr><td>Obligatorio:</td><td>{0}</td></tr><tr><td>Encontrado:</ td> <td>{1}</td></tr></table>
html.type.inference.failed.0.html=La inferencia de tipos falló. {0}
html.type.mismatch.table.tr.td.required.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.br.projected.type.2.restricts.use.of.br.3.html=Los tipos no coinciden.<table><tr><td>Obligatorio:</td><td>{0}</td></tr><tr><td>Encontrado:</td> <td>{ 1}</td></tr></table><br />\nEl tipo proyectado {2} restringe el uso de {3}\n
html.type.mismatch.table.tr.td.required.td.td.0.td.tr.tr.td.found.td.td.1.td.tr.table.html=Los tipos no coinciden.<table><tr><td>Obligatorio:</td><td>{0}</td></tr><tr><td>Encontrado:</td> <td>{ 1}</td></tr></table>
html.types.of.inherited.properties.are.incompatible.br.0.br.1.html=Los tipos de propiedades heredadas son incompatibles.<br/>{0},<br/>{1}
html.types.of.inherited.var.properties.do.not.match.br.0.br.1.html=Los tipos de propiedades var heredadas no coinciden<br/>{0},<br/>{1}
html.unresolved.reference.br.none.of.the.following.candidates.is.applicable.because.of.receiver.type.mismatch.ul.0.ul.html=Referencia no resuelta. <br/> Ninguno de los siguientes candidatos se puede aplicar porque los tipos de receptores no coinciden. <ul>{0}</ul>
html.val.property.cannot.override.var.property.br.1.html=Las propiedades Val no pueden anular las propiedades var<br />{1}
html.var.property.type.is.0.which.is.not.a.type.of.overridden.br.1.html=El tipo de propiedad Var es {0}, que no es el tipo del elemento redefinido<br/>{1}
i.for.i.br.0=<i> for </i><br/>{0}
kotlin.compiler.error=Error del compilador de Kotlin
kotlin.compiler.warning=Advertencias del compilador Kotlin
required.space=Necesario:
root.package=Paquete raíz
smart.cast.to.0.for.1.call=Transmisión inteligente a {0} (al llamar a {1})
the.following.declarations.have.the.same.jvm.signature.code.0.1.code.br.ul.2.ul=Las siguientes declaraciones tienen la misma firma JVM (<code>{0}{1}</code>):<br/>\n<ul>\n{2}</ul>
type.inference.failed.expected.type.mismatch=La inferencia de tipos falló. Los tipos requeridos no coinciden.
type.parameters.where=Where
unknown.receiver=Receptor desconocido
value.captured.in.a.closure=Valores captados en cierre
wrapped.into.a.reference.object.to.be.modified.when.captured.in.a.closure=Envuelto en un objeto de referencia que se modificará si se captura en un cierre
