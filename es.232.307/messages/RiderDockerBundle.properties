rider.docker.unknown.os.and.cpu.message=컨테이너 OS({0}) 및 CPU 아키텍처({1})의 조합이 지원되지 않습니다
rider.docker.unknown.os.message=알 수 없는 컨테이너 OS\: {0}
rider.docker.pulling.image.message=이미지 {0} 풀 중…
rider.docker.unknown.compose.service.class=알 수 없는 Compose 서비스 클래스\: {0}
rider.docker.fast.mode.can.not.build.exception.message=프로젝트를 빌드할 수 없습니다
rider.docker.can.not.launch.under.debug=디버그 중에 ''{0}''을(를) 실행할 수 없음
rider.docker.can.not.find.executable.to.launch=실행할 실행 파일을 찾을 수 없음
rider.docker.container.entrypoint.error=컨테이너 진입점에는 'dotnet' 명령어 뒤에 인수가 있어야 하나 아무것도 발견되지 않았습니다
rider.docker.can.not.find.target.executable=''{0}'' 명령줄에서 타깃 실행 파일을 찾을 수 없음
rider.docker.directory.not.shared.exception.message=디버그 모드가 꺼져있습니다(Rider 디버거 디렉터리가 공유 디렉터리에 추가되지 않았습니다)
rider.docker.configuration.debugging.is.not.supported=이 실행 구성의 디버그는 지원되지 않습니다
rider.docker.execution.command.is.empty=실행 커맨드가 비어있습니다
rider.docker.can.not.determine.the.project=Docker 컨테이너 내에서 디버그할 프로젝트를 파악할 수 없습니다
rider.docker.can.not.find.installed.dotnet=컨테이너 내에 설치된 dotnet을 찾을 수 없음
rider.docker.can.not.get.project.information=프로젝트 정보를 가져올 수 없음
rider.docker.unknown.target.to.debug.the.app=Windows 컨테이너 내의 앱을 디버그할 타깃이 알려지지 않음

configurable.RiderDockerConfigurable.display.name=디버그 및 빠른 모드
configurable.RiderDockerConfigurable.use.warmup=Docker 이미지를 가져오고 시작 시에 검사
configurable.RiderDockerConfigurable.debug.images=빌드 구성이 없는 서비스의 디버그를 활성화

run.docker.notification.dockerignore.not.in.docker.context.title=.dockerignore가 컨텍스트 폴더에 없음
run.docker.notification.dockerignore.not.in.docker.context.content=.dockerignore가 프로젝트 폴더에 있으나 Docker 컨텍스트 폴더에 있어야 합니다. 컨텍스트 폴더로 옮겨서 현재 프로젝트에 연결하세요.
run.docker.notification.dockerignore.not.in.docker.context.move=.dockerignore 이동

rider.docker.compose.project.file.type.display.name=Docker Compose
rider.docker.compose.project.file.type.description=Docker Compose 프로젝트 파일

rider.docker.do.not.use.fast.mode=Docker 빠른 모드를 사용하지 않음
rider.docker.share.ssl.certificate=생성된 SSL 인증서 공유

rider.docker.prepare.deployment.progress=배포 준비 중
rider.docker.apply.fast.mode.progress=Docker 빠른 모드 배포 변환 적용 중
rider.docker.apply.debug.progress=Docker 디버그 배포 변환 적용 중

rider.docker.allowed.dirs.update.title=Rider를 Docker의 공유 디렉터리로 이동
rider.docker.allowed.dirs.update.message=Docker 컨테이너를 디버그하려면 Rider 설치 디렉터리를 %Docker의 공유 디렉터리% 목록에 추가해야 합니다
rider.docker.root.add.message=추가
rider.docker.root.cancel.message=취소

rider.docker.console.kind.message=콘솔 출력은 ''{0}'' 탭에서 이용할 수 있습니다

notification.group.rider.docker.event.log.messages=Rider Docker 이벤트 로그 메시지

rider.docker.notification.detached.mode.title=Docker Compose 서비스 디버그 불가
rider.docker.notification.detached.mode.text=Docker Compose 서비스를 디버그하려면 '연결 대상\: 없음' 옵션을 선택하세요
rider.docker.notification.edit.run.config.action.text=실행 구성 편집
rider.docker.notification.edit.run.config.dialog.title=실행 구성 편집\: ''{0}''