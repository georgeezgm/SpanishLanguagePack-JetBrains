sql.inspections.group.name=SQL
sql.quickfix.family=SQL
intentions.category.sql=SQL

sql.inspections.group.name.mssql=SQL server
sql.inspections.group.name.mysql=MySQL
sql.inspections.group.name.oracle=Oracle
sql.inspections.group.name.postgres=PostgreSQL

sql.code.style.group.display.name=SQL
sql.code.style.group.description=Set of code styles based on SQL.

code.style.ui.ddl=DDL
code.style.short.with.uppercase=Short with Uppercase
code.style.short.with.lowercase=Short with Lowercase

sql.ui.type.none=None
sql.ui.type.reference=reference
sql.ui.type.all.languages=All

sql.template.editor.help=Help
sql.template.editor.example.name=Ex. name: {0}

inspection.name.identifier=Identifier should be quoted
inspection.name.resolve=Unresolved reference
inspection.name.type=Types compatibility
inspection.name.unused=Unused variable
inspection.name.unused.subquery.item=Unused subquery item
inspection.name.insert.values=VALUES clause cardinality
inspection.name.ambiguous.column=Ambiguous reference
inspection.name.dialect=SQL dialect detection
inspection.name.current.schema=Current console schema introspected
inspection.name.storage=SQL source modification detection
inspection.name.no.datasources=No data sources configured
inspection.name.derived.table=Each derived table should have alias
inspection.name.should.be.in.group.by=Column should be in group by clause
inspection.name.constant.condition=Constant condition
inspection.name.constant.expression=Constant expression
inspection.name.auto_increment.duplicate=Auto-increment duplicate
inspection.name.drop.indexed.column=Index is dependent on column
inspection.name.deprecated.type=Deprecated type
inspection.name.add.not.null=Adding not null column without default value
inspection.name.using.column.check=Check using clause columns
inspection.name.null.comparison=Null comparison
inspection.name.signature=Function signature
inspection.side.effect.statements=Statement with side effects
inspection.name.delete.update.without.where=Delete or update statement without where clauses
inspection.name.join.without.on=Unsafe 'join' clause in 'delete' statement
inspection.name.unreachable.code=Unreachable code
inspection.name.illegal.cursor.state=Illegal cursor state
inspection.name.named.argument=Named arguments should be used
inspection.name.call.notation=Using of named and positional arguments
inspection.name.goto=Usages of GOTO statements
inspection.name.suspicious.trigger=Suspicious code in triggers
inspection.name.redundant.ordering=Redundant ordering direction
inspection.name.aggregate.problems=Aggregate-related problems
inspection.name.case.conditional=Using CASE instead of conditional function and vice versa
inspection.name.case.coalesce=Using CASE instead of COALESCE function and vice versa
inspection.name.truncation=Implicit string truncation
inspection.name.redundant.alias=Redundant alias expressions
inspection.name.redundant.limit=Redundant row limiting in queries
inspection.name.multiple.limit=Multiple row limiting/offset clauses in queries
inspection.name.insert.generated=Insertion into generated columns
inspection.name.duplicating.column=Duplicating column name in SELECT
inspection.name.redundant.else.null=Redundant ELSE NULL clause
inspection.name.insert.null.not.null=Insert NULL into NOT NULL column
inspection.name.redundant.coalesce=Redundant code in COALESCE call
inspection.name.unicode=Unicode usage in SQL
inspection.name.unused.cte=Unused common table expression
inspection.name.missing.column.aliases=Missing column aliases
inspection.name.misleading.references=Misleading references
inspection.name.missing.return=Missing return statement
inspection.name.transaction.in.trigger=Use of transaction management statements in triggers
inspection.name.date.time.literal=Ill-formed date/time literals
inspection.name.overload=Overloading errors
inspection.name.unmatched.forward=Forward declaration without definition
inspection.name.missing.body=Missing body for package/object type specification
inspection.name.shadowing.alias=Column is shadowed by alias

inspection.name.mysql.parsing=Unsupported syntax in pre-8.0 versions
inspection.name.mysql.load.data.path=LOAD statement path
inspection.name.pg.select.from.procedure=Postgres: Select from procedure call

inspection.name.mssql.builtin=Builtin functions
inspection.name.mssql.order.by=ORDER BY in queries

dialog.sql.dialects.caption=<html>\
  To change SQL dialect {0} uses for a file, a directory, or the entire project, \
  add its path if necessary and then choose a dialect from the drop down list. Advanced coding assistance may not be available \
  for {1} dialect.<br></html>
dialog.sql.dialects.value.title=SQL Dialect
dialog.sql.dialects.override.question=Override SQL dialects recursively?
dialog.sql.dialects.override.title=SQL Dialects
sql.dialects.configurable=SQL Dialects
dialog.sql.resolve.caption=<html>\
  To configure the unqualified SQL names resolution for a file, a directory, or the entire project, \
  add its path if necessary and then choose the desired data sources, databases and schemas \
  in the drop down.<br></html>
dialog.sql.resolve.value.title=Resolution Scope
dialog.sql.resolve.override.question=Override resolution scopes recursively?
dialog.sql.resolve.override.title=SQL Resolution Scopes
sql.resolve.configurable=SQL Resolution Scopes

# inspection error messages
unable.to.resolve.symbol.0=Unable to resolve symbol ''{0}''
unable.to.resolve.symbol.0.1=Unable to resolve {0} ''{1}''
unable.to.resolve.synonym.target=Unable to resolve synonym target
identifier.expected=Identifier expected
0.expected=''{0}'' expected
one.of.expected.0=One of the following is expected: {0}
0.unexpected=Unexpected ''{0}''
quickfix.change.dialect.family.text=Change SQL dialect
quickfix.separate.query.from.table=Separate query from table definition
incompatible.types=''{0}'' is not compatible with ''{1}''
already.exists=''{0}'' already exists
duplicate.column=Duplicate column ''{0}''
expected.boolean.expression=Boolean expression is expected
unexpected.boolean.expression=Boolean expression is not allowed here
unknown.function=Unknown database function ''{0}''
column.alias.required=Column alias required for ''{0}''
unexpected.token.0.expected.1=Unexpected ''{0}'', ''{1}'' expected
operator.0.not.supported.by.dialect.1=''{0}'' operator is not supported by ''{1}'' dialect
identifier.1.should.be.quoted=''{0}'' is a reserved keyword and should be quoted
identifier.should.start.with.letter=Non-quoted identifier should start with a letter
incorrect.values.number={0} value(s) expected, got {1}
ambiguous.column.short.reference=Ambiguous column reference: {0}
derived.table.alias=Each derived table should have alias
column.should.be.in.group.by=Column ''{0}'' is invalid in the select list because it is not contained in either an aggregate function or the GROUP BY clause
columns.should.be.in.group.by=Columns ''{0}'' are invalid in the select list because they are not contained in either an aggregate function or the GROUP BY clause
condition.always.true=Condition ''{0}'' is always ''true''
condition.always.false=Condition ''{0}'' is always ''false''
delete.without.where='Delete' statement without 'where' clears all data in the table
update.without.where='Update' statement without 'where' updates all table rows at once
update.without.where.skip.self.refs=Don't warn if there exist self-references in the query (i.e., set id = id + 1)
update.without.where.skip.limit=Don't warn if there exists 'limit' clause
join.without.on=Unsafe 'join' clause inside 'delete': either 'on' or 'where' should reference the left table
subquery.item.never.used=Subquery item ''{0}'' is never used
subquery.item.star.includes.unused=''select *'' results in unused columns: {0}. Consider replacing with ''{1}''

help.file.0.not.found=Help file ''{0}'' not found
action.text.create.sql.datasource=DDL Data Source
sources.tab.title=Sources
generation.tab.title=New File Layout
action.add.ddl.files.text=DDL Files
action.ddl.files.scope.text=Files Scope
dialog.title.choose.ddl.files=Choose DDL Files to Add
generic.sql.dialect.usage.error.message={0} uses {1} dialect

sql.color.page.title=SQL

quickfix.name.split.string.literal=Split string literal
quickfix.name.quote.identifier=Quote identifier
quickfix.name.unquote.identifier=Unquote identifier
quickfix.name.add.to.group.by=Add to GROUP BY clause
quickfix.name.introduce.alias=Introduce alias
quickfix.name.create.table.definition=Create table definition
quickfix.name.create.table.declaration=Create temporary table declaration
quickfix.name.add.definition=Add definition
quickfix.name.replace.deprecated.type=Replace deprecated type
quickfix.name.add.as=Add AS keyword
quickfix.name.add.comma=Insert comma
sql.framework.support.provider.title=SQL Support
sql.framework.support.provider.project.default=Project Default
label.text.default.dialect=&Default Dialect:

surround.with.quote.template=Quote
surround.with.select.template=select * from ...

action.sql.ExtractFunctionAction.text=Extract Routine...
action.sql.ImplementMembersAction.text=Implement Members...
action.sql.IntroduceAliasAction.text=Table alias...
action.sql.SelectCurrentStatement.text=Select Current Statement
action.sql.ExtractNamedQueryAction.text=Subquery as CTE
group.sql.ChangeDialect.toolbar.text=Change SQL Dialect
action.sql.ChangeDialect.text=Change SQL Dialect
settings.database.title=Database
settings.sql.title=SQL
settings.join.clauses=JOIN clauses:
settings.use.aliases.in.completion.for.join=Use aliases in completion for JOIN
settings.invert.order.of.operands.in.auto.generated.on.clause=Invert order of operands in auto-generated ON clause
settings.suggest.non.strict.foreign.keys.based.on.the.name.matching=Suggest non-strict foreign keys based on the name matching
settings.table.aliases=Table aliases:
settings.automatically.add.aliases.when.completing.table.names=Automatically add aliases when completing table names
settings.suggest.alias.names.in.completion.after.table.names=Suggest alias names in completion after table names
settings.suggest.search.path.objects.only=The current search path only
settings.automatically.suggest.all.objects.in.completion=All available schemas
settings.suggest.objects.from=Suggest objects from:
settings.suggest.current.scope.objects=The current scope
settings.qualify.object.with=Qualify object with:
settings.qualify.object.in=Qualify object in:
settings.qualify.object.in.basic.completion=Basic completion
settings.qualify.object.in.join.completion=JOIN completion
settings.qualify.object.in.refactoring=Refactoring
settings.qualify.object.in.live.templates=Live templates
settings.qualify.object.in.dnd=Drag-n-Drop
settings.no.custom.aliases=No custom aliases
settings.add.alias=Add alias
settings.remove.alias=Remove alias
settings.no.column.reference.rules=No column reference rules
settings.column.pattern=Column pattern
settings.target.column.pattern=Target column pattern
settings.add.rule=Add rule
settings.remove.rule=Remove rule
settings.check=Check...
settings.test.rule=Test rule
settings.column.table.name=Table name
settings.column.custom.alias=Custom alias
settings.folding.put.underscores.inside.numeric.literals=Put underscores inside numeric literals (6-digit or longer)
settings.folding.title=SQL
settings.smart.keys.insert.string.concatenation.on.enter=Insert string concatenation on Enter
settings.smart.keys.close.code.blocks.on.enter=Close code blocks on Enter
settings.smart.keys.database=Database:
settings.smart.keys.schema=Schema:
settings.smart.keys.table=Table/View:
settings.smart.keys.alias=Table/view alias:
settings.smart.keys.join.condition=Join condition:
settings.smart.keys.always=Always
settings.smart.keys.on.collisions=On collisions
settings.smart.keys.never=Never
settings.inlay.in.insert.values=In INSERT values
settings.inlay.in.select.expressions=In SELECT expressions
settings.inlay.for.references=For * references
settings.inlay.for.set.operations=For set operations (UNION, INTERSECT, EXCEPT)
settings.inlay.show.column.names=Show column names:
# suppress inspection "UnusedProperty" (used in SqlInlayParameterHintsProvider)
inlay.parameters.sql.show.column.names.in.insert.values=Show names of columns in INSERT statements. Works only in query consoles, not as a language injection.
# suppress inspection "UnusedProperty" (used in SqlInlayParameterHintsProvider)
inlay.parameters.sql.show.column.names.in.select=Show names of columns in SELECT statements that have context that sets column names. For example, SELECT statements inside CREATE VIEW and INSERT. Works only in query consoles, not as a language injection.
# suppress inspection "UnusedProperty" (used in SqlInlayParameterHintsProvider)
inlay.parameters.sql.show.column.names.for.asterisk=Show names of columns for asterisk (*) references in SELECT statements that have context that sets column names. For example, SELECT statements inside CREATE VIEW and INSERT. Works only in query consoles, not as a language injection.
# suppress inspection "UnusedProperty" (used in SqlInlayParameterHintsProvider)
inlay.parameters.sql.show.column.names.for.set.operations=Show names of columns in SELECT statements when they are used in set operations like UNION, INTERSECT, and EXCEPT. Works only in query consoles, not as a language injection.
settings.code.style.common=Common
settings.code.style.keywords=Keywords
settings.code.style.types.builtin=Built-in types
settings.code.style.types.custom=Custom types
settings.code.style.identifiers=Identifiers
settings.code.style.aliases=Aliases
settings.code.style.builtIns=Built-in functions
settings.code.style.quoted.identifiers=Quoted identifiers
settings.code.style.use.original.case=Use original case
settings.code.style.identifier.quotation=Identifier quotation
settings.code.style.quotation.character=Quotation character
settings.code.style.align.the.first.word.of.clause=Align the first word of clause
settings.code.style.collapse.short.statement=Collapse short statement
settings.code.style.place.into.on.the.new.line=Place INTO on the new line
settings.code.style.place.into.clause.elements.on=Place INTO clause elements on
settings.code.style.place.values.clause.elements.rows.on=Place VALUES clause elements (rows) on
settings.code.style.place.columns.or.values=Place columns or values
settings.code.style.wrap.columns.or.values=Wrap columns or values
settings.code.style.place.comma=Place comma
settings.code.style.wrap.subqueries=Wrap subqueries
settings.code.style.keep.elements.on.one.line.if.less=Keep elements on one line if \u2264
settings.code.style.use.as=Use AS
settings.code.style.place.join.in.join-only.queries.under=Place JOIN in join-only queries under
settings.code.style.place.on.using.under=Place ON/USING under
settings.code.style.place.top.level.and.or=Place top-level AND/OR
settings.code.style.place.subquery=Place subquery
settings.code.style.alter.instruction.wrap=Wrap altering instructions
settings.code.style.alter.instruction.indent=Indent altering instructions
settings.code.style.alter.instruction.align=Align altering instructions
settings.code.style.alter.item.wrap=Wrap altered items
settings.code.style.alter.item.indent=Indent altered items
settings.code.style.alter.item.align=Align altered items
settings.code.style.minimum.blank.lines.between.declaration=Minimum blank lines between declaration
settings.code.style.maximum.blank.lines.between.declaration=Maximum blank lines between declaration
settings.code.style.keep.blank.lines.in.code=Keep blank lines in code
settings.code.style.wrap.variables=Wrap variables
settings.code.style.use.spaces.around.operators=Use spaces around operators
settings.code.style.align.end=Align END
settings.code.style.keep.section.elements.under.section.header=Keep section elements under section header
settings.code.style.align.section.elements=Align section elements
settings.code.style.align.line.comments.at.right.of.elements=Align line comments at right of elements
settings.code.style.put.spaces.before.parenthesis=Space after keyword
settings.code.style.put.spaces.within.parentheses=Spaces within parentheses
settings.code.style.collapse.short.multi.row.values=Collapse short multi-row values
settings.code.style.align.equals=Align `=`
settings.code.style.new.line.after.all.distinct=New line after ALL, DISTINCT
settings.code.style.align.as=Align AS
settings.code.style.select.asterisk.regular=Treat asterisk as a regular element
settings.code.style.wrap.the.first.join=Wrap the first JOIN
settings.code.style.wrap.the.next.join=Wrap the next JOIN
settings.code.style.indent.join=Indent JOIN
settings.code.style.align.joined.tables=Align joined tables
settings.code.style.align.table.aliases=Align table aliases
settings.code.style.wrap.on.using=Wrap ON/USING
settings.code.style.align.asc.desc=Align ASC/DESC
settings.code.style.align.defaults=Align defaults
settings.code.style.align.nullabilities=Align nullabilities
settings.code.style.wrap.constraint=Wrap CONSTRAINT
settings.code.style.wrap.key.check=Wrap KEY/CHECK
settings.code.style.wrap.references=Wrap REFERENCES
settings.code.style.wrap.cascade.and.deferrability=Wrap cascade and deferrability
settings.code.style.indent.content=Indent content
settings.code.style.wrap.the.beginning.of.the.query=Wrap the beginning of the query
settings.code.style.indent.query=Indent query
settings.code.style.wrap.first.option=Wrap first option
settings.code.style.wrap.next.option=Wrap next option
settings.code.style.indent.options=Indent options
settings.code.style.align.options=Align options
settings.code.style.script.semicolon.wrap=Wrap command-ending semicolon
settings.code.style.script.follows.blank.line=Commands follow by blank lines
settings.code.style.wrap.every.statement=Wrap every statement
settings.code.style.wrap.section=Wrap section
settings.code.style.align.assignments=Align assignments
settings.code.style.align.expressions=Align expressions
settings.code.style.align.lineComments=Align line comments (MS SQL only)
settings.code.style.align.types=Align types
settings.code.style.wrap.as=Wrap AS
settings.code.style.wrap.opening=Wrap opening $$
settings.code.style.wrap.the.content.after.opening=Wrap the content after opening $$
settings.code.style.wrap.before.closing=Wrap before closing $$
settings.code.style.wrap.options.after.closing=Wrap options after closing $$
settings.code.style.wrap.else=Wrap ELSE
settings.code.style.wrap.inner.code=Wrap inner code
settings.code.style.indent.then.and.else=Indent THEN and ELSE
settings.code.style.indent.end.if=Indent END IF
settings.code.style.wrap.loop=Wrap LOOP
settings.code.style.indent.loop=Indent LOOP
settings.code.style.indent.end.loop=Indent END LOOP
settings.code.style.collapse.when.short=Collapse when short
settings.code.style.add.space.before.left.parentheses=Add space before `(`
settings.code.style.place.comma.to.begin=Place comma to begin
settings.code.style.align.operands.in.binary.expressions=Align operands in binary expressions
settings.code.style.space.within.parenthesized.sub.expressions=Space within parenthesized sub-expressions
settings.code.style.space.within.parentheses=Space within parentheses
settings.code.style.space.before.comma=Space before comma
settings.code.style.space.after.comma=Space after comma
settings.code.style.wrap.when=Wrap WHEN
settings.code.style.indent.when.if.wrapped=Indent WHEN if wrapped
settings.code.style.wrap.then=Wrap THEN
settings.code.style.align.then=Align THEN
settings.code.style.align.else.under.then.when.then.aligned=Align ELSE under THEN when THEN aligned
settings.code.style.keep.new.line.after.then.else=Keep new line after THEN, ELSE
settings.code.style.collapse.short.clause=Collapse short clause
settings.code.style.inherit.general.sql.style=Inherit general SQL style
settings.code.style.disable.formatting=Disable formatting
settings.code.style.word.case=Word Case
settings.code.style.quotation=Quotation
settings.code.style.script = Script
settings.code.style.imp.common=Imperative Commons
settings.code.style.insert.statement.and.values.clause=INSERT statement and VALUES clause
settings.code.style.update.statement=UPDATE statement
settings.code.style.with.clause=WITH clause
settings.code.style.select.clause=SELECT clause
settings.code.style.from.clause=FROM clause
settings.code.style.where.and.having.clauses=WHERE and HAVING clauses
settings.code.style.group.by.and.order.by.clauses=GROUP BY and ORDER BY clauses
settings.code.style.subquery=Subquery
settings.code.style.table.create=CREATE TABLE
settings.code.style.table.alter=ALTER TABLE
settings.code.style.table.create.alter=CREATE or ALTER TABLE
settings.code.style.create.schema=CREATE SCHEMA
settings.code.style.constraint=CONSTRAINT
settings.code.style.views=Views
settings.code.style.postfix.options=Postfix options
settings.code.style.declared.variables=Declared variables
settings.code.style.routine.arguments=Routine arguments
settings.code.style.routine.statement=Routine statement
settings.code.style.if.then.else=IF \u2026 THEN \u2026 ELSE
settings.code.style.loops=Loops
settings.code.style.code=Code
settings.code.style.cortege=Cortege
settings.code.style.binary.expression=Binary expression
settings.code.style.function.or.procedure.call=Function or procedure call
settings.code.style.case.clause=CASE clause
settings.code.style.expressions=Expressions
settings.code.style.queries=Queries
settings.code.style.case=Case
settings.code.style.wrapping=Wrapping
settings.code.style.do.not.change=Do not change
settings.code.style.as.in.common=As in common
settings.code.style.yes=Yes
settings.code.style.no=No
settings.code.style.auto=Auto
settings.code.style.to.left=To left
settings.code.style.to.left.with.indent=To left with indent
settings.code.style.to.right=To right
settings.code.style.to.begin=To begin
settings.code.style.to.end=To end
settings.code.style.at.the.end=At the end
settings.code.style.to.lower=To lower
settings.code.style.to.upper=To upper
settings.code.style.to.title=To title
settings.code.style.in.the.middle=In the middle
settings.code.style.place.the.opening.parenthesis=Place the opening parenthesis
settings.code.style.place.elements=Place elements
settings.code.style.place.the.closing.parenthesis=Place the closing parenthesis
settings.code.style.wrap.elements=Wrap elements
settings.code.style.place.elements.on=Place elements on
settings.code.style.place.clause.elements.on=Place clause elements on
settings.code.style.on.the.same.line=On the same line
settings.code.style.aligned=Aligned
settings.code.style.indented=Indented
settings.code.style.same.line.aligned=Same line aligned
settings.code.style.wrapped.unindented=Wrapped unindented
settings.code.style.wrapped.aligned=Wrapped aligned
settings.code.style.wrapped.indented=Wrapped indented
settings.code.style.under.opening=Under opening
settings.code.style.under.elements=Under elements
settings.code.style.unindented=Unindented
settings.code.style.as.keywords=As keywords
settings.code.style.as.identifiers=As identifiers
settings.code.style.chop=Chop
settings.code.style.chop.if.long=Chop if long
settings.code.style.wrap.if.long=Wrap if long
settings.code.style.same.line=Same line
settings.code.style.new.line=New line
settings.code.style.never=Never
settings.code.style.always=Always
settings.code.style.subqueries.only=Subqueries only
settings.code.style.table.as.usual=Table (as usual)
settings.code.style.FROM.indented=FROM indented
settings.code.style.FROM=FROM
settings.code.style.JOIN=JOIN
settings.code.style.JOIN.indented=JOIN indented
settings.code.style.JOIN.indented.cont=JOIN continuously indented
settings.code.style.table=Table
settings.code.style.table.indented=Table indented
settings.code.style.align.with.CASE=Align with CASE
settings.code.style.align.with.WHEN=Align with WHEN
settings.code.style.add.always=Add always
settings.code.style.remove=Remove
settings.code.style.quote=Quote
settings.code.style.unquote=Unquote
settings.code.style.double.quotes.or.another="Double Quotes" or another
settings.code.style.double.quotes.only="Double Quotes" only
settings.code.style.double.quotes.or.brackets="Double Quotes" or [Brackets]
settings.code.style.double.quotes.or.grave.accent="Double Quotes" or `Grave Accent`
settings.code.style.brackets.or.double.quotes=[Brackets] or "Double Quotes"
settings.code.style.brackets.only=[Brackets] only
settings.code.style.grave.accents.or.double.quotes=`Grave Accents` or "Double Quotes"
settings.code.style.grave.accents.only=`Grave Accents` only
settings.code.style.preview.dialect=Preview dialect:
preview.update=Preview update
preview.delete=Preview delete
progress.details.interrupted=Interrupted
progress.text.building=Building `{0}`
dialog.message.cannot.perform.refactoring=Cannot perform refactoring
dialog.title.cannot.perform.refactoring=Cannot Perform Refactoring
dialog.message.only.primitives.are.supported=Only expressions of primitive types are supported
dialog.message.only.primitives.and.tables.are.supported=Only expressions of primitive or table types are supported
dialog.message.only.queries.and.froms.are.supported=Only queries and FROM expressions are supported
command.name.extract.variable=Extract variable
data.source.chooser.title=Data Sources
intention.name.add.column=Add column ''{0}'' to ''{1}'' table
intention.name.add.table=Add table to data source
intention.name.declare.variable=Declare variable
intention.name.declare.pl.variable=Declare PL variable
intention.name.introspect.schema.fix=Introspect {0}
intention.name.refresh.schema.fix=Refresh {0}
intention.name.qualify.fix=Qualify reference
intention.name.attach.session=Attach session
intention.name.choose.schema=Choose schema
intention.name.go.to.sql.resolution.scopes=Go to SQL Resolution Scopes
inspection.message.unable.to.resolve.in.this.context=Unable to resolve * in this context
inspection.message.invalid.column.index=Invalid column index
sql.resolve.inspection.checkbox.suppress.for.quoted=Suppress for quoted identifiers which may be treated as strings
sql.resolve.inspection.checkbox.suppress.for.back.ref=Suppress for back label references
inspection.message.sql.dialect.not.configured=SQL dialect is not configured.
intention.name.change.dialect.to=Change dialect to...
intention.name.use.dialect=Use {0}
global.sql.dialect.setting.text=Global SQL Dialect
sql.code.style.settings.tab.title=Code Generation
SqlTypePanel.label.fragment=Fragment:
SqlTypePanel.label.in.sql.dialects=In SQL dialects:
SqlTypePanel.label.type.pattern=Type pattern:
command.name.introduce.variable=Introduce Variable
SqlQueryParametersProvider.query.parameter=Query Parameter
SqlStructureViewBuilderProvider.action.ddl.statements.text=DDL statements
SqlStructureViewBuilderProvider.action.dml.statements.text=DML statements
SqlStructureViewBuilderProvider.action.select.statements.text=Select statements
SqlStructureViewBuilderProvider.action.other.text=Other
SqlStructureViewBuilderProvider.action.group.by.type.text=Group by type
attribute.descriptor.external.command=External command
attribute.descriptor.comment=Comment
attribute.descriptor.database.object=Database object
attribute.descriptor.schema=Schema
attribute.descriptor.table=Table
attribute.descriptor.column=Column
attribute.descriptor.outer.query.column=Outer query column
attribute.descriptor.type=Type
attribute.descriptor.procedure.or.function=Procedure or function
attribute.descriptor.parameter=Parameter
attribute.descriptor.variable=Variable
attribute.descriptor.label=Label
attribute.descriptor.table.or.column.alias=Table or column alias
attribute.descriptor.synthetic.entity=Synthetic entity
attribute.descriptor.number.token=Number token
attribute.descriptor.string.token=String token
attribute.descriptor.keyword=Keyword
attribute.descriptor.semicolon=Semicolon
attribute.descriptor.comma=Comma
attribute.descriptor.dot=Dot
attribute.descriptor.parentheses=Parentheses
attribute.descriptor.brackets=Brackets
attribute.descriptor.braces=Braces
attribute.descriptor.bad.token=Bad token
SqlTypeBasedInjectionSupport.action.sql.injection.text=SQL Injection
SqlTypeBasedInjectionSupport.action.sql.type.injection.text=SQL Type Injection
SqlTypeBasedInjectionSupport.new.sql.injection=New SQL Injection
popup.title.go.to.specification=Go to specification
popup.title.go.to.super.type=Go to super type
popup.title.go.to.body=Go to body
popup.title.go.to.routine.definition=Go to routine definition
SqlAnnotator.inspection.message.outer.query.column=Outer query column
SqlGenerateGroup.action.creates.description=Creates {0}
SqlGenerateGroup.action.block.text=Block
SqlNavigationLineMarkerProvider.tooltip=<html><body>{0}<br><div style=''margin-top: 5px''><font size=''2''>Click{2, choice, 0# or press {1}|1#} to navigate</font></div></body></html>
SqlPasteProvider.command.name.pasting.database.object.references=Pasting database object references
SqlRecursiveCallLineMakerProvider.gutter.name.recursive.call=Recursive call
parsing.error.expression.expected=<expression> expected
parsing.error.t.or.space.expected='T' or space expected
add.type.element=Add type element
hint.text.no.sql.expression.found=No SQL expression found
intention.name.add.default.value=Add default value
inspection.message.column.can.not.be.added.because.it.s.mandatory.not.null.but.unknown.how.to.fill.it.for.existing.rows=The column can not be added because it's mandatory (not null) but unknown how to fill it for the existing rows.
inspection.message.only.one.auto.increment.column.it.must.be.defined.as.key=Only one auto increment column and it must be defined as a key
inspection.message.column.specified.in.using.clause.does.not.exist.in.choice.left.right.table=column ''{0}'' specified in using clause does not exist in {1, choice, 0#left|1#right} table
inspection.message.attempt.to.dropping.indexed.column.choice.drop.index.before.dropping.this.column=Attempt to dropping an indexed column.{1, choice, 0#|1# Drop the ''''{0}'''' index before dropping this column.}
inspection.message.attempt.to.dropping.indexed.column.choice.drop.key.before.dropping.this.column=Attempt to dropping an indexed column.{1, choice, 0#|1# Drop the ''''{0}'''' key before dropping this column.}
inspection.message.left.right.operands.should.have.same.number.columns.got=Left and right operands should have the same number of columns, got {0} and {1}
inspection.message.following.columns.have.no.computed.default.value.must.be.listed.explicitly=Following columns have no computed/default value and must be listed explicitly: \n{0}
inspection.message.suspicious.comparison.with.null.probably.operator.should.be.used=Suspicious comparison with NULL, probably {0} operator should be used
intention.family.name.use.operator=Use {0} operator
popup.title.add.to.view=Add to View
disable.read.only.mode=Disable read-only mode
inspection.message.this.statement.may.cause.side.effects=This statement may cause side effects
inspection.message.this.statement.will.lead.to.modification.data=This statement will lead to modification of data
inspection.message.this.statement.will.lead.to.modification.database=This statement will lead to modification of the database
inspection.message.this.routine.may.cause.side.effects=This routine may cause side effects
inspection.message.could.not.take.such.arguments={0} could not take such arguments
inspection.message.column.alias.required.for=Column alias required for ''{0}''
inspection.message.never.used={0} {1} is never used
checkbox.don.t.warn.if.there.exists.join.clause.with.condition=Don't warn if there exists 'join' clause with condition
checkbox.don.t.warn.if.statement.applied.to.temporary.table=Don't warn if statement is applied to temporary table
inspection.message.current.not.introspected=Current {0} is not introspected.
inspection.message.choice.matches.match.best=\ {0}{1, choice, 0# matches|1# match} best.
inspection.message.no.data.sources.are.configured=No data sources are configured to run this SQL and provide advanced code assistance.{1, choice, 0# Disable this inspection via problem menu ({0}).|1#}
intention.family.name.configure.data.source=Configure data source
inspection.message.object.source.code.may.be.invalid=Object source code may be invalid.
intention.family.name.synchronize=Synchronize
intention.family.name.disable.check=Disable check
intention.family.name.revert.local.changes=Revert local changes
intention.family.name.forget.local.changes=Forget local changes
notification.content.failed.to.revert=Failed to revert {0}
intention.family.name.regenerate=Regenerate
intention.family.name.keep.local.changes=Keep local changes
notification.content.failed.to.merge=Failed to merge {0}
intention.family.name.merge=Merge
intention.family.name.restore.in.database=Restore in database
inspection.message.cached.object.differs.from.object.in.database=Cached object differs from the object in the database 
inspection.message.object.dropped.in.database=Object is dropped in database
inspection.message.object.has.changed.in.database=Object has changed in database
inspection.message.object.has.changed.in.database.but.you.have.local.changes=Object has changed in database, but you have local changes
intention.name.for.file={0} for file
popup.title.statements=Statements
intention.name.for.statement={0} for statement
intention.name.suppress=Suppress
intention.name.suppress.references.to=Suppress references to {0} ''{1}''
intention.family.name.expand.column.list=Expand column list
intention.family.extract.named.query=Extract subquery as CTE
intention.family.inline.named.query=Inline CTE
inject.by.type=Inject by Type
popup.title.qualify.with=Qualify With...
command.name.qualify.identifier=Qualify identifier
intention.family.name.qualify.identifier=Qualify identifier
command.name.split.string.literal=Split string literal
intention.family.name.unqualify.identifier=Unqualify identifier
label.sql.code=Any SQL Code
label.all.dialects=All dialects
label.sql.statements=Any SQL Statement
label.sql.query=Any SQL Query
label.applicable.sql.dialects=Applicable SQL Dialects:
command.name.introduce.cte=Introduce CTE
command.name.extract.cte=Extract CTE
dialog.message.no.usages.found=No usages found
command.name.inline.cte=Inline CTE
dialog.title.inline.cte=Inline CTE
dialog.message.alias.not.identifier=Alias is not identifier
dialog.message.failed.to.find.with.expression=Failed to find with expression
dialog.message.unexpected.reference.type=Unexpected reference type
dialog.message.nothing.to.inline=Nothing to inline
dialog.message.too.many.places.to.inline=Too many places to inline
dialog.message.with.clause.can.not.be.found=With clause can not be found
dialog.message.can.not.inline.recursive.cte=Unable to inline recursive CTE
dialog.message.with.clause.without.query=With clause without query
popup.title.identifier.should.start.with=Identifier should start with `{0}`
FkRuleCheckerDialog.border.title.rule=Rule
FkRuleCheckerDialog.label.column.pattern=Column pattern: 
FkRuleCheckerDialog.label.target.column.pattern=Target column pattern: 
FkRuleCheckerDialog.border.title.example=Example
FkRuleCheckerDialog.label.source.column=Source column: 
FkRuleCheckerDialog.label.generated.pattern=Generated pattern: 
FkRuleCheckerDialog.label.target.table.column=Target table.column: 
FkRuleCheckerDialog.rule.debugger=Rule debugger
FkRuleCheckerDialog.tooltip.should.match.column.pattern=Should match `Column pattern`: {0}
FkRuleCheckerDialog.tooltip.should.match.generated.pattern=Should match `Generated pattern`: {0}
intention.family.name.delete.element=Delete element
intention.family.name.delete=Delete {0}
intention.family.name.rename.element=Rename element
inspection.message.using.aggregate.free.condition.s.in.having.clause.might.be.inefficient.consider.moving.them.to.where=Using aggregate-free condition(s) in HAVING clause might be inefficient. Consider moving them to WHERE
inspection.message.aggregate.calls.are.not.allowed.here=Aggregate calls are not allowed here
inspection.message.nested.aggregate.calls.are.not.allowed=Nested aggregate calls are not allowed
inspection.message.nondeterministic.value.column.neither.aggregated.nor.mentioned.in.group.by.clause=Nondeterministic value: column {0} is neither aggregated, nor mentioned in GROUP BY clause
inspection.message.column.must.be.either.aggregated.or.mentioned.in.group.by.clause=Column {0} must be either aggregated, or mentioned in GROUP BY clause
intention.family.name.replace.with.call=Replace with ''{0}'' call
intention.family.name.replace.with.case.expression=Replace with CASE expression
checkbox.prefer.case.expressions.over.coalesce.function=Prefer CASE expressions over COALESCE function
inspection.message.call.can.be.replaced.with.case.expression={0} call can be replaced with CASE expression
inspection.message.case.can.be.replaced.with.call=CASE can be replaced with ''{0}'' call
checkbox.prefer.case.expressions.over.if.functions=Prefer CASE expressions over IF functions
inspection.message.column.name.specified.more.than.once=Column name ''{0}'' is specified more than once
inspection.message.sqlstate.value.must.be.character.string.literal.may.not.start.with=SQLSTATE value must be a 5-character string literal an may not start with '00'
inspection.message.error.code.may.not.be.zero=Error code may not be zero
inspection.message.undo.handlers.are.not.supported=UNDO handlers are not supported
inspection.message.raise.without.arguments.may.not.be.used.outside.exception.handler=RAISE without arguments may not be used outside exception handler
inspection.message.raise.error.code.already.specified=RAISE error code is already specified
inspection.message.condition.used.in.signal.statement.must.be.associated.with.sqlstate.value=Condition used in SIGNAL statement must be associated with SQLSTATE value
inspection.message.duplicate.condition.information.item=Duplicate condition information item: {0}
inspection.message.resignal.may.not.be.used.outside.condition.handler.context=RESIGNAL may not be used outside condition handler context
inspection.message.required.type.for.non.generated.column=Non-generated columns must have an explicit type
inspection.message.avoid.using.backward.goto.statements=Avoid using backward GOTO statements
inspection.message.avoid.using.goto.statements.to.exit.loop=Avoid using GOTO statements to exit a loop
inspection.message.avoid.use.goto.statements=Avoid use of GOTO statements
inspection.message.identifier.too.long.should.not.exceed.characters=Identifier is too long (should not exceed {0} characters)
inspection.message.recursive.table=Recursive {0} definition
inspection.message.cursor.might.not.have.been.closed=Cursor might not have been closed
inspection.message.cursor.might.not.have.been.open=Cursor might not have been open
intention.family.name.surround.with.set.identity.insert=Surround with SET IDENTITY_INSERT
inspection.message.insertion.into.generated.column.not.supported=Insertion into generated column is not supported
inspection.message.only.default.may.be.inserted.into.generated.column=Only DEFAULT may be inserted into generated column
inspection.message.insertion.into.identity.autoincrement.column.not.supported=Insertion into identity/autoincrement column is not supported
inspection.message.only.default.may.be.inserted.into.identity.autoincrement.column=Only DEFAULT may be inserted into identity/autoincrement column
inspection.message.column.not.null=Column ''{0}'' is not null
inspection.message.name.shadowed=Name shadowed: ''{0}''
inspection.message.name.ambiguous.since.it.can.refer.to.both.table.column.routine.parameter=Name ''{0}'' is ambiguous since it can refer to both a table column and routine parameter
inspection.into.is.not.allowed.in.nested.query=The INTO clause is not allowed in nested queries
inspection.ora.wrong.percent.type=%TYPE must be applied to a variable, column, field or attribute
intention.family.name.introduce.alias=Introduce alias
inspection.message.missing.column.alias=Missing column alias
inspection.message.missing.return.statement=Missing return statement
inspection.message.multiple.limiting.clauses.are.not.allowed=Multiple limiting clauses are not allowed
inspection.message.multiple.offset.clauses.are.not.allowed=Multiple offset clauses are not allowed
inspection.message.named.argument.should.be.used=Named argument should be used
inspection.message.positional.argument.after.named=Positional arguments are not allowed after named ones
intention.family.name.remove.alias=Remove alias
inspection.message.remove.alias=Remove alias
intention.family.name.replace.with.first.argument=Replace with first argument
inspection.message.redundant.code.in.coalesce.call=Redundant code in COALESCE call
inspection.message.redundant.else.null=Redundant ELSE NULL
inspection.message.clause.redundant.here={0} clause is redundant here
inspection.message.ordering.direction.redundant.here=Ordering direction is redundant here
intention.family.name.increase.type.length=Increase type length
inspection.message.string.will.be.truncated=String will be truncated
inspection.message.this.statement.should.not.be.used.in.trigger.since.it.s.executed.in.context.enclosing.transaction=This statement should not be used in a trigger since it's executed in the context of an enclosing transaction
inspection.message.will.always.be.empty={0} will always be empty.
intention.family.name.add.n.prefix=Add N prefix
inspection.message.unicode.strings.should.have.n.prefix=Unicode strings should have N prefix
inspection.message.unreachable.code=Unreachable code
inspection.message.unused.common.table.expression=Unused common table expression
inspection.message.overload.conflicting.signatures=Following functions have conflicting signatures:
inspection.message.unmatched.forward=This forward declaration has no definition
inspection.message.missing.package.body=Package with subprograms or cursors must have a body
inspection.message.missing.type.body=Object types with member subprograms must have a body
intention.family.name.store.table.relation=Store table relation
dialog.title.save.external.data.for=Save external data for {0}
intention.family.name.replace.between.expression.with.comparisons=Replace BETWEEN expression with comparisons
intention.family.name.replace.comparison.with.between.expression=Replace comparison with BETWEEN expression
intention.family.name.replace.equality.checks.with.in.expression=Replace equality checks with IN expression
intention.family.name.replace.in.expression.with.equality.checks=Replace IN expression with equality checks
intention.family.name.replace.on.with.natural.join=Replace ON with NATURAL JOIN
intention.family.name.replace.on.with.using=Replace ON with USING
intention.family.name.replace.using.with.natural.join=Replace USING with NATURAL JOIN
intention.family.name.replace.using.with.on=Replace USING with ON
intention.family.name.replace.natural.join.with.on.clause=Replace NATURAL JOIN with ON clause
intention.family.name.replace.natural.join.with.using.clause=Replace NATURAL JOIN with USING clause
intention.family.name.flip.expression.operands=Flip expression operands
intention.family.add.grouped.column.to.select=Add GROUP BY column to SELECT list
intention.name.add.grouped.column.to.select=Add ''{0}'' column to SELECT list
intention.family.convert.to.subquery=Convert to subquery
flip.0.1.choice.0.may.change.semantics.1=Flip ''{0}''{1, choice, 0# (may change semantics)|1#}
inline.table.alias=Inline table alias
introduce.table.alias=Introduce table alias
intention.family.name.merge.insert.statements=Merge INSERT statements
intention.family.name.remove.column.from.insert=Remove column from INSERT statement
intention.remove.column.from.insert.title=Remove Column from INSERT Statement
intention.remove.column.from.insert.successive.question=Do you want to apply the action to subsequent INSERT statements?
intention.name.merge.selected.insert.statements=Merge selected INSERT statements
intention.name.merge.successive.insert.statements=Merge successive INSERT statements
intention.family.name.replace.column.name.with.ordinal.number=Replace column name with an ordinal number
intention.family.name.replace.column.number.with.name=Replace column number with a name
intention.family.name.replace.distinct.with.group.by=Replace DISTINCT with GROUP BY
intention.family.name.replace.group.by.with.distinct=Replace GROUP BY with DISTINCT
intention.family.name.split.insert.statement=Split INSERT statement
dialog.message.not.supported.for={0} is not supported for {1}
dialog.message.selected.fragment.must.be.valid.expression=Selected fragment must be a valid expression
dialog.message.not.available.in.this.context={0} is not available in this context
dialog.message.no.valid.expressions.were.found=No valid expressions were found
SqlExtractFunctionDialog.label.name=Name:
SqlExtractFunctionDialog.label.type=Type:
extract.routine=Extract Routine
extract.function=Extract Function
introduce.variable=Introduce Variable
sql.action.no.expression=No expression found
parse.error.one.of.expected=One of: {0} expected. But found {1}
filetype.sql.dt.description=SQL Date/Time
sql.dt.parse.unexpected.characters=Unexpected characters
sql.dt.parse.unexpected.end.of.string=Unexpected end of string
sql.dt.parse.expected={0} expected
sql.dt.inspection.unknown.symbol=Unknown symbol: {0}
code.style.predefined.Modern=Modern
code.style.predefined.JoeCelko=Joe Celko
code.style.predefined.Allman=Allman (DDL only)
code.style.predefined.Whitesmiths=Whitesmiths (DDL only)
code.style.predefined.Egypt=Egypt
code.style.predefined.OldIdea=Old Idea
code.style.predefined.MsVsDdl=Visual Studio Database Project
collection.0.might.not.exist=Collection ''{0}'' might not exist
unknown.database.object.0.1=Unknown {0}: {1}
inspection.message.fractional.part.is.rounded.off.unless.its.a.timestamp.literal=Fractional part is rounded off unless it's a timestamp literal
inspection.message.concatenated.date.must.take.form.either.yymmdd.or.yyyymmdd=Concatenated date must take the form of either YYMMDD, or YYYYMMDD
inspection.message.fractions.longer.than.digits.are.rounded.off=Fractions longer than 6 digits are rounded off
inspection.message.field.must.be.between={0} field must be between {1} and {2}
concatenated.time.literal.must.take.the.form.of.hhmmss=Concatenated time literal must take the form of HHMMSS
concatenated.date.literal.must.take.the.form.of.either.yyyymmdd.or.yymmdd=Concatenated date literal must take the form of either YYYYMMDD, or YYMMDD
concatenated.timestamp.literal.must.take.the.form.of.either.yyyymmddhhmmss.or.yymmddhhmmss=Concatenated timestamp literal must take the form of either YYYYMMDDHHMMSS, or YYMMDDHHMMSS
structural.search.template.info.expression=Expression
structural.search.template.info.type=Type
structural.search.template.info.query.clause=Query clause
postfix.template.provider.name=SQL

implement.members.code.block=Code block
implement.members.no.members.to.implement=No members to implement have been found
implement.members.chooser.title=Choose Members
inconsistent.dialects.for.files.0.choice.0.and.parent.data.source.1=Inconsistent dialects for files{0, choice, 0# and parent data source|1#}.
sql.data.source.dialect.configure=Configure
sql.data.source.dialect.set.all.to=Set all to:
button.configure.sql.dialect=Configure SQL Dialect
inspection.message.method.is.deprecated=''{0}'' is deprecated 
inspection.message.replace.deprecated.method.family.name=Replace method call
inspection.message.replace.deprecated.method=Replace method call with {0}
inspection.message.shadowing.alias=Column {0} is shadowed by alias (might happen due to missed comma)

inspection.message.expression.always.null=Expression ''{0}'' is always null
inspection.message.null.reference=Null reference ''{0}''

parameter.info.no.parameters=<no parameters>

progress.title.loading.ddl.data.sources=Loading DDL data sources...
default.schemas.databases=Default schemas/databases:

SqlJoinCardinalityInlayHintsProvider.hint.name.join.cardinality=Join cardinality
SqlJoinCardinalityInlayHintsProvider.hint.settings.main.cognitive.complexity.hints.for=Show cardinality hints for
SqlJoinCardinalityInlayHintsProvider.hint.settings.case.inner.join=INNER JOIN
SqlJoinCardinalityInlayHintsProvider.hint.settings.case.left.join=LEFT JOIN
SqlJoinCardinalityInlayHintsProvider.hint.settings.case.right.join=RIGHT JOIN
SqlJoinCardinalityInlayHintsProvider.hint.settings.case.full.join=FULL JOIN
action.extend.data.source.text=Extend Data Source
notification.title.incomplete.configuration=Incomplete configuration
notification.content.no.ddl.files.specified=No DDL files specified
show.the.numerical.relationship=Show the numerical relationship between rows of one table and rows in the other. Common cardinalities include one-to-one (1\\&lt;-\\&gt;1), one-to-many (1\\&lt;-\\&gt;1..n), many-to-many(1..n\\&lt;-\\&gt;1..n), and optional (0..n). The optional cardinality appears when the reffering field is nullable.
inlay.sql.join.cardinality.hints.inner.join=Show the numerical relationship between rows of one table and rows in the other joined by INNER JOIN.
inlay.sql.join.cardinality.hints.left.join=Show the numerical relationship between rows of one table and rows in the other joined by LEFT JOIN.
inlay.sql.join.cardinality.hints.right.join=Show the numerical relationship between rows of one table and rows in the other joined by RIGHT JOIN.
inlay.sql.join.cardinality.hints.full.join=Show the numerical relationship between rows of one table and rows in the other joined by FULL JOIN.
action.anonymous.scope.text=Anonymous Scope

resolve.mode=File Resolve Mode
resolve.mode.script.name=Script
resolve.mode.playground.name=Playground
resolve.mode.script.description=<html>Sequence of statements<br/>forming a coherent SQL script</html>
resolve.mode.playground.description=<html>Set of unrelated SQL statements</html>

live.templates.sel.description=select all rows from a table
live.templates.selw.description=select specific rows from a table
live.templates.selc.description=select the number of specific rows in a table
live.templates.lim.description=select first N rows from a table
live.templates.top.description=select first N rows from a table
live.templates.first.description=select first N rows from a table
live.templates.toprow.description=select first N rows from a table
live.templates.ins.description=insert rows into a table
live.templates.upd.description=update values in a table
live.templates.del.description=delete rows from a table
live.templates.tab.description=new table definition
live.templates.view.description=new view definition
live.templates.col.description=new column definition
inspection.goto.dropdown.label.report=Report
inspection.goto.dropdown.option.loop=Uses of GOTO statements to exit a loop
inspection.goto.dropdown.option.backward=Backward GOTO statements
inspection.goto.dropdown.option.backward.loop=Backward GOTO and uses of GOTO to exit a loop
inspection.goto.dropdown.option.all=All GOTO statements

inspection.name.whitespace.between.function.name.open.parenthesis=Whitespace between the function name and the open parenthesis
inspection.message.whitespace.between.function.name.open.parenthesis=Whitespace between the function name and the open parenthesis
intention.family.name.remove.whitespace=Remove whitespace

intention.name.enable.option=Enable option "{0}"
