button.text.replace=바꾸기
dependency.scope.compile=컴파일
dependency.scope.provided=제공됨
dependency.scope.runtime=런타임
dependency.scope.test=테스트
dialog.title.replace.library=라이브러리 바꾸기
disposed.library.title=폐기된 라이브러리
empty.library.title=빈 라이브러리
error.message.unknown.classpath.provider=모듈 구성 파일 ''{0}''에 알 수 없는 서식 ''{1}''이(가) 있습니다
filetype.idea.module.description=IDEA 모듈
filetype.idea.module.display.name=IDEA 모듈
filetype.idea.project.description=IDEA 프로젝트
filetype.idea.project.display.name=IDEA 프로젝트
global.library.display.name=전역 {0, choice, 1#라이브러리|2#라이브러리}
libraries.node.text.ide=애플리케이션에 다양한 기능을 추가하는 클래스가 라이브러리에 포함되어 있습니다. 또한 프로젝트 개발에 도움이 되는 소스 파일과 JavaDoc도 포함되어 있습니다.<br><br>IntelliJ IDEA는 라이브러리를 사용하여 코드 완성, 유효성 검사, 오류 강조 표시 등의 기능을 지원합니다.<br><br>전역 라이브러리는 전체 프로젝트에서 참조되고 모든 모듈에서 사용할 수 있습니다. 또한 컴퓨터에서 로컬로 생성한 모든 프로젝트에서 사용할 수 있습니다.<br><br>단, 전역 라이브러리는 프로젝트를 공유하는 모두가 사용할 수 있는 것은 아닙니다. 팀과 프로젝트를 공유하려면 대신 프로젝트 라이브러리를 사용하세요.<br><br>노드를 확장하고 하위 항목을 선택하여 전역 라이브러리를 관리하세요. <br><br>라이브러리를 모듈에 연결하려면 해당 모듈을 선택하고 '종속성' 탭과 '추가'를 차례로 클릭하고 라이브러리 위치를 지정하세요.
libraries.node.text.module=애플리케이션에 다양한 기능을 추가하는 클래스가 라이브러리에 포함되어 있습니다. 또한 프로젝트 개발에 도움이 되는 소스 파일과 JavaDoc도 포함되어 있습니다.<br><br>IntelliJ IDEA는 라이브러리를 사용하여 코드 완성, 유효성 검사, 오류 강조 표시 등의 기능을 지원합니다.<br><br>모듈 라이브러리는 연결된 모듈에서만 참조됩니다. 노드를 확장하고 하위 항목을 선택하여 모듈 라이브러리를 관리하세요.<br><br>라이브러리를 모듈에 연결하려면 해당 모듈을 선택하고 '종속성' 탭과 '추가'를 차례로 클릭하고 라이브러리 위치를 지정하세요.
libraries.node.text.project=애플리케이션에 다양한 기능을 추가하는 클래스가 라이브러리에 포함되어 있습니다. 또한 프로젝트 개발에 도움이 되는 소스 파일과 JavaDoc도 포함되어 있습니다.<br><br>IntelliJ IDEA는 라이브러리를 사용하여 코드 완성, 유효성 검사, 오류 강조 표시 등의 기능을 지원합니다.<br><br>프로젝트 라이브러리는 전체 프로젝트에서 참조되고 모든 모듈에서 사용할 수 있습니다. 또한 프로젝트를 공유하는 모두가 사용할 수 있습니다.<br><br>노드를 확장하고 하위 항목을 선택하여 프로젝트 라이브러리를 관리하세요.<br><br>라이브러리를 모듈에 연결하려면 해당 모듈을 선택하고 '종속성' 탭과 '추가'를 차례로 클릭하고 라이브러리 위치를 지정하세요.
library.configure.global.title=전역 라이브러리 구성
library.configure.module.title=모듈 라이브러리 구성
library.configure.project.title=프로젝트 라이브러리 구성
module.already.exists.error=프로젝트에 모듈 ''{0}''이(가) 이미 있습니다.
module.cannot.load.error=모듈 파일 ''{0}''을(를) 로드할 수 없습니다.\n{1}
module.configuration.problem.text={0, choice, 1#모듈{1}|2#{0}개 모듈}
module.library.display.name=모듈 {0, choice, 1#라이브러리|2#라이브러리}
module.remove.from.project.confirmation=프로젝트에서 모듈 ''{0}''을(를) 제거하시겠어요?
project.library.display.name=프로젝트 {0, choice, 1#라이브러리|2#라이브러리}
project.root.module.source=<모듈 소스>