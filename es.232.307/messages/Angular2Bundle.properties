action.Angular2ExtractComponentAction.text=구성 요소 추출...
action.angularCliAdd.text=Angular 종속성...
action.angularCliGenerate.text=Angular Schematic...
action.angularCliGenerate.title={0} 생성
angular.action.goto-declaration.component=구성 요소 선언(&D)
angular.action.goto-declaration.directive=지시문 선언(&D)
angular.action.goto-related.component-class=구성 요소 클래스
angular.action.goto-related.group-name=Angular 구성 요소
angular.action.goto-related.inline=<인라인화>
angular.action.goto-related.module=모듈 클래스
angular.action.goto-related.styles=스타일{0}
angular.action.goto-related.template=템플릿
angular.action.goto-related.tests=테스트{0}
angular.action.goto-type-declaration.component-template=구성 요소 템플릿(&T)
angular.action.new-project.description=Angular CLI를 사용하면 별도 설정 없이 바로 작동하는 새로운 Angular 애플리케이션을 쉽게 생성할 수 있습니다.
angular.action.new-project.label-additional-parameters=추가 매개변수:
angular.action.new-project.label-content-root-folder=콘텐츠 루트 폴더
angular.action.new-project.label-defaults=디폴트 프로젝트 설정 사용(&D)
angular.action.new-project.label-project-name=프로젝트
angular.action.new-project.name=Angular CLI
angular.action.new-project.presentable-package-name=Angular CLI(&C):
angular.action.new-project.wrong-folder-name={0} 이름 ''{1}''이(가) 잘못되었습니다. {0} 이름은 문자로 시작해야 하며 영숫자 또는 대시만 포함해야 합니다. 대시를 추가할 때 대시 뒤의 세그먼트도 문자로 시작해야 합니다.
angular.action.ng-add.button-close=닫기
angular.action.ng-add.button-install=설치
angular.action.ng-add.cant-add-new-dependency=새 Angular 종속성을 추가할 수 없습니다.
angular.action.ng-add.install-current=현재 설치
angular.action.ng-add.install-latest=최신 설치
angular.action.ng-add.install-other=위에 나열되지 않은 패키지 설치…
angular.action.ng-add.installing-for={1}에 대한 {0} 설치
angular.action.ng-add.not-supported-installed-try-latest=설치된 패키지 버전에서 'ng add'를 지원하지 않는 것 같습니다.\n\n이 버전 대신 최신 패키지 버전을 설치하시겠어요?
angular.action.ng-add.not-supported-specified-try-latest=지정된 패키지 버전에서 'ng add'를 지원하지 않는 것 같습니다.\n\n최신 패키지 버전을 설치하시겠어요?
angular.action.ng-add.pacakge-not-installed=Angular CLI 패키지가 설치되지 않았습니다.
angular.action.ng-add.package-name=패키지 이름
angular.action.ng-add.title='ng add'로 설치
angular.action.ng-generate.cant-generate-code=Angular Schematics에서 코드를 생성할 수 없습니다
angular.action.ng-generate.error-label=\ - 오류: {0}
angular.action.ng-generate.label.parameters=매개변수 {0}
angular.action.ng-generate.params.options=<옵션...>
angular.action.ng-generate.title=Angular Schematics에서 코드 생성
angular.colors.banana-binding=양방향 데이터 바인딩 '[(...)]'
angular.colors.event-binding=이벤트 바인딩 '(event)'
angular.colors.expansion-form=복수 표현식
angular.colors.expansion-form-comma=복수 표현식 내 쉼표
angular.colors.expansion-form-delimiter=복수 표현식 내 중괄호
angular.colors.interpolation-delimiter=보간 내 중괄호
angular.colors.property-binding=프로퍼티 바인딩 '[property]'
angular.colors.ref-var=템플릿 참조 변수 '#var'
angular.colors.template-binding=구조 지시문 '*directive'
angular.colors.template-expression=템플릿 표현식
angular.command.name.auto-import-angular-directives=Angular 지시문을 자동으로 가져오기
angular.configurable.name.angular.template=Angular 템플릿
angular.description.and-separator=및
angular.description.angular-cli=Angular CLI
angular.description.attribute-selector=속성 선택자
angular.description.element-selector=요소 선택자
angular.description.pipe=파이프
angular.description.ref-var=템플릿 참조 변수
angular.description.unknown-class=<알 수 없는 클래스>
angular.description.unnamed=<이름이 지정되지 않음>
angular.entity.component=구성 요소
angular.entity.component.or.directive=구성 요소 또는 지시문
angular.entity.directive=지시문
angular.entity.pipe=파이프
angular.inlay.params.option.pipe.arguments=파이프 인수
angular.inspection.ambiguous-component-tag.message.embedded=포함된 템플릿의 구성 요소: {0}
angular.inspection.ambiguous-component-tag.message.many-components=이 요소에서 2개 이상의 구성 요소가 일치합니다. {0}
angular.inspection.ambiguous-component-tag.name=모호한 구성 요소 태그
angular.inspection.animation-trigger-assignment.message=애니메이션 트리거 대입이 잘못되었습니다.
angular.inspection.animation-trigger-assignment.name=잘못된 애니메이션 트리거 대입
angular.inspection.aot-inaccessible-member.message.member=AOT 컴파일러를 사용할 때 구성 요소 템플릿에서 {0} {1} {2}을(를) 해결할 수 없습니다
angular.inspection.aot-inaccessible-member.message.template-symbol=AOT 컴파일러를 사용할 때 {0} {1} {2}을(를) 해결할 수 없습니다.
angular.inspection.aot-inaccessible-member.name=AOT 모드에서 액세스 불가능한 구성 요소 멤버
angular.inspection.cyclic-module-dependency.message.cycle=모듈 사이의 순환 종속성: {0}
angular.inspection.cyclic-module-dependency.message.self-export=모듈 {0}이(가) 자신을 내보냅니다.
angular.inspection.cyclic-module-dependency.message.self-import=모듈 {0}이(가) 자신을 가져옵니다.
angular.inspection.cyclic-module-dependency.message.separator=->
angular.inspection.cyclic-module-dependency.name=Angular 모듈의 재귀적 가져오기 또는 내보내기
angular.inspection.group.name=Angular
angular.inspection.i18n.message.empty=i18n- 속성에는 번역할 속성 이름이 포함되어야 합니다.
angular.inspection.i18n.message.not-matching=번역된 속성 {0}이(가) 없습니다.
angular.inspection.i18n.name=잘못된 i18n 속성
angular.inspection.insecure-binding-to-event.message.attribute=이벤트 속성 {0}에 바인드하는 것은 보안으로 인해 허용되지 않습니다.
angular.inspection.insecure-binding-to-event.message.property=이벤트 프로퍼티 {0}에 바인드하는 것은 보안 이유로 허용되지 않습니다.
angular.inspection.insecure-binding-to-event.name=안전하지 않은 이벤트로의 바인드
angular.inspection.install-with-ng-add.message={0}은(는) ''ng add'' 명령어를 사용해 설치할 수 있습니다.
angular.inspection.install-with-ng-add.name=Angular CLI 종속 요소 추가
angular.inspection.invalid-declaration-in-module.message.declared-in-many={0}이(가) 여러 개의 Angular 모듈에서 선언되었습니다. {1}
angular.inspection.invalid-declaration-in-module.message.not-declared={0}이(가) 어느 Angular 모듈에서도 선언되어 않았습니다.
angular.inspection.invalid-declaration-in-module.name=모듈 내 구성 요소, 지시문 또는 파이프 선언이 누락되었거나 잘못되었습니다.
angular.inspection.invalid-directive-selector.message.missing=지시문이 필수 'selector' 프로퍼티에서 누락되었습니다.
angular.inspection.invalid-directive-selector.name=누락되었거나 잘못된 선택자
angular.inspection.invalid-entry-component.message.not-array-of-class-types=표현식이 클래스 타입의 배열을 해결하지 않습니다.
angular.inspection.invalid-entry-component.message.not-component=클래스 {0}은(는) Angular 구성 요소가 아닙니다.
angular.inspection.invalid-entry-component.name=잘못된 입력 구성 요소
angular.inspection.invalid-template-definition.message.duplicated='template' 및 'templateUrl'은 함께 사용할 수 없습니다.
angular.inspection.invalid-template-definition.message.missing={0}은(는) 템플릿을 가질 수 없습니다.
angular.inspection.invalid-template-definition.name=잘못된 구성 요소 템플릿 정의
angular.inspection.invalid-template-ref-var.message.ambiguous-name=''exportAs''가 {0}(으)로 설정된 지시문이 여러 개 있습니다. {1}
angular.inspection.invalid-template-ref-var.message.unbound=''exportAs''가 {0}(으)로 설정된 지시문이 없습니다.
angular.inspection.invalid-template-ref-var.name=바운드되지 않거나 모호한 템플릿 참조 변수
angular.inspection.missing-event-handler.message=이벤트 바인딩에 이벤트 처리 구문이 없습니다.
angular.inspection.missing-event-handler.name=이벤트 핸들러 누락
angular.inspection.missing-required-directive-input-binding.message=지시문 {1}의 필수 입력인 {0}의 바인딩이 누락되었습니다
angular.inspection.missing-required-directive-input-binding.message.component=구성 요소 {1}의 필수 입력인 {0}의 바인딩이 누락되었습니다
angular.inspection.missing-required-directive-input.name=필수 지시문 입력 누락
angular.inspection.multiple-structural-directives.message=하나의 구조 지시문만 적용할 수 없습니다.
angular.inspection.multiple-structural-directives.name=하나의 요소에 대한 여러 개의 구조 지시문
angular.inspection.ng-content-with-content.message=<ng-content> 요소는 내용을 가질 수 없습니다.
angular.inspection.ng-content-with-content.name=<ng-content> 태그 내 내용
angular.inspection.ng-optimized-image.message.both.fill.attributes.not.allowed=''ngSrc'' 지시문에서 ''fill'' 및 ''{0}'' 속성을 동시에 사용하는 것은 허용되지 않습니다
angular.inspection.ng-optimized-image.message.both.fill.width.or.height.attributes.not.allowed='ngSrc' 지시문에서 'fill'과 'width' 또는 'height' 속성을 동시에 사용하는 것은 허용되지 않습니다
angular.inspection.ng-optimized-image.message.both.width.height.attributes.required='ngSrc' 지시문에는 'width' 및 'height' 속성 모두가 필요합니다
angular.inspection.ng-optimized-image.message.ngsrc.requires.width.height.attributes='ngSrc'에는 'width' 및 'height' 속성이 필요합니다
angular.inspection.ng-optimized-image.message.ngsrc.requires.width.height.or.fill.attributes='ngSrc'에는 'width'와 'height' 또는 'fill' 속성이 필요합니다
angular.inspection.ng-optimized-image.message.use-ngsrc=성능을 개선하려면 'ngSrc'(NgOptimizedImage 지시문)를 사용합니다
angular.inspection.ng-optimized-image.name=img 태그 내 ngSrc 사용과 관련된 문제
angular.inspection.undefined-binding.message.attribute-directive-out-of-scope={0} 속성을 제공하는 지시문이 현재 템플릿의 범위 밖에 있습니다
angular.inspection.undefined-binding.message.banana-box-binding-not-provided=적용 가능한 지시문에서 제공되지 않으므로 [({0})]에 바인드할 수 없습니다.
angular.inspection.undefined-binding.message.embedded.event-not-emitted=이벤트 {0}은(는) 포함된 템플릿의 적용 가능한 지시문에서 생략되어 있지 않습니다.
angular.inspection.undefined-binding.message.embedded.no-directive-matched=속성 {0}에서 일치하는 지시문이 없습니다.
angular.inspection.undefined-binding.message.embedded.property-not-provided=프로퍼티 {0}은(는) 포함된 템플릿의 적용 가능한 지시문에서 제공되지 않습니다.
angular.inspection.undefined-binding.message.event-not-emitted=이벤트 {0}은(는) 적용 가능한 지시문이나 {1} 요소에서 생략되어 있지 않습니다.
angular.inspection.undefined-binding.message.property-not-provided=프로퍼티 {0}은(는) 적용 가능한 지시문이나 {1} 요소에서 제공되지 않습니다.
angular.inspection.undefined-binding.message.unknown-attribute=속성 {0}은(는) 여기에서 허용되지 않습니다.
angular.inspection.undefined-binding.name=정의되지 않은 바인딩
angular.inspection.undefined-export.message={0}은(는) {1}에서 선언되거나 가져와져 있지 않기 때문에 거기에서 내보낼 수 없습니다.
angular.inspection.undefined-export.name=Angular 모듈에서 정의되지 않은 내보내기
angular.inspection.undefined-tag.message.out-of-scope={0} 요소와 일치하는 구성 요소나 지시문이 현재 템플릿의 범위 밖에 있습니다
angular.inspection.undefined-tag.name=정의되지 않은 태그
angular.inspection.unresolved-pipe.message=해결되지 않은 파이프 {0}
angular.inspection.wrong-entity-type.message.not-declarable=클래스 {0}은(는) Angular 구성 요소, 지시문 또는 파이프가 아닙니다.
angular.inspection.wrong-entity-type.message.not-entity=클래스 {0}은(는) Angular 모듈, 구성 요소, 지시문 또는 파이프가 아닙니다.
angular.inspection.wrong-entity-type.message.not-importable={0} 클래스를 가져올 수 없습니다(Angular 모듈이나 독립실행형 declarable이 아닙니다)
angular.inspection.wrong-entity-type.message.standalone-declarable={0} 클래스는 독립실행형이며 Angular 모듈에서 선언될 수 없습니다. 대신 이 클래스를 가져오시겠어요?
angular.inspection.wrong-entity-type.name=가져오거나 선언된 잘못된 심볼
angular.notify.cli.required-package-not-installed=필수 패키지 '@angular/cli'가 설치되지 않았습니다.
angular.parse.expression.assignment-in-binding=바인딩 표현식은 대입을 포함할 수 없습니다.
angular.parse.expression.chained-expression-in-binding=바인딩 표현식은 체인 표현식을 포함할 수 없습니다.
angular.parse.expression.expected-identifier-keyword-or-string=식별자, 키워드 또는 문자열 필요
angular.parse.expression.expected-identifier-or-keyword=식별자 또는 키워드 필요
angular.parse.expression.pipe-in-action=액션 표현식은 파이프를 포함할 수 없습니다.
angular.parse.expression.pipe-in-host-binding=호스트 바인딩 표현식은 파이프를 포함할 수 없습니다.
angular.parse.expression.unexpected-token=예기치 않은 토큰 ''{0}''
angular.parse.selector.multiple-not=:not 내 여러 개의 선택자는 지원되지 않습니다.
angular.parse.selector.nested-not=중첩된 :not은 선택자에서 허용되지 않습니다.
angular.parse.template.animation-trigger-missing-phase-value=애니메이션 트리거 출력 이벤트(@{0})에서 해당 단계 값 이름(현재 ''start'' 또는 ''done'' 지원)이 누락되었습니다.
angular.parse.template.animation-trigger-wrong-output-phase=''@{1}''에 대해 제공된 애니메이션 출력 단계 값 ''{0}''은(는) 지원되지 않습니다(''start'' 또는 ''done'' 사용).
angular.parse.template.invalid-icu-message-expected-comma=잘못된 ICU 메시지. ',' 가 필요합니다.
angular.parse.template.invalid-icu-message-expected-left-brace=ICU 메시지가 잘못되었습니다. '{'가 누락되었습니다.
angular.parse.template.invalid-icu-message-missing-case-value=ICU 메시지가 잘못되었습니다. case 값이 누락되었습니다.
angular.parse.template.invalid-icu-message-missing-right-brace=ICU 메시지가 잘못되었습니다. '}'가 누락되었습니다.
angular.parse.template.let-dash-not-allowed-in-name='-'은 변수 이름에서 허용되지 않습니다.
angular.parse.template.let-only-on-ng-template='let-'은 <ng-template> 요소에서만 지원됩니다
angular.parse.template.ref-var-dash-not-allowed-in-name='-'은 참조 이름에서 허용되지 않습니다.
angular.parse.template.unterminated-expansion-form=종료되지 않은 확장 양식
angular.parse.template.unterminated-expansion-form-critical=확장 양식이 종료되지 않았습니다. '{'를 이스케이프하지 않은 경우 '{{ "{" }}'를 사용해 이스케이프하세요.
angular.parse.template.unterminated-interpolation=종료되지 않은 보간
angular.progress.title.auto-importing-angular-directives-on-paste=붙여넣기 시 Angular 지시문을 자동으로 가져오는 중...
angular.quickfix.decorator.add-property.family=프로퍼티 추가
angular.quickfix.decorator.add-property.name=''{0}'' 프로퍼티 추가
angular.quickfix.decorator.remove-property.family=프로퍼티 제거
angular.quickfix.decorator.remove-property.name=''{0}'' 프로퍼티 제거
angular.quickfix.json.ng-add.error.cant-run='ng add'를 실행할 수 없습니다.
angular.quickfix.json.ng-add.family='ng add' 실행
angular.quickfix.json.ng-add.name.reinstall=''ng add {0}''(으)로 재설치
angular.quickfix.json.ng-add.name.run=''ng add {0}'' 실행
angular.quickfix.ngmodule.declare.family=모듈에 선언 추가
angular.quickfix.ngmodule.declare.name={1} 내 {0} 선언
angular.quickfix.ngmodule.declare.name.choice=Angular 모듈에서 {0}(으)로 선언...
angular.quickfix.ngmodule.declare.select.declarable=선언할 {0}
angular.quickfix.ngmodule.declare.select.module=Angular 모듈에서 {0} 선언
angular.quickfix.ngmodule.export.family=모듈에서 엔티티 내보내기
angular.quickfix.ngmodule.export.name={0} 내보내기
angular.quickfix.ngmodule.export.select.declarable=내보낼 {0}
angular.quickfix.ngmodule.import.family=Angular 모듈 가져오기
angular.quickfix.ngmodule.import.name={0} 가져오기
angular.quickfix.ngmodule.import.name.choice=Angular 엔티티 가져오기...
angular.quickfix.ngmodule.import.select.module=가져올 Angular 엔티티
angular.quickfix.template.add-attribute-value.family=속성 값 추가
angular.quickfix.template.add-attribute-value.name=속성 값 추가
angular.quickfix.template.bind-to-event.family=이벤트에 바인드
angular.quickfix.template.bind-to-event.name=이벤트에 바인드({0})
angular.quickfix.template.bind-to-property.family=프로퍼티에 바인드
angular.quickfix.template.bind-to-property.name=프로퍼티 [{0}]에 바인드
angular.quickfix.template.covert-to-ng-src.family=ngSrc를 사용하도록 변환
angular.quickfix.template.create-attribute.family=속성 생성
angular.quickfix.template.create-attribute.name=''{0}'' 속성 생성
angular.quickfix.template.create-height-width-attributes.name='width' 및 'height' 속성 생성
angular.quickfix.template.remove-attribute-value.family=속성 값 제거
angular.quickfix.template.remove-attribute-value.name=속성 값 제거
angular.quickfix.template.remove-tag-content.family=태그 내용 제거
angular.quickfix.template.remove-tag-content.name=내용 제거
angular.quickfix.template.rename-attribute.family=속성 이름 변경
angular.quickfix.template.rename-attribute.name=속성 이름을 ''{0}''(으)로 변경
angular.refactor.extractComponent.after-generator-error=파일을 수정하는 동안 오류가 발생하였습니다
angular.refactor.extractComponent.animations=애니메이션이 지원되지 않습니다
angular.refactor.extractComponent.cli-error=Angular CLI를 사용하여 구성 요소를 생성할 수 없습니다
angular.refactor.extractComponent.dialog=구성 요소 추출
angular.refactor.extractComponent.dialog.name=이름:
angular.refactor.extractComponent.task=구성 요소 추출
angular.refactor.extractComponent.unexpected-cli-output=Angular CLI의 예기치 않은 결과
angular.refactor.extractComponent.unsupported-i18n=I18n 구문은 지원되지 않습니다
angular.refactor.extractComponent.unsupported-multiple-carets=하나의 캐럿을 사용하세요
angular.refactor.extractComponent.unsupported-ng-content=ng-content 요소는 지원되지 않습니다
angular.refactor.extractComponent.unsupported-selection=전체 요소를 선택하세요
angular.search-scope.template=템플릿
angular.suppress.for-expression=표현식 억제
description.angularCliAdd.description=새 종속성을 추가하고 관련 'ng-add' schematics를 실행합니다.
description.angularCliGenerate.description=Angular Schematics에서 새 코드를 생성합니다.
filetype.angular-metadata-json.description=Angular 메타데이터 JSON
filetype.angular-metadata-json.display.name=Angular 메타데이터 JSON
livetemplate.description.angular2.a-class=Angular [class] 바인딩
livetemplate.description.angular2.a-component=Angular 구성 요소
livetemplate.description.angular2.a-component-inline=인라인 템플릿을 사용하는 Angular 구성 요소
livetemplate.description.angular2.a-component-root=Angular 앱 루트 구성 요소
livetemplate.description.angular2.a-ctor-skip-self=Angular 모듈 SkipSelf 생성자
livetemplate.description.angular2.a-directive=Angular 지시문
livetemplate.description.angular2.a-formControlName=Angular formControlName
livetemplate.description.angular2.a-formGroup=Angular formGroup
livetemplate.description.angular2.a-formGroupName=Angular formGroupName
livetemplate.description.angular2.a-guard-can-activate=Angular CanActivate 가드
livetemplate.description.angular2.a-guard-can-activate-child=Angular CanActivateChild 가드
livetemplate.description.angular2.a-guard-can-deactivate=Angular CanDeactivate 가드
livetemplate.description.angular2.a-guard-can-load=Angular CanLoad 가드
livetemplate.description.angular2.a-http-interceptor=HttpClient에 대한 빈 Empty Angular HttpInterceptor
livetemplate.description.angular2.a-http-interceptor-headers=헤더 HttpClient의 Angular HttpInterceptor
livetemplate.description.angular2.a-http-interceptor-logging=로깅 HttpClient의 Angular HttpInterceptor
livetemplate.description.angular2.a-httpclient-get=Angular HttpClient.get
livetemplate.description.angular2.a-injectable-providedin=Angular Injectable ProvidedIn
livetemplate.description.angular2.a-module=Angular 모듈
livetemplate.description.angular2.a-module-root=Angular 루트 모듈
livetemplate.description.angular2.a-module-with-routing=라우팅이 하나의 파일에 결합된 Angular 모듈
livetemplate.description.angular2.a-ngClass=Angular ngClass
livetemplate.description.angular2.a-ngFor=Angular *ngFor
livetemplate.description.angular2.a-ngFor-trackBy=trackBy를 사용하는 Angular *ngFor
livetemplate.description.angular2.a-ngForAsync=Angular *ngForAsync
livetemplate.description.angular2.a-ngIf=Angular *ngIf
livetemplate.description.angular2.a-ngIfElse=Angular *ngIfElse
livetemplate.description.angular2.a-ngModel=Angular ngModel
livetemplate.description.angular2.a-ngStyle=Angular ngStyle
livetemplate.description.angular2.a-ngSwitch=Angular ngSwitch
livetemplate.description.angular2.a-ngrx-data-entity-collection-data-service=NgRx Data Entity Collection Data Service
livetemplate.description.angular2.a-ngrx-data-entity-metadata=NgRx Data Entity Metadata
livetemplate.description.angular2.a-ngrx-data-store-module=NgRx Data Store Module
livetemplate.description.angular2.a-output-event=Angular @Output 이벤트 및 이미터
livetemplate.description.angular2.a-pipe=Angular 파이프
livetemplate.description.angular2.a-prej=Angular 사전 디버그 | json
livetemplate.description.angular2.a-preja=Angular 사전 디버그 | 비동기 | json
livetemplate.description.angular2.a-preload-strategy=Angular 사용자 지정 사전 로드 전략
livetemplate.description.angular2.a-route-params-subscribe=Angular - 라우팅 매개변수 구독
livetemplate.description.angular2.a-route-path-404=Angular 404 루트 경로
livetemplate.description.angular2.a-route-path-default=Angular 기본 루트 경로
livetemplate.description.angular2.a-route-path-eager=Angular eager 루트 경로
livetemplate.description.angular2.a-route-path-lazy=Angular lazy 루트 경로
livetemplate.description.angular2.a-route-path-with-children=하위 항목이 있는 Angular 루트 경로
livetemplate.description.angular2.a-router-events=Angular 라우터 이벤트
livetemplate.description.angular2.a-routerLink=Angular routerLink
livetemplate.description.angular2.a-routerLink-param=루트 매개변수를 사용하는 Angular routerLink
livetemplate.description.angular2.a-rxjs-import=RxJs 가져오기
livetemplate.description.angular2.a-rxjs-operator-import=RxJs 가져오기
livetemplate.description.angular2.a-select=ngModel을 사용하는 <select> 컨트롤
livetemplate.description.angular2.a-service=Angular 서비스
livetemplate.description.angular2.a-service-httpclient=HttpClient를 사용하는 Angular 서비스
livetemplate.description.angular2.a-style=Angular [style] 바인딩
livetemplate.description.angular2.a-subscribe=Angular 식별 가능 구독