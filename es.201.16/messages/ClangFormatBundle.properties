# settings dialog
cf.config.title=ClangFormat
cf.config.enable=Habilitar ClangFormat (solo C/C++/Objective-C)
cf.config.override.standard=ClangFormat anula la configuración de estilo del código IDE.
cf.title.actual.clang.format=Opción ClangFormat para {0}

# sangría de widget
cf.hint.text.overridden=ClangFormat
cf.action.group.title=ClangFormat
cf.action.disable=Desactivar ClangFormat
cf.action.enable=Habilitar ClangFormat
cf.action.open.file=Edite ''.clang-format'' para {0}
cf.action.open.full.set=Ver las opciones de ClangFormat para {0}
cf.action.create.file=Crear '.clang-format' a partir del estilo de código

# sangría de información sobre herramientas de widgets
cf.advertisement.text.overridden=El estilo de código actual está definido por ClangFormat.
cf.advertisement.text.has.clang-format=Habilite ClangFormat y anule el estilo del código a 'clang-format'.
# esquema json
cf.schema.name=Esquema ClangFormat

# create `.clang-format` file Yes/No
cf.create.cf.file.title=Crea un archivo con formato .clang
cf.create.cf.file.message=¿Crear un nuevo archivo de formato .clang para su proyecto a partir del estilo de código activo?
