#
#  Copyright 2000-2007 JetBrains s.r.o.
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

########################################################################################################################
# Groovy script template
########################################################################################################################
action.groovy.scripting.shell.text=Shell de secuencias de comandos IDE Groovy
action.Mvc.RunTarget.text=Ejecutar comando
action.Mvc.RunTarget.description=Ejecutar comando arbitrario Grails/Griffon
action.Mvc.Upgrade.text=Cambiar la versión del SDK
action.Mvc.Upgrade.description=Cambiar la versión del SDK de Grails/Griffon
group.Mvc.Actions.text=Grails/Griffon
action.Groovy.Shell.text=Groovy Shell…
action.Groovy.Shell.description=Lanzar el shell Groovy
action.Groovy.Doc.Generating.text=GroovyDoc \uc0dd\uc131...
action.Groovy.Doc.Generating.description=Groovy \ubb38\uc11c \uc0dd\uc131
action.org.jetbrains.plugins.groovy.actions.generate.missing.GroovyGeneratePropertyMissingAction.text=propertyMissing()
action.org.jetbrains.plugins.groovy.actions.generate.missing.GroovyGeneratePropertyMissingAction.description=La acción genera propertyMissing()
action.org.jetbrains.plugins.groovy.actions.generate.missing.GroovyGenerateMethodMissingAction.text=methodMissing()
action.org.jetbrains.plugins.groovy.actions.generate.missing.GroovyGenerateMethodMissingAction.description=La acción genera propertyMissing()
action.org.jetbrains.plugins.groovy.actions.generate.equals.GroovyGenerateEqualsAction.text=equals() y hashCode()
action.org.jetbrains.plugins.groovy.actions.generate.equals.GroovyGenerateEqualsAction.description=La acción genera equals y hashCode ahora
action.org.jetbrains.plugins.groovy.actions.generate.accessors.GroovyGenerateGetterSetterAction.text=Getter y Setter
action.org.jetbrains.plugins.groovy.actions.generate.accessors.GroovyGenerateGetterSetterAction.description=Genera getter
action.org.jetbrains.plugins.groovy.actions.generate.accessors.GroovyGenerateSetterAction.text=Setter
action.org.jetbrains.plugins.groovy.actions.generate.accessors.GroovyGenerateSetterAction.description=Genera setter
action.org.jetbrains.plugins.groovy.actions.generate.accessors.GroovyGenerateGetterAction.text=Getter
action.org.jetbrains.plugins.groovy.actions.generate.accessors.GroovyGenerateGetterAction.description=Genera getter
action.org.jetbrains.plugins.groovy.actions.generate.constructors.GroovyGenerateConstructorAction.text=Constructor
action.org.jetbrains.plugins.groovy.actions.generate.constructors.GroovyGenerateConstructorAction.description=Genera constructor
action.org.jetbrains.plugins.groovy.actions.generate.tostring.GroovyGenerateToStringAction.text=to_String()
action.org.jetbrains.plugins.groovy.actions.generate.tostring.GroovyGenerateToStringAction.description=Generar método toString()
action.ExcludeFromStubGeneration.text=Excluir de la generación de stub
action.ExcludeFromStubGeneration.description=No genere stubs de Java para este archivo Groovy en la compilación
action.DumpGroovyControlFlowAction.text=Volcar Flujo de control Groovy
action.ConvertToCompileStatic.text=Convertir a @CompileStatic
action.ConvertToCompileStatic.description=Convertir archivos Groovy a @CompileStatic
action.ConvertGroovyToJava.text=Convertir a Java
action.ConvertGroovyToJava.description=Convertir archivos Groovy a Java
action.Groovy.NewScript.text=Script maravilloso
action.Groovy.NewScript.description=Crear nuevo script Groovy
action.Groovy.NewClass.text=Clase Groovy
action.Groovy.NewClass.description=Crear nueva clase Groovy
action.Groovy.CheckResources.Rebuild.text=_Rebuild Resources
action.Groovy.CheckResources.Rebuild.description=Ejecute el compilador para todos los archivos Groovy en las raíces de recursos para comprobar si hay problemas de compilación
action.Groovy.CheckResources.Make.text=_Build Resources
action.Groovy.CheckResources.Make.description=Ejecute el compilador incremental para archivos Groovy en las raíces de recursos para comprobar si hay problemas de compilación
group.Groovy.CheckResources.text=Gr_oovy Recursos
group.Groovy.CheckResources.description=Ejecute el compilador de archivos Groovy en las raíces de recursos para comprobar si hay problemas de compilación
action.Groovy.Shell.Execute.text=Ejecutar código Groovy
action.Groovy.Shell.Execute.description=Ejecutar código Groovy en la consola

file.template.group.title.groovy=Groovy

groovy.term.class=clase
groovy.term.interface=interfaz
groovy.term.trait=rasgo
groovy.term.enum=enumeración
groovy.term.annotation=anotación
groovy.term.method=método
groovy.term.field=campo
groovy.term.property=propiedad
groovy.term.parameter=parámetro
groovy.term.variable=variable local
groovy.term.binding=variable de enlace de script
groovy.term.label=etiqueta
groovy.term.closure=cierre
groovy.term.expression=expresión

newclass.dlg.title=Nueva clase Groovy
newclass.menu.action.text=Clase Groovy
newclass.menu.action.description=Crea una nueva clase Groovy
newscript.dlg.prompt=Ingrese el nombre para el nuevo script Groovy
newscript.menu.action.text=Guión maravilloso
newscript.menu.action.description=Crea una nueva secuencia de comandos Groovy
##########################################################################################################################
# GDK &compilation
########################################################################################################################

cannot.compile=No se puede compilar
debug.option=Habilitar y depurar el seguimiento de la pila
groovy.debug.disable.specific.methods=No entre en clases específicas de Groovy
groovy.debug.caption=Groovy

########################################################################################################################
# Parser error messages
########################################################################################################################
identifier.expected=Identificador esperado
identifier.or.block.expected=Identificador o bloque de código esperado
string.end.expected=Se espera el final de la cadena
try.without.catch.finally='intentar' sin 'atrapar' o 'finalmente'
expression.expected=Expresión esperada
duplicate.modifier=Modificador duplicado ''{0}''

########################################################################################################################
# Intentions &error messages
########################################################################################################################
cannot.resolve=No se puede resolver el símbolo ''{0}''
cannot.access=El acceso a ''{0}'' excede sus derechos de acceso
cannot.reference.static=No se puede hacer referencia al símbolo estático ''{0}'', se necesita un calificador de clase
cannot.reference.non.static=No se puede hacer referencia al símbolo no estático ''{0}'' desde el contexto estático
cannot.return.from.constructor=No se puede devolver un objeto del constructor
cannot.return.from.void.method=No se puede devolver un objeto de un método que devuelve 'void'
cannot.return.type=No se puede devolver ''{0}'' del método que devuelve ''{1}''
cannot.apply.method.or.closure=''{0}'' no se puede aplicar a ''{1}''
cannot.apply.method1=''{0}'' in ''{1}'' no se puede aplicar a ''{2}''
cannot.apply.constructor=El constructor ''{0}'' en ''{1}'' no se puede aplicar a ''{2}''
cannot.apply.default.constructor=No se puede aplicar el constructor predeterminado para la clase ''{0}''
cannot.instantiate.abstract.class=No se puede crear una instancia de la clase abstracta ''{0}''
cannot.instantiate.interface=No se puede crear una instancia de la interfaz ''{0}''
missing.required.named.parameter=Falta el parámetro con nombre obligatorio ''{0}''
loss.of.precision=Posible pérdida de precisión de ''{0}'' a ''{1}''
cannot.assign=No se puede asignar ''{0}'' a ''{1}''
cannot.cast=No se puede transmitir ''{0}'' a ''{1}''
multiple.assignments.without.list.expr=Múltiples asignaciones sin expresiones de lista en el lado derecho no son compatibles en el modo de verificación de tipo estático
spread.operator.is.not.available=El operador de propagación no se puede usar como argumento con verificación de tipo estático
replace.with.list.literal=Reemplazar con lista literal
replace.with.get.at=Reemplazar con acceso de índice
incorrect.number.of.values ??= Número incorrecto de valores. Esperado: {0} Era: {1}
invalid.lvalue=Valor no válido para asignar
duplicate.class=Class ''{0}'' ya existe en ''{1}''
duplicate.inner.class=Clase duplicada: ''{0}''
script.generated.with.same.name=Hay una clase sintética ''{0}'' generada para el código del script
variable.already.defined=Variable ''{0}'' ya definida
field.already.defined=Campo ''{0}'' ya definido
import.what=Importar ''{0}''
import.class=Importar clase
create.class.family.name=Crear clase
create.class.text=Crear clase {0}
create.interface.text=Crear interfaz {0}
create.annotation.text=Crear anotación {0}
static.declaration.in.inner.class=Las clases internas no pueden tener declaraciones estáticas
constructors.are.not.allowed.in.anonymous.class=Los constructores no están permitidos en la clase anónima
no.such.property=La propiedad ''{0}'' no existe
change.modifier=Hacer ''{0}'' {1}
change.modifier.not=Hacer ''{0}'' no {1}
change.modifier.family.name=Cambiar modificadores
parameter.cast.fix=Transmitir el parámetro {0, número, ordinal} a {1}
action.convert.lambda.to.closure=Convertir lambda en cierre
add.parenthesis.to.lambda.parameter.list=Agregar paréntesis a la lista de parámetros
# suprimir la inspección "UnusedProperty"
packageLocal.visibility.presentation=predeterminado visible
# suprimir la inspección "UnusedProperty"
protected.visibility.presentation=protected
# suprimir la inspección "UnusedProperty"
private.visibility.presentation=privado
# suprimir la inspección "UnusedProperty"
public.visibility.presentation=public
# suprimir la inspección "UnusedProperty"
abstract.visibility.presentation=resumen
# suprimir la inspección "UnusedProperty"
static.visibility.presentation=static
# suprimir la inspección "UnusedProperty"
final.visibility.presentation=final
# suprimir la inspección "UnusedProperty"
native.visibility.presentation=native
# suprimir la inspección "UnusedProperty"
synchronized.visibility.presentation=sincronizado
# suprimir la inspección "UnusedProperty"
estrictafp.visibilidad.presentación=estrictafp
# suprimir la inspección "UnusedProperty"
transient.visibility.presentation=transient
# suprimir la inspección "UnusedProperty"
volatile.visibility.presentation=volatile
# suprimir la inspección "UnusedProperty"
def.visibility.presentation=def



# {0} - colspan, {1} - method name, {2} - class name, {3} - formal myParameters row, {4} - arguments row
########################################################################################################################
# Compiler
########################################################################################################################
class.already.exists=La clase ''{0}'' ya existe

illegal.combination.of.modifiers=Combinación ilegal de modificadores
illegal.combination.of.modifiers.abstract.and.final=Combinación ilegal de modificadores 'abstracto' y 'final'
modifier.volatile.not.allowed.here=Modificador 'volátil' no permitido aquí
modifier.transient.not.allowed.here=Modificador 'transitorio' no permitido aquí
modifier.0.not.allowed=Modificador ''{0}'' no permitido aquí
interface.cannot.have.modifier.final=La interfaz no puede tener el modificador 'final'
script.method.cannot.have.modifier.abstract=El método de script no puede tener el modificador 'abstracto'
script.cannot.have.modifier.native=El script no puede tener el modificador 'nativo'
interface.must.have.no.static.method=La interfaz no debe tener un método estático
only.abstract.class.can.have.abstract.method=Solo la clase abstracta puede tener un método abstracto
anonymous.class.cannot.have.abstract.method=La clase anónima no puede tener un método abstracto
illegal.combination.of.modifiers.volatile.and.final=Combinación ilegal de modificadores 'volátil' y 'final'
variable.cannot.be=La variable no puede tener el modificador ''{0}''
remove.modifier=Eliminar ''{0}''
not.abstract.method.should.have.body=El método no abstracto debe tener cuerpo
cannot.create.class.error.text=No se puede crear la clase ''{0}'': {1}
cannot.create.class.error.title=No se puede crear una clase
no.class.in.file.template=No se encontró ninguna clase en la plantilla de archivo
error.external=Error externo
Inner.methods.are.not.supported=Los métodos internos no son compatibles
final.class.cannot.be.extended=La clase final no se puede extender

# Groovy 1.7 cheques
unsupported.inner.class.0=Las clases internas no son compatibles con Groovy {0}
unsupported.anonymous.class.0=Las clases anónimas no son compatibles con Groovy {0}

# Groovy 1.8 cheques
unsupported.diamonds.0=Los diamantes no son compatibles con Groovy {0}
unsupported.command.syntax.0=La sintaxis de la expresión de comando no es compatible con Groovy {0}
unsupported.dollar.slashy.string.0=Las cadenas de barras inclinadas en dólares no son compatibles con Groovy {0}
unsupported.multiline.slashy.string.0=Las cadenas de barras inclinadas de varias líneas no son compatibles con Groovy {0}

#Groovy 2.3 controles
unsupported.traits.0=Los rasgos no son compatibles con Groovy {0}

#Groovy 2.5 cheques
duplicating.named.parameter=El parámetro con nombre duplicado ''{0}'' ocurre en los parámetros: {1}
field.should.be.immutable=El campo ''{0}'' debe tener un tipo inmutable o declararse así con @ImmutableOptions
immutable.options.property.not.exist=La propiedad ''{0}'' no existe

#Groovy 3.0 controles
illegal.default.modifier=El modificador 'predeterminado' solo tiene sentido en los métodos de la interfaz
illegal.default.modifier.fix=Eliminar modificador 'predeterminado'
default.modifier.in.old.versions=El modificador 'predeterminado' está disponible con Groovy 3.0 o posterior
unsupported.do.while.statement='hacer mientras' no es compatible con la versión actual
unsupported.tuple.declaration.in.for=La declaración de tupla en la inicialización 'for' no es compatible con la versión actual
unsupported.multiple.variables.in.for=Varias variables en la inicialización 'for' no son compatibles con la versión actual
unsupported.expression.list.in.for.update=Varias expresiones en la actualización 'for' no son compatibles con la versión actual
unsupported.resource.list='probar' con recursos no es compatible con la versión actual
unsupported.array.initializers=Los inicializadores de matriz no son compatibles con la versión actual
operator.is.not.supported.in=El operador ''{0}'' no es compatible con la versión actual
unsupported.negated.in=Negated 'in' no es compatible con la versión actual
unsupported.negated.instanceof=La 'instancia de' negada no es compatible con la versión actual
unsupported.elvis.assignment=La asignación de Elvis no es compatible con la versión actual
unsupported.safe.index.access=El acceso seguro al índice no es compatible con la versión actual
unsupported.lambda=Lambdas no son compatibles con la versión actual
unsupported.type.annotations=Las anotaciones de tipo no son compatibles con la versión actual
illegal.single.argument.lambda=La forma de un solo argumento de lambda está disponible solo como parte derecha de la expresión de asignación o como argumento dentro de la llamada al método

# Anular e implementar
method.is.not.implemented=El método ''{0}'' no está implementado
change.implements.and.extends.classes=Normalizar extiende e implementa listas

fix.package.name=Corregir el nombre del paquete

#propiedades dinámicas
add.dynamic.property=Agregar propiedad dinámica ''{0}''
duplicate.element.in.the.map=Elemento duplicado ''{0}'' en el mapa
dynamic.tool.window.id=Miembros dinámicos

create.field.from.usage.family.name=Crear campo a partir del uso
create.field.from.usage=Crear campo ''{0}''
create.method.from.usage.family.name=Crear método a partir del uso
create.method.from.usage=Crear método ''{0}''
create.variable.from.usage.family.name=Crear variable de uso
create.variable.from.usage=Crear variable ''{0}''
create.parameter.from.usage.family.name=Crear parámetro a partir del uso
create.parameter.from.usage=Crear parámetro ''{0}''
add.dynamic.element=Agregar elemento dinámico
add.dynamic.method=Agregar método dinámico
dynamic.type=Tipo
dynamic.name=Nombre
dynamic.properties.table.name=Argumentos del método
dynamic.method.return.type=Devolver &tipo:
dynamic.method.property.type=Propiedad y tipo:
are.you.sure.to.delete.dynamic.property=¿Está seguro de eliminar ''{0}''?
dynamic.property.deletion=Propiedad dinámica de eliminación
are.you.sure.to.delete.elements=¿Está seguro de eliminar los elementos ''{0}''?
dynamic.element.deletion=Eliminación de elementos dinámicos
tuple.cant.be.placed.in.class=No se permiten múltiples asignaciones para los campos
unknown.class=clase desconocida ''{0}''
is.not.enclosing.class=''{0}'' no es una clase adjunta
package.definition.cannot.have.modifiers=La definición del paquete no puede tener modificadores
import.statement.cannot.have.modifiers=La declaración de importación no puede tener modificadores
undefined.label=Etiqueta no definida ''{0}''
continue.outside.loop=La instrucción continue solo se permite dentro de los bucles
break.outside.loop.or.switch=La declaración de interrupción solo se permite dentro de bucles o interruptores
label.already.used=La etiqueta ''{0}'' ya está en uso
break.outside.loop=La declaración de ruptura con etiquetas con nombre solo se permite dentro de los bucles

Constructor=Constructor
Getter=Getter
Setter=Setter
compile.groovy.files=&Compilar archivos Groovy
not.allowed.modifier.in.for.in=El modificador ''{0}'' no está permitido aquí
property.name.expected=Nombre de propiedad esperado
add.method.body=Agregar cuerpo del método
wildcards.are.not.allowed.in.extends.list=Un supertipo no puede especificar un tipo de comodín
method.does.not.override.super=El método no anula el método de su superclase
method.duplicate=El método con la firma {0} ya está definido en la clase ''{1}''
ambiguous.code.block=Bloque de código ambiguo
cyclic.inheritance.involving.0=Herencia cíclica que involucra ''{0}''
there.is.no.default.constructor.available.in.class.0=No hay un constructor predeterminado disponible en la clase ''{0}''
groovy.library.is.not.configured.for.module=Groovy SDK no está configurado para el módulo ''{0}''
configure.groovy.library=Configurar Groovy SDK…
create.instance.of.built-in.type=Creación de instancias del tipo incorporado
incorrect.variable.name=Nombre de variable incorrecto
no.interface.expected.here=No se espera ninguna interfaz aquí
no.class.expected.here=No se espera una clase aquí
move.to.extends.list=Mover la referencia a la lista de extensiones
move.to.implements.list=Mover la referencia a la lista de implementos
script.file.is.not.groovy.file=El archivo de script no es un archivo Groovy
class.does.not.exist=La clase no existe
class.cannot.be.executed=La clase no se puede ejecutar
invoke.completion.second.time.to.show.skipped.methods=Invocar la finalización por segunda vez para mostrar los métodos omitidos
groovy.file.extension.is.not.mapped.to.groovy.file.type=*. Los archivos groovy se asignan a ''{0}''.\nPuedes asignarlos a Groovy en Configuración | Tipos de archivo
class.is.not.annotation=''{0}'' no es una anotación
method.call.is.ambiguous=La llamada al método es ambigua
operator.call.is.ambiguous=La llamada del operador es ambigua
duplicated.named.parameter=Parámetro con nombre duplicado ''{0}'' encontrado
no.super.classes.found=No se encontraron superclases
no.super.method.found=No se encontraron supermétodos
wrong.package.name=El nombre del paquete ''{0}'' no corresponde a la ruta del archivo ''{1}''
cannot.assign.string.to.enum.0=No se puede asignar una cadena a la enumeración ''{0}''
cannot.find.enum.constant.0.in.enum.1=No se puede encontrar la constante de enumeración ''{0}'' en la enumeración ''{1}''
recursive.constructor.invocation=Invocación de constructor recursivo
the.usage.of.a.map.entry.expression.to.initialize.an.enum.is.currently.not.supported=Actualmente no se admite el uso de una expresión de entrada de mapa para inicializar un Enum
class.definition.is.not.expected.here=No se espera una definición de clase aquí
move.class.0.from.method=Mover ''{0}'' al lugar correcto
move.class.from.method.family.name=Mover al lugar correcto solución rápida
constructor.call.is.ambiguous=La llamada al constructor es ambigua
cannot.infer.argument.types=No se pueden inferir tipos de argumentos
Equals=Iguales
default.initializers.are.not.allowed.in.abstract.method=Los inicializadores predeterminados no están permitidos en métodos abstractos
groovy.does.not.support.constructor.type.arguments=Groovy no admite argumentos de tipo constructor
illegal.escape.character.in.string.literal=Carácter de escape ilegal en literal de cadena
add.parentheses=Agregar paréntesis
method.with.type.parameters.should.have.return.type=El método con parámetros de tipo debe tener un tipo de retorno
primitive.type.parameters.are.not.allowed=Los parámetros de tipo primitivo no están permitidos en la lista de parámetros de tipo
primitive.bound.types.are.not.allowed=Los tipos de enlace primitivo no están permitidos
ellipsis.type.is.not.allowed.here=El tipo de elipsis no está permitido aquí
method.0.is.too.complex.too.analyze=El método ''{0}'' es demasiado complejo para analizar.\nLos tipos de variables locales no se infieren.
closure.is.too.complex.to.analyze=El cierre es complejo de analizar.\nLos tipos de variables locales no se infieren.
0.is.deprecated=''{0}'' está obsoleto
wrong.number.of.type.arguments=Número incorrecto de argumentos de tipo\: {0}; requerido\: {1}
type.argument.0.is.not.in.its.bound.should.extend.1=El parámetro de tipo ''{0}'' no está en su límite; debería extender ''{1}''
catch.statement.parameter.type.should.be.a.subclass.of.throwable=El tipo de parámetro de declaración Catch debe ser una subclase de Throwable
exception.0.has.already.been.caught=La excepción ''{0}'' ya ha sido detectada
unnecessary.type=Excepción innecesaria ''{0}''. ''{1}'' ya está declarado
create.enum=Crear enumeración {0}
create.trait=Crear rasgo {0}
create.inner.class=Crear clase interna {0}
annotation.field.can.only.be.used.within.a.script.body=Annotation @Field solo se puede usar dentro de un cuerpo de script
annotation.field.can.only.be.used.within.a.script=Annotation @Field solo se puede usar dentro de un script
return.type.is.incompatible=El tipo de retorno de {0} en {1} es incompatible con {2} en {3}
anonymous.class.derived.from.0=clase anónima derivada de {0}
throws.clause.is.not.allowed.in.at.interface=La cláusula 'throws' no está permitida en los miembros de @interface
at.interface.0.does.not.contain.attribute=@interface ''{0}'' no contiene el atributo ''{1}''
duplicate.attribute=Atributo duplicado
missed.attributes=Atributos perdidos\: {0}
unexpected.attribute.type.0=Tipo de atributo inesperado\: ''{0}''
annotation.attribute.should.have.return.type.declaration=El atributo de anotación debe tener una declaración de tipo de retorno
annotation.field.should.have.type.declaration=El campo en la anotación debe tener una declaración de tipo
interface.members.are.not.allowed.to.be=Los miembros de la interfaz no pueden ser {0}
abstract.method.cannot.be.final=El método abstracto no puede ser final
abstract.methods.must.not.have.body=Los métodos abstractos no deben tener cuerpo
method.has.incorrect.modifier.volatile=El método tiene un modificador incorrecto 'volátil'
native.methods.cannot.have.body=Los métodos nativos no pueden tener cuerpo
top.level.class.may.not.have.private.modifier=Es posible que la clase de nivel superior no tenga el modificador 'privado'
top.level.class.may.not.have.protected.modifier=Es posible que la clase de nivel superior no tenga el modificador 'protegido'
property.missing=propertyMissing
attribute.name.expected=Nombre de atributo esperado
java.style.for.each.statement.requires.a.type.declaration=Estilo Java para cada declaración requiere una declaración de tipo
super.cannot.be.used.in.static.context='super' no se puede utilizar en contexto estático
qualified.0.is.allowed.only.in.nested.or.inner.classes=Qualified {0} solo se permite en clases anidadas/internas
groovy.file.0=Archivo maravilloso ''{0}''
type.argument.list.is.not.allowed.here=La lista de argumentos de tipo no está permitida aquí
initializers.are.not.allowed.in.interface=Los inicializadores no están permitidos en la interfaz
initializer.cannot.have.annotations=Los inicializadores no pueden tener anotaciones
initializer.cannot.be.0=El inicializador no puede ser {0}
constructors.are.not.allowed.in.interface=Los constructores no están permitidos en la interfaz
type.parameters.are.unexpected=Los parámetros de tipo son inesperados
constructors.cannot.have.return.type=El elemento de tipo de retorno no está permitido en el constructor
constructor.cannot.have.static.modifier=El constructor no puede ser estático
annotation.types.may.not.have.extends.clause=Los tipos de anotaciones pueden no tener una cláusula 'extiende'
annotation.types.may.not.have.implements.clause=Los tipos de anotaciones pueden no tener una cláusula 'implements'
no.implements.clause.allowed.for.interface=Es posible que las interfaces no tengan la cláusula 'implements'
enums.may.not.have.extends.clause=Las enumeraciones pueden no tener la cláusula 'amplía'
method.0.cannot.override.method.1.in.2.overridden.method.is.final=El método ''{0}'' no puede anular el método ''{1}'' en ''{2}'' ; el método anulado es final
method.0.cannot.have.weaker.access.privileges.1.than.2.in.3.4=El método ''{0}'' no puede tener privilegios de acceso más débiles (''{1}'') que '' { 2} '' en ''{3}'' (''{4}'')
tuple.declaration.should.end.with.def.modifier=La declaración de tupla debe terminar con el modificador 'def'
injection.should.not.contain.line.feeds=La inyección GString no debe contener avances de línea
collection.literal.contains.named.argument.and.expression.items=El literal de colección contiene argumentos con nombre y expresión al mismo tiempo
annotation.collector.cannot.have.attributes=El tipo de anotación anotado con @AnnotationCollector no puede tener atributos
annotation.type.cannot.be.inner=El tipo de anotación no puede ser interno
cannot.find.operator.overload.method=No se puede resolver el acceso al índice con argumentos {0}
named.arguments.are.not.allowed.inside.index.operations=No se permiten argumentos con nombre dentro de operaciones de índice
expected.0.to.be.inline.constant=Se espera que ''{0}'' sea una constante en línea
cannot.assign.a.value.to.final.field.0=No se puede asignar un valor al campo final ''{0}''
cannot.assign.a.value.to.final.parameter.0=No se puede asignar un valor al parámetro final ''{0}''
variable.0.might.not.have.been.initialized=Es posible que la variable ''{0}'' no se haya inicializado
doc.end.expected='*/' esperado
mixing.private.and.public.protected.methods.of.the.same.name=Mezclando métodos privados y públicos/protegidos del mismo nombre
explicit.constructors.are.not.allowed.in.immutable.class=Los constructores explícitos no están permitidos para la clase @Immutable
repetitive.method.name.0=Nombre de método repetitivo ''{0}''
declared.type.0.have.to.extend.script=El tipo declarado ''{0}'' no extiende la clase '' groovy.lang.Script ''
base.script.annotation.is.allowed.only.inside.scripts=La anotación @BaseScript solo se puede usar dentro de un script
delegate.annotation.is.only.for.methods.without.arguments=La anotación @Delegate no se pudo aplicar al método con argumentos
builder.annotation.not.support.super.for.simple.strategy=El atributo de anotación 'includeSuperProperties' no es compatible con groovy.transform.builder.SimpleStrategy
0.expressions.on.trait.fields.properties.are.not.supported.in.traits={0} las expresiones en los campos/propiedades de rasgos no son compatibles con los rasgos
only.traits.expected.here=Aquí solo se esperan rasgos
anonymous.classes.cannot.be.created.from.traits=No se pueden crear clases anónimas a partir de rasgos
trait.method.cannot.be.protected=Los métodos de rasgos no pueden protegerse
non.static.classes.not.allowed=Las clases internas no estáticas no están permitidas en los rasgos
selfType.class.does.not.inherit=@SelfType: La clase ''{0}'' no hereda ''{1}''
illegal.type.void=Tipo ilegal: 'void'
illegal.method.name=El nombre del método contiene caracteres ilegales: {0}

select.module.description=¿De qué módulo usar classpath?
select.module.title=Seleccionar módulo…
### Grupos de inspección ###
inspection.annotations=Verificación de anotaciones
inspection.assignments=Problemas de asignación
inspection.bugs=Errores probables
inspection.confusing=Construcciones de código potencialmente confusas
inspection.control.flow=Problemas de flujo de control
inspection.data.flow=Flujo de datos
inspection.error.handling=Manejo de errores
inspection.gpath=GPath
inspection.naming=Convenciones de nomenclatura
inspection.method.metrics=Métricas del método
inspection.redundancy=Declaración de redundancia
inspection.threading=Problemas de subprocesos
inspection.validity=Problemas de validez
inspection.style=Estilo
inspection.other=Otro
### Grupos de intención ###
intention.category.groovy=Groovy
intention.category.conversions=Conversiones Groovy/Expression
intention.category.closures=Groovy/Closures
intention.category.comments=Groovy/Comentarios
intention.category.groovy.style=Groovy/Groovy-style
intention.category.control.flow=Groovy/Control de flujo
intention.category.groovy.declaration=Groovy/Declaración
intention.category.groovy.other=Groovy/Otro
configurable.GroovyCompilerConfigurable.display.name=Compilador Groovy
configurable.GantConfigurable.display.name=Gant
settings.compiler.alternative=Alternativamente, puede especificar el compilador Groovy-Eclipse en la <a href=\\"#\\"> página del compilador Java </a>
settings.compiler.select.path.to.groovy.compiler.configscript=Seleccione la ruta al configscript del compilador Groovy
settings.compiler.path.to.configscript=Ruta de &configscript:
settings.compiler.invoke.dynamic.support=Invocar soporte &dinámico
settings.compiler.exclude.from.stub.generation=Excluir de la generación de stub:
settings.code.style.label.indent.style=Estilo de sangría de etiqueta:
settings.code.style.label.indent.size=tamaño de sangría de etiqueta
settings.code.style.indent.statements.after.label=Declaraciones de sangría después de la etiqueta
settings.code.style.absolute=Absoluto
settings.code.style.indent.labels=Aplicar sangría a las etiquetas
settings.inlay.parameter.types=Tipos de parámetros
settings.inlay.inferred.parameter.types=Tipos de parámetros inferidos
settings.inlay.type.parameter.list=Tipo de lista de parámetros
settings.inlay.show.type.hints.for=Mostrar sugerencias de tipo para:
checkbox.delegate.via.overloading.method=Delegar mediante método de sobrecarga
