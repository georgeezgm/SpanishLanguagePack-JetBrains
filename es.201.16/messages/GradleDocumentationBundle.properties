## Complementos de lenguaje
gradle.documentation.org.gradle.api.Project.apply.plugin.java.non-html=Agregue capacidades de compilación, prueba y agrupación de Java a su proyecto. Sirve como base para muchos otros complementos de Gradle.
gradle.documentation.org.gradle.api.Project.apply.plugin.java=<p>Agregue capacidades de compilación, prueba y agrupación de Java a su proyecto. Sirve como base para muchos otros complementos de Gradle. Ver también: <a class\="xref" href\="http\://www.gradle.org/docs/current/userguide/tutorial_java_projects.html">Capítulo 7, <i>Inicio rápido de Java</i></a > </p><p>Aplicar automáticamente\: java-base</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.groovy.non-html=Agregar soporte para construir proyectos Groovy.
gradle.documentation.org.gradle.api.Project.apply.plugin.groovy=<p> Agrega soporte para crear proyectos Groovy. Ver también: <a class\="xref" href\="http\://www.gradle.org/docs/current/userguide/tutorial_groovy_projects.html">Capítulo 9, <i> Inicio rápido para Groovy</i></a ></p><p>Aplicar automáticamente\: java, groovy-base</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.scala.non-html=Agregar soporte para crear proyectos de Scala.
gradle.documentation.org.gradle.api.Project.apply.plugin.scala=<p>Añadir soporte para construir proyectos Scala.</p><p>Aplicar automáticamente\: java, scala-base</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.antlr.non-html=Agrega soporte para generar analizadores usando Antlr.
gradle.documentation.org.gradle.api.Project.apply.plugin.antlr=<p><a class\="ulink" href\="http\://www.antlr.org/" target\="_top "Agregue soporte para generar analizadores usando ">Antlr</a></p><p>aplicar automáticamente\: java</p>

## Complementos de integración
gradle.documentation.org.gradle.api.Project.apply.plugin.application.non-html=Agregue tareas de proyecto Java en ejecución y empaquetadas como aplicaciones de línea de comandos.
gradle.documentation.org.gradle.api.Project.apply.plugin.application=<p>Agrega tareas de lanzamiento y agrupación de proyectos Java como aplicaciones de línea de comandos.</p><p>Aplicar automáticamente\: java</ p>
gradle.documentation.org.gradle.api.Project.apply.plugin.ear.non-html=Añadir compatibilidad para crear aplicaciones J2EE.
gradle.documentation.org.gradle.api.Project.apply.plugin.ear=<p>Añadir compatibilidad con compilación de aplicaciones J2EE</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.jetty.non-html=Implemente la aplicación web en el contenedor web Jetty incluido en la compilación.
gradle.documentation.org.gradle.api.Project.apply.plugin.jetty=<p>Implemente la aplicación web en el contenedor web Jetty incluido en la compilación. Ver también: <a class\="xref" href\="http\://www.gradle.org/docs/current/userguide/web_project_tutorial.html">Capítulo 10, <i>Inicio rápido de aplicaciones web</i>< /a></p><p>Aplicar automáticamente\:guerra</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.maven.non-html=Agrega compatibilidad para publicar artefactos en los repositorios de Maven.
gradle.documentation.org.gradle.api.Project.apply.plugin.maven=<p>Agrega soporte para publicar artefactos en los repositorios de Maven.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.osgi.non-html=agregar compatibilidad con compilación de paquete OSGi.
gradle.documentation.org.gradle.api.Project.apply.plugin.osgi=<p>Añadir compatibilidad con compilación de paquete OSGi.</p><p>Aplicar automáticamente\: java-base</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.war.non-html=Agregar compatibilidad con ensamblaje de archivos WAR de aplicaciones web.
gradle.documentation.org.gradle.api.Project.apply.plugin.war=<p>Agregar compatibilidad con ensamblaje de archivos WAR de aplicaciones web. Ver también: <a class\="xref" href\="http\://www.gradle.org/docs/current/userguide/web_project_tutorial.html">Capítulo 10, <i>Inicio rápido de aplicaciones web</i>< /a></p><p>Aplicar automáticamente\:java</p>

## Software development plugins
gradle.documentation.org.gradle.api.Project.apply.plugin.announce.non-html=Publique su mensaje en su plataforma favorita, como Twitter o Growl.
gradle.documentation.org.gradle.api.Project.apply.plugin.announce=<p>Publique un mensaje en su plataforma favorita, como Twitter o Growl.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.build-announcements.non-html=Envía notificaciones locales a su escritorio sobre eventos interesantes en el ciclo de vida de la compilación.
gradle.documentation.org.gradle.api.Project.apply.plugin.build-announcements=<p>Envía notificaciones locales a su escritorio sobre eventos interesantes en el ciclo de vida de la compilación.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.checkstyle.non-html=Use Checkstyle para realizar una verificación de calidad del archivo fuente Java del proyecto y generar un informe de verificación.
gradle.documentation.org.gradle.api.Project.apply.plugin.checkstyle=<p><a class\="ulink" href\="http\://checkstyle.sourceforge.net/index.html" target\ Use ="_top">Checkstyle</a> para realizar una verificación de calidad del archivo fuente Java del proyecto y generar un informe de inspección.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.codenarc.non-html=Use CodeNarc para realizar una verificación de calidad del archivo fuente Groovy del proyecto y generar un informe de inspección.
gradle.documentation.org.gradle.api.Project.apply.plugin.codenarc=<p><a class\="ulink" href\="http\://codenarc.sourceforge.net/index.html" target\ Use ="_top">CodeNarc</a> para realizar una verificación de calidad del archivo fuente de Groovy del proyecto y generar un informe de inspección.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.eclipse.non-html=Crea un archivo utilizado por el IDE de Eclipse para importar su proyecto a Eclipse.
gradle.documentation.org.gradle.api.Project.apply.plugin.eclipse=<p><a class\="ulink" href\="http\://Eclipse.org" destino para que pueda importar su proyecto en eclipse Crea un archivo utilizado por \="_top">Eclipse IDE</a>. Ver también: <a class\="xref" href\="http\://www.gradle.org/docs/current/userguide/tutorial_java_projects.html">Capítulo 7, <i>Inicio rápido de Java</i></a > </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.eclipse-wtp.non-html=Eclipse Plugin Plus funciona igual que generar archivos de configuración de Eclipse Web Tools Platform (WTP). Después de importar a Eclipse, debe configurar su proyecto war/ear para que funcione con WTP.
gradle.documentation.org.gradle.api.Project.apply.plugin.eclipse-wtp=<p>Eclipse Plugin Plus funciona igual que generar archivos de configuración de Eclipse Web Tools Platform (WTP). Después de importar a Eclipse, debe configurar su proyecto war/ear para que funcione con WTP. Ver también: <a class\="xref" href\="http\://www.gradle.org/docs/current/userguide/tutorial_java_projects.html">Capítulo 7, <i>Inicio rápido de Java</i></a > </p>
gradle.documentation.org.gradle.api.Project.apply.plugin.findbugs.non-html=Use FindBugs para realizar una verificación de calidad del archivo fuente Java del proyecto y generar un informe de inspección.
gradle.documentation.org.gradle.api.Project.apply.plugin.findbugs=<p><a class\="ulink" href\="http\://findbugs.sourceforge.net" target\="_top" Use >FindBugs</a> para realizar controles de calidad en los archivos fuente de Java del proyecto y generar informes de inspección.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.idea.non-html=Cree un archivo para importar su proyecto a IDEA y aplique las personalizaciones específicas de IDEA utilizadas por Intellij IDEA IDE.
gradle.documentation.org.gradle.api.Project.apply.plugin.idea=<p>Cree un archivo para importar su proyecto a IDEA y <a class\="ulink" href\="https\://www . jetbrains.com/idea/index.html" target\="_top">Aplica personalizaciones específicas de IDEA utilizadas por IntelliJ IDEA IDE</a></p>
gradle.documentation.org.gradle.api.Project.apply.plugin.jdepend.non-html=Use JDepend para realizar una verificación de calidad del archivo fuente del proyecto y generar un informe de inspección.
gradle.documentation.org.gradle.api.Project.apply.plugin.jdepend=<p><a class\="ulink" href\="http\://clarkware.com/software/JDepend.html" target\ Use ="_top">JDepend</a> para realizar un control de calidad del archivo fuente del proyecto y generar un informe de inspección.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.pmd.non-html=Use PMD para realizar controles de calidad en los archivos fuente de Java del proyecto y generar informes de inspección.
gradle.documentation.org.gradle.api.Project.apply.plugin.pmd=<p><a class\="ulink" href\="http\://pmd.sourceforge.net" target\="_top" Utilice >PMD</a> para realizar comprobaciones de calidad del archivo fuente Java del proyecto y generar informes de inspección.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.project-report.non-html=Genera un informe con información útil sobre su compilación de Gradle.
gradle.documentation.org.gradle.api.Project.apply.plugin.project-report=<p>Genera un informe con información útil sobre su compilación de Gradle.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.signing.non-html=Agrega la capacidad de firmar digitalmente archivos y artefactos creados.
gradle.documentation.org.gradle.api.Project.apply.plugin.signing=<p>Agrega la capacidad de firmar digitalmente archivos y artefactos creados.</p>
gradle.documentation.org.gradle.api.Project.apply.plugin.sonar.non-html=Proporciona herramientas para la integración con la plataforma de calidad de código de Sonar. Se reemplaza por el complemento sonar-runner.
gradle.documentation.org.gradle.api.Project.apply.plugin.sonar=<p><a class\="ulink" href\="http\://www.sonarsource.org" target\="_top" >Sonar</a> Proporciona herramientas para la integración con plataformas de calidad de código. <a class\="link" href\="http\://www.gradle.org/docs/current/userguide/sonar_runner_plugin.html"><code class\="literal">sonar-runner</code> </a> se reemplaza por un complemento.</p>
