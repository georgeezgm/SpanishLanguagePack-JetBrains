readme.welcome.header=Conozca al entrenador de funciones interactivas
readme.ift.description=Este curso interactivo lo guiará a través de numerosos flujos de trabajo y casos de uso de IDE. Aquí encontrará una variedad de atajos de acciones útiles, pero no es necesario que los memorice todos. En su lugar, intente utilizar acciones y aplique lo que considere más útil a sus propios servicios. Y es posible que encuentre nuevos problemas durante sus tareas diarias, así que asegúrese de volver a visitar este curso y probar también otras funciones. Estén atentos a nuevas lecciones que le ayudarán a ser más productivo utilizando {0}.
readme.usage.header=Cómo utilizar el plan de estudios
readme.toolwindow.description=La ventana de herramientas ''{0}'' contiene varios módulos con sus correspondientes conjuntos de aprendizaje que se pueden tomar en cualquier orden. Una vez que hayas terminado de estudiar el curso, el curso se marcará como "completo". Las lecciones completadas se pueden utilizar con fines de certificación o reanudar cuando desee actualizar sus conocimientos.
readme.experienced.users.remark=Incluso si la conferencia parece algo que ya sabes, escúchala. ¡Puede descubrir ejemplos útiles de funciones y atajos de uso frecuente que no conocía!
readme.start.header=Empezando
readme.indexing.description=Es posible que esté leyendo este ''README.md'' mientras inicializa su proyecto de aprendizaje. La ''indexación'' suele ser la tarea que consume más tiempo durante la inicialización del proyecto. El IDE debe recopilar información sobre el entorno del usuario, proyecto{0,choice,1\#, biblioteca|2\#} y luego configurar la reproducción interna. Esto es necesario para una navegación y búsqueda rápidas.
readme.navigation.hint=El módulo ''{0}'' de este curso le muestra cómo usarlo.
readme.shortcuts.header=Gestión de teclas de acceso directo
readme.shortcuts.problem.description=Algunos atajos de este curso pueden entrar en conflicto con los atajos de su sistema o de otras aplicaciones. En este caso, puede hacer clic en el acceso directo problemático en el texto del curso. La ventana emergente que se abre muestra el nombre de la acción y el acceso directo alternativo. Desde aquí puedes aplicar acciones o asignar nuevos atajos.
readme.bug.tracker.remark=Si encuentra otros problemas, reinicie el curso o informe un error en [Bug Tracker]({0}).
readme.conclusion.header=Volver al proyecto
readme.exit.options=Para regresar a la pantalla de inicio, seleccione ''{0} | Seleccione {1}''. También puede abrir o crear un nuevo proyecto usando el menú ''{0}''. De forma predeterminada, la ventana de herramientas ''{2}'' está oculta. Se accede a esta ventana desde el menú principal seleccionando ''{3} | Puede abrirlo seleccionando {4}''.
readme.feedback.request=¡Apreciaríamos sus comentarios sobre este proceso de aprendizaje!
essential.module.name=Elementos esenciales
essential.module.description=Descubra las funciones más esenciales de {0}
context.actions.lesson.name=Acción de contexto
context.actions.invoke.intentions.for.warning=En muchos casos, <ide/> puede adivinar su <strong>intención</strong> o sugerir soluciones para advertencias o errores. Llamemos a {0}, una de las acciones más útiles. Presiona 1}.
context.actions.fix.warning=Apliquemos la primera solución rápida a esta advertencia\: {0}.
context.actions.invoke.general.intentions=<ide/> tiene muchas intenciones. Siempre que crea que tiene una buena solución o intención, intente llamar a {0}. ¡Le ahorrará tiempo y hará que el proceso de codificación sea mucho más divertido! Eche un vistazo a lo que se puede aplicar al fragmento de código donde se encuentra el símbolo de intercalación. Presione {1} nuevamente.
context.actions.apply.intention=Apliquemos {0} intención.
context.actions.refactorings.promotion=Muchas refactorizaciones útiles no están disponibles a través de {0}. Vaya al módulo {1} para obtener información sobre las llamadas y el uso de refactorización.
editor.basics.module.name=Conceptos básicos del editor
editor.basics.module.description=Agregue, elimine, seleccione, mueva y duplique código con atajos inteligentes
goto.action.lesson.name=Busqueda de accion
goto.action.mac.workaround=Si su búsqueda se abre en <strong>Terminal</strong> en lugar de {0}, consulte <a href\="{1}">este artículo</a>.
goto.action.use.find.action.1=Uno de los atajos más útiles es {0}. Este atajo le permite buscar entre todas las acciones disponibles, eliminando la necesidad de conocer el atajo para cada acción individual. Intente usar {1}.
goto.action.use.find.action.2=En su lugar, puede llamar a {0} presionando {1} dos veces seguidas. Puede utilizar {0} para recuperar entidades de código de proyecto <strong>y</strong> otros objetos IDE simultáneamente. Es tu elección qué usar.
goto.action.invoke.about.action=Por ejemplo, si desea obtener información sobre <ide/>, escriba {0} y luego presione {1}.
goto.action.to.return.to.the.editor=Presione {0} para regresar al editor.
goto.action.invoke.again=Y puedes cambiar la configuración usando {0} o doble {1}. Intente llamar nuevamente. Intente llamar nuevamente.
goto.action.show.line.numbers.request=Escriba {0} para ver el selector {1}.
goto.action.first.lines.toggle=Cambie la visualización del número de línea a {0,choice, 0 \#off|1 \#on}.
goto.action.second.lines.toggle=Ahora cambie la visualización del número de línea a {0,choice, 0 \#on|1 \#off}.
goto.action.propose.to.go.next.new.ui=Excelente\! Presione {0} o haga clic en el botón a continuación para comenzar la siguiente lección.
goto.action.popup.closed.warning.message=Haga clic en {0} o {1} dos veces para abrir la barra de búsqueda nuevamente.
collapse.lesson.name=Doblar
collapse.try.collapse=A veces es necesario contraer partes de su código para mejorar la legibilidad. Intente contraer el fragmento de código con {0}.
collapse.hit.expand=Presione {0} para expandir el área de código.
collapse.all.collapse=Si desea contraer todas las áreas del archivo, presione {0}.
collapse.all.expand=Asimismo, presione {0} para expandir todas las áreas disponibles.
duplicate.and.delete.lines.lesson.name=Duplicar y eliminar líneas
duplicate.and.delete.lines.duplicate.line=Duplica cualquier línea con {0}.
duplicate.and.delete.lines.duplicate.several.lines=La misma acción se puede aplicar a varias líneas. Simplemente seleccione dos o más líneas y duplíquelas como {0}.
duplicate.and.delete.lines.delete.line=Puede utilizar la acción {0} para eliminar la línea actual.
move.lesson.name=Mover un fragmento de código
move.pull.down=Reorganizar líneas suele implicar dos acciones: cortar y pegar. <ide/> te permite ejecutar con una sola acción. Presione {0} para mover la línea actual hacia abajo.
move.pull.up=Del mismo modo, presione {0} para mover la alineación hacia arriba.
move.whole.method.up=Intente avanzar todo el método con {0}. El cursor debe colocarse en el encabezado del método.
move.whole.method.down=Ahora baja a {0}.
multiple.selections.lesson.name=Múltiples rangos de selección
multiple.selections.select.symbol=Presione {0} para seleccionar el símbolo ubicado en el cursor.
multiple.selections.select.next.symbol=Presione {0} para seleccionar el siguiente uso de este símbolo.
multiple.selections.deselect.symbol=Presione {0} para anular la selección de la última ubicación utilizada.
multiple.selections.select.all=Haga clic en {0} para seleccionar todos los usos de este archivo.
multiple.selections.replace=Presione {0} para reemplazar el uso de {1} por {0}.
selection.lesson.name=Ampliar y contraer selección de código
selection.select.word=Coloque el signo de intercalación antes de la palabra. Presione {0} para mover el cursor a la siguiente palabra y seleccionar todo lo que se encuentre en el medio.
selection.extend.selection=Haga clic en {0} para ampliar la selección al siguiente bloque de código.
selection.extend.until.whole.file=Intente aumentar la selección en {0} hasta seleccionar todo el archivo.
selection.shrink.selection={0} reduce la selección. Intentalo.
new.selection.select.word=Presione {0} para seleccionar la palabra ubicada debajo del cursor.
new.selection.select.string=Presione {0} nuevamente para seleccionar la cadena completa.
new.selection.add.quotes=Toca {0} tres veces y agrega citas a tu selección.
new.selection.select.call={0} {1,choice,1\#1|2\#2| 3\#1| Presione 4\#4} veces más para seleccionar todas las llamadas.
new.selection.unselect=De hecho, digamos que queremos seleccionar los argumentos y no la llamada completa. Presione {0} para limitar la selección a sus argumentos.
new.selection.select.if=Se movió la posición del cursor al principio de la declaración {0}. Haga doble clic en {1} para seleccionarlo. Las palabras clave son un excelente punto de partida para seleccionar frases relevantes con solo presionar unas pocas teclas.
comment.line.lesson.name=Línea de comentario
comment.line.comment.any.line=Comente cualquier línea con {0}.
comment.line.uncomment.that.line=Descomente la línea comentada usando la misma tecla de método abreviado. Presione {0}.
comment.line.comment.several.lines=Seleccione varias líneas y coméntelas con {0}.
surround.and.unwrap.lesson.name=Envolver y desenvolver
surround.and.unwrap.invoke.surround=Presione {0} para rodear el fragmento de código seleccionado con algún código de plantilla.
surround.and.unwrap.choose.surround.item=Seleccione {0} elemento.
surround.and.unwrap.invoke.unwrap=Volvamos al archivo inicial con la acción de descomprimir de {0}.
surround.and.unwrap.choose.unwrap.item=Seleccione {0} elemento.
surround.and.unwrap.help.surround.code.fragments=Adjuntar fragmentos de código
surround.and.unwrap.help.unwrapping.and.removing.statements=Desenvolver y eliminar sintaxis
code.completion.module.name=Finalización de código
code.completion.module.description=El IDE completa el código. Pruebe la finalización de código básica, inteligente y de otro tipo.
basic.completion.lesson.name=Finalización de código básico
basic.completion.start.typing=De forma predeterminada, <ide/> sugiere inmediatamente la finalización del código. Cuando comienza a escribir {0} donde se encuentra el cursor, aparece una lista completa con sugerencias coincidentes.
basic.completion.just.press.to.complete=Ahora presione {0} para completar esta declaración.
basic.completion.activate.explicitly=Para habilitar explícitamente la finalización de código básico, presione {0}.
basic.completion.finish.explicit.completion=Seleccione {0} y presione {1}.
completion.with.tab.lesson.name=Finalización del código de tabulación
completion.with.tab.begin.completion=Presiona {0} para mostrar una lista de sugerencias para completar el código.
completion.with.tab.finish.with.tab=Por ejemplo, seleccione {0} y luego presione {1}. Esto no simplemente inserta una palabra, sino que reemplaza la palabra ubicada en el cursor.
smart.completion.lesson.name=Coincidencia de tipos completada
postfix.completion.lesson.name=Finalización de sufijo
postfix.completion.intro=La finalización de sufijos ayuda a reducir los cambios de cursor hacia atrás al escribir código. Puede convertir una expresión ya ingresada en otra expresión según el sufijo que agregó, el tipo de expresión y su contexto.
refactorings.module.name=Refactorización
refactorings.module.description=Limpie su código mediante cambio de nombre, extracción y otros tipos de refactorización.
refactorings.change.settings.warning.message=Para completar esta lección, cambie las opciones de refactorización en la configuración de su editor. Presione {0}, navegue hasta {1} <strong>→</strong> {2} y seleccione {3} en {4}. O <callback id="{5}">haga clic</callback> para cambiar la configuración.
rename.lesson.name=Cambiar nombre
refactoring.menu.lesson.name=Refactorización del menú en progreso
refactoring.menu.show.refactoring.list=<ide/> admite varias refactorizaciones. La mayoría de las refactorizaciones tienen sus propios atajos. Sin embargo, para refactorizaciones poco frecuentes, puede presionar {0} para obtener una vista previa de una lista parcial.
refactoring.menu.introduce.parameter.eng=Digamos que estamos buscando una acción de refactorización para reemplazar esta expresión con un parámetro. Luego debes seleccionar {0}. Ahora, para reducir la lista de sugerencias, puedes usar <strong>pa</strong>(introducir <strong>pa</strong>parámetro) o <strong>ip</strong>(<strong>i<strong>introducir <strong>p</ strong>parámetro).
refactoring.menu.introduce.parameter=Digamos que queremos reemplazar esta expresión con un parámetro. Luego debes seleccionar {0}. Ahora, para reducir la lista de sugerencias, puede <strong>pa</strong> (introducir <strong>pa</strong>parámetro) o <strong>ip</strong> (<strong>i<strong>introducir <strong>p</ strong>área (área).
refactoring.menu.start.refactoring=Presione {0} para comenzar a refactorizar {1}. <strong>Tenga en cuenta</strong> que puede aprender atajos de refactorización en el menú Refactorización.
refactoring.menu.finish.refactoring=Para completar la refactorización, debe seleccionar un nombre o dejar el predeterminado y presionar {0}.
code.assistance.module.name=Soporte de código
code.assistance.module.description=Aprenda a formatear su código, obtener información de parámetros y obtener una vista previa rápida de las ventanas emergentes.
code.format.lesson.name=Formato de código
code.format.reformat.selection=<ide/> le permite modificar el formato del código con una sola acción. Vuelva a formatear el fragmento de código seleccionado a {0}.
code.format.reformat.file=Para reformatear todo el archivo cuando no hay líneas seleccionadas, use {0}.
code.format.show.reformat.file.dialog=Utilice {0} para mostrar la configuración de reformateo.
code.format.optimize.imports=Aquí puede configurar las opciones de reformateo. Por ejemplo, active {0} y haga clic en {1}.
parameter.info.lesson.name=Información de parámetros
parameter.info.use.action=Haga clic en {0} para comprobar la firma del método.
parameter.info.add.parameters=Utilice un ancho de {0} y un alto de {1}.
quick.popups.lesson.name=Ventana emergente rápida
quick.popups.show.documentation=Haga clic en {0} para ver la documentación del símbolo ubicado en el cursor.
quick.popups.press.escape=Haga clic en {0} para cerrar la ventana emergente.
quick.popups.show.implementation=Presione {0} para ver la definición del símbolo ubicado en el cursor.
editor.coding.assistance.lesson.name=Soporte de codificación del editor
editor.coding.assistance.goto.next.error=Presione {0} para pasar al siguiente error resaltado en el archivo.
editor.coding.assistance.fix.error=¡Arreglemos este error! Presione {0} y luego seleccione {1}.
editor.coding.assistance.goto.next.warning=Pasemos a la siguiente advertencia. Presione {0}.
editor.coding.assistance.show.warning.description=También puede utilizar {0} para mostrar una advertencia o una descripción de error para el elemento ubicado en el cursor. Presione {0} para ver una breve descripción y luego presione {0} nuevamente para expandir la descripción.
editor.coding.assistance.fix.warning=¡Arreglemos esta advertencia también! Presione {0} y luego seleccione {1}.
editor.coding.assistance.highlight.usages=Otra herramienta útil es resaltar la ubicación. Presione {0} para resaltar todos los usos de símbolos ubicados en el cursor del archivo.
navigation.module.name=Navegar
navigation.module.description=Vaya a la fuente y vaya a la declaración, implementación y estructura de archivos.
declaration.and.usages.lesson.name=Dónde declarar y usar
declaration.and.usages.jump.to.declaration=Haga clic en {0} para ir a la declaración del método.
declaration.and.usages.show.usages=El cursor ahora se coloca en la declaración del método. Utilice el mismo acceso directo {0} para ver todos los usos y seleccione uno de ellos.
declaration.and.usages.find.usages=Haga clic en {0} para ver detalles sobre la ubicación de uso. Puede llamar a {0} en la ubicación de declaración o de uso.
declaration.and.usages.pin.motivation=Puede navegar a las ubicaciones de declaración y uso en la vista {0}. La siguiente búsqueda sobrescribirá estos resultados en la vista {0}. Para evitar esto, congele el resultado\:
declaration.and.usages.right.click.tab=Haga clic derecho en el título de la pestaña, {0}.
declaration.and.usages.select.pin.item=Seleccione {0}.
declaration.and.usages.hide.view=Cuando haya terminado de explorar las ubicaciones de uso, presione {0} para ocultar la vista.
declaration.and.usages.open.find.view=Vuelva a abrir la vista {0} {1}.
file.structure.lesson.name=Estructura de archivos
file.structure.open.popup=Los archivos fuente de gran tamaño pueden ser difíciles de leer y navegar, por lo que es posible que solo necesite obtener una vista previa de ellos. Haga clic en {0} para abrir la estructura del archivo.
file.structure.request.prefixes=Digamos que queremos buscar métodos cuyos nombres contengan las palabras {0} y {1}. Filtre la estructura del archivo ingresando {2} (el prefijo de la palabra que necesita).
file.structure.navigate=Sólo queda un artículo. Ahora presione {0} para ir al elemento seleccionado.
file.structure.toolwindow=<ide/> también puede mostrar la estructura del archivo como una ventana de herramientas. Abrir con {0}.
recent.files.lesson.name=Archivos y ubicaciones recientes
recent.files.first.transition=¿Tiene curiosidad sobre cómo se implementa el método {0}? Vayamos a la declaración del método usando {1}.
recent.files.dialog.message=Flujo de trabajo básico\: Queremos simular un movimiento rápido entre archivos. No muevas el mouse hasta que hayas terminado.
recent.files.dialog.title=Simulación de flujo de trabajo
recent.files.progress.title=Abrir archivo
recent.files.show.recent.files=Aprendimos más sobre los archivos de la biblioteca. ¿Cómo vuelvo a mis archivos? <ide/> tiene una función que muestra archivos abiertos recientemente. Presione {0}.
recent.files.search.typing=Puede buscar archivos por nombre. Por favor ingrese {0} (prefijo de la palabra que necesita).
recent.files.search.jump=Sólo queda un archivo. Ahora presione {0} para ir al elemento seleccionado.
recent.files.use.recent.files.again=Estoy de vuelta con un archivo. Pero revisemos los archivos recientes nuevamente usando {0}.
recent.files.delete=Esta lista contiene una serie de archivos fuente que ya no se visitan. Usemos {1} para eliminar el archivo {0} del historial de archivos reciente.
recent.files.close.popup=Su historial de archivos reciente ahora está más limpio. Haga clic en algún lugar fuera de la ventana emergente para cerrarla o utilice {0}.
recent.files.show.recent.locations=Otra acción útil es comprobar los códigos de ubicaciones visitadas recientemente. Utilice {0}.
recent.files.locations.search.typing=Aquí puede buscar cualquier fragmento de código que recuerde. Por favor ingrese {0}.
recent.files.locations.search.jump=Ahora presione {0} para ir al fragmento de código seleccionado.
search.everywhere.lesson.name=Buscar en todas partes
search.everywhere.invoke.search.everywhere=Para abrir {0} debe hacer clic en {1} dos veces.
search.everywhere.type.prefixes=Supongamos que busca clases cuyos nombres contengan las palabras {0} y {1}. Ingrese {2} (prefijo de la palabra que necesita) en el campo de búsqueda.
search.everywhere.navigate.to.class=Utilice las flechas de su teclado para seleccionar {0} y luego presione {1} para ir a la definición de esta clase.
search.everywhere.goto.class=Excelente\! Puede haber ocasiones en las que necesite buscar solo una clase o solo un directorio específico. Utilice {0} para limitar su búsqueda.
search.everywhere.type.class.name=Digamos que necesitamos una clase de biblioteca responsable de leer un flujo de entrada almacenado en búfer. Por favor ingrese {0} (prefijo de la palabra que necesita). Pero no vayas a esa clase todavía.
search.everywhere.use.all.places=Ahora verá sus clases dentro de este proyecto de demostración. Pero necesitas encontrar la implementación de esa clase en la biblioteca. Cambiemos el filtro {0} a {1} y revisemos el contenido de las bibliotecas disponibles.
search.everywhere.class.popup.closed.warning.message=Haga clic en {0} para abrir la barra de búsqueda nuevamente.
search.everywhere.quick.documentation=Haga clic en {0} para obtener una vista previa de los documentos disponibles.
search.everywhere.close.documentation.popup=Haga clic en {0} para cerrar la ventana emergente.
search.everywhere.finish=<strong>¡Ya terminaste\!</strong> De manera similar, puedes usar {0} para buscar métodos o variables globales y {1} para buscar archivos.
search.everywhere.navigation.promotion=Puede encontrar otras acciones de movimiento y casos de uso de flujo de trabajo en el módulo {0}.
find.in.files.lesson.name=Buscar y reemplazar en archivos
find.in.files.show.find.popup=Digamos que desea encontrar todas las apariciones de una cadena en su proyecto. Haga clic en {0} para abrir la ventana {1}.
find.in.files.type.to.find=Ingrese {0} para buscar todos los usos de texto en su proyecto de aprendizaje.
find.in.files.whole.words=Intenté encontrar la cadena <code>apple</code>, pero también encontré <code>pineapple</code>. Limita tu búsqueda por palabra. Haga clic en {0} o presione {1}.
find.in.files.select.row=El contexto de la cadena encontrada se muestra en el editor integrado. Haga clic en la fila resaltada o utilice los botones {0} y {1} para navegar hasta allí.
find.in.files.go.to.file=También puede abrir archivos seleccionados en el editor principal. Mueva este archivo haciendo clic en {0} o haciendo doble clic en su fila.
find.in.files.show.replace.popup=Supongamos que desea reemplazar todos los usos encontrados con una cadena diferente. Reemplazar cada archivo secuencialmente sería muy tedioso. <ide/> ayuda con esta tarea. Haga clic en {0} para abrir la ventana {1}.
find.in.files.type.to.replace=Cambiemos todos los usos de {0} a {1}. Ingrese {1} en el campo resaltado.
find.in.files.select.directory=Puede definir alcances de búsqueda y reemplazo. Para limitar la sustitución solo al directorio actual, haga clic en el botón {0} o haga clic en {1}.
find.in.files.press.replace.all=Haga clic en {0} para comenzar a refactorizar.
find.in.files.confirm.replace=Finalmente, presione {0} para confirmar la refactorización.
find.in.files.popup.closed.warning.message=Haga clic en {0} para volver a abrir la ventana {1}.
extract.method.lesson.name=Extracción del método
extract.method.invoke.action=Haga clic en {0} para extraer el bloque de código seleccionado como método.
extract.method.start.refactoring=Haga clic en {0} para comenzar a refactorizar.
extract.method.confirm.several.replaces=Hay dos lugares de intercambio en la línea de cócteles. La primera pieza ha sido extraída. Haga clic en {0} para extraer ambos.
extract.method.second.fragment=Ahora puedes confirmar o rechazar la sustitución del segundo fragmento.
extract.variable.lesson.name=Extracción de variables
extract.variable.start.refactoring=Presione {0} para extraer variables locales de la expresión {1}.
extract.variable.replace.all=Este bloque de código utiliza la expresión seleccionada tres veces. Seleccione el segundo elemento de la lista para reemplazarlos todos.
extract.variable.choose.name=Elija un nombre para la nueva variable o déjela como está. Haga clic en {0} para completar la refactorización.
run.debug.module.name=Ejecutar y depurar
run.debug.module.description=Ejecute su código y corrija errores con el depurador visual del IDE.
run.configuration.lesson.name=Configuración de ejecución
run.configuration.hide.toolwindow=<ide/> abrió automáticamente la ventana de herramientas {0}. Consejo\: El comando de ejecución completa se muestra en la parte superior de la ventana de la herramienta {0}. Ahora ocultemos la ventana de herramientas con {1}.
run.configuration.list.not.shown.warning=Seleccione la opción {0} del menú {1} → {2}. Esto es necesario para activar la barra de herramientas y completar la lección.
run.configuration.temporary.to.permanent=Para cada nueva ejecución, <ide/> crea una configuración de inicio temporal. Las configuraciones temporales se eliminan automáticamente cuando se alcanza el límite predeterminado de 5. Convirtamos la configuración temporal en una configuración permanente. Abra el menú desplegable en Ejecutar configuración.
run.configuration.select.save.configuration=Seleccione {0}.
run.configuration.edit.configuration=Digamos que desea cambiar la configuración o crear otra configuración manualmente. Deberá abrir el menú desplegable nuevamente y hacer clic en {0}. Alternativamente, puede utilizar la acción {1}.
run.configuration.settings.description=Aquí es donde administra su configuración de Ejecutar/Depurar. Aquí puede configurar los parámetros del programa, argumentos de JVM, variables de entorno, etc.
run.configuration.tip.about.save.configuration.into.file=Sugerencia\: A veces es posible que desee guardar su configuración en su propio archivo. Estas configuraciones se pueden compartir fácilmente entre colegas (generalmente usando un sistema de control de versiones). Ahora cierre el cuadro de diálogo Configuración y finalice esta lección.
debug.workflow.lesson.name=Flujo de trabajo de depuración
debug.workflow.incorrect.breakpoints=El punto de interrupción en esta clase está configurado incorrectamente.
debug.workflow.run.program=Antes de depurar, ejecutemos el programa para ver qué sale mal {0}.
debug.workflow.toggle.breakpoint=Entonces hay un problema. Comencemos nuestra investigación colocando un punto de interrupción. Para establecer un punto de interrupción, haga clic en el margen del editor o presione {0}.
debug.workflow.start.debug=Para comenzar a depurar la configuración de ejecución seleccionada, haga clic en {0} o presione {1}.
debug.workflow.need.restart.lesson=La sesión de depuración se ha detenido. Comienza la clase nuevamente.
debug.workflow.return.to.editor=Muchas acciones de seguimiento cambian el foco a la ventana de la herramienta de depuración. Volvamos al editor con {0}.
debug.workflow.use.watches=<ide/> tiene varias formas de mostrar valores de variables. En este paso hemos optado por llamar. Agreguémoslo a {0}. Después de copiar la expresión al portapapeles, puede presionar el botón {1} en la ventana de la herramienta de depuración para pegar el texto copiado. Alternativamente, puede utilizar acciones {2} {3} .
debug.workflow.consider.to.add.a.shortcut=(Revise las asignaciones de sus teclas de método abreviado más adelante)
debug.workflow.step.into=Entra en ello. Puede utilizar la acción {0} o la opción {1} en el panel Depurar.
debug.workflow.choose.method.to.step.in=Dado que en la mayoría de los casos es necesario omitir la evaluación de argumentos, la función de paso inteligente sugiere métodos de ajuste de forma predeterminada. Sin embargo, aquí debes seleccionar el segundo {0}. Puede seleccionarlo con su teclado {1} y luego presionar {2} o hacer clic en Llamar.
debug.workflow.quick.evaluate=Veamos qué le vamos a pasar a {0}. Invoca una evaluación rápida de la expresión {1} para los argumentos seleccionados.
debug.workflow.fix.error=¡Hay un error en el índice de la matriz! Arreglemoslo ahora mismo. ({0}) Cierre la ventana emergente y cambie 0 a 1.
debug.workflow.step.over=Comprobemos que la llamada {0} no genere una excepción. Utilice la acción de paso adelante {1} o haga clic en la opción {2}.
debug.workflow.mute.breakpoints=El mismo punto de interrupción otra vez. Ahora no hay necesidad de detenerse en este punto de ruptura. Por lo tanto, desactive el punto de interrupción haciendo clic en la opción {0} o usando la acción {1}.
debug.workflow.run.to.cursor=Comprobemos el resultado de {0}. Se movió el cursor del editor a la declaración {1}. Presione {2} o haga clic en {3}. {4} funciona incluso cuando los puntos de interrupción están desactivados.
debug.workflow.evaluate.expression=El valor {0} no parece ser el promedio que buscamos. Olvidé dividirlo por longitud. Creo que debería devolver {1}. Comprobemos nuestra suposición. Presione {2} o haga clic en la opción {3}.
debug.workflow.evaluate.it=Presione {0} o haga clic en {1}.
debug.workflow.stop.debug=¡Esa es la respuesta correcta! Cierre el cuadro de diálogo y detenga la depuración con el botón {0} o {1}.
debug.workflow.resume=Parece que ahora no hay excepciones. Continuamos usando {0} o haciendo clic en el botón {1}.
duplicate.and.delete.lines.select.several.lines=La misma acción se puede aplicar a varias líneas. Por ejemplo, haga doble clic en {0} para seleccionar las líneas actual y anterior.
duplicate.and.delete.lines.unexpected.selection.restore=Rango de selección inesperado
proceed.to.the.next.step=<callback id="{0}">Haga clic para continuar</callback>
local.history.lesson.name=Restaurar código eliminado
local.history.remove.code=En esta lección, aprenderá cómo restaurar código usando {0}. Haga clic en {1} para eliminar el fragmento de código seleccionado.
local.history.file.modification.progress=Editando archivo
local.history.editor.hint=La modificación de archivos está deshabilitada para el paso actual.
local.history.dialog.message=El IDE simula el proceso de edición de archivos. Espere hasta que finalice.
local.history.imagine.restore=Digamos que necesita restaurar el código que eliminó inicialmente. La acción {0} no ayudará ya que tendrá muchos otros cambios después de eliminarlos y es posible que estos cambios se pierdan.
local.history.invoke.context.menu=En {0}, puedes restaurar el código eliminado con unos pocos clics. Haga clic derecho en el editor para invocar el menú contextual.
local.history.show.history=Seleccione {0} → {1}.
local.history.select.revision=El panel izquierdo del cuadro de diálogo {0} muestra una lista de revisiones guardadas para el archivo actual. A medida que edita código, ejecuta pruebas y realiza otras acciones, el estado de su proyecto se guarda automáticamente en {1}. Por ejemplo, seleccione la revisión resaltada.
local.history.restore.code=El panel derecho muestra un visor de diferencias que muestra las diferencias entre cada revisión y el contenido actual. Verá el código de esta revisión eliminada al comienzo de la clase. Haga clic en el botón de expansión {0} para restaurar el fragmento de código.
local.history.restore.code.balloon=Haga clic para restaurar el fragmento de código
local.history.close.window=Cierre el cuadro de diálogo y regrese al código modificado. Presione {0}.
local.history.congratulations=¡excelente! ¡Fragmento de código restaurado!
onboarding.return.to.welcome.remark=\ y volver a la pantalla de inicio
context.actions.help.intention.actions=Acción de intención
collapse.help.link=Expandir o contraer elementos de código
multiple.selections.help.multiple.carets=Múltiples quilates y rango de selección.
selection.help.select.code.constructs=Seleccionar la sintaxis del código
basic.completion.help.code.completion=Finalización de código básico
postfix.completion.help.link=Finalización del código de sufijo
help.search.everywhere=Buscar en cualquier lugar
help.lines.of.code=Línea de código
help.code.completion=Finalización de código
rename.help.link=Refactorizar cambiar el nombre
refactoring.menu.help.link=Llamada de refactorización
local.history.help.link=Historial local
code.format.help.link=Configuración de estilo de código
parameter.info.help.link=Información de parámetros
quick.popups.help.link=Ventana emergente rápida
editor.coding.assistance.help.link=Trabajar con código fuente
declaration.and.usages.help.link=Ir a declaraciones y sus tipos
file.structure.help.link=Ver la estructura del archivo fuente
recent.files.locations.help.link=Buscar archivos recientes
find.in.files.help.link=Buscar y reemplazar objetos dentro de un proyecto
extract.method.help.link=Extracción del método
extract.variable.help.link=Extraer/insertar variables
run.configuration.help.link=Ejecutar/depurar configuración
debug.workflow.help.link=Código de depuración
restore.settings.informer=En esta lección, cambiamos algunas configuraciones de IDE. <callback id="{0}">Haga clic en</callback> para restaurar las opciones modificadas.
debug.workflow.use.watches.shortcut=Alternativamente, puede utilizar la acción {0} para agregar texto seleccionado a {1} {2}.
debug.workflow.check.result=Presione {0} para evaluar el resultado de la función.
multiple.selections.escape=Presione {0} para restablecer la selección múltiple y volver al modo de cursor único.
comment.line.uncomment.several.lines=Para descomentar varias líneas, seleccione todas las líneas comentadas y pulse {0}.
comment.block.lesson.name=Comentar líneas y bloques de código.
comment.block.comment=Para anotar un comentario de bloque con {0}, seleccione el bloque de código y presione {1}.
comment.block.uncomment=Para descomentar un comentario de bloque, coloque el cursor en cualquier lugar del bloque de comentarios y presione {0}.
debug.workflow.frames.disabled.warning=Para continuar con esta lección, <callback id="{0}">Activar</callback> ver {1} en la ventana de la herramienta Depurar.
