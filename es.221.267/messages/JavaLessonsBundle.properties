java.basic.completion.choose.first=Puede seleccionar el primer elemento en el menú de consulta presionando {0}.
java.basic.completion.activate=Si presiona {0} para activar la finalización básica, verá el menú de consulta nuevamente.
java.basic.completion.choose.item=Desde el menú de consulta, seleccione {0} y presione {1}.
java.basic.completion.complete=Haga clic en {0} para completar esta declaración.
java.basic.completion.deeper.level=Static A veces es necesario consultar la lista de sugerencias para encontrar una constante o un método. Toca dos veces {0} para mostrarlo en la lista de búsqueda.
java.basic.completion.module.promotion=Puede encontrar más detalles sobre la refactorización en el módulo {0}.
java.run.configuration.lets.run=Puede ejecutar código arbitrario marcado con {0}. Ejecutemos un ejemplo simple usando {1}. Como alternativa, puede hacer clic en {0} para seleccionar {2}.
java.postfix.completion.type=Type {0} after the parenthesis to see the list of postfix completion suggestions.
java.postfix.completion.complete=Select {0} from the list or type the same value in the editor. Press {1} to complete the statement.
java.smart.type.completion.apply=La finalización de tipo inteligente filtra la lista de sugerencias para incluir solo aquellos tipos que son aplicables dentro del contexto actual. Presione {0} para ver una lista de sugerencias coincidentes. Presione {1} para seleccionar el primer elemento.
java.smart.type.completion.return=La finalización de tipo inteligente también puede sugerir código para declaraciones de retorno. Presione {0} para ver el menú de consulta de la declaración de devolución. Presione {1} para seleccionar el primer elemento.
java.statement.completion.lesson.name=Declaración completa
java.statement.completion.complete.for=Presione {0} para completar la declaración {1}.
java.statement.completion.complete.if=Ingrese {0} y presione {1} para generar la declaración.
java.statement.completion.complete.condition=Agrega la condición entre paréntesis {0} y luego presiona {1} para pasar a la sintaxis {2}.
java.statement.completion.complete.finish.body=Ingrese {0} en una línea y presione {1} para completar la declaración y aplicar el formato.
java.rename.press.rename=Cambie el nombre del campo {1} presionando {0}.
java.rename.type.new.name=Ingrese un nuevo nombre para este campo (por ejemplo: {0}) y presione {1}.
java.rename.confirm.accessors.rename=<ide /> detectará ese getter/setter y sugerirá cambiarle el nombre en consecuencia. Ahora presione {0} o haga clic en {1}.
java.refactoring.menu.inline.variable.eng=Now let''s replace single usage of the {0} variable with an expression that defines it. Ahora insertemos la variable {0} para reducir su uso a uno. Puede filtrar el menú de refactorización presionando {1} y <strong> iv</strong> (<strong> i</strong> nline <strong> variable). Seleccione este elemento o presione {2}.
java.refactoring.menu.inline.variable=Ahora insertemos la variable {0} para reducir su uso a uno. Puede filtrar el menú de refactorización presionando {1} y <strong> iv</strong> (<strong> i</strong> nline <strong> variable). Seleccione este elemento o presione {2}.
java.refactoring.menu.introduce.constant.eng=Finally, let''s extract an extension from the file name. Finalmente, extraigamos la extensión del nombre del archivo. De manera similar, presione {0} y filtre por <strong> ic</strong> (<strong> i</strong> ntroduzca <strong> c</strong> onstant) o presione {1}.
java.refactoring.menu.introduce.constant=Finalmente, extraigamos la extensión del nombre del archivo. De manera similar, presione {0} y filtre por <strong> ic</strong> (<strong> i</strong> ntroduzca <strong> c</strong> onstant) o presione {1}.
java.refactoring.menu.confirm.constant=Este diálogo le permite elegir el nombre, la clase principal y la visibilidad de la nueva constante. Mantenga el valor predeterminado y presione {0} o haga clic en {1}.
java.editor.coding.assistance.press.to.fix=Press {0} to replace the argument with an empty array.
java.extract.method.edit.method.name=Edit the name of the new method or leave the one that IDE proposed. Then press {0}.
java.inheritance.hierarchy.lesson.name=Jerarquía de herencia
java.inheritance.hierarchy.goto.implementation=Haga clic en {0} para buscar {1} implementaciones.
java.inheritance.hierarchy.choose.any.implementation=Elija una implementación y presione o haga clic en {0}.
java.inheritance.hierarchy.navigate.to.base=Puede pasar de un método derivado a un súper método. Presione {0} o presione el icono {1} en el margen del editor.
java.inheritance.hierarchy.invoke.implementations.again=La declaración del método principal tiene su propio icono de margen {0}. Haga clic o presione {1} nuevamente.
java.inheritance.hierarchy.open.in.find.tool.window=Para jerarquías grandes, se recomienda buscar implementaciones en la ventana de herramientas {0}. Haga clic en {1}.
java.inheritance.hierarchy.hide.find.tool.window=Presione {0} para ocultar la ventana de herramientas {1}.
java.inheritance.hierarchy.open.method.hierarchy=Es una buena idea revisar toda la jerarquía de este método. Presione {0}.
java.inheritance.hierarchy.hide.method.hierarchy={0} También vamos a escondernos. Presione {1} nuevamente.
java.inheritance.hierarchy.open.class.hierarchy=Presione {0} para obtener una vista previa de la descripción general de la jerarquía de clases.
java.inheritance.hierarchy.last.note=<strong> Nota\:</strong> Las acciones {0} y {1} también se aplican a las clases. Las acciones {2} {3} rara vez se utilizan, pero siempre se pueden encontrar como {4} usando el filtro {5}.
java.find.occurrences.lesson.name=Buscar anterior/siguiente
java.find.occurrences.invoke.find=Ha seleccionado {0} para esta lección. Presione {1} para iniciar una búsqueda de texto completo del archivo actual.
java.find.occurrences.find.previous=Presione {0} para volver al uso anterior.
java.find.occurrences.search.closed.warning=Presione {0} para volver a abrir el campo de búsqueda.
java.find.occurrences.find.next=<ide /> copia automáticamente el texto seleccionado en el campo de búsqueda. Averigüemos dónde usarlo a continuación. Presione {0} o {1}.
java.find.occurrences.close.search.tool=Puede usar este atajo para navegar entre usos descubiertos recientemente incluso con el panel de búsqueda cerrado. Presione {0} para cerrar el panel de búsqueda.
java.find.occurrences.find.next.in.editor=Busque el siguiente uso con {0}.
java.find.occurrences.find.previous.in.editor=Presione {0} para volver.
java.find.occurrences.note.about.cyclic=<strong> Nota\:</strong> La búsqueda es cíclica, al tocar dos veces {0} en la última aparición se establecerá la última aparición en el rango de selección. {1} también es cíclico.
java.debug.workflow.hotswap.disabled.warning=The <strong>Hot Swap</strong> feature is disabled in the IDE settings. "{4}">click to activate</callback>.
java.debug.workflow.rebuild=Los programas grandes pueden tardar mucho en ejecutarse de nuevo. Si encuentra un error en el método puro, simplemente reconstruya el proyecto para aplicar la función de JVM <strong> hot-swap</strong>. Construyamos el proyecto {0} o {1}.
java.debug.workflow.confirm.hot.swap=Confirmar el reemplazo del <strong> intercambio en caliente</strong>.
java.debug.workflow.no.confirmation=<strong>Hot Swap</strong> is done automatically in the background. You may see a corresponding message in the lower-left corner.
java.debug.workflow.drop.frame=El método ha sido parcheado, pero el {0} obsoleto todavía se está ejecutando y la excepción se ha vuelto a lanzar. Eliminemos el marco y volvamos al estado anterior a la llamada {1}. {2} Haga clic en el panel de depuración o presione {3}.
java.statement.completion.help.link=Finalización de sintaxis
java.inheritance.hierarchy.help.link=Jerarquía del código fuente
java.find.help.link=Buscar objetivos dentro de archivos
toggle.case.part=mayúscula/minúscula
java.onboarding.module.name=Tour de incorporación
java.onboarding.module.description=Una breve descripción general de las características principales de {0}.
java.onboarding.lesson.name=Explora IDEA
java.onboarding.change.ui.settings=En esta clase, IDEA cambia algunas configuraciones de la interfaz de usuario a su estado predeterminado. Sus preferencias se restaurarán cuando complete o salga de esta clase.
java.onboarding.project.view.description=<strong>Vista de proyecto</strong> es una de las ventanas de herramientas principales. Esta vista incluye el directorio del proyecto, bibliotecas externas específicas del SDK y archivos borrador. Puede obtener una vista previa del proyecto de demostración haciendo clic en el botón rayado para abrirlo. También puedes abrirlo presionando {0}.
java.onboarding.balloon.project.view=Haga clic para abrir <strong>Vista de proyecto</strong>
java.onboarding.balloon.source.directory=Expanda el directorio {0} para ver los archivos fuente del proyecto.
java.onboarding.balloon.open.file=Haga doble clic para abrir {0}
java.onboarding.balloon.open.learn.toolbar=Cambie a la ventana de herramientas {0} para continuar con esta lección
java.onboarding.indexing.description=Cuando abres un proyecto por primera vez, <ide/> examina el JDK y el proyecto en sí para recopilar los detalles necesarios para ayudar con la codificación. Espere hasta que se complete la indexación para continuar.
java.onboarding.context.menu=Ahora que tienes la demostración abierta, ejecútala. Haga clic en uno de los iconos de margen resaltados para invocar el menú contextual.
java.onboarding.run.sample=Seleccione {0} o pruebe {1}.
java.onboarding.temporary.configuration.description=<ide/> ha creado una configuración de ejecución temporal. Esta configuración se puede encontrar en la barra de herramientas Ejecutar. Esta barra de herramientas le permite ejecutar acciones de ejecución populares para la configuración seleccionada, incluidas Ejecutar {0}, Depurar {1}, Generar código {2} y Ejecutar código con cobertura {3}.
java.onboarding.balloon.click.here=Haga clic aquí para establecer un punto de interrupción
java.onboarding.toggle.breakpoint.1=Quizás hayas notado que el método {1} devuelve {2} en lugar de {0}, que es el valor esperado. Vayamos a la declaración de devolución y depuremos el código problemático.
java.onboarding.toggle.breakpoint.2=Haga clic en el margen del área resaltada para establecer un punto de interrupción.
java.onboarding.balloon.start.debugging=Haga clic en el icono para comenzar a depurar
java.onboarding.start.debugging=Haga clic en el icono {0} para iniciar el proceso de depuración.
java.onboarding.balloon.about.debug.panel=La ventana de herramientas {0} proporciona {1,choice,0#toolbar|1#toolbar} varias acciones de depuración. Toma la clase {2} más tarde para probar esta acción.
java.onboarding.balloon.stop.debugging=Haga clic en el icono para comenzar a depurar
java.onboarding.stop.debugging=Comencemos a depurar. Haga clic en el icono {0}.
java.onboarding.type.division=Encontré un problema en el código, solucionémoslo. Divida la suma resultante por la longitud de los valores. El guión de entrenamiento ya ingresa {0}.
java.onboarding.invoke.completion=Ahora escriba un punto para mostrar todas las opciones de finalización de código disponibles.
java.onboarding.choose.values.item=Ahora puedes escribir {0} para acortar la lista de finalización de código, o también puedes seleccionarlo y presionar {1}.
java.onboarding.invoke.completion.tip=<strong>Consejo</strong>: A medida que escribe, <ide/> muestra automáticamente las opciones de finalización. También puede presionar {0} para mostrar las opciones de finalización en cualquier parte de su código.
java.onboarding.invoke.intention.for.warning.1=Acabamos de corregir un error, pero podemos hacer que este código sea aún más limpio. IDEA resalta líneas de código que podrían mejorarse y agrega una bombilla de luz amarilla.
java.onboarding.invoke.intention.for.warning.2=Presione {0} para obtener una vista previa de las advertencias y aplicar soluciones rápidas.
java.onboarding.select.fix=Aplicar primer elemento: {0}. En este caso, utilizar un bucle <strong>for-each</strong> hace que el código sea más fácil de entender.
java.onboarding.invoke.intention.for.code=Las intenciones también ahorran tiempo y facilitan la escritura de código. Reformateemos una concatenación de cadenas usando intenciones. Presione {0} para mostrar las opciones disponibles.
java.onboarding.apply.intention=Seleccione {0} y presione {1}.
java.onboarding.invoke.search.everywhere.1=Cuando trabaje en <ide/>, es posible que desee buscar archivos dentro de un proyecto, símbolo, clase o acción IDE. En esta lección, busquemos la acción {0} y pongamos en minúscula la cadena {1}.
java.onboarding.invoke.search.everywhere.2=Haga clic en {0} dos veces para abrir el cuadro de diálogo {1}.
java.onboarding.search.everywhere.description=Como puede ver, el texto seleccionado, {0}, se ha copiado automáticamente a la cadena de entrada. Intentemos ingresar {1} en lugar de {0}.
java.onboarding.apply.action=Seleccione la acción {0} y presione {1}.
java.onboarding.case.changed=El caso ha sido cambiado.
java.onboarding.epilog=Felicidades. Ha completado el recorrido de incorporación. Ahora puede continuar con lo siguiente:\n"{0}">Cerrar</callback>\n"{2}">Ver</callback>
java.onboarding.finish.title=Felicidades
java.onboarding.finish.text=Ha completado el recorrido de incorporación de IDEA.\nCerrar proyecto de demostración
java.onboarding.finish.modules=Ver más clases
java.onboarding.feedback.system.found.jdks=JDK encontrados:
java.onboarding.feedback.system.current.jdk=JDK actual:
java.onboarding.feedback.system.lang.level=Nivel de idioma:
java.onboarding.option.jdk.issues=problema JDK
java.debug.workflow.invalid.drop=Creo que realicé una acción no planificada en esta lección. Por favor reinicie el aprendizaje.
java.missed.sdk.click.setup=<ide/> El JDK no se puede encontrar en su computadora. Se requiere un JDK para ejecutar programas Java y proporcionar soporte de código. Para configurar el JDK, haga clic en el enlace {0} resaltado.
java.missed.sdk.show.options=Haga clic para ver las opciones disponibles.
java.missed.sdk.read.more.tip=<strong>Consejo</strong>: Para obtener más información sobre jdk, consulte la <a href=''{0}''>documentación</a>.
java.missed.sdk.configure=Configure su JDK usando una de las opciones sugeridas. Puede descargar este archivo o especificar la ruta a un directorio de inicio JDK existente en su computadora.
java.missed.sdk.wait.installation=Espere mientras el IDE instala el JDK.
java.onboarding.wait.indexing=Espere mientras el IDE indexa los archivos JDK.
