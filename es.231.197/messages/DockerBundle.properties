action.Docker.AddDockerConnection.text=Docker 연결
action.Docker.AddDockerConnection.description=Docker 연결을 추가합니다
action.Docker.FilterUntaggedImages.text=태그 없는 이미지
action.Docker.FilterStoppedContainers.text=중지된 컨테이너
group.Docker.Filter.text=Docker
action.Docker.RemoteServers.StopDeploy.text=배포 중지
action.Docker.RemoteServers.StopDeploy.description=선택한 배포 중지
action.Docker.RemoteServers.PauseContainer.text=컨테이너 일시 중지
action.Docker.RemoteServers.PauseContainer.description=선택한 컨테이터 내 모든 프로세스 중지
action.Docker.RemoteServers.UnpauseContainer.text=컨테이너 중지 해제
action.Docker.RemoteServers.UnpauseContainer.description=선택한 컨테이너 내 모든 프로세스 중지 해제
action.Docker.RemoteServers.CreateTerminal.text=터미널 생성
action.Docker.RemoteServers.CreateTerminal.description=선택한 컨테이너에서 셸 시작
action.Docker.RemoteServers.ExecInContainer.text=Exec
action.Docker.RemoteServers.ExecInContainer.description=선택된 컨테이너에서 명령을 실행합니다
action.Docker.RemoteServers.Attach2Container.text=연결
action.Docker.RemoteServers.Attach2Container.description=선택한 컨테이너에 연결합니다
action.Docker.RemoteServers.ShowContainerProcesses.text=프로세스 표시
action.Docker.RemoteServers.ShowContainerProcesses.description=선택한 컨테이너의 프로세스 목록를 표시합니다
action.Docker.RemoteServers.InspectContainerOrImage.text=검사
action.Docker.RemoteServers.CopyContainerImageId.text=이미지 ID 복사
action.Docker.RemoteServers.CopyContainerImageId.description=선택한 컨테이너의 이미지 ID 또는 태그를 클립보드에 복사합니다
action.Docker.RemoteServers.CopyContainerId.text=컨테이너 ID 복사
action.Docker.RemoteServers.CopyContainerId.description=선택한 컨테이너의 ID를 클립보드에 복사합니다
action.Docker.RemoteServers.CopyImageId.text=이미지 ID 복사
action.Docker.RemoteServers.CopyImageId.description=선택한 이미지의 ID를 클립보드에 복사합니다
action.Docker.RemoteServers.SelectContainerImage.text=이미지 표시
action.Docker.RemoteServers.SelectContainerImage.description=서비스 도구 창에 선택한 컨테이너의 이미지를 표시합니다
action.Docker.RemoteServers.ScaleComposeService.text=Scale
action.Docker.RemoteServers.ScaleComposeService.description=서비스를 스케일 조정합니다
action.Docker.RemoteServers.StopComposeService.text=중지
action.Docker.RemoteServers.StopComposeService.description=서비스 중지
action.Docker.RemoteServers.DeleteService.text=서비스 삭제
action.Docker.RemoteServers.StartComposeService.text=시작
action.Docker.RemoteServers.StartComposeService.description=\ 서비스 시작
action.Docker.RemoteServers.PullImage.text=이미지 풀…
action.Docker.RemoteServers.PullImage.description=저장소에서 이미지를 풀합니다
action.Docker.RemoteServers.PushImage.text=이미지 푸시…
action.Docker.RemoteServers.PushImage.description=선택한 이미지를 저장소에 푸시합니다
action.Docker.RemoteServers.DeleteImage.text=이미지 삭제
action.Docker.RemoteServers.DeleteImage.description=선택한 이미지 삭제
action.Docker.RemoteServers.CreateContainer.text=컨테이너 생성
action.Docker.RemoteServers.CreateContainer.description=선택한 이미지의 컨테이너를 생성 및 실행합니다
action.Docker.RemoteServers.DeleteConnection.text=연결 삭제
action.Docker.RemoteServers.DeleteContainer.text=컨테이너 제거
action.Docker.RemoteServers.DeleteContainer.description=선택한 컨테이너 삭제
action.Docker.RemoteServers.DeleteFailedNode.text=삭제
action.Docker.RemoteServers.StopContainer.text=컨테이너 중지
action.Docker.RemoteServers.StopContainer.description=선택한 컨테이너를 중지합니다
action.Docker.RemoteServers.StartContainer.text=컨테이너 시작
action.Docker.RemoteServers.StartContainer.description=선택한 컨테이너를 시작합니다
action.Docker.RemoteServers.RestartContainer.text=컨테이너 다시 시작
action.Docker.RemoteServers.RestartContainer.description=선택한 컨테이너 다시 시작
action.Docker.RemoteServers.DownComposeApp.text=Down
action.Docker.RemoteServers.DownComposeApp.description=관련 네트워크, 볼륨 및 이미지와 함께 컨테이너 중지 및 제거
action.Docker.RemoteServers.StopComposeApp.text=중지
action.Docker.RemoteServers.StopComposeApp.description=모든 서비스 중지
group.Docker.RemoteServersViewToolbar.text=Docker
DockerConverterProvider.conversion.description=Docker 실행 구성이 새 형식으로 변환됩니다
DockerFileDetector.notification.group=Docker: Dockerfile 탐지
DockerFileDetector.Notifier.title={0,choice,1#Dockerfile|2#Dockerfiles} 탐지
DockerFileDetector.Notifier.message.one=다음 파일에 대한 Docker 실행 구성을 생성할 수 있습니다.
DockerFileDetector.Notifier.message.full=다음 파일에 대한 Docker 실행 구성을 생성할 수 있습니다.
DockerFileDetector.Notifier.message.limited=다음을 비롯한 {0}개 파일에 대한 Docker 실행 구성을 생성할 수 있습니다.
DockerFileDetector.Notifier.disable=다시 묻지 않음
dockerTools.name=도구
dockerfile.brackets=대괄호
dockerfile.comma=쉼표
dockerfile.comments=주석
dockerfile.dot=마침표
dockerfile.keyword=키워드
dockerfile.number=숫자
dockerfile.parenths=소괄호
dockerfile.string=문자열
dockerfile.variable=변수
dockerfile.displayName=Dockerfile
DockerCloudType.presentable.name=Docker
DockerCloudType.run.configuration.type.presentable.name=Docker
DockerVolumeBindingConfigurable.BrowseFolderAction.title=호스트 경로
DockerVolumeBindingConfigurable.BrowseFolderAction.description=볼륨 호스트 경로 선택
DockerVolumeBindingConfigurable.mapping.warning.message=Docker 설정에서 경로 매핑을 구성하세요
DockerVolumeBindingConfigurable.mapping.warning.title=경고
DockerVolumeBindingConfigurable.container.path.text=컨테이너 경로:
DockerVolumeBindingConfigurable.host.path.text=호스트 경로:
DockerVolumeBindingConfigurable.read.only.text=읽기 전용
InspectDockerAction.description.container=선택한 컨테이너 검사
InspectDockerAction.description.image=선택한 이미지 검사
InspectDockerAction.tab.title=검사
ShowContainerProcessesAction.tab.title=프로세스
CreateContainerAction.popup.title=컨테이너 생성
CreateContainerAction.popup.defaultAction=생성…
DockerDeleteProvider.confirmation.title=삭제 확인
DockerDeleteProvider.confirmation.text.both.types={0} 및 {1}을(를) 삭제하시겠어요?
DockerDeleteProvider.confirmation.text.single.type={0}을(를) 삭제하시겠어요?
DockerDeleteProvider.confirmation.image.one=이미지 1개
DockerDeleteProvider.confirmation.image.many=이미지 {0}개
DockerDeleteProvider.confirmation.container.one=컨테이너 1개
DockerDeleteProvider.confirmation.container.many=컨테이너 {0}개
DockerCliImageBuilder.output.command=명령어:
DockerGroupRuntime.ContainersGroup.groupName=컨테이너
DockerGroupRuntime.ImagesGroup.groupName=이미지
DockerColorAnnotator.unresolvedVariableRef=변수 ''{0}''을(를) 확인할 수 없습니다
DockerInlayHintsProvider.name=Docker는 이름 지정된 스테이지를 실행합니다
DockerInlayHintsProvider.tooltip.run="{0}" 스테이지 실행(BuildKit 활성화)
DockerInlayHintsProvider.tooltip.build="{0}" 스테이지 빌드(BuildKit 활성화)
DockerInlayHintsProvider.tooltip.all=이름 지정된 모든 스테이지 구성 표시
DockerInlayHintsProvider.popup.title="{0}" 액션
DockerFileFindUsagesProvider.usageType.envVar=ENV 변수
DockerFileFindUsagesProvider.usageType.argVar=ARG 변수
DockerFileFindUsagesProvider.usageType.stage=Stage 선언
DockerFileFindUsagesProvider.usageType.unknown=선언
DockerFileRunLineMarkerProvider.action.group.run=실행
DockerFileRunLineMarkerProvider.action.group.build=이미지 빌드
DockerFileRunLineMarkerProvider.BuildAsTemporaryRunConfig.text=''{0}''에 이미지 빌드
DockerFileRunLineMarkerProvider.BuildExistingRunConfig.text=''{0}''에 대한 이미지 빌드
DockerRunLineMarkerProviderBase.tooltip=Docker에서 실행
DockerRunConfigActions.RunOrBuildExistingConfig.text.build=''{0}'' 빌드
DockerRunLineMarkerProviderBase.RunExistingRunConfig.text=''{0}'' 실행
DockerRunLineMarkerProviderBase.EditExistingRunConfig.text={0}'' 편집…
DockerRunLineMarkerProviderBase.EditExistingRunConfig.dialogTitle=실행 구성 편집
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.text=새 실행 구성…
DockerRunLineMarkerProviderBase.ConfigureNewRunConfig.dialogTitle=실행 구성 편집
DockerRunLineMarkerProviderBase.RunAsTemporaryRunConfig.text=''{0}''에서 실행
DockerRunConfigurationCreator.editConfiguration.title.new=Docker 구성 생성
DockerCloudConfigurable.error.apiUrlRequired=API URL 필요
DockerCloudConfigurable.error.connectionNotSpecified=연결 타입 지정
DockerCloudConfigurable.error.certificatesFolder.missing={0}에 인증서 폴더가 없습니다
DockerCloudConfigurable.chooser.certificates.title=인증서 위치 선택
DockerCloudConfigurable.docker.for.mac.radio.title=Mac용 Docker
DockerCloudConfigurable.docker.for.windows.radio.title=Windows용 Docker
DockerCloudConfigurable.connect.daemon.text=다음을 통해 Docker 데몬에 연결:
DockerCloudConfigurable.unix.socket.text=Unix 소켓:
DockerCloudConfigurable.tcp.socket.text=TCP 소켓
DockerCloudConfigurable.engine.url.text=Engine API URL:
DockerCloudConfigurable.certificates.folder.text=인증서 폴더:
DockerFileArgumentCountInspection.display.name=잘못된 인수 개수
DockerFileArgumentCountInspection.error.exactly.one.argument.required=정확히 인수 1개가 필요합니다
DockerFileArgumentCountInspection.error.at.least.N.arguments.required=최소 {0}개 인수가 필요합니다
DockerFileAssignmentsInspection.display.name='key=value' 쌍 내 올바르지 않은 공백
DockerFileAssignmentsInspection.error.spacing.not.allowed=여기에서 간격 지정은 허용되지 않습니다
DockerFileAddOrCopySemanticInspection.display.name='ADD'/'COPY' 명령어의 잘못된 대상
DockerFileAddOrCopySemanticInspection.error.target.must.be.folder=대상은 '/'로 끝나는 디렉터리여야 합니다
DockerFileAddOrCopySemanticInspection.error.quick.fix=후행 '/' 추가
DockerFileAssignmentsInspection.remove.spaces=공백을 제거합니다
DockerMappingConfigurable.browse.title=공유된 폴더 경로
DockerMappingConfigurable.browse.description=공유된 폴더 경로 선택
DockerMappingConfigurable.displayName=경로 매핑
DockerMappingConfigurable.error.local.path.required=로컬 경로 필요
DockerMappingConfigurable.error.remote.path.required=가상 머신 경로 필요
DockerMappingConfigurable.virtual.machine.path.text=가상 머신 경로:
DockerMappingConfigurable.local.path.text=로컬 경로:
docker.path.mapping.editor.table.virtual.machine.path.header=가상 머신 경로
docker.path.mapping.editor.table.local.path.header=로컬 경로
docker.registry.configurable.connection.status.connecting=연결 중…
docker.registry.configurable.connection.status.successful=연결 성공
docker.registry.configurable.connection.status.cannot.connect=연결할 수 없습니다. {0}
DockerContainerSettingsUI.exposedPortsHyperlink=<html>노출된 포트를 호스트 인터페이스에 공개:</html>
DockerContainerSettingsUI.executable.panel.title=실행 파일
DockerContainerSettingsUI.entrypoint.text=진입점:
DockerContainerSettingsUI.command.text=명령어:
DockerContainerSettingsUI.all.text=모두
DockerContainerSettingsUI.specify.text=지정
DockerContainerSettingsUI.bind.ports.text=바인드 포트:
DockerContainerSettingsUI.bind.mounts.text=바인드 마운트:
DockerContainerSettingsUI.environment.variables.text=환경 변수:
DockerContainerSettingsUI.run.options.text=실행 옵션:
## the similar set as above but without a ":" to use in the fragments UI
DockerContainerSettingsFragments.entrypoint.fragment=Entrypoint
DockerContainerSettingsFragments.entrypoint.actionHint=이미지의 디폴트 ENTRYPOINT 덮어쓰기
DockerContainerSettingsFragments.command.fragment=명령어
DockerContainerSettingsFragments.command.actionHint=새 컨테이너에서 실행할 명령어
DockerContainerSettingsFragments.bind.ports.fragment=바인드 포트
DockerContainerSettingsFragments.bind.ports.actionHint=컨테이너 포트를 호트스 포트에 매핑
DockerContainerSettingsFragments.bind.mounts.fragment=바인드 마운트
DockerContainerSettingsFragments.bind.mounts.actionHint=호스트의 디렉터리 또는 이름이 지정된 볼륨을 컨테이너에 바인드 마운트
DockerContainerSettingsFragments.environment.variables.fragment=환경 변수
DockerContainerSettingsFragments.environment.variables.actionHint=컨테이너 환경 변수 설정
DockerContainerSettingsFragments.attach.to.container.name=컨테이너에 연결
DockerContainerSettingsFragments.attach.to.container.tooltip=컨테이너에 연결 및 시작 시 'Attached Console' 열기
DockerContainerSettingsFragments.run.options.fragment=실행 옵션
DockerContainerSettingsFragments.run.options.actionHint='docker run' 명령어에 대한 다른 옵션 지정
DockerContainerSettingsFragments.all.ports.fragment=노출된 모든 포트를 임의로 공개
DockerContainerSettingsFragments.all.ports.actionHint=노출된 모든 포트를 임의의 포트에 공개
DockerPortBindingsField.dialogTitle=포트 바인딩:
DockerPortBindingsField.dialogEmptyText=포트 바인딩 없음
DockerPortBindingsField.PortBindingsTable.hostPort=호스트 포트
DockerPortBindingsField.PortBindingsTable.containerPort=컨테이너 포트
DockerPortBindingsField.PortBindingsTable.hostIP=호스트 IP
DockerPortBindingsField.PortBindingsTable.protocol=프로토콜
DockerPortBindingsEditor.hostPort=호스트 포트
DockerPortBindingsEditor.containerPort=컨테이너 포트
DockerPortBindingsEditor.hostIP=호스트 IP
DockerPortBindingsEditor.protocol=프로토콜
DockerVolumeBindingsField.dialogTitle=바인드 마운트
DockerVolumeBindingsField.dialogEmptyText=바인드 마운트 없음
DockerVolumeBindingsField.VolumeBindingsTable.source=호스트 경로
DockerVolumeBindingsField.VolumeBindingsTable.destination=컨테이너 경로
DockerVolumeBindingsField.VolumeBindingsTable.readOnly=읽기 전용
DockerComposeFilesTextField.DockerComposeFileDialog.title=Docker Compose 구성 파일
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOrFolder=구성 파일 또는 폴더 선택
DockerComposeFilesTextField.DockerComposeFileDialog.title.chooser.fileOnly=구성 파일 선택
DockerDeploymentSourcePathCombo.dialogTitle=Dockerfile
DockerDeploymentSourcePathCombo.dialogDescription=빌드 및 실행할 Dockerfile 지정
DockerFileAndContextFolderUI.ContextFolderField.dialogTitle=컨텍스트 폴더
DockerFileAndContextFolderUI.ContextFolderField.dialogDescription=컨텍스트 폴더를 지정하거나 디폴트가 적용되도록 공백으로 남겨두세요
DockerBuildSettingsUI.BuildArgsField.dialogTitle=빌드 인수
DockerBuildSettingsUI.BuildArgsField.dialogEmptyText=빌드 인수 없음
DockerBuildSettingsUI.DockerBuildOptionsField.onParseError=빌드 CLI 옵션을 분석할 수 없습니다. {0}
DockerBuildSettingsUI.dockerfile.text=Dockerfile:
DockerBuildSettingsUI.context.folder.text=컨텍스트 폴더:
DockerBuildSettingsUI.image.tag.text=이미지 태그:
DockerBuildSettingsUI.build.args.text=빌드 인수:
DockerBuildSettingsUI.build.options.text=빌드 옵션:
# the same as labels but without ":" for a fragments popup togggle actions
DockerBuildSettingsFragments.context.folder.fragment=컨텍스트 폴더
DockerBuildSettingsFragments.context.folder.actionHint=빌드 도중 데몬으로 전송할 폴더를 지정합니다
DockerBuildSettingsFragments.build.args.fragment=Arg 빌드
DockerBuildSettingsFragments.build.options.fragment=빌드 옵션
DockerBuildSettingsFragments.build.options.actionHint='docker build' 명령어의 다른 옵션을 지정하세요
DockerContainerSettingsUI.EnvVarsField.dialogTitle=환경 변수
DockerContainerSettingsUI.EnvVarsField.dialogEmptyText=변수 없음
DockerContainerSettingsUI.DockerRunOptionsField.onParseError=실행 CLI 옵션을 분석할 수 없습니다. {0}
DockerCliOptionsField.onParseError=명령줄 옵션을 분석할 수 없습니다. {0}
SingletonDeploymentSourceType.error.image.tag.atMaxOne=최대 1개 태그만 허용됩니다
SingletonDeploymentSourceType.error.image.tag.format=잘못된 이미지 태그 형식
SingletonDeploymentSourceType.error.container.name.format=잘못된 컨테이너 이름: '[a-zA-Z0-9][a-zA-Z0-9_.-]*'가 필요합니다
DockerImageDeploymentSourceType.name=Docker 이미지
DockerImageDeploymentSourceType.suggestRunConfigurationName=Docker 이미지
DockerImageDeploymentSourceType.deploymentName={0} 이미지 ID: {1}
DockerImageDeploymentSourceType.error.image.id.required=이미지 ID 또는 이름 필요
DockerComposeDeploymentSourceType.name=Docker-compose
DockerComposeDeploymentSourceType.deploymentName=Compose: {0}
DockerComposeDeploymentSourceType.suggestRunConfigurationName={0}: Compose 배포
DockerComposeDeploymentSourceType.error.path.required=Compose 파일 경로 필요
DockerComposeDeploymentSourceType.error.file.does.not.exist=Compose 파일이 ''{0}''에 없습니다
DockerFileDeploymentSourceType.name=Dockerfile
DockerFileDeploymentSourceType.deploymentName={0} Dockerfile: {1}
DockerFileDeploymentSourceType.suggestRunConfigurationName={0}
DockerFileDeploymentSourceType.error.path.required=Dockerfile 파일 경로 필요
DockerFileDeploymentSourceType.error.dockerfile.does.not.exist=Dockerfile이 ''{0}''에 없습니다
DockerPropertiesRuntimeEditor.action.copy.to.clipboard.name=클립보드에 복사
DockerFileSystem.error.modification.not.supported=Docker 컨테이너 파일 시스템에서 수정은 지원되지 않습니다. {0}
DockerFileSystem.error.can.not.get.contents={0}의 내용을 가져올 수 없습니다
DockerContainerBrowserTab.displayName=파일
DockerContainerBrowserTab.emptyText=파일을 찾아보려면 컨테이너를 시작합니다
DockerFileChooser.emptyText=파일 시스템 루트에 액세스할 수 없습니다. 해당 Docker 컨테이너 종류는 아직 지원되지 않을 수 있습니다.
DockerFileChooser.loadingText=파일 시스템 루트 받는 중…
DockerFileChooser.emptyPathText=경로를 확인할 항목을 선택하세요
DockerFileChooser.RefreshAction.text=새로고침
DockerFileChooser.RefreshAction.description=Docker 컨테이너 파일 시스템 트리 새로고침
DockerContainerBrowser.downloadTask.title=Docker 컨테이너에서 파일 다운로드
DockerContainerBrowser.DownloadAction.text=스크래치로 다운로드
DockerContainerBrowser.DownloadAction.description=Docker 컨테이너의 파일을 스크래치 파일로 다운로드합니다
DockerContainerBrowser.ViewInEditorAction.text=에디터 뷰
DockerContainerBrowser.ViewInEditorAction.description=에디터에서 Docker 컨테이너 파일을 확인합니다
DockerRootType.displayName=Docker 파일
DockerWritingAccessProvider.readOnlyMessage=Docker 컨테이너의 파일은 읽기 전용입니다
#
DockerComposeDeploymentEditor.enable.buildkit.hint=이미지 빌드용 BuildKit 지원 활성화
DockerComposeDeploymentEditor.env.file.does.not.exist=''{0}''에 환경 변수 파일이 없습니다
DockerComposeDeploymentEditor.env.file.not.valid=''{0}''에서 환경 변수 파일을 읽을 수 없습니다
DockerComposeDeploymentEditor.environment.variables=환경 변수
DockerComposeDeploymentEditor.environment.variables.actionHint=Docker Compose 프로세스의 환경 변수를 설정하세요. 이 환경 변수는 모든 컨테이너에서 제공되지 않습니다.
DockerComposeDeploymentEditor.up.build.desc=--build
DockerComposeDeploymentEditor.up.build.name=항상
DockerComposeDeploymentEditor.up.build.actionHint=컨테이너 시작 전 이미지 빌드
DockerComposeDeploymentEditor.up.scale.name=스케일 재정의
DockerComposeDeploymentEditor.up.scale.desc=--scale
DockerComposeDeploymentEditor.up.scale.hint=서비스의 컨테이너 개수 설정
DockerComposeDeploymentEditor.up.exit.code.from=서비스 종료 코드
DockerComposeDeploymentEditor.up.exit.code.from.name=종료 코드 반환
DockerComposeDeploymentEditor.up.exit.code.from.desc=--exit-code-from
DockerComposeDeploymentEditor.up.exit.code.from.actionHint=선택한 서비스 컨테이너의 종료 코드를 반환합니다. 지정된 서비스의 컨테이너가 멈추면 모든 컨테이너를 중지합니다.
DockerComposeDeploymentEditor.up.timeout.name=SIGKILL 시간 제한 초과
DockerComposeDeploymentEditor.up.timeout.desc=--timeout
DockerComposeDeploymentEditor.up.timeout.hint=컨테이너를 강제 종료하려면 시간 제한을 초 단위로 설정하세요. 컨테이너에는 먼저 SIGTERM이 전송되고 지정된 시간이 초과되면 SIGKILL이 전송됩니다.
DockerComposeDeploymentEditor.up.detach.name=없음
DockerComposeDeploymentEditor.up.detach.desc=--detach
DockerComposeDeploymentEditor.up.detach.actionHint=연결 해제 모드에서 실행
DockerComposeDeploymentEditor.no.deps.name=선택한 서비스
DockerComposeDeploymentEditor.no.deps.desc=--no-deps
DockerComposeDeploymentEditor.no.deps.actionHint=연결된 서비스 시작 안 함
DockerComposeDeploymentEditor.up.force.recreate.name=모두
DockerComposeDeploymentEditor.up.force.recreate.desc=--force-recreate
DockerComposeDeploymentEditor.up.force.recreate.actionHint=구성이나 이미지가 변경되지 않는 경우에도 모든 컨테이너 다시 생성
DockerComposeDeploymentEditor.up.always.recreate.name=종속성 다시 생성
DockerComposeDeploymentEditor.up.always.recreate.desc=--always-recreate-deps
DockerComposeDeploymentEditor.up.always.recreate.actionHint=종속 컨테이너 다시 생성
DockerComposeDeploymentEditor.up.no.recreate.desc=--no-recreate
DockerComposeDeploymentEditor.up.no.recreate.name=없음
DockerComposeDeploymentEditor.up.no.recreate.actionHint=구성이 변경된 경우에도 기존 컨테이너 다시 생성 안 함
DockerComposeDeploymentEditor.up.no.build.name=사용 안 함
DockerComposeDeploymentEditor.up.no.build.desc=--no-build
DockerComposeDeploymentEditor.up.no.build.actionHint=이미지를 빌드하지 않습니다. 누락된 경우 오류 표시와 함께 중지합니다.
DockerComposeDeploymentEditor.up.group.start=시작
DockerComposeDeploymentEditor.up.group.start.hint=시작할 서비스 구성
DockerComposeDeploymentEditor.up.group.start.default=선택 항목 및 종속성
DockerComposeDeploymentEditor.up.group.start.default.hint=지정 및 연결된 서비스 시작
DockerComposeDeploymentEditor.up.group.attach.to=연결 대상
DockerComposeDeploymentEditor.up.group.attach.to.hint=출력 스트림을 표시할 컨테이너 구성
DockerComposeDeploymentEditor.up.group.attach.to.default=선택한 서비스
DockerComposeDeploymentEditor.up.group.attach.to.default.hint=종속성이 아닌 시작된 모든 컨테이너에 연결
DockerComposeDeploymentEditor.up.group.build=빌드
DockerComposeDeploymentEditor.up.group.build.hint=컨테이너 시작 전 빌드할 이미지 구성
DockerComposeDeploymentEditor.up.group.build.default=누락된 이미지만
DockerComposeDeploymentEditor.up.group.build.default.hint=사용할 수 있는 빌드 이미지만
DockerComposeDeploymentEditor.up.group.recreate=컨테이너 다시 생성
DockerComposeDeploymentEditor.up.group.recreate.hint=중지하고 새 컨테이너로 교체할 컨테이너 구성
DockerComposeDeploymentEditor.up.group.recreate.default=변경된 구성
DockerComposeDeploymentEditor.up.group.recreate.default.hint=구성 또는 이미지가 변경된 경우 컨테이너 교체
DockerComposeDeploymentEditor.up.group.stop.containers=컨테이너 중지
DockerComposeDeploymentEditor.up.group.stop.containers.hint=컨테이너를 중지할 방법 구성
DockerComposeDeploymentEditor.up.group.stop.containers.default=수동
DockerComposeDeploymentEditor.up.group.stop.containers.default.hint=수동으로 컨테이너 중지
DockerComposeDeploymentEditor.up.no.start.name=없음
DockerComposeDeploymentEditor.up.no.start.desc=--no-start
DockerComposeDeploymentEditor.up.no.start.actionHint=서비스 생성 후 시작 안 함
DockerComposeDeploymentEditor.up.abort.on.exit.name=컨테이너 종료 시
DockerComposeDeploymentEditor.up.abort.on.exit.desc=--abort-on-container-exit
DockerComposeDeploymentEditor.up.abort.on.exit.actionHint=컨테이너 하나가 멈추면 모든 컨테이너 중지
DockerComposeDeploymentEditor.up.attach.deps.name=선택 항목 및 종속성
DockerComposeDeploymentEditor.up.attach.deps.desc=--attach-dependencies
DockerComposeDeploymentEditor.up.attach.deps.actionHint=시작된 모든 컨테이너 및 종속성에 연결
DockerComposeDeploymentEditor.up.renew.anon.volumes.name=익명 볼륨 다시 생성
DockerComposeDeploymentEditor.up.renew.anon.volumes.desc=--renew-anon-volumes
DockerComposeDeploymentEditor.up.renew.anon.volumes.actionHint=이전 컨테이너에서 데이터를 가져오지 않고 익명 볼륨을 다시 생성
DockerComposeDeploymentEditor.up.remove.orphans.name=고립 항목 제거
DockerComposeDeploymentEditor.up.remove.orphans.desc=--remove-orphans
DockerComposeDeploymentEditor.up.remove.orphans.actionHint=Compose 파일에 정의되지 않은 서비스의 컨테이너 제거
DockerComposeDeploymentEditor.group.up=docker-compose up
DockerComposeDeploymentEditor.group.up.actionHint=추가 'docker-compose up' 옵션을 사용하여 실행
DockerComposeDeploymentEditor.group.up.name='up' 옵션 적용
DockerComposeDeploymentEditor.group.up.childrenGroupName=docker-compose up 옵션
DockerComposeDeploymentEditor.up.timeout.label=시간 제한:
DockerComposeDeploymentEditor.up.timeout.suffix=초
DockerComposeDeploymentEditor.up.exit.code.label=종료 코드:
DockerComposeDeploymentEditor.up.exit.code.suffix=선택한 서비스의 종료 코드 반환
#
DockerComposeDeploymentEditor.enable.compatibility.mode=호환 모드 켜기
DockerComposeDeploymentEditor.enable.compatibility.mode.hint=활성화되면 docker-compose는 각 서비스 정의의 배포 섹션을 읽어 해당하는 버전 2의 매개변수로 변환하도록 시도합니다.
DockerComposeDeploymentEditor.down.remove.volumes=`down`으로 볼륨 제거
DockerComposeDeploymentEditor.down.remove.volumes.actionHint=--volumes 옵션을 지정하고 'docker-compose down'을 실행하여 종료 시 이름 지정된 볼륨과 익명 볼륨을 모두 삭제하세요
DockerComposeDeploymentEditor.down.remove.images.group='down'으로 이미지 제거
DockerComposeDeploymentEditor.down.remove.images.group.hint=종료 시 제거해야 할 이미지 구성
DockerComposeDeploymentEditor.down.remove.images.default=없음
DockerComposeDeploymentEditor.down.remove.images.default.hint=이미지 제거 안 함
DockerComposeDeploymentEditor.down.remove.images.all=모두
DockerComposeDeploymentEditor.down.remove.images.all.hint=서비스에서 사용한 모든 이미지 제거
DockerComposeDeploymentEditor.down.remove.images.all.desc=--rmi all
DockerComposeDeploymentEditor.down.remove.images.local=로컬
DockerComposeDeploymentEditor.down.remove.images.local.hint=사용자 지정 태그가 없는 이미지만 제거
DockerComposeDeploymentEditor.down.remove.images.local.desc=--rmi local
DockerComposeDeploymentEditor.incompatible.error.mask="{0}"이(가) {1}와(과) 호환되지 않습니다
DockerComposeDeploymentEditor.env.file.label=환경 변수 파일:
DockerComposeDeploymentEditor.env.file.name=환경 변수 파일
DockerComposeDeploymentEditor.env.file.actionHint=환경 변수 설정을 위해 파일을 지정
DockerComposeDeploymentEditor.env.file.browse.title=환경 변수 파일 선택
DockerComposeDeploymentEditor.services.name=서비스 지정
DockerComposeDeploymentEditor.run=실행
DockerComposeDeploymentEditor.up.timeout.dialog.message.not.valid.integer={0} 은(는) 유효한 정수가 아닙니다
DockerComposeDeploymentEditor.up.timeout.dialog.message.timeout.cannot.be.less=시간 제한은 0 미만일 수 없습니다
DockerComposeDeploymentEditor.up.timeout.dialog.message.timeout.cannot.be.greater=시간 제한은 1000을 초과할 수 없습니다
DockerComposeServicesField.empty.text=비워 두고 모든 서비스 실행
DockerComposeServiceScalePairPanel.dialog.ok.text=저장
DockerComposeServiceScaleDialog.dialog.title=스케일 조정할 서비스 선택
DockerComposeServiceScaleDialog.column.name.service=서비스
DockerComposeServiceScaleDialog.column.name.scale=다음으로 스케일 조정
DockerComposeServiceScaleDialog.service.label=서비스:
DockerComposeServiceScaleDialog.scale.to.label=다음으로 스케일 조정:
DockerComposeServiceScaleDialog.title=각 서비스에서 실행할 컨테이너 개수 설정(compose 파일이 있는 경우 스케일 재정의)
DockerComposeServiceScaleDialog.service.does.not.exist.error="{0}" 서비스가 지정된 docker-compose 파일에 없습니다
DockerComposeServiceScaleDialog.services.does.not.exist.error={0} 서비스가 지정된 docker-compose 파일에 없습니다
#
configurable.DockerLinkConfigurable.display.name=링크
configurable.DockerLinkConfigurable.ContainerNamesLoader.task.title=컨테이너 이름 로드 중…
configurable.DockerLinkConfigurable.name.text=이름:
configurable.DockerLinkConfigurable.alias.text=별칭:
configurable.DockerEnvVarConfigurable.display.name=환경 변수
configurable.DockerEnvVarConfigurable.name.text=이름:
configurable.DockerEnvVarConfigurable.value.text=값:
configurable.DockerPortBindingConfigurable.display.name=포트 바인딩
configurable.DockerRegistryListConfigurable.empty.selection.string=Docker 레지스트리를 구성하려면 '+'를 클릭하세요
configurable.DockerRegistryListConfigurable.display.name=Docker 레지스트리
configurable.DockerRegistryListConfigurable.AddRegistryAction.text=추가
configurable.DockerRemoteServerConfigurable.display.name=Docker
configurable.DockerVolumeBindingConfigurable.display.name=볼륨 바인딩
configurable.PushImageConfigurable.display.name=이미지 푸시
configurable.PushImageConfigurable.registry.text=레지스트리:
configurable.PushImageConfigurable.repository.text=이미지:
configurable.PushImageConfigurable.tag.text=태그:
settings.docker.executable=Docker 실행 파일:
settings.docker.compose.executable=Docker Compose 실행 파일:
settings.choose.docker.compose.executable.location=Docker Machine 실행 파일 위치 선택
settings.choose.docker.executable.location=Docker 실행 파일 위치 선택
DockerComposeCredentialsEditor.validate.server.not.selected=Docker 서버가 선택되지 않았습니다
DockerComposeCredentialsEditor.validate.files.not.chosen=구성 파일이 선택되지 않았습니다
DockerComposeCredentialsEditor.validate.no.services.defined=구성 파일에서 정의된 서비스가 없습니다
DockerComposeCredentialsEditor.validate.service.name.not.selected=서비스 이름이 선택되지 않았습니다
DockerComposeCredentialsEditor.server.text=서버:
DockerComposeCredentialsEditor.configuration.files.text=구성 파일:
DockerComposeCredentialsEditor.service.text=서비스:
DockerComposeCredentialsEditor.environment.variables.text=환경 변수(&E)
DockerComposeCredentialsEditor.processing=Docker Compose 구성 처리 중…
DockerComposeCredentialsEditor.no.service.placeholder=<Select service>
DockerComposeCredentialsEditor.getting.services.from.compose.configuration=Docker Compose 구성 파일에서 서비스 목록 가져오는 중…
DockerComposeSettingsEditor.form.name=Docker Compose
DockerComposeSettingsEditor.form.command=명령어 및 옵션:
DockerComposeSettingsEditor.form.command.preview=명령어 미리보기:
DockerComposeCredentialsType.name=Docker Compose
DockerCredentialsEditor.validate.server.not.selected=Docker 서버가 선택되지 않았습니다
DockerCredentialsEditor.validate.image.not.specified=Docker 이미지 이름이 지정되지 않았습니다
DockerCredentialsEditor.server.text=서버:
DockerCredentialsEditor.image.name.text=이미지 이름:
DockerCredentialsType.name=Docker
DockerInterpreterContainerSettingsEditorDialog.title=Docker 컨테이너 설정 편집
DockerInterpreterContainerSettingsEditor.disable.networking.text=네트워킹 비활성화
DockerInterpreterContainerSettingsEditor.network.mode.text=네트워크 모드:
DockerInterpreterContainerSettingsEditor.publish.all.ports.text=모든 포트 공개
DockerInterpreterContainerSettingsEditor.run.options.text=실행 옵션:
DockerTargetMainStep.step.description=새 Docker 타깃 생성
DockerTargetBuildImageStep.description=Docker 이미지 빌드 중…
DockerTargetPullImageStep.description=Docker 이미지 풀 중…
DockerTargetConfigurable.section.title=Docker 컨테이너
DockerTargetConfigurable.server.row.label=Docker 서버:
DockerTargetConfigurable.build.radio.text=빌드
DockerTargetConfigurable.pull.radio.text=풀
DockerTargetConfigurable.image.row.label=이미지:
DockerTargetConfigurable.dockerfile.row.label=Dockerfile:
DockerTargetConfigurable.context.folder.row.label=컨텍스트 폴더:
DockerTargetConfigurable.optional.row.title=옵션
DockerTargetConfigurable.build.options.row.label=빌드 옵션:
DockerTargetConfigurable.build.args.row.label=빌드 인수:
DockerTargetConfigurable.rebuild.automatically.checkbox.text=코드 실행 전 항상 자동으로 이미지를 다시 빌드합니다.
DockerTargetConfigurable.image.tag.row.label=이미지 태그:
DockerTargetConfigurable.run.options.row.label=실행 옵션:
DockerTargetConfigurable.run.options.comment.text=Docker 실행 명령어에 대한 매개변수입니다.\n예: 포트 8080을 노출하기 위한 -p 8080:8080
AddDockerConnectionAction.title=도커 연결
ComposeScaleAction.Dialog.message=컨테이너 개수:
ComposeScaleAction.Dialog.title=스케일 조정
DockerComposeExecutionFailed.notification.action.title=설정 표시…
DockerRegistryConfigurable.ConnectionTester.task.title=연결 중…
DockerRegistryConfigurable.address.text=주소:
DockerRegistryConfigurable.username.text=사용자 이름:
DockerRegistryConfigurable.password.text=비밀번호:
DockerRegistryConfigurable.test.connection.text=연결 테스트
DockerServiceViewContributor.contributor.descriptor.name=Docker
ContainerLogTab.title=로그
DockerBuildLogTab.title=빌드 로그
ExecInContainerAction.Case.Dialog.message=명령어:
ExecInContainerAction.Case.Dialog.title=Exec
ExecInContainerAction.ListPopup.title=컨테이너의 실행 명령어
ExecInContainerAction.ListPopup.textFor.create=생성 및 실행…
ExecInContainerAction.ManageExecCommandsDialog.column.title=명령어:
ExecInContainerAction.ManageExecCommandsDialog.column.no.commands=명령어 없음
ExecInContainerAction.ManageExecCommandsDialog.command.is.empty=명령어가 비어 있습니다
ExecInContainerAction.ListPopup.textFor.manage=관리…
ExecInContainerAction.tab.title=Exec: {0}
DockerImageGroupDetails.ImagePullTab.title=이미지 콘솔
ImagePullPanel.image.to.pull.label=풀할 이미지:
ImagePullPanel.image.to.pull.comment=혹은 {0}을(를) 눌러 시작
ImagePullPanel.action.pull=선택 항목 풀
ImagePullPanel.terminal.name=Docker 이미지
ImagePullPanel.terminal.info.using.default.tag=디폴트 태그 사용: 최신
ImagePullPanel.terminal.error.reference.format=잘못된 참조 형식: {0}
ImagePullPanel.queue.label=큐에 있는 이미지 풀: {0}
ToolBasedDockerComposeConfigurationParser.progress.title=Docker Compose 구성 처리 중…
DockerExtraHostConfigurable.hostname.text=호스트 이름:
DockerExtraHostConfigurable.ip.text=IP:
DockerComposeDeploymentEditor.services.popup.title=서비스 전환
DockerComposeDeploymentEditor.compose.files.text=Compose 파일:
DockerComposeDeploymentEditor.services.text=서비스:
DockerDeploymentEditor.image.id.text=이미지 ID 또는 이름:
DockerDeploymentEditor.run.built.image.text=빌드된 이미지 실행
DockerDeploymentEditor.container.name.text=컨테이너 이름:
DockerDeploymentEditor.command.preview.text=명령어 미리보기:
DockerFileDeploymentEditor.group.run.title=실행
DockerFileDeploymentEditor.group.run.option.name=실행 옵션
DockerFileDeploymentEditor.group.run.actionHint=빌드된 이미지의 컨테이너 실행
DockerFileDeploymentEditor.group.build.title=빌드

progress.text.preparing.volumes=볼륨 준비 중…
progress.text.docker.upload.volume.progress.message={0}에서 업로드 시 {1}(으)로 마운트됩니다
#
DockerDeploymentStatus.starting=시작 중
DockerDeploymentStatus.stopping=중지 중
DockerDeploymentStatus.deleting=삭제 중
AbstractDockerProcessConnectionData.docker.account.specified=Docker 계정이 지정되지 않았습니다
AbstractDockerProcessConnectionData.docker.account.found=Docker 계정을 찾을 수 없습니다
DockerComposeServiceStarter.starting.docker.compose=docker-compose 시작 중…
DockerEnvironment.cant.run.process=프로세스를 실행할 수 없습니다. {0}
DockerEnvVarConfigurable.name.required=이름 필요
DockerExtraHostConfigurable.error.hostname.required=호스트 이름 필요
DockerExtraHostConfigurable.error.ip.required=IP 필요
DockerLinkConfigurable.error.name.required=이름 필요
DockerRegistryConfigurable.error.address.required=주소 필요
DockerRegistryConfigurable.error.username.required=사용자 이름이 필요합니다
DockerRegistryConfigurable.error.password.required=비밀번호가 필요합니다
DockerSingletonDeploymentSourceType.unknown.node.text=<알 수 없음>
DockerTargetStepBase.title=Docker
DockerTargetType.VolumeContributionUI.mount.as.volume=볼륨으로 마운트
DockerTargetType.error.cant.find.server=Docker 서버 {0}을(를) 찾을 수 없습니다
DockerEnvironmentFactory.error.cant.find.image=이미지를 찾을 수 없습니다. {0}
DockerEnvironmentFactory.progress.text.preparing.docker.target=Docker 타깃 준비 중…
DockerUtil.error.docker.image.could.be.found=Docker 이미지 "{0}"을(를) 찾을 수 없습니다
DockerVolumeBindingConfigurable.error.container.path.required=컨테이너 경로 필요
PushImageConfigurable.error.repository.required=저장소 필요
PushImageConfigurable.error.tag.required=태그 필요
DockerComposeCli.error.version.command.time.out=docker-compose 버전 명령어가 시간 초과되었습니다
DockerComposeCli.error.version.command.nonzero.exit.code=docker-compose 버전 명령어가 0이 아닌 종료 코드 {0}와(과) 함께 완료되었습니다
DockerComposeCli.error.cant.find.version.in.output=docker-compose 출력에서 버전을 찾을 수 없습니다. {0}
DockerComposeProcessUtil.error.container.not.found=Docker Compose 컨테이너 {0}을(를) 찾을 수 없습니다
ComposeServiceExecCmd.error.path.required=Docker Compose 구성 경로가 정의되지 않았습니다
ComposeServiceExecCmd.error.service.name.required=Docker Compose 서비스 이름이 정의되지 않았습니다
ComposeServiceExecCmd.error.command.required=명령어가 정의되지 않았습니다
ComposeServiceRunCmd.error.path.required=Docker Compose 구성 경로가 정의되지 않았습니다
ComposeServiceRunCmd.error.service.required=Docker Compose 서비스 이름이 정의되지 않았습니다
ComposeServiceUpCmd.error.path.required=Docker Compose 구성 경로가 정의되지 않았습니다
ComposeServiceUpCmd.error.service.required=Docker Compose 서비스 이름이 정의되지 않았습니다
DockerPullToTerminal.error.operation.failed=작업 실패: {0}. 자세한 내용은 로그를 확인하세요
ComposeApplicationRuntime.notification.group=docker-compose
RegistryRuntimeTask.notification.group=Docker
DockerLinksEditor.NameColumn.title=이름
DockerLinksEditor.AliasColumn.title=별칭
DockerVolumeBindingsEditor.ContainerPath.title=컨테이너 경로
DockerVolumeBindingsEditor.HostPath.title=호스트 경로
DockerVolumeBindingsEditor.ReadOnly.title=읽기 전용
DockerPropertiesRuntimeEditor.NameColumn.title=이름
DockerPropertiesRuntimeEditor.ValueColumn.title=값
DockerExtraHostsEditor.HostnameColumn.title=호스트 이름
DockerExtraHostsEditor.IPColumn.title=IP
DockerEnvVarsEditor.ValueColumn.title=값
DockerEnvVarsEditor.NameColumn.title=이름
DockerComposeCliUtil.error.compose.execution.failed=Docker Compose 실행 실패
DockerComposeIntegrationService.progress.title.updating.volume={0} 볼륨 업데이트 중
DockerComposeCredentialsEditor.error.base.configuration.file.does.not.exist=기본 구성 파일 "{0}"이(가) 없습니다
DockerInterpreterContainerSettingsEditor.port.bindings=포트 바인딩
DockerInterpreterContainerSettingsEditor.links=링크
DockerInterpreterContainerSettingsEditor.extra.hosts=추가 호스트
DockerInterpreterContainerSettingsEditor.volume.bindings=볼륨 바인딩
DockerInterpreterContainerSettingsEditor.environment.variables=환경 변수
DockerTargetTerminalStepBase.terminal.title.docker=Docker
DockerTargetTerminalStepBase.status.connecting.to.docker.daemon=Docker 데몬에 연결 중…
DockerTargetTerminalStepBase.error.cannot.connect.to.daemon.at.0={0}의 Docker 데몬에 접속할 수 없습니다. Docker 데몬이 실행 중인가요?
DockerTargetTerminalStepBase.error.cannot.connect.to.daemon=Docker 데몬에 접속할 수 없습니다. Docker 데몬이 실행 중인가요?
RemoteDockerRuntime.progress.title.pulling.image=''{0}'' 이미지 풀 중…
RegistryRuntimeTask.current.of.total={1}의 {0}
RegistrySelectionEditor.default.name.docker.registry=Docker 레지스트리
DockerCredentialsEditor.listing.docker.images=Docker 이미지 목록 생성 중…
DockerApplicationRuntime.progress.message.pushing={0} 푸시 중...
DockerApplicationRuntime.progress.message.pushed.successfully={0}이(가) 성공적으로 푸시되었습니다
AttachedConsoleTab.name=연결된 콘솔
#
DockerTargetIntrospectable.launching.introspection.container=내부 검사 컨테이너 시작 중…
DockerTargetIntrospectable.introspection.container.launched=완료되었습니다. 컨테이너가 시작되었습니다. {0}
DockerTargetIntrospectable.removing.introspection.container=내부 검사 컨테이너 제거 중
DockerTargetIntrospectable.introspecting.variable.not.found=${0} 내부 검사 중: 찾을 수 없습니다
DockerTargetIntrospectable.introspecting.variable.result=${0} 내부 검사 중: {1}
DockerTargetIntrospectable.introspecting.introspecting.image.environment.variables=이미지 환경 변수 내부 검사 중…
DockerTargetIntrospectable.introspecting.image.done=완료되었습니다. 검사 결과에서 {0}개의 변수가 발견되었습니다
DockerDownloadVolume.progress.message.executing.command=실행 중: ''{0}''
PrepareImageOperation.unable.to.find.an.image.for.introspection=내부 검사할 이미지를 찾을 수 없습니다
PrepareImageOperation.failed.to.find.image.for.introspection=내부 검사할 이미지를 찾지 못했습니다. {0}
BuildImageOperation.build.completed=빌드 완료
BuildImageOperation.waiting.for.build.operation=빌드 작업 대기 중…
BuildImageOperation.connected=연결됨
PrepareImageOperation.introspection.completed.with.error=내부 검사가 오류와 함께 완료되었습니다. {0}
PrepareImageOperation.introspection.completed=내부 검사 완료
PullImageOperation.pull.completed=풀 완료
PullImageOperation.waiting.for.pull.operation=풀 작업 대기 중…
PullImageOperation.connected=연결됨
ProjectPathOnRootRow.row.project.path.on.target=타깃에서 프로젝트 경로:
ProjectPathOnRootRow.row.project.path.on.target.comment=실행 구성은 필요한 파일 복사와 관련된 설정에서 기본적으로 이 경로를 사용합니다
DockerTargetConfigurable.button.rebuild.image=이미지 다시 빌드
DockerTargetConfigurable.wizard.title.rebuild.image=이미지 다시 빌드
DockerTargetConfigurable.language.runtime.label=언어 런타임:
DockerConfigureLanguageStep.title.label=프로젝트 디렉터리 및 언어 런타임 구성
DockerTargetMainStep.error.cant.finish.now=지금은 종료할 수 없습니다
DockerTargetMainStep.error.dockerfile.must.be.selected=Dockerfile이 선택되지 않았습니다
DockerTargetMainStep.error.image.tag.is.required=이미지 태그가 지정되지 않았습니다
DockerTargetEnvironmentConfiguration.error.connection.to.docker.required=Docker에 연결되지 않았습니다
DockerTargetEnvironmentConfiguration.error.path.to.dockerfile.to.build.required=빌드할 Dockerfile의 경로가 지정되지 않았습니다
DockerTargetEnvironmentConfiguration.error.image.tag.to.pull.required=풀할 이미지 태그가 지정되지 않았습니다
DockerTargetEnvironmentConfiguration.error.container.options.error=컨테이너 옵션 오류: {0}
DockerTargetEnvironmentConfiguration.error.build.image.options.error=빌드 이미지 옵션 오류: {0}
CreateTerminalAction.tab.title=터미널({0})
DockerCliImageBuilder.image.build.failed.message=이미지 빌드가 종료 코드 {0}(으)로 실패했습니다.
ComposeDeploymentRuntime.process.finished.error.message=''docker-compose'' 프로세스가 종료 코드 {0}(으)로 완료되었습니다\n\n
#
DockerfileDocumentationProvider.online.documentation=온라인 문서
DockerLogConsoleView.checkbox.show.previous.sessions.lines=이전 세션 표시
DockerLogConsoleView.label.folding.for.previous.sessions.lines.by=접기 깊이
#
DockerComposeActions.UpOneServiceAsTemporaryAction.text=''{0}''에서 up
ComposeDeleteServiceAction.confirmation=''{1}'' 서비스에서 {0}을(를) 삭제하시겠어요?



DockerLogConsoleView.checkbox.show.timestamps=타임스탬프 표시
action.Docker.RemoteServers.RemoveOrphans.text=고립 항목 제거
action.Docker.RemoteServers.StartAllComposeApp.text=모두 시작
action.Docker.RemoteServers.StartAllComposeApp.description=모든 Compose 서비스를 시작합니다
action.Docker.RemoteServers.RestartComposeApp.text=다시 시작
action.Docker.RemoteServers.RestartComposeApp.description=실행 중인 모든 Compose 서비스를 다시 시작합니다
DockerComposeDeploymentEditor.project.name=프로젝트 이름:
DockerComposeDeploymentEditor.project.name.name=프로젝트 이름 지정
DockerDeleteProvider.buttons.cancel=취소
DockerDeleteProvider.buttons.smart.delete=선택 및 삭제…
DockerDeleteProvider.buttons.force.delete=모두 삭제
DockerDeleteProvider.smart.delete.dialog.title=탐지된 종속성
DockerDeleteProvider.smart.delete.dialog.ok.text=선택 항목 삭제
ComposeRemoveOrphansAction.dialog.message=잘못된 서비스를 모두 삭제하시겠어요?
dockerConsole.name=콘솔
configurable.DockerConsoleConfigurable.display.name=콘솔
configurable.DockerConsoleConfigurable.enable.folding.checkbox.text=로그 콘솔에서 이전 세션 접기
DockerMissingShellPluginNotificationProvider.text=전체 Dockerfile 지원을 위해서는 'Shell Script' 플러그인이 필요합니다
DockerMissingShellPluginNotificationProvider.install.plugin='Shell Script' 플러그인 설치
DockerMissingShellPluginNotificationProvider.enable.plugin='Shell Script' 플러그인 활성화
DockerDeleteProvider.background.message=삭제 중…
DockerDeleteProvider.smart.delete.compose=Compose: {0}
InspectDockerAction.description.volume=선택한 볼륨 검사
InspectDockerAction.description.network=선택한 네트워크 검사
DockerGroupRuntime.VolumesGroup.groupName=볼륨
DockerGroupRuntime.NetworksGroup.groupName=네트워크
action.Docker.RemoteServers.DeleteVolume.text=볼륨 삭제
action.Docker.RemoteServers.DeleteVolume.description=선택한 볼륨을 삭제합니다
action.Docker.RemoteServers.DeleteNetwork.text=네트워크 삭제
action.Docker.RemoteServers.DeleteNetwork.description=선택한 네트워크를 삭제합니다
DockerDeleteProvider.confirmation.text.unspecified.type.one=항목을 삭제하시겠어요?
DockerDeleteProvider.confirmation.text.unspecified.type.many={0}개 항목을 삭제하시겠어요?
DockerMissingShellPluginNotificationProvider.do.not.show.again=다시 표시 안 함
ComposeServiceRuntime.status.stopped=중지됨
ComposeServiceRuntime.status.service.not.exit=''{1}'' {2,choice,1#파일|2#파일}''에서 ''{0}'' 서비스를 찾을 수 없습니다
ComposeServiceRuntime.status.files.not.exists=이 서비스가 생성된 ''{1}'' {0,choice,1#파일|2#파일}이 {0,choice,1#없습니다|2#없습니다}
DockerPreviewFragments.group.preview=명령어 미리보기
DockerPreviewFragments.preview.label=미리보기:
DockerPreviewFragments.preview.action.text=명령어 미리보기 표시
DockerPreviewFragments.preview.action.description=실행될 명령어 미리보기를 표시합니다
DockerRuntimeLabelsTab.tab.title=라벨
DockerVolumeDetails.VolumePropertiesEditor.property.driver=드라이버
DockerNetworkDetails.IpamPropertiesEditor.title=IPAM
action.Docker.RemoteServers.RecreateContainer.text=컨테이너 다시 생성
action.Docker.RemoteServers.RecreateContainer.description=선택한 컨테이너를 다시 생성 및 실행합니다
DockerNetworkDetails.NetworkPropertiesEditor.property.ipv6.enabled=IPv6 활성화됨
DockerNetworkDetails.ContainersEditor.title=컨테이너
DockerComposeApplication.unsupported.version.message=지원되지 않는 Docker Compose 버전을 포함하는 서비스
DockerComposeService.unsupported.version.message=Docker Compose 버전을 1.25.0 이후 버전으로 업데이트하고 전체 플러그인을 지원하도록 이 서비스를 다시 생성하세요
DockerSshConnectionConfigurator.label=SSH:
ConnectNetworkDialog.specify.container=컨테이너를 지정하세요
ConnectNetworkDialog.title=네트워크 연결
ConnectNetworkDialog.popup.title=네트워크 옵션 연결
ConnectNetworkDialog.ok.button.text=연결
ConnectNetworkDialog.validation.empty.container.name=컨테이너 이름은 공백일 수 없습니다
ConnectNetworkDialog.validation.container.not.exist=이 이름을 가진 컨테이너가 존재하지 않습니다
CreateVolumeAction.dialog.title=볼륨 생성
CreateVolumeAction.dialog.popup.title=볼륨 옵션 생성
CreateVolumeAction.dialog.name.field.empty.text=볼륨 이름을 지정하세요
CreateVolumeAction.dialog.name.field.validation.already.exists=이 이름을 가진 볼륨이 이미 있습니다
CreateNetworkAction.dialog.title=네트워크 생성
CreateNetworkAction.dialog.popup.title=네트워크 옵션 생성
CreateNetworkAction.dialog.name.field.empty.text=네트워크 이름을 지정하세요
CreateNetworkAction.dialog.name.field.validation.empty=네트워크 이름은 공백일 수 없습니다
CreateNetworkAction.dialog.name.field.validation.already.exists=이 이름을 가진 네트워크가 이미 있습니다
CreateNetworkAction.dialog.driver.field.popup.description=네트워크를 관리하기 위한 드라이버(디폴트 'bridge')입니다
CreateNetworkAction.dialog.driver.field.validation.not.in.swarm.mode=이 클라이언트는 스웜 관리자가 아닙니다. 'docker swarm init' 또는 'docker swarm join'을 사용하세요.
CreateNetworkAction.dialog.attachable.field.popup.description=수동 컨테이너 연결을 활성화합니다
CreateNetworkAction.dialog.internal.field.popup.description=네트워크에 대한 외부 액세스를 제한합니다
DockerDeleteProvider.dialog.hint=요소의 모든 종속성을 삭제하는 경우에만 해당 요소를 삭제할 수 있습니다.
DockerDeleteProvider.button.expand.all=모두 펼치기
DockerDeleteProvider.button.collapse.all=모두 접기
DockerDeleteProvider.button.select.all=모두 선택
DockerDeleteProvider.button.deselect.all=모두 선택 해제
ConnectNetworkDialog.validation.container.not.running=컨테이너가 실행 중이 아닙니다
DockerComposeDeploymentEditor.dialog.message.not.valid.project.name="{0}" 은 유효한 프로젝트 이름이 아닙니다
GeneratedComposeFile.header=생성된 파일입니다. 수동 편집용이 아닙니다.
action.Docker.RemoteServers.Rerun.text=다시 실행
CreateNetworkAction.dialog.tags.group.driver.name=드라이버
DockerPortBindingDialog.validation.not.valid.port=''{0}''은(는) 올바른 포트 번호가 아닙니다
DockerPortBindingDialog.validation.not.valid.port.range=포트 번호는 0보다 작거나 65335보다 클 수 없습니다
DockerPortBindingDialog.ports.binding.options=포트 바인딩 옵션
DockerPortBindingDialog.container.port.placeholder=컨테이너 포트 지정
DockerPortBindingDialog.validation.container.port.cant.be.empty=컨테이너 포트는 공백일 수 없습니다
DockerPortBindingDialog.host.ip.placeholder=호스트 IP 지정
DockerPortBindingDialog.host.ip.name=호스트 IP
DockerPortBindingDialog.host.ip.popup.description=(지정되지 않은 경우 0.0.0.0 사용)
DockerPortBindingDialog.validation.not.valid.ip=''{0}''은(는) 올바른 IP가 아닙니다
DockerPortBindingDialog.host.port.placeholder=호스트 포트 지정
DockerPortBindingDialog.host.port.name=호스트 포트
DockerPortBindingDialog.host.port.popup.description=(지정되지 않은 경우 사용 가능한 첫 번째 포트 사용)
DockerPortBindingDialog.protocol.group.name=프로토콜
DockerPortBindingDialog.protocol.group.popup.description=(디폴트 tcp)
DockerPortBindingDialog.validation.port.already.allocated=''{0}:{1}'' 포트가 이미 할당되어 있습니다
group.Docker.RemoteServersViewPopup.Image.text=이미지
action.Docker.RemoteServers.CommitContainer.text=새 이미지로 저장
CommitContainerAction.title=커밋 컨테이너
CommitContainerAction.ok.button=커밋(commit)
CommitContainerAction.placeholder=새 이미지 이름
CommitContainerAction.task.name=커밋 컨테이너
CommitContainerAction.validation.image.name.exists=이 이름을 가진 이미지가 이미 있습니다
action.Docker.RemoteServers.ConnectServer.text=연결
action.Docker.RemoteServers.Prune.text=정리
action.Docker.RemoteServers.Prune.description=사용되지 않는 요소 모두 제거
PruneAction.dialog.containers.message=중지된 컨테이너를 모두 제거하시겠어요?
PruneAction.dialog.images.message=사용되지 않는 이미지를 모두 제거하시겠어요?
PruneAction.dialog.volumes.message=사용되지 않는 볼륨을 모두 제거하시겠어요?
PruneAction.dialog.networks.message=사용되지 않는 네트워크를 모두 제거하시겠어요?
CommitContainerAction.validation.validate.name=''{0}''은(는) 올바른 이미지 이름이 아닙니다
CommitContainerAction.validation.validate.tag=''{0}''은(는) 올바른 이미지 태그가 아닙니다
DockerDeleteProvider.confirmation.dialog.text=기존 종속성 때문에 삭제할 수 없습니다. 종속성을 삭제하여 액션을 완료하세요.
DockerImageLayersTab.element.id=ID
DockerImageLayersTab.element.command=명령어
DockerImageLayersTab.element.digest=다이제스트
DockerImageLayersTab.element.comment=주석
DockerImageLayersTab.element.size=크기
DockerImageLayersTab.title=레이어
DockerImageLayersTab.column.command=명령어
DockerImageLayersTab.column.size=크기
DockerImageLayersTab.analyzing=분석 중…
DockerImageLayersTab.status.empty.layer=빈 레이어
DockerImageLayersTab.status.layer.not.selected1=레이어를 선택하여 세부 정보 보기
DockerImageLayersTab.status.need.analyze=이미지를 분석하여 자세한 정보 확인
DockerImageLayersTab.value.missing=(누락)
DockerImageLayersTab.element.created=생성됨
DockerMachineConfigurable.checkbox.use.compose.v2.beta=Composer V2 사용(베타)
PruneAction.dialog.all.message=중지된 모든 컨테이너, 사용되지 않는 볼륨, 네트워크, 허상 이미지 및 모든 빌드 캐시를 제거하시겠어요?
action.Docker.RemoteServers.CreateNetwork.text=네트워크 생성
action.Docker.RemoteServers.CreateVolume.text=볼륨 생성
ConnectNetworkDialog.validation.endpoint.already.exists=이름이 ''{0}''인 엔드포인트가 네트워크 ''{1}''에 이미 있습니다
DockerFileRunCommandMissingContinuationInspection.description=연속 문자가 누락되었습니다
AddBacklashesQuickFix.intention.family=백슬래시 추가
DockerFileRunCommandMissingContinuationInspection.display.name='RUN' 명령어의 연속 문자 누락
DockerImageLayersTab.analyzing.task={0}의 Docker 이미지 레이어 분석 중…
DockerPortBindingDialog.container.port.tooltip=컨테이너 포트
CommitContainerAction.windows.running.container.error=Windows는 실행 중인 Windows 컨테이너를 커밋하도록 지원하지 않습니다
CommitContainerAction.windows.running.container.stop.button=컨테이너를 중지하고 커밋 대화상자 표시
DockerComposeTargetMainStep.step.description=새 Docker Compose 타깃을 생성합니다
DockerComposeTargetMainStep.error.service.must.be.selected=서비스가 선택되지 않았습니다
AddDockerRegistryAction.title=Docker 레지스트리
DockerRegistryServiceViewContributor.pull.repository.task=저장소에서 모든 Docker 이미지 풀 중…
DockerRegistryServiceViewContributor.pull.repository.action=저장소 풀...
DockerRegistryServiceViewContributor.login.operation=로그인 중...
DockerRegistryServiceViewContributor.pull.repository.action.description=저장소에서 태그가 지정된 모든 이미지를 풀합니다
DockerRegistryServiceViewContributor.dialog.title=Docker 이미지 풀하기
DockerRegistryServiceViewContributor.dialog.ok=풀
DockerRegistryServiceViewContributor.dialog.label=다음으로 풀
DockerRegistryServiceViewContributor.connecting.message=Docker 서버로 연결 중...
DockerRegistryServiceViewContributor.registryNode.statusText=오류: {0}
DockerRegistryConfigurable.token.text=토큰:
DockerRegistryConfigurable.registry.text=레지스트리:
DockerRegistryConfigurable.error.invalid.address=잘못된 주소
configurable.PushImageConfigurable.namespace.text=네임스페이스:
ExternalTool.exited.with.error.code={0}이(가) 오류 코드 {1}(으)로 종료되었습니다
ExternalTool.timeout.exceeded=시간이 초과되었습니다
Minikube.tool.name=Minikube
MinikubeConnectionConfigurator.minikube.not.available=Minikube를 사용할 수 없습니다
DockerRegistryConfigurable.error.unsupporded.registry=지원되지 않는 레지스트리
DockerComposeDeploymentEditor.profiles.emptyText=쉼표로 분리된 프로파일 목록 지정
DockerComposeDeploymentEditor.profiles.label=프로파일:
DockerComposeDeploymentEditor.profiles.name=프로파일
DockerComposeDeploymentEditor.profiles.actionHint=프로파일을 사용하면 선택적으로 서비스를 활성화하여 Compose 애플리케이션 모델을 다양한 사용 위치 및 환경에 맞춰 조절할 수 있습니다.
DockerContainer.settings=컨테이너 설정:
DockerRegistryServiceViewContributor.error.node.label=오류
docker.container.settings.label.text=Docker 컨테이너 설정:
action.Docker.RemoteServers.ShowContainerFiles.text=파일 표시
DockerDashboardTab.title=대시보드
DockerContainerDashboardTab.recreate.container=컨테이너 다시 생성
DockerContainerDashboardTab.confirm.deletion.title=삭제 확인
DockerContainerDashboardTab.confirm.deletion.message=이 요소를 삭제하고 컨테이너를 재생성하겠어요?
DockerContainerDashboardTab.button.start=시작
DockerContainerDashboardTab.button.restart=다시 시작
DockerContainerDashboardTab.button.stop=중지
DockerContainerDashboardTab.button.terminal=터미널
DockerContainerDashboardTab.segment.env.var=환경 변수
DockerContainerDashboardTab.segment.ports=포트
DockerContainerDashboardTab.segment.volumes=볼륨
DockerContainerDashboardTab.port.read.only=읽기 전용
DockerContainerDashboardTab.port.read.and.write=읽기/쓰기
DockerLogConsoleView.folding.action.title=접기
DockerVolumeBindingDialog.commandline.title=--볼륨
DockerVolumeBindingDialog.containers.tooltip=컨테이너 내에서 파일이나 디렉터리가 마운트되는 경로입니다
DockerVolumeBindingDialog.containers.validation=컨테이너 경로는 절대값이어야 합니다
DockerVolumeBindingDialog.host.tooltip=파일이나 디렉터리에 대한 호스트 머신 상의 경로입니다
DockerVolumeBindingDialog.ro.validation=호스트 경로가 공백일 수 없습니다
DockerVolumeBindingDialog.ro.tooltip=읽기전용 옵션이 존재하는 경우 바인드 마인트가 컨테이너에 읽기 전용으로 마운트됩니다
DockerVolumeBindingsEditor.ContainerPath.validation.mount.point.already.used=이 마운트 지점은 이미 해당 컨테이너용으로 지정되었습니다
DockerVolumeBindingsEditor.HostPath.validation.invalid.name="{0}"은(는) 로컬 볼륨 이름에 사용될 수 없는 문자를 포함합니다. "[a-zA-Z0-9][a-zA-Z0-9_.-]"만 사용할 수 있습니다. 호스트 디렉터리를 전달하려는 경우 절대 경로를 사용하세요
DockerAbstractDashboardTab.action.remove.hint=제거
DockerAbstractDashboardTab.action.edit.hint=편집
DockerAbstractDashboardTab.action.add=추가...
DockerImageDashboardTab.action.create.container=컨테이너 생성
DockerImageDashboardTab.action.push.image=이미지 푸시
DockerImageDashboardTab.action.show.layers=레이어 표시
DockerImageDashboardTab.action.show.labels=라벨 표시
DockerImageDashboardTab.segment.tags=태그
DockerImageDashboardTab.tag.main=메인
DockerImageDashboardTab.segment.containers=컨테이너
DockerNetworkDetails.DockerNetworkDashboardTab.disconnect=연결 해제
DockerNetworkDetails.DockerNetworkDashboardTab.ipv6.disabled=IPv6 비활성화됨
DockerNetworkDetails.DockerNetworkDashboardTab.driver=드라이버
DockerNetworkDetails.DockerNetworkDashboardTab.subnet=서브넷
DockerNetworkDetails.DockerNetworkDashboardTab.gateway=게이트웨이
DockerNetworkDetails.DockerNetworkDashboardTab.ip.range=IP 범위
DockerNetworkDetails.DockerNetworkDashboardTab.network=네트워크
DockerImageDashboardTab.tag.image.dialog.title=태그 이미지
DockerImageDashboardTab.tag.image.dialog.button=태그
DockerImageDashboardTab.tag.image.dialog.field.repository=저장소
DockerImageDashboardTab.tag.image.dialog.field.tag=태그
configurable.DockerConsoleConfigurable.show.header.checkbox.text=로그 콘솔에 대시보드 헤더 표시
an.icon.to.quickly.build=특정 기명 스테이지를 Dockerfile에서 빌드하거나 실행하는 아이콘입니다.
advanced.settings.docker=Docker
advanced.setting.docker.connect.automatically=재시동 시 자동으로 Docker에 연결
DockerLogConsoleView.folding.policy.none=없음
DockerLogConsoleView.folding.policy.seconds=초
DockerLogConsoleView.folding.policy.minutes=분
DockerLogConsoleView.folding.policy.hours=시간
DockerLogConsoleView.folding.policy.days=일
DockerLogConsoleView.folding.policy.months=달
DockerLogConsoleView.folding.policy.years=년
DockerVolumeDashboardTab.in.use=사용 중
advanced.setting.docker.registry.loading.limit=이미지 레지스트리 엔티티 로드 제한
DockerTransferImageAction.command=다음으로 복사
DockerTransferImageAction.ok.text=복사
DockerTransferImageAction.background.task={0}에서 {1}(으)로 복사
action.Docker.RemoteServers.TransferImage.text=Docker 이미지 복사
advanced.setting.docker.container.log.is.first.tab=로그 탭은 docker 컨테이너의 첫 번째 탭이어야 합니다.
action.Docker.RemoteServer.DisconnectServer.text=연결 해제
action.Docker.AddDockerRegistry.text=새 Docker 레지스트리
DockerWslConnectionConfigurator.distribution.error=배포 {0}이(가) 존재하지 않습니다
DockerWslConnectionConfigurator.label=WSL:
DockerJsonFormStringLiteralsInspection.display.name=JSON 배열 형식 내의 작은 따옴표로 묶인 문자열
DockerJsonFormStringLiteralsInspection.problem=큰 따옴표로 묶인 문자열 리터럴이 필요합니다
DockerJsonFormStringLiteralsInspection.quickfix=쌍 따움표로 감싸기
configurable.DockerToolsConfigurable.display.name=Docker
DockerToolsConfigurable.checkbox.use.compose.v2=Compose V2 사용
DockerToolsConfigurable.checkbox.use.compose.v2.comment=Docker Desktop 3.4.0부터 Docker CLI의 일부로 compose 명령어를 지원하는 새 Compose V2를 사용할 수 있습니다.
DockerToolsConfigurable.message.not.valid.executable={0}은(는) 올바른 {1} 실행 파일이 아닙니다
DockerToolsConfigurable.message.does.not.exists={0}이(가) 없습니다
DockerToolsConfigurable.message.not.executable={0}은(는) 실행 파일이 아닙니다
DockerToolsConfigurable.message.can't.find.executable=실행 파일을 찾을 수 없습니다
DockerBuildSettingsDialog.substitute.by.env.var.title=환경 변수로 대체
DockerTransferImageAction.notification=이미지 ''{0}''이(가) {1}에서 {2}(으)로 성공적으로 복사되었습니다
action.Docker.ImportContexts.text=Docker 컨텍스트에서의 Docker 연결
DockerImageLayersTab.reproducible.image.tooltip=이 이미지의 날짜가 생략되었습니다. "복제 가능 빌드"에 이 날짜가 필요할 수 있습니다.
docker.intention.category=Docker
DockerPullIntention.text=Docker 이미지 풀하기
DockerPullIntention.missing.docker.configuration.error=구성된 Docker 연결을 찾을 수 없습니다.
DockerEnvironment.docker.image.user.0=Docker 이미지 사용자: {0}
DockerEnvironment.failed.to.change.ownership.of.volume=Docker 이미지 "{0}"의 볼륨 소유권 변경 실패
DockerEnvironment.changing.the.ownership.of.the.named.volume.0=명명된 볼륨 {0}의 소유권 변경
DockerCompose.failed.to.change.ownership.of.docker.volume=볼륨의 소유권 변경 실패
DockerCompose.service.user.uid.0=Compose 서비스의 사용자 UID: {0}
DockerBuildSettingsUI.enable.buildkit=BuildKit 활성화
DockerSshConnectionConfigurator.preparing.environment=Docker SSH 환경 준비 중...
DockerNetworkDetails.NetworkPropertiesEditor.property.id=네트워크 ID
DockerNetworkDetails.NetworkPropertiesEditor.property.scope=범위
DockerNetworkDetails.NetworkPropertiesEditor.property.driver=드라이버
DockerNetworkDetails.NetworkPropertiesEditor.property.internal=내부
DockerNetworkDetails.NetworkPropertiesEditor.property.attachable=연결 가능
action.Docker.RemoteServers.EditServerConfig.text=구성 편집
action.Docker.RemoteServers.EditServerConfig.description=선택한 Docker 구성을 편집합니다
progress.title.loading.namespaces.for={0}의 네임스페이스를 불러오는 중
progress.title.loading.tags.for={0}의 태그를 불러오는 중
progress.title.loading.repositories.for={0}의 저장소를 불러오는 중
DockerRegistryNode.loading.label=로드 중...
action.Docker.EditRegistryConfigAction.text=편집
DockerComposeProjectDashboardTab.running.services.state=실행 중: ({0}/{1})
RegistrySelectionEditor.default.registry=<default: Docker Hub>
advanced.setting.docker.selinux.label.volumes=SELinux 시스템에서 거의 모든 바인드 볼륨에 :z mount 옵션을 적용합니다.
advanced.setting.docker.selinux.label.volumes.description=이는 위험할 수 있으므로 해당 작업을 이해하고 시작해야 하며 다음을 먼저 읽어보세요. <a href="https://github.com/moby/moby/issues/30934">https://github.com/moby/moby/issues/30934</a>
DockerComposeDeploymentEditor.group.up.v2=docker compose up