spring.boot.name=Spring Boot
spring.boot.application.endpoints.application.is.starting=''{0}'' 을(를) 시작 중입니다
spring.boot.application.endpoints.updated.at={0}에서 업데이트됨
spring.boot.application.endpoints.error.caused.by=원인\: {0}\: {1}
spring.boot.application.endpoints.error.failed.to.retrieve.endpoint.data.detailed=<html>''{0}'' 엔드포인트 데이터 검색 실패\:<br>{1}</html>
spring.boot.application.endpoints.error.actuator.starter.disabled=<html>Spring 부트 액추에이터가 활성화되지 않았습니다.<br>spring-boot-starter-actuator에 종속성을 추가하여 활성하하세요.</html>
spring.boot.properties.no.resources.roots=모듈 ''{0}'' 에서 리소스 루트를 찾을 수 없습니다
spring.boot.properties.no.json.metadata.popup=다음에서 ''{0}'' 에 대한 메타데이터 파일 생성
spring.boot.properties.no.json.metadata.hint=추가 메타데이터 파일을 찾을 수 없습니다. 새 파일이 생성됩니다
spring.boot.properties.json.metadata.create=''{0}'' 에 대한 Spring 부트 메타데이터 파일 생성
spring.boot.properties.invalid.json=''{0}'' 에 잘못된 JSON 구조
spring.boot.properties.file.not.associated.with.json=파일 ''{0}''이(가) {1} 파일 타입과 연결되어 있지 않습니다
spring.boot.customization.action.name=Spring 부트 사용자 지정...
spring.boot.customization.action.description=Spring 부트 자동 탐지 컨텍스트 사용자 지정
spring.boot.customization.dialog.title=Spring 부트 컨텍스트 ''{0}''
spring.boot.config.chooser.dialog.title=사용자 지정 구성 파일 선택
spring.boot.customization.dialog.no.configs=구성 파일 일치 패턴 ''{0}'' 을(를) 찾을 수 없음
spring.boot.customization.dialog.config.tree.tooltip=사용자 지정 구성 파일 제거를 위해 선택 취소
spring.boot.customization.add.config.files.action=사용자 지정 구성 파일 추가
spring.boot.customization.dialog.config.not.set=(설정되지 않음, 디폴트 ''{0}'' 사용)
spring.boot.settings.initializr=프로젝트 가져오기
spring.boot.settings.show.notification.panel=알림 패널 표시(&N)
spring.boot.settings.show.notification.panel.tooltip=어노테이션 프로세서 가용성 상태 표시
spring.boot.settings.create.run.configuration=C&rear configuración de ejecución automática
spring.boot.settings.create.run.configuration.tooltip=(다시) 가져오기 시 아직 아무것도 존재하지 않는 경우 Spring 부트 실행 구성을 추가합니다
SpringBootConfigFileHighlightingUtil.deprecated=더 이상 사용되지 않음\: {0}
SpringBootConfigFileHighlightingUtil.deprecated.configuration.property=더 이상 사용되지 않는 구성 프로퍼티 ''{0}''
SpringBootConfigFileHighlightingUtil.cannot.resolve.configuration.property=구성 프로퍼티 ''{0}'' 을(를) 해결할 수 없습니다
SpringBootReplacementTokenCompletionContributor.configure.replacement.tokens=대체 토큰 구성...
SpringBootReplacementTokenCompletionContributor.press.again.to.show.replacement.tokens={0}을(를) 다시 눌러 대체 토큰 보기
DefineLocalMetaConfigKeyFix=구성 키 ''{0}'' 정의
runtime.beans.class.gutter.icon.name=런타임 bean
runtime.beans.xml.gutter.icon.name=런타임 bean (XML)
application.config.usage.type=Spring 부트 구성 파일
additional.config.usage.type=Spring 부트 추가 구성 메타데이터
configuration.properties.gutter.icon.name=구성 프로퍼티
configuration.properties.rerun.notification=Spring 부트 구성 어노테이션 프로세스를 다시 실행하여 생성된 메타데이터 업데이트
configuration.properties.not.configured.notification=Spring 부트 구성 어노테이션 프로세서가 구성되지 않았습니다
configuration.properties.hide.notification.action=알림 숨기기
configuration.properties.open.documentation.action=문서 열기...
additional.config.unresolved.config.key.reference=구성 키 참조 ''{0}'' 을(를) 해결할 수 없습니다
additional.config.unresolved.provider=제공자 ''{0}'' 을(를) 해결할 수 없습니다
banner.unresolved.property=프로퍼티 ''{0}''을(를) 확인할 수 없습니다
additional.params.table.name=이름
additional.params.table.value=값
additional.params.table.empty.text=매개변수가 추가되지 않았습니다.
additional.params.table.add=파라메타 추가
additional.params.table.quick.doc=애플리케이션 프로퍼티 빠른 문서
application.config.rename.option=Spring 부트 구성 파일
application.config.rename.title=Spring 부트 구성 파일 이름 변경
application.config.rename.entity.name=Archivo
application.config.rename.description=Spring 프로파일 ''{0}'' 와(과) 일치하는 Spring 부트 구성 파일 이름 바꾸기
application.config.duplicate.entry=''{0}''에 대한 항목 중복
spring.boot.diagnostics.progress=Spring 부트 진단 수집 중...
spring.boot.diagnostics.module.info.progress=모듈 정보 수집 중...
spring.boot.diagnostics.config.keys.progress=구성 키 확인 중...
spring.boot.diagnostics.auto.config.progress=자동 구성 클래스 확인 중...
spring.boot.diagnostics.conditional.on.progress=@ConditionalOnXXX 어노테이션 수집 중...
configuration.properties.prefix.must.be.specified=접두사를 지정해야 합니다
configuration.properties.prefix.must.be.non.empty=접두사가 비어있지 않아야 합니다
configuration.properties.prefix.must.be.in.canonical.form=접두사는 표준 형식이어야 합니다
configuration.properties.duplicated.prefix=중복된 접두사
configuration.properties.show.duplicates=중복 표시
configuration.properties.no.duplicates.found=접두사 ''{0}'' 에 대한 중복을 찾을 수 없습니다
configuration.properties.show.duplicates.for.prefix=접두사 ''{0}'' 중복
configuration.properties.related.config.file.line.marker.popup.title=Spring 부트 구성 파일
configuration.properties.related.config.file.line.marker.tooltip=Spring 부트 구성 파일 내 사용 위치
configuration.properties.related.config.file.task.base.title=구성 프로퍼티 ''{0}.{1}''
configuration.properties.related.config.file.task.title={0}의 사용 위치 검색 중
configuration.properties.related.config.file.task.caption=<html><body><b>{0}</b> ({1}) 사용 위치</body></html>
configuration.properties.related.config.file.task.details=지금까지 {0}개가 발견되었습니다.
configuration.properties.related.config.file.task.details.finished={0}개 발견
configuration.properties.not.registered={0}을(를) 통해 등록되지 않았거나 Spring 구성 요소로 표시되었거나 {1}을(를)통해 검사됨
configuration.properties.not.registered.below.2.2={0}을(를) 통해 등록되지 않았거나 Spring 구성 요소로 표시됨
additional.config.text.should.end.with.dot=텍스트는 ''.''로 끝나야 합니다
additional.config.deprecated.property=프로퍼티 ''deprecated''는 ''deprecation''로 대체되어야 합니다
additional.config.missing.required.property=필수 ''{0}'' 누락
additional.config.missing.required.parameter=필수 {0, choice,1\#매개변수|1<매개변수} 가 누락되었습니다\: {1}
application.config.missing.map.key=맵 키 누락
application.config.missing.closing.bracket=닫기 '']'' 누락
application.config.missing.index.value=색인 값 누락
application.config.non.integer.index=색인 값이 Integer여야 합니다
application.config.replacement.quick.fix=대체 키 ''{0}'' 사용
application.config.replacement.quick.fix.family.name=대체 키 사용
application.config.spring.profiles.completion.tail=\ (이 문서에 대해 프로파일 정의)
spring.boot.application.in.default.package=디폴트 패키지 내 Spring 부트 애플리케이션
spring.boot.application.attribute.in.wrong.annotation=속성은 @{0} 을(를) 통해 지정되어야 합니다
spring.boot.application.redundant.declaration=중복 선언\: {0}
spring.boot.application.already.applies.annotation=@{0} 이(가) 이미 @{1} 을(를) 적용했습니다
spring.boot.application.already.applies.given.annotation=@{0} 이(가) 이미 지정된 @{1} 을(를) 적용했습니다
spring.boot.reactor.hooks.on.debug.inspection=ReactorDebugAgent를 초기화하는 동안 Hooks.onOperatorDebug() 호출
spring.boot.reactor.hooks.on.debug.quickfix=Hooks.onOperatorDebug() 호출 제거
spring.boot.application.yaml.inspection.key=Spring 부트 application.yml
spring.boot.application.properties.inspection.key=Spring 부트 application.properties
spring.boot.additional.config.metadata.inspection.key=Spring 부트 additional-spring-configuration-metadata.json
spring.boot.application.setup.inspection.key=Spring 부트 애플리케이션 설정
spring.boot.reactor.inspection.key=의심스러운 Hooks.onOperatorDebug() 사용 위치
spring.boot.config.properties.inspection.key=Spring 부트 @ConfigurationProperties
icon.icons.SpringBoot.tooltip=Spring 부트
icon.icons.SpringBoot_Overlay.tooltip=Spring Boot
spring.boot.metadata.goto.related.item.group.name=Spring Boot 메타데이터
spring.boot.replacement.token.column.name=대체 토큰
spring.boot.replacement.token.label=대체 토큰:
spring.boot.config.files.name.setting=Spring Boot\: {0} 값
spring.boot.custom.config.files.locations=Spring Boot\: 사용자 지정 bootstrap 구성 파일 위치
spring.boot.non-strict.conditional.evaluation=Spring Boot\: 엄격하지 않은 @Conditional 평가
spring.boot.config.files.section.title=애플리케이션 구성 파일
spring.boot.config.files.add.ad=(+)를 사용해 사용자 지정 위치에서 구성 파일 추가
goto.hint.tooltip={0,choice,1\#힌트|1<힌트}로 이동
spring.boot.intention.category=Spring Boot
DefineLocalMetaConfigKeyFix.define.properties.configuration.key=프로퍼티 설정 키 정의
DefineLocalMetaConfigKeyFix.define.yaml.configuration.key=YAML 구성 키 정의
spring.boot.imports.file.type.name=Spring Boot 가져오기
spring.boot.imports.file.type.description=Spring Boot 가져오기
spring.boot.imports.registration=Spring Boot 가져오기 등록
spring.boot.imports.registration.title=등록 선택
spring.boot.imports.registration.tooltip=spring.factories 내 등록으로 이동
configuration.properties.constructor.binding.component=@ConstructorBinding으로 어노테이션을 추가했지만, Spring구성 요소로 정의됨
notification.group.request.mappings=Spring Boot 애플리케이션 요청 매핑
spring.boot.application.endpoints.error.actuator.starter.add.dependency=활성화하려면 spring-boot-starter-actuator에 종속성을 추가하세요
spring.boot.application.endpoints.error.actuator.starter.loading.changes=변경 내용 로드 중
spring.boot.application.endpoints.error.actuator.starter.added=Actuator 종속성이 추가되었습니다.
spring.boot.application.endpoints.error.actuator.starter.restart=애플리케이션 다시 시작
spring.boot.application.endpoints.error.actuator.starter.not.added=액추에이터 종속성 추가 실패:
