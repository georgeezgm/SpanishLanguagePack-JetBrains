maven.settings.override=재정의
maven.settings.environment.home.directory=Maven 홈 경로(&H)
maven.settings.on.targets.environment.home.directory={0}의 Maven 홈 경로(&H)
maven.settings.on.targets.environment.home.directory.context.help=선택한 타깃에 대해 구성된 Maven 홈 경로입니다. 사용 가능한 Maven 홈 경로를 변경하려면 타깃 구성을 편집하세요.
maven.settings.environment.settings.title=Maven 설정
maven.settings.environment.user.settings=사용자 설정 파일(&S)
maven.settings.environment.local.repository=로컬 저장소(&R)
maven.settings.environment.show.advanced.settings=새 Maven 프로젝트에 대한 설정 대화상자 표시(&D)
maven.settings.environment.show.advanced.settings.tooltip=새 Maven 프로젝트를 열거나 연결할 경우 Maven 환경 프로젝트 설정이 있는 대화상자 표시

maven.settings.general.work.offline=오프라인으로 작업(&O)
maven.settings.general.work.offline.tooltip=<html>Maven Goal 실행 시 명령줄에 <b>--offline</b> 옵션 추가</html>
maven.settings.general.use.plugin.registry=플러그인 레지스트리 사용(&R)
maven.settings.general.use.plugin.registry.tooltip=<html><b>--no-plugin-registry</b> 옵션이 선택되지 않은 경우 이 옵션 추가</html>
maven.settings.general.execute.recursively=Goal을 재귀적으로 실행(&G)
maven.settings.general.execute.recursively.tooltip=<html><b>--non-recursive</b> 옵션이 선택되지 않은 경우 이 옵션 추가</html>
maven.settings.general.print.stacktraces=예외 스택 추적 출력(&E)
maven.settings.general.print.stacktraces.tooltip=<html>Maven Goal 실행 시 명령줄에 <b>--errors</b> 옵션 추가</html>
maven.settings.general.update.snapshots=스냅샷 항상 업데이트(&S)
maven.settings.general.update.snapshots.tooltip=원격 저장소에서 업데이트된 릴리스 및 스냅샷 강제 검사
maven.settings.general.output.level=출력 수준(&L):
maven.settings.general.checksum.policy=체크섬 정책(&C):
maven.settings.general.multiproject.build.policy=멀티 프로젝트 빌드 실패 정책(&F):
maven.settings.general.thread.count=스레드 수
maven.settings.general.thread.count.tooltip=스레드 수, 예를 들어 2.0C에서 C는 승수로 사용되는 코어의 수(옵션-T)
maven.settings.general.thread.count.note=-T 옵션

maven.settings.importing.create.modules.for.aggregator=애그리게이터 프로젝트의 $FULLNAME$ 모듈 생성('pom' 패키징으로)(&M)
maven.settings.importing.create.module.groups=멀티 모듈 Maven 프로젝트에 대한 모듈 그룹 생성(&G)
maven.settings.importing.search.recursively=프로젝트를 재귀적으로 검색(&S)
maven.settings.importing.use.output.directories=Maven 출력 디렉터리 사용(&O)
maven.settings.importing.use.output.directories.tooltip=IDEA 컴파일러는 Maven 모델에서 정의된 출력 디렉터리를 사용합니다(기본적으로 target/classes)
maven.settings.importing.generated.source.folders=생성된 소스 폴더:
maven.settings.importing.phase.for.source.updates=폴더 업데이트에 사용할 단계(&U):
maven.settings.importing.phase.for.source.updates.notes=<html>IntelliJ IDEA는 Maven 플러그인을 통해 구성된 모든 소스 폴더를 검색하기 위해 나열된 단계 중 하나를 실행해야 합니다.<br><b>참고:</b> 모든 test-* 단계에서는 프로덕션 소스가 먼저 생성된 후 컴파일됩니다.</html>

maven.settings.importing.auto.download=자동 다운로드:
maven.settings.importing.auto.download.documentation=문서(&D)
maven.settings.importing.auto.download.sources=소스(&R)
maven.settings.importing.auto.download.annotations=어노테이션
maven.settings.importing.keep.folders.on.reimport=프로젝트 다시 로드 시 소스 및 테스트 폴더 유지(&F)
maven.settings.importing.project.format=프로젝트 형식(&T):
maven.settings.importing.project.files.keep.in=프로젝트 파일을 다음에 보관(&K):
maven.settings.importing.project.files.keep.in.tooltip=선택한 디렉터리에 *.iml/.idea 등의 IDEA 지정 파일을 보관합니다. 기본적으로 *.iml 파일은 pom.xml과 같은 위치에 보관됩니다
maven.settings.importing.project.store.externally=생성된 프로젝트 파일을 외부에 저장
maven.settings.importing.project.exclude.build.directory=빌드 디렉터리 제외(%PROJECT_ROOT%/target)
maven.settings.importing.project.exclude.build.directory.tooltip=이 옵션을 선택하면 다시 가져올 때 /target 폴더가 프로젝트에서 제외됩니다. 컴파일러 출력(/target/classes 및 /target/test-classes)은 이와 관계없이 제외됩니다
maven.settings.importing.dependency.type=종속성 타입:
maven.settings.importing.dependency.type.tooltip=가져와야 할 종속성 타입의 쉼표로 구분된 목록
maven.settings.importing.vm.options=임포터의 VM 옵션:
maven.settings.importing.jdk=임포터의 JDK:
maven.settings.importing.detect.compiler=컴파일러 자동 탐지

maven.settings.testrun.caption=<html>다음 <b>maven-surefire-plugin</b> 및 <b>maven-failsafe-plugin</b> 설정을 JUnit 프로세스로 전달:</html>
maven.settings.testrun.argline=<html><i>argLine(&A)</i></html>
maven.settings.testrun.system.property=<html><i>systemPropertyVariables(&S)</i></html>
maven.settings.testrun.env.variables=<html><i>environmentVariables(&E)</i></html>

maven.settings.repositories.update=업데이트(&U)

maven.settings.index.edit.repository=Maven 저장소 편집


maven.settings.working.directory=작업 디렉터리(&D)
maven.settings.working.directory.tooltip=Maven 프로젝트 선택
maven.settings.command.line=명령줄(&C)
maven.settings.runner.profiles=프로파일(공백으로 구분)(&P)
maven.settings.runner.profiles.notes=프로파일을 비활성화하려면 접두사 '-'을 추가하세요(예: "-test")
maven.settings.runner.resolve.workspace.artifacts=작업공간 아티팩트 해결(&W)
maven.settings.runner.resolve.workspace.artifacts.tooltip=멀티 프로젝트 Workspace의 경우 종속성이 Workspace에서 먼저 검색된 후 로컬 저장소에서 검색됩니다.
maven.settings.on.targets.runner.resolve.workspace.artifacts.tooltip=이 옵션은 로컬이 아닌 타깃에서는 실행이 지원되지 않습니다
maven.settings.general.use.project.settings.tooltip='환경 설정 | 빌드, 실행, 배포 | 빌드 도구 | Maven'에서 설정 사용
maven.settings.on.targets.general.use.project.settings.tooltip=일반 프로젝트 설정은 로컬이 아닌 타깃이 있는 Maven 실행 구성에 다시 사용할 수 없습니다
maven.settings.runner.use.project.settings.tooltip='환경 설정 | 빌드, 실행, 배포 | 빌드 도구 | Maven | 러너'에서 설정 사용
maven.settings.on.targets.runner.use.project.settings.tooltip=러너 프로젝트 설정은 로컬이 아닌 타깃이 있는 Maven 실행 구성에 다시 사용할 수 없습니다

maven.settings.ignored.title=무시된 파일
maven.settings.ignored.tooltip=경로 패턴(쉼표로 구분, '*' 및 '?' 와일드카드 허용):
maven.settings.ignored.no.file=Maven 파일 없음


maven.settings.runner.delegate=Maven에 IDE 빌드/실행 작업 위임
maven.settings.runner.run.in.background=백그라운드에서 실행
maven.settings.runner.vm.options=VM 옵션:
maven.settings.runner.jre=JRE:
maven.settings.runner.properties=프로퍼티:
maven.settings.runner.skip.tests=테스트 건너뛰기(&K)
maven.settings.runner.properties.not.defined=정의된 프로퍼티 없음
maven.settings.archetype.add.repository=<html>저장소<i>(선택 사항)</i></html>
maven.settings.archetype.add.groupid=그룹ID
maven.settings.archetype.add.artifactid=아티팩트ID
maven.settings.archetype.add.version=버전
maven.settings.archetype.create.from.archetype=archetype에서 생성(&A)
maven.settings.archetype.add.archetype=Archetype 추가(&D)...
maven.settings.archetype.add.title=Archetype 추가

maven.settings.edit.goal.select.maven.project=Maven 프로젝트 선택

maven.settings.repositories.title=색인 생성된 Maven 저장소:
maven.settings.repositories.no=원격 저장소 없음


maven.settings.generated.folder.ignore=탐지 안 함
maven.settings.generated.folder.autodetect=자동 탐지
maven.settings.generated.folder.targerdir=target/generated-sources
maven.settings.generated.folder.targersubdir='target/generated-sources'의 하위 디렉터리
maven.project.file.pom.xml=<b>Maven</b> 프로젝트 파일(pom.xml)
column.name.name=이름
column.name.value=값
link.label.choose.phase.goal.to.assign.shortcut=단축키를 지정할 단계/목표 선택

connector.ui.label=Maven 커넥터
connector.ui.project=프로젝트 이름
connector.ui.jdk=JDK 이름
connector.ui.vmOptions=VM 옵션
connector.ui.dir=멀티 모듈 디렉터리
connector.ui.maven=Maven 배포
connector.ui.state=상태
connector.ui.type=타입
connector.ui.stop=중지
connector.ui.refresh=새로고침
connector.ui.dummy=더미



maven.settings.vm.options.tooltip=이 필드에 지정된 옵션은 .mvn/jvm.config 파일의 옵션을 재정의합니다
maven.run.configuration.distribution.name=Maven 홈(&H)
maven.run.configuration.distribution.invalid.home.error=잘못된 Maven 홈
maven.run.configuration.specify.distribution.action.name=Maven 홈 지정
maven.run.configuration.bundled.distribution.name=Maven {0}
maven.run.configuration.bundled.distribution.description=번들로 포함됩니다
maven.run.configuration.jre.label=JRE(&J):
maven.run.configuration.jre.name=JRE(&J)
maven.run.configuration.jre.action.hint=Maven Goal을 실행할 JRE 지정
maven.run.configuration.command.line.tasks.empty.text=Maven 명령어가 없습니다
maven.run.configuration.command.line.arguments.empty.text=Maven 옵션이 없습니다
maven.run.configuration.command.line.task.column=Maven 명령어
maven.run.configuration.command.line.argument.column=Maven 옵션
maven.run.configuration.command.line.description.column=설명
maven.run.configuration.command.line.hint=예: compile --debug. 자동 완성을 위해 {0}을(를) 사용하세요.
maven.run.configuration.command.line.title=Maven 명령어
maven.run.configuration.command.line.tooltip=Maven 명령어 삽입...
maven.run.configuration.command.line.empty.state=명령줄
maven.run.configuration.command.line.name=명령줄(&C)
maven.run.configuration.profiles.name=프로파일(&P)
maven.run.configuration.profiles.label=프로파일(&P):
maven.run.configuration.profiles.hint=공백으로 구분하세요. '-' 접두사로 프로파일을 비활성화하세요. 예: -test
maven.run.configuration.user.settings.name=사용자 설정(&R)
maven.run.configuration.user.settings.label=사용자 설정(&R):
maven.run.configuration.user.settings.title=Maven 사용자 설정 선택
maven.run.configuration.local.repository.name=로컬 저장소(&L)
maven.run.configuration.local.repository.label=로컬 저장소(&L):
maven.run.configuration.local.repository.title=Maven 로컬 저장소 선택
maven.run.configuration.threads.name=스레드 수(&T)
maven.run.configuration.threads.label=스레드 수(&T):
maven.run.configuration.checksum.policy=체크섬 정책(&C)
maven.settings.environment.use.maven.config.settings=.mvn/maven.config의 설정 사용
maven.settings.environment.use.maven.config.settings.tooltip=maven.config 파일의 설정이 IDE Maven UI 설정을 재정의합니다.<br/>이 옵션이 활성화되면 maven.config를 사용하여 설정을 변경합니다.<br/>그렇지 않은 경우 UI의 변경 사항이 다시 가져온 후 손실됩니다.
maven.settings.environment.use.maven.config.settings.hint=<html>다시 가져오면 해당 구성에 적용된 변경 내용이 사라질 수 있습니다.</html>
maven.settings.general.execute.non.recursively=Goal을 비 재귀적으로 실행(&G)
maven.run.configuration.distribution.label=Maven 홈(&H):
maven.run.configuration.general.options.group.name=Maven 옵션(&M)
maven.run.configuration.general.options.group=Maven 옵션
maven.run.configuration.runner.options.group.name=Java 옵션(&J)
maven.run.configuration.runner.options.group=Java 옵션
maven.run.configuration.output.level.name=출력 수준(&L)
maven.run.configuration.output.level.label=출력 수준(&L):
maven.run.configuration.multi.project.build.policy=다중 프로젝트 빌드 실패 정책(&F)
maven.run.configuration.properties.name=프로퍼티(&R)
maven.run.configuration.properties.label=프로퍼티(&R):
maven.run.configuration.properties.dialog.title=프로퍼티
maven.run.configuration.properties.dialog.tooltip=Maven 프로퍼티 편집...
maven.run.configuration.properties.dialog.label=프로퍼티:
maven.run.configuration.properties.dialog.empty.state=프로퍼티 없음
maven.run.configuration.properties.dialog.ok.button=저장
maven.run.configuration.options.group.inherit=<a>설정</a>에서 상속
maven.settings.importing.jdk.too.old.error=Maven 가져오기 도구는 JDK 1.8 이상이 필요합니다
maven.settings.importing.jdk.fallback.warning=내부 런타임이 대체 수단으로 사용됩니다. 프로젝트 SDK 구성에는 영향을 주지 않습니다.
maven.settings.importing.workspace.import=새로운 IntelliJ Workspace Model API를 사용하여 가져오기(실험적)
maven.settings.importing.workspace.import.description=<html>IntelliJ IDEA에는 프로젝트 모듈에서 작동되는 보다 효율적이고 유연한 새로운 API가 있습니다.<br>Maven 가져오기는 이 API를 통해 이점을 얻을 수 있지만 아직 실험적이며 모든 기능을 지원하지는 않습니다.<ul><li>종속성 또는 모듈 SDK 변경과 같은 수동 모듈 사용자 지정은 다음 다시 가져오기에서 유지되지 않습니다.</li><li>모듈 그룹은 IntelliJ IDEA에서 더 이상 사용되지 않으며 Maven 가져오기에서 지원되지 않습니다.</li></ul>가져온 프로젝트에 문제가 있는 경우 이 옵션을 비활성화해 보세요.<br>문제가 해결되면 이슈 트래커로 보고하세요.</html>
maven.livetemplate.dep.description=종속성 선언을 추가합니다
maven.livetemplate.pl.description=플러그인 정의를 추가합니다
maven.livetemplate.repo.description=저장소 정의를 추가합니다