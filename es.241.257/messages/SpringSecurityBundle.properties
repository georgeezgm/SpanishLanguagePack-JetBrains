action.show.security.matcher.registration=URL의 보안 구성 표시
inlay.spring.secured.url.matcher.inlay.hints.description=코드 내의 Spring 보안 URL 매처입니다. 아이콘을 사용하여 매처가 제공한 보안 URL에 빠르게 액세스할 수 있습니다.
inspections.group.path.name=Spring Security
mode.inspection.global.method.security.not.aspectj.with.protect.pointcut=<protect-pointcut>에 대한 값이 'aspectj'인 'mode'를 사용할 수 없습니다
model.inspection.debug.activated=Spring Security 구성에서 디버그 모드가 활성화되어 있습니다
model.inspection.debug.activated.message=디버그 모드가 활성화되어 있으면 민감한 데이터가 노출될 수 있습니다
model.inspection.global.method.security.pre.post.annotations.not.enabled='pre-post-annotations'는 <pre-post-annotation-handling> 사용에 대해 'enabled' 값을 가져야 합니다
model.inspection.model=잘못된 Spring Security XML 기반 애플리케이션 컨텍스트
model.inspection.model.access.denied.handler.no.http.access.denied.page=<http> 'access-denied-page'와 함께 사용할 수 없습니다
model.inspection.model.authentication.provider.only.one.kind.of.user.service=한 종류의 user-service만 허용됩니다
model.inspection.model.http.must.not.contain.children=security\='none'에 대한 빈 태그여야 합니다
model.inspection.model.http.not.multiple.without.pattern='pattern'이 없는 다중 <http> 요소는 허용되지 않습니다
model.inspection.model.http.pattern.all.must.be.last='/**' 패턴이 포함된 <http>는 마지막이어야 합니다
model.inspection.model.intercept.url.attribute.only.inside.http=상위 <http>에만 허용되는 속성
model.inspection.model.ldap.either.user.context.mapper.ref.or.user.details.class='user-context-mapper-ref' 또는 'user-details-class'를 포함해야 합니다
model.inspection.model.ldap.server.manager.dn.without.manager.password='manager-dn' 사용 시 'manager-password'가 필요합니다
model.inspection.model.protect.do.not.mix.with.global.method.security=<protect>와 <global-method-security>의 혼용은 권장되지 않습니다
model.inspection.model.protect.pointcut.expression.only.execution=여기에는 'execution' 포인트컷 지정자만 지원됩니다
model.inspection.model.user.service.either.properties.or.users=속성 'properties' 또는 <user> 요소 목록을 포함해야 합니다
model.inspection.model.user.service.ref.required=여러 user-service가 발견되었습니다. 'user-service-ref'가 필요합니다
secured.url.matcher.inlay.provider.name=보안 URL 매처 인레이
security.role.type=보안 역할
spring.bean.resolve.in.annotation.inspection.display.name=Spring Security 어노테이션에서 참조된 잘못된 Spring Bean 구성
spring.meta.filter.self.method.calls=프록시 메서드의 자체 호출(실질적으로 타깃 객체 내의 메서드가 타깃 객체 내의 다른 메서드를 호출)입니다. 어노테이션이 런타임 시에 무시됩니다
spring.pre.filter.self.method.calls=@{0} 자체 호출(실질적으로 타깃 객체 내의 메서드가 타깃 객체 내의 다른 메서드를 호출)입니다. 어노테이션이 런타임 시에 무시됩니다
spring.pre.filter.self.method.calls.inspection.display.name=@PreFilter/@PreAuthorize/@PostFilter 자동 호출 메서드 호출
spring.secured.configuration.not.found=Spring 보안 구성을 찾을 수 없습니다
spring.secured.configurations=Spring 보안 구성
spring.secured.configurations.search=보안 구성 검색 중
spring.secured.url.matcher.inlay=매처의 보안 URL 표시
spring.secured.url.matcher.navigate.title=보안 URL로 이동
spring.secured.url.not.found=Spring 보안 URL을 찾을 수 없습니다
spring.secured.url.not.found.title=Spring 보안 구성
spring.secured.urls.inlay.hide.inlays.intention.name=현재 언어의 보안 URL 인레이 숨기기
spring.secured.urls.inlay.settings.inlays.intention.hint.link=설정을 사용합니다
spring.secured.urls.inlay.settings.inlays.intention.hint.message=안전한 URL 인레이를 {0,choice,0\#비활성화|1\#활성화}하려면 인텐션 또는
spring.secured.urls.inlay.show.inlays.enable.intention.name=현재 언어의 보안 URL 인레이 표시
spring.secured.urls.search=보안 URL 검색 중
spring.security.framework.name=Spring Security
