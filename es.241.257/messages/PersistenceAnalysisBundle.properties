inspection.jvm.languages.group.name=Lenguaje JVM
jvm.inspections.sql.source.to.sink.flow.display.name=Cadena insegura utilizada en SQL
jvm.inspections.sql.source.unsafe.to.sink.flow.untainted.annotations=Anotación no contaminada:
jvm.inspections.sql.source.unsafe.to.sink.flow.untainted.annotations.comment=Estas anotaciones se utilizan como anotaciones '@Untainted' durante el análisis.
jvm.inspections.sql.source.to.sink.flow.too.complex=Esas cadenas utilizadas en SQL son demasiado complejas para garantizar que sean seguras.
jvm.inspections.sql.source.to.sink.flow.unsafe=Las cadenas utilizadas en SQL pueden no ser seguras
jvm.inspections.sql.source.unsafe.to.sink.flow.check.warn.if.complex=Informar una cadena que es demasiado compleja para verificar
jvm.inspections.sql.source.unsafe.to.sink.flow.check.warn.if.complex.comment=Se recomienda comprobar estas cadenas manualmente.
jvm.inspections.sql.source.unsafe.to.sink.flow.check.private.methods=Los parámetros de los métodos privados se consideran seguros.
jvm.inspections.sql.source.unsafe.to.sink.flow.check.private.methods.comment=Cuando está deshabilitado, los parámetros de los métodos privados se consideran desconocidos.
jvm.inspections.sql.source.unsafe.to.sink.flow.safe.class=Clases seguras:
jvm.inspections.sql.source.unsafe.to.sink.flow.safe.class.comment=Se considera que estas clases contienen solo datos seguros.
jvm.inspections.sql.source.unsafe.to.sink.flow.untainted.methods=Método no contaminado:
jvm.inspections.sql.source.unsafe.to.sink.flow.untainted.methods.comment=Se considera que estos métodos devuelven sólo objetos seguros.
jvm.inspections.sql.source.unsafe.to.sink.flow.check.private.final.field=Los campos privados o finales dentro de la misma clase se consideran seguros.
jvm.inspections.sql.source.unsafe.to.sink.flow.check.private.final.field.comment=Si están habilitados, los campos privados o finales se consideran seguros; de lo contrario, se procesan de acuerdo con las reglas.
