JsxTree.action.showHideHooks=훅 표시/숨기기
JsxTree.collapseAll=모두 접기
JsxTree.context.action.wrapIntoCondition=조건으로 래핑
JsxTree.context.action.wrapIntoConditionTernary=조건으로 래핑(삼항)
JsxTree.dataFlavorNodeName=JSX 트리 노드
JsxTree.defaultNodeName=조각
JsxTree.else=else
JsxTree.emptyText=React 구성 요소를 찾을 수 없습니다
JsxTree.expandAll=모두 펼치기
JsxTree.ifMain=if ({0})
JsxTree.loading=로드 중...
JsxTree.popupMenu.label=다음으로 래핑\:
JsxTree.removeComponent=구성 요소 제거
JsxTree.switchCase=case ({0})
JsxTree.switchDefault=default
JsxTree.switchMain=switch ({0})
Marketplace.action.dialog.description=프로젝트 내에서 React 종속성이 있는 다수의 package.json 파일을 탐지했습니다.\n하나를 선택하여 React 라이브러리를 설치하세요
Marketplace.action.dialog.packageJsonField.label=package.json 선택\:
Marketplace.action.dialog.title=소스 패키지 파일 선택
Marketplace.action.dialog.validation=소스 package.json 파일 지정
Marketplace.action.notification.packageJsonNotFound=프로젝트에서 React 종속성이 있는 package.json 파일을 찾을 수 없습니다
Marketplace.wizard.changeSteps.addCss.description=CSS 가져오기 추가
Marketplace.wizard.changesForKit.label={0}을(를) 설치하고 발생한 프로젝트 파일의 변경 사항
Marketplace.wizard.createNextJSDocument.description=pages 디렉터리에 문서 파일 생성(_D)
Marketplace.wizard.dependenciesToInstall.label=설치할 종속성\:
Marketplace.wizard.documentation.label=문서
Marketplace.wizard.editNextJSConfig.description={0} 파일 편집
Marketplace.wizard.editRootComponent.description=루트 구성 요소 편집
Marketplace.wizard.install.button=설치(&I)
Marketplace.wizard.next.error.documentAlreadyExists=다음에 따라 {0} 업데이트\:
Marketplace.wizard.next.error.pagesDirectory=pages 디렉터리를 {0}에서 찾을 수 없습니다
Marketplace.wizard.noChangesRequired.label=추가적인 프로젝트 변경이 필요하지 않습니다
Marketplace.wizard.noFileToChange.label=파일을 찾을 수 없습니다.
Marketplace.wizard.noKitSelected.label=개발 키트가 선택되지 않았습니다
Marketplace.wizard.title=React 라이브러리
Palette.action.copyItem.dialog.title=팔레트 항목 복사
Palette.action.copyItem.dialog.variantNameField=배리언트 이름\:
Palette.action.copyItem.validation.empty=배리언트 이름 지정
Palette.action.copyItem.validation.unique=고유한 배리언트 이름 지정
Palette.action.openDoc.label=문서 열기
Palette.action.showPreview.label=구성 요소 미리보기
Palette.addSubComponent.intention.label=하위 구성 요소 추가
Palette.addSubComponent.notification.content={0}에 하위 구성 요소 추가
Palette.allResult=모든 결과
Palette.batch.action.addToPalette.label=구성 요소를 팔레트에 추가
Palette.batch.dialog.componentsLabel=구성 요소
Palette.batch.dialog.paletteLabel=팔레트
Palette.batch.dialog.title=팔레트 에디터
Palette.batch.editingPalette.importResolve=import 문 해결...
Palette.batch.editingPalette.resolving=해결 중\: 
Palette.batch.folderField.emptyText=구성 요소가 있는 폴더 선택
Palette.batch.inlay.label=팔레트 에디터 열기
Palette.batch.loadingComponents=프로젝트의 종속성에서 React 구성 요소 검색 중
Palette.batch.loadingComponents.indicator.label=발견된 구성 요소\:
Palette.batch.paletteTree.action.moveDown.label=Down
Palette.batch.paletteTree.action.moveUp.label=위로
Palette.batch.paletteTree.action.remove.label=제거
Palette.batch.selectCategory.dialog.title=카테고리 선택
Palette.componentDragWarning=색인을 업데이트하는 중에는 팔레트에서 끌어올 수 없습니다.
Palette.componentSearchHistory=COMPONENT_SEARCH_HISTORY
Palette.contextMenu.editTemplate=템플릿 편집
Palette.contextMenu.navigateToFile=팔레트 파일로 이동
Palette.devtools.error.findFile=다음 파일을 찾을 수 없습니다. {0}
Palette.devtools.error.rootComponent=앱 루트 구성 요소를 찾을 수 없습니다
Palette.devtools.error.rootFile=올바르지 않은 앱 루트 구성 요소 파일
Palette.devtools.extensionDependency.choosePalette.dialog=구성 요소 팔레트 추가
Palette.devtools.extensionDependency.notification.action.choosePalette=추가
Palette.devtools.extensionDependency.notification.action.openConfigName=구성 열기
Palette.devtools.extensionDependency.notification.action.skip=건너뛰기
Palette.devtools.extensionDependency.notificationContent=<html>{0}</html>
Palette.devtools.infoDialog.dependencyInfo=다음의 종속성 설치\:
Palette.devtools.infoDialog.dependencyInfo.devtoolsContext=팔레트 추가\:
Palette.devtools.infoDialog.devToolsField.label=Toolbox 파일 디렉터리\:
Palette.devtools.infoDialog.devToolsField.validation=색인 파일이 있는 폴더에 개발 도구가 없을 수 있습니다
Palette.devtools.infoDialog.error.devtoolsDirectory=devtools 디렉터리를 생성하는 중 오류가 발생했습니다
Palette.devtools.infoDialog.error.devtoolsFiles=devtools 파일을 생성하는 중 오류가 발생했습니다
Palette.devtools.infoDialog.error.paletteFileNotFound=팔레트 파일을 devtools 디렉터리에서 찾을 수 없습니다
Palette.devtools.infoDialog.error.rootComponentFile=루트 구성 요소를 편집하는 중 오류가 발생했습니다
Palette.devtools.infoDialog.hideEditorCheckbox.label=<DevSupport>를 수동으로 삽입
Palette.devtools.infoDialog.packageJsonField.label=프로젝트 package.json 파일\:
Palette.devtools.infoDialog.rootComponentFile.error=선택된 파일에 루트 요소가 없습니다
Palette.devtools.infoDialog.rootComponentTree.label=루트 구성 요소 파일\:
Palette.devtools.infoDialog.textInfo=<html>React Buddy의 미리보기 및 팔레트 기능을 사용하려면 추가 구성이 필요합니다.<br/>프로세스를 자동화해 드리겠습니다\! 다음이 변경됩니다.<br/>\\&emsp;1) <b>@react-buddy/ide-toolbox</b> 패키지가 프로젝트의 종속성에 추가됩니다.<br/>\\&emsp;2) <b>npm install</b>이 실행됩니다.<br/>\\&emsp;3) Toolbox 디렉터리 내에 구성 요소 팔레트와 미리보기 구성이 포함된 파일이 생성됩니다.<br/>\\&emsp;4) <b>DevSupport</b> 래퍼가 구성 요소 트리의 루트에 추가됩니다(아래의 미리보기 참조).</html>
Palette.devtools.infoDialog.title=React Buddy Toolbox 구성
Palette.devtools.infoDialog.validation.alreadyContain=지정된 폴더에는 이미 팔레트 파일이 있습니다
Palette.devtools.infoDialog.validation.noFolder=React Buddy 도구의 폴더를 지정하세요
Palette.devtools.infoDialog.validation.rootComponent=<html><b>ReactDOM.render</b>가 포함된 루트 구성 요소 파일을 지정하거나 <b>DevSupport를 수동으로 삽입</b>을 선택하세요</html>
Palette.intention.addToPalette=React 팔레트에 추가
Palette.intention.createNewItemDialog.title=새 {0} 생성
Palette.intention.devtoolsNotFound.action.label=구성
Palette.intention.devtoolsNotFound.nextJs.notSupported=구성 요소 미리보기는 Next.js 10 이상을 기반으로 하는 프로젝트에서 동작합니다
Palette.intention.devtoolsNotFound.notification.description='@react-buddy/ide-toolbox'를 package.json에서 찾을 수 없거나 일부 구성 파일이 누락되었습니다
Palette.intention.devtoolsNotFound.notification.title=React Buddy 지원
Palette.intention.devtoolsNotFound.packageJson.notFound={0}의 package.json을 찾을 수 없습니다
Palette.intention.devtoolsNotFound.projectType.notSupported=현재 {0} 프로젝트의 미리보기는 지원되지 않습니다
Palette.intention.mainDialog.title=팔레트에 구성 요소 추가
Palette.intention.mainDialog.validation.alreadyExistsVariant=이 이름을 가진 배리언트가 이미 있습니다
Palette.intention.mainDialog.validation.emptyCategory=구성 요소의 카테고리 지정
Palette.intention.mainDialog.validation.emptyComponent=구성 요소 지정
Palette.intention.mainDialog.validation.emptyVariantName=구성 요소에 이미 디폴트 배리언트가 있으므로 배리언트 이름을 지정하세요
Palette.intention.name.label={0} 이름\:
Palette.intention.requiredProps.notification.description=컴파일링 오류를 피하려면 필수 프로퍼티를 입력해야 합니다
Palette.intention.requiredProps.notification.title=React 팔레트
Palette.intention.validation.alreadyExistsComponent=그러한 {0}이(가) 이미 있습니다
Palette.intention.validation.emptyComponentName={0} 이름을 지정하세요
Palette.preview.browser.title=미리보기
Palette.preview.code.title=코드
Palette.preview.noPreview.label=미리보기를 사용할 수 없습니다
Palette.preview.noPreview.title=미리보기 없음
Preact.action.create.component.arrowFunction.description=화살표 함수의 Preact 구성 요소를 생성합니다
Preact.action.create.component.classbased.description=클래스 기반의 Preact 구성 요소를 생성합니다
Preact.action.create.component.functionDeclaration.description=함수 선언의 Preact 구성 요소를 생성합니다
ProxyChecking.notification.text=이는 화면 및 엔티티 디자이너들에게 문제가 될 수 있습니다
ProxyChecking.notification.title=프록시는 localhost에서 사용됩니다
React.action.create.component=React 구성 요소
React.action.create.component.arrowFunction.description=화살표 함수의 React 구성 요소를 생성합니다
React.action.create.component.arrowFunctionType.name=화살표 함수 구성 요소
React.action.create.component.classType.name=클래스 기반 구성 요소
React.action.create.component.classbased.description=클래스 기반의 React 구성 요소를 생성합니다
React.action.create.component.description=새 React 구성 요소를 생성합니다
React.action.create.component.functionDeclaration.description=함수 선언의 React 구성 요소를 생성합니다
React.action.create.component.functionType.name=함수 구성 요소
React.action.create.component.title=React 구성 요소 생성
React.action.create.component.validation.capitalized=구성 요소 이름은 대문자여야 합니다
React.action.create.component.validation.invalidChars=구성 요소 이름에 올바르지 않은 문자가 있습니다
React.action.create.component.validation.nullName=구성 요소 이름 지정
React.action.generateComponent.title=React 팔레트의 구성 요소
React.action.generateHook.title=React 훅
React.action.showSnippetPreview.label=스니펫 미리보기 표시
React.appView.rootFileField=루트 파일\:
React.appView.rootFileField.dialogTitle=루트 파일 선택
React.appView.showRoute.caption=경로만 표시
React.editor.linemarker.handler.caption=구성 요소 이벤트 핸들러
React.editor.linemarker.hook.caption=React 훅
React.fix.exhaustiveDeps=종속성 배열을 다음으로 업데이트\: {0}
React.generation=React Buddy
React.generation.test.afterAll=afterAll
React.generation.test.afterEach=afterEach
React.generation.test.beforeAll=beforeAll
React.generation.test.beforeEach=beforeEach
React.generation.test.dialog.title=React 구성 요소 테스트 생성
React.generation.test.edit.settings.tooltip=타깃 설정 편집
React.generation.test.generate.label=\ 생성
React.generation.test.generateStubs.label=props의 스텁 생성
React.generation.test.setting.defaultDirectory.label=디폴트 디렉터리\:
React.generation.test.setting.directory.dialog.title=디폴트 디렉터리 테스트
React.generation.test.setting.generateInto.label=테스트 정보 생성\:
React.generation.test.setting.subDirectory.label=구성 요소의 하위 디렉터리\:
React.inspection.JSXMap=JSX 맵
React.inspection.canBeConvertedToProp=prop으로 변환할 수 있습니다
React.inspection.canBeConvertedToStateOrProp=state 또는 prop으로 변환할 수 있습니다
React.inspection.canCreateProps=존재하지 않는 prop을 생성할 수 있습니다
React.inspection.canMapToJSX=JSX로 전개할 수 있습니다
React.inspection.convertToState=state로 변환
React.inspection.convertUnresolvedToState=미해결을 useState로 변환
React.inspection.convertVarToState=useState 변수로 변환
React.inspection.createProp=prop 생성
React.inspection.createProps={1}에 {0} prop 생성
React.inspection.createStateVariable=useState 변수 {0} 생성
React.inspection.createTest=테스트 생성
React.inspection.createTest.validation.alreadyExists=<html><b>{0}<b/>이(가) 이미 선택된 디렉터리에 있습니다<html/>
React.inspection.createTest.validation.emptyField=타깃 필드는 비워둘 수 없습니다
React.inspection.dependency.addPaletteExtension=구성 요소 팔레트 추가
React.inspection.dependency.paletteExtensionExist=구성 요소 팔레트를 사용할 수 있습니다
React.inspection.emptyAttribute=빈 구성 요소 속성 값
React.inspection.emptyRefAttribute=참조 속성이 비어 있습니다
React.inspection.exhaustiveDeps=종속성 배열을 업데이트해야 합니다
React.inspection.noParameters=구성 요소 매개변수를 찾을 수 없습니다
React.inspection.noPropsDefinition=구성 요소 prop 정의를 찾을 수 없습니다
React.inspection.nonEditablePropsType=구성 요소 프로퍼티 타입을 편집할 수 없습니다
React.inspection.quickFix.emptyEventHandler=이벤트 핸들러 생성
React.inspection.quickFix.emptyRefAttribute=참조 생성
React.inspector.action.addElement=요소 추가
React.inspector.action.navigateToSource=소스로 이동
React.inspector.error.calculationError=프로퍼티 계산 오류
React.inspector.error.propertiesNotFound=프로퍼티를 찾을 수 없습니다
React.intention.addUseRef=참조 생성
React.intention.generateHandler.label=핸들러 생성
React.intention.generateHandler.label.capitalized=핸들러 생성
React.intention.wrapIntoCallback.label=useCallback()으로 래핑
React.intention.wrapIntoCondition=조건으로 래핑
React.intention.wrapIntoConditionTernary=조건으로 래핑(삼항)
React.intention.wrapIntoMemo.label=memo()로 래핑
React.jsxTree.action.addPaletteComponent.label=팔레트에 구성 요소 추가
React.jsxTree.action.generateHandler.label=핸들러 생성
React.livetemplate.context.js.description=React 컨텍스트 제공자를 생성합니다
React.livetemplate.context.tsx.description=React 컨텍스트 제공자를 생성합니다
React.livetemplate.error.groupNotFound=<html>React Buddy 템플릿 그룹을 찾을 수 없습니다.<br/>그룹 이름을 디폴트 값으로 재설정하세요. <b>{0}</b></html>
React.livetemplate.error.templateNotFound=<html>대응하는 라이브 템플릿을 찾을 수 없습니다.<br/>약어나 설명을 디폴트 값으로 재설정하세요.<br/>\\&emsp;- 약어\: \\&quot;{0}\\&quot;;<br/>\\&emsp;- 설명\: \\&quot;{1}\\&quot;.</html>
React.preview.action.visibility.outline=JSX 아웃라인 표시/숨기기
React.preview.action.visibility.preview=미리보기 표시/숨기기
React.preview.errorWhileEditing={0}을(를) 편집하는 동안 오류가 발생했습니다
React.preview.fillActionName=필수 prop 추가
React.preview.notificationContent=구성 요소의 미리보기를 표시하려면 필수 프로퍼티를 입력해야 합니다
React.preview.notificationTitle=React 미리보기
React.preview.validation.indexing=색인 생성 중에는 미리보기를 사용할 수 없습니다
React.preview.validation.previewsNotFound=구성 요소와 일치하는 previews.tsx를 찾을 수 없습니다
React.preview.validation.previewsNotFound.title=미리보기를 시작할 수 없습니다
React.preview.validation.previewsNotSuitable=<html>개발 서버가 현재 작업 공간의 다른 프로젝트를 위해 실행 중입니다.<br/>미리보기 서버를 종료하고 다시 시도하세요.</html>
React.preview.wrongFileType=이 타입의 파일은 미리보기를 사용할 수 없습니다
React.previewServer.title=React 미리보기 서버
React.settings.devServerConfigs.addConfig=구성 추가
React.settings.devServerConfigs.label=개발 서버 구성
React.settings.devServerConfigs.removeConfig=구성 제거
React.settings.devServerConfigs.scriptField.label=스크립트\:
React.settings.devServerConfigs.validation.emptyConfigurationParameters=모든 구성 매개변수를 입력해야 합니다
React.settings.devServerConfigs.validation.invalidUrl=잘못된 URL
React.settings.devServerConfigs.validation.noScript=개발 서버를 실행하기 위해 스크립트 지정
React.settings.handlerDeclarationType.arrow=화살표 함수
React.settings.handlerDeclarationType.label=이벤트 핸들러 생성
React.settings.handlerDeclarationType.regular=함수 선언
React.settings.previewVisibilityLabel=에디터 플로팅 패널 표시
React.settings.saveOutlineStateAcrossEditors=JSX 아웃라인 상태를 모든 파일에 걸쳐 저장
React.settings.subCompNotification.label=하위 구성 요소 알림 표시
React.settings.vcsNotification.addToVcs=VCS에 추가
React.settings.vcsNotification.description=버전 컨트롤 시스템에 rcb-settings.xml이 무시되는 파일 목록에 추가되어 있습니다
React.settings.vcsNotification.ignore=무시
React.settings.vcsNotification.title=React Buddy 설정
React.settings.wrapIntoUseCallback=생성된 핸들러를 useCallback()으로 래핑
React.toolwindow.start.typing.for.search=입력을 시작하여 검색
React.visualDesigner.componentPropsCaption=구성 요소 프로퍼티
React.visualDesigner.copyUrl=URL을 복사
React.visualDesigner.highlightModeCaption=구성 요소 강조 표시
React.visualDesigner.highlightModeDescription=소스 코드로 이동하려면 요소를 선택하세요
React.visualDesigner.previewSettings.configureComponent=구성 요소 구성
React.visualDesigner.previewSettings.zoomIn=확대
React.visualDesigner.previewSettings.zoomOut=축소
React.visualDesigner.previewSettings.zoomReset=확대 재설정
React.visualDesigner.previewSettingsCaption=미리보기 설정
React.visualDesigner.refresh=새로고침
React.visualDesigner.reinit=재초기화
React.visualDesigner.reinit.description=미리보기 브라우저 인스턴스를 재생성합니다
React.visualDesigner.reload=다시 불러오기
React.visualDesigner.reload.description=페이지 다시 로드
React.visualDesigner.traceUpdates=구성 요소 렌더링 강조 표시
React.visualDesigner.traceUpdatesDescription=React 구성 요소가 다시 렌더링될 때마다 경계에 색을 입히는 강조표시기를 활성화합니다
React.visualDesigner.waitingForServer.instruction=<html><p>서버의 URL을 자동으로 결정하거나 서버 설정에 지정된 값이 사용됩니다. URL이 잘못 지정된 경우 수동으로 변경하세요.</p></html>
React.visualDesigner.waitingForServer.label=대기 중 
React.visualDesigner.waitingForServer.rcblabel=서버를 기다리는 중...
React.visualDesigner.waitingForServer.urlFieldLabel=개발 서버 URL\:
ReactAdmin.inspection.unresolved.resource=대응하는 리소스 없음
Settings.displayName.devServer=개발 서버 구성
Settings.displayName.editor=에디터 설정
Settings.displayName.storybook=Storybook
Settings.displayName.testGeneration=테스트 생성
Snippet.dialog.title=스니펫 매개변수
Snippet.param.wizard.asSeparateComponent=별도의 구성 요소로 삽입
Snippet.param.wizard.bar.title=바 차트 디자이너
Snippet.param.wizard.cardList.title=카드 목록 디자이너
Snippet.param.wizard.cardObject.title=카드 객체 디자이너
Snippet.param.wizard.componentParameters.label=구성 요소 매개변수
Snippet.param.wizard.dialog.title=대화상자 디자이너
Snippet.param.wizard.finalButton=완료(&F)
Snippet.param.wizard.form.title=양식 디자이너
Snippet.param.wizard.line.title=라인 차트 디자이너
Snippet.param.wizard.parameters.label=매개변수
Snippet.param.wizard.pie.title=파이 차트 디자이너
Snippet.param.wizard.preview.hide=미리보기 숨기기
Snippet.param.wizard.preview.show=미리보기 표시
Snippet.param.wizard.scatter.title=분산형 차트 디자이너
Snippet.param.wizard.table.title=테이블 디자이너
Snippet.param.wizard.title=스니펫 매개변수 에디터
Snippet.param.wizard.treeTable.title=트리 테이블 디자이너
Snippet.param.wizard.validation.arrayVariable=배열 변수 지정
Snippet.param.wizard.validation.collectionIsEmpty={0}개의 항목 지정
Snippet.param.wizard.validation.objectName=객체 이름 지정
Snippet.param.wizard.validation.variable=변수 지정
Snippet.validation.notBoolean={0}에 지정된 값이 부울이 아닙니다
Snippet.validation.notCompatibleType={0}에 지정된 값이 호환되지 않는 타입입니다
Snippet.validation.notNumber={0}에 지정된 값이 숫자가 아닙니다
Snippet.validation.specifyValue={0}의 값 지정
Snippet.velocity.charts.axisLabel=축 라벨
Snippet.velocity.charts.bottomAxis=하단 축\:
Snippet.velocity.charts.data=데이터 프로퍼티\:
Snippet.velocity.charts.id=ID 프로퍼티\:
Snippet.velocity.charts.index=색인 프로퍼티\:
Snippet.velocity.charts.key=키 프로퍼티\:
Snippet.velocity.charts.label=라벨 프로퍼티\:
Snippet.velocity.charts.leftAxis=왼쪽 축\:
Snippet.velocity.charts.rightAxis=오른쪽 축\:
Snippet.velocity.charts.topAxis=상단 축\:
Snippet.velocity.charts.validation.emptyData=데이터 프로퍼티 지정
Snippet.velocity.charts.validation.emptyId=ID 프로퍼티 지정
Snippet.velocity.charts.validation.emptyIndex=색인 프로퍼티 지정
Snippet.velocity.charts.validation.emptyKeys=최소 하나의 키 프로퍼티를 선택해야 합니다
Snippet.velocity.charts.validation.emptyLabel=라벨 프로퍼티 지정
Snippet.velocity.charts.validation.emptyValue=값 프로퍼티 지정
Snippet.velocity.charts.validation.emptyX=x 프로퍼티 지정
Snippet.velocity.charts.validation.emptyY=y 프로퍼티 지정
Snippet.velocity.charts.value=값 프로퍼티\:
Snippet.velocity.charts.x=x\:
Snippet.velocity.charts.y=y\:
Snippet.velocity.param.card.field.filterBy=필터링 기준\:
Snippet.velocity.param.card.field.labelPosition=라벨 위치\:
Snippet.velocity.param.card.field.outline=아웃라인 표시됨
Snippet.velocity.param.card.field.pagination=페이지 매기기
Snippet.velocity.param.card.field.rowsPerPage=페이지당 줄\:
Snippet.velocity.param.card.field.solid=솔리드
Snippet.velocity.param.card.field.sortBy=정렬 기준\:
Snippet.velocity.param.card.field.subTitleProperty=자막 프로퍼티\:
Snippet.velocity.param.card.field.table=표시할 프로퍼티
Snippet.velocity.param.card.field.table.validation=카드 항목 프로퍼티 이름은 비워둘 수 없습니다
Snippet.velocity.param.card.field.titleProperty=타이틀 프로퍼티\:
Snippet.velocity.param.card.itemField.placeholder=옵션은 Ctrl+Space를 누르세요
Snippet.velocity.param.card.key.label=키 프로퍼티\:
Snippet.velocity.param.card.object.type=카드 객체 타입\:
Snippet.velocity.param.card.select.variable=지역 변수\:
Snippet.velocity.param.cardList.actions.label=카드 목록 액션
Snippet.velocity.param.cardObject.actions.label=카드 액션\:
Snippet.velocity.param.dataSource.type=데이터 소스\:
Snippet.velocity.param.dialog.actions.label=대화상자 액션
Snippet.velocity.param.dialog.content.label=내용\:
Snippet.velocity.param.dialog.fullScreen.label=전체 화면
Snippet.velocity.param.dialog.fullWidth.label=전체 너비
Snippet.velocity.param.dialog.maxWidth.label=최대 너비\:
Snippet.velocity.param.dialog.position.label=위치\:
Snippet.velocity.param.dialog.title.label=제목\:
Snippet.velocity.param.form.action.actionType=타입
Snippet.velocity.param.form.action.formSubmit=서식 제출
Snippet.velocity.param.form.action.id=ID
Snippet.velocity.param.form.action.label=라벨
Snippet.velocity.param.form.action.table.validation=액션 테이블 필드는 공백일 수 없습니다
Snippet.velocity.param.form.actions.table=양식 액션
Snippet.velocity.param.form.field.actionType=타입
Snippet.velocity.param.form.field.controlType=제어 타입
Snippet.velocity.param.form.field.dataType=데이터 타입
Snippet.velocity.param.form.field.description=설명
Snippet.velocity.param.form.field.editor.title=양식 타입 필드 에디터
Snippet.velocity.param.form.field.helperText=도움말 텍스트
Snippet.velocity.param.form.field.label=라벨
Snippet.velocity.param.form.field.labelPosition=라벨 위치\:
Snippet.velocity.param.form.field.name=이름
Snippet.velocity.param.form.field.placeholder=자리표시자
Snippet.velocity.param.form.field.required=필수
Snippet.velocity.param.form.field.table=서식 필드
Snippet.velocity.param.form.field.table.validation=양식 필드 이름이 공백일 수 없습니다
Snippet.velocity.param.form.field.validate=유효성 검사
Snippet.velocity.param.form.loading.type=로드 중...
Snippet.velocity.param.form.new.type.name=신규 타입 이름\:
Snippet.velocity.param.form.object.type=양식 객체 타입\:
Snippet.velocity.param.form.select.type=객체 유형\:
Snippet.velocity.param.preview.compilation.error=Velocity 템플릿 컴파일링 오류입니다.\n프로토타입 코드를 변경해야 할 가능성이 높습니다.
Snippet.velocity.param.table.actions.label=테이블 액션
Snippet.velocity.param.table.column.sorting=정렬
Snippet.velocity.param.table.column.table=테이블 열 프로퍼티
Snippet.velocity.param.table.column.title=제목
Snippet.velocity.param.table.column.validation=테이블 열 이름은 비워둘 수 없습니다
Snippet.velocity.param.table.columns.label=테이블 열
Snippet.velocity.param.table.expandIfSet=프로퍼티가 설정되면 확장\:
Snippet.velocity.param.table.expandableRow=확장 가능한 행
Snippet.velocity.param.table.expandableRow.validation=<html><b>프로퍼티가 설정되면 확장</b> 및 <b>표시할 프로퍼티</b>를 사용하려면 최소 하나의 값을 지정하세요</html>
Snippet.velocity.param.table.fixedColumn=고정된 열\:
Snippet.velocity.param.table.fixedHeader=고정된 헤더
Snippet.velocity.param.table.hierarchical=계층적 프로퍼티\:
Snippet.velocity.param.table.object.type=테이블 객체 타입\:
Snippet.velocity.param.table.propsToDisplay=표시할 프로퍼티\:
Snippet.velocity.param.table.rowSize=행 크기\:
Snippet.velocity.param.table.stripes=스트라이프
Storybook.action.createNewStory.description=새 스토리를 생성합니다
Storybook.action.createNewStory.dialog.title=새 Storybook .stories 파일
Storybook.action.createNewStory.label=Storybook 스토리
Storybook.action.generateStory=Storybook 구성 요소
Storybook.componentDragWarning=색인이 업데이트되는 동안에는 끌어놓을 수 없습니다.
Storybook.contextMenu.navigate=스토리로 이동
Storybook.intention.createStory.allProps.label=모든 prop용
Storybook.intention.createStory.category.label=카테고리\:
Storybook.intention.createStory.category.validation=스토리의 카테고리 지정
Storybook.intention.createStory.dialog.title=스토리 생성
Storybook.intention.createStory.directory.label=대상\:
Storybook.intention.createStory.generateArgs.actionLink=디폴트 인수
Storybook.intention.createStory.generateArgs.label=생성
Storybook.intention.createStory.requiredProps.label=필수 prop만
Storybook.intention.createStory.title=Storybook에 추가
Storybook.intention.createStory.validation.directoryDoesNotExists=Storybook 디폴트 디렉터리가 없습니다
Storybook.intention.createStory.validation.storyAlreadyExists=스토리가 이미 있습니다
Storybook.livetemplate.newStory.js.7plus.description=Storybook v7 스토리
Storybook.livetemplate.newStory.js.description=Storybook v6 스토리
Storybook.livetemplate.newStory.tsx.7plus.description=Storybook v7 스토리
Storybook.livetemplate.newStory.tsx.description=Storybook v6 스토리
Storybook.setting.defaultDirectory.label=디폴트 디렉터리\:
Storybook.setting.directory.dialog.title=Storybook 디폴트 디렉터리
Storybook.setting.generateInto.label=스토리 정보 생성\:
Storybook.setting.subDirectory.label=구성 요소의 하위 디렉터리\:
Storybook.setting.use7plus.label=CSF 7+ 사용
Storybook.toolwindow.stripe=Storybook
action.com.intellij.reactbuddy.GenerateReactComponentAction.description=React 구성 요소 생성
action.com.intellij.reactbuddy.GenerateReactComponentAction.text=React 구성 요소
action.com.intellij.reactbuddy.InstallReactLibraryAction.description=React 라이브러리를 설치하기 위해 React Buddy 대화상자를 엽니다
action.com.intellij.reactbuddy.InstallReactLibraryAction.text=React 라이브러리 설치
action.com.intellij.reactbuddy.OutlineVisibleAction.description=현재 에디터에서 아웃라인 표시/숨기기
action.com.intellij.reactbuddy.PreviewVisibleAction.description=현재 에디터에서 미리보기 표시/숨기기
action.com.intellij.reactbuddy.ShowInComponentTreeAction.text=구성 요소 트리 표시
action.com.intellij.reactbuddy.action.hook.GenerateReactHookAction.description=React 훅 생성
action.com.intellij.reactbuddy.action.hook.GenerateReactHookAction.text=React 훅
action.com.intellij.reactbuddy.action.storybook.GenerateStoryAction.description=Storybook 구성 요소를 생성합니다
action.com.intellij.reactbuddy.action.storybook.GenerateStoryAction.text=Storybook 구성 요소
configurable.group.com.intellij.reactbuddy.tools.settings.description=<html><body>React Buddy는 JSX 친화적인 시각 도구를 제공하여 React.js 기반의 애플리케이션을 개발할 때 유용합니다.
configurable.group.com.intellij.reactbuddy.tools.settings.display.name=React Buddy
error.reporter.privacy.notice.text=<html>React Buddy 개발 팀이 제품을 <b>개선</b>하기 위해 <b>하드웨어 구성</b>(OS 이름, PC 메모리, PC 호스트 이름), <b>소프트웨어 구성</b>(IDEA 버전, java 런타임 버전, IDEA 이름), <b>제품 정보</b>(플러그인 버전, 마지막으로 호출한 액션) 및 위에 표시된 <b>오류 정보</b>를 사용한다는 것에 동의합니다. <b>스택 추적은 그 어떠한 민감 정보도 포함하지 않는 다는 점에 유의해 주세요.</b> 또한, React Buddy 팀에 <a href\="https\://react-buddy.com/contacts/">이메일</a> 또는 <a href\="https\://discord.gg/dgcrTKFUb8">Discord</a> 채널로 재현 케이스를 공유해 주시면 감사하겠습니다.</html>
form.field.rule.editor.numberRestriction=문자수
form.field.rule.editor.title=검증 규칙 추가
form.field.rule.intention.title=검증 규칙 추가
inspection.group.key.rcbCommon=React Buddy
react.buddy.addsubcomponent.notifications=React Buddy가 하위 구성 요소를 추가했습니다
react.buddy.common.notifications=React Buddy 공통 알림
react.buddy.logs=React Buddy 로그
react.componentRegister.command.name=React Buddy 레지스터 구성 요소
toolwindow.stripe.reactInspector=React 검사 도구
toolwindow.stripe.reactPalette=React 팔레트
