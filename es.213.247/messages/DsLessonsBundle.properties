
jupyter.onboarding.module.name=온보딩 투어
jupyter.onboarding.module.description={0}의 주요 기능에 관한 간략한 개요입니다.
jupyter.onboarding.lesson.name={0} 알아보기
jupyter.onboarding.intro=DataSpell에서 사용할 수 있는 Jupyter 노트북 지원을 통해 로컬 노트북을 생성 및 연결할 수 있으며, 원격 작업을 하고, 코드 셀을 실행 및 디버그할 수 있습니다.
jupyter.onboarding.balloon.workspace.view=클릭하여 {0} 도구 창을 엽니다
jupyter.onboarding.balloon.attach.button=클릭하여 디렉터리를 첨부하여 {0} 디렉터리를 선택합니다.
jupyter.onboarding.balloon.add.notebook=새 노트북을 추가해보겠습니다. {0} 마우스 오른쪽을 클릭하고 {1}을(를) 선택합니다.
jupyter.onboarding.notebook.name=아무 이름을 입력하거나 {0}을(를) 눌러 제안된 사항을 수락합니다.
jupyter.onboarding.install.jupyter=<ide/>은(는) 에디터 위에 특별한 알림과 함께 IDE, 프로젝트, 파일에 있는 문제에 대한 빠른 수정을 제안합니다. 계속하려면 Jupyter 패키지를 설치하십시오. {0}을(를) 클릭하십시오.
jupyter.onboarding.wait.jupyter.installed=설치가 완료될 때까지 기다립니다.
jupyter.onboarding.wait.indexing=이제 <ide/>은(는) 내부 표현을 업데이트해야 합니다. 작업이 완료될 때까지 기다립니다.
jupyter.onboarding.install.pandas=<ide/>은(는) 에디터에서 바로 오류와 문제를 강조 표시합니다. 빨간색 줄은 {0} 패키지를 설치해야 합니다. 강조 표시된 {1} 단어에 커서를 놓고 {2}을(를) 누릅니다.
jupyter.onboarding.run.first.sample=이 수업을 위해 생성된 샘플 코드 셀이 있습니다. 실행해 보겠습니다. {0}을(를) 클릭하거나 {1}을(를) 누르십시오.
jupyter.onboarding.variables.toolwindow.description=셀을 실행하면 <ide/>이(가) 로컬 Jupyter 서버를 실행합니다. {0} 도구 창에서 변수 값을 미리보기할 수 있습니다. 값을 열어보겠습니다.
jupyter.onboarding.balloon.open.variables.toolwindow=클릭하여 {0} 도구 창을 엽니다
jupyter.onboarding.hide.variables={0}을(를) 펼쳐서 미리보기합니다. 이제 도구 창을 숨기십시오. {1}에서 클릭하거나 {2}을(를) 누르십시오.
jupyter.onboarding.open.results.in.tab=출력 영역에서 셀 실행의 결과를 미리보기합니다. {0} 링크를 클릭하여 별도의 에디터 탭에서 데이터 프레임을 엽니다.
jupyter.onboarding.table.description=테이블 헤더를 클릭하여 데이터를 정렬할 수 있습니다. 또한 일부 테이블 셀을 선택하여 마우스 오른쪽 클릭하면, 예를 들어, 데이터프레임의 선택된 조작을 복사하거나 저장할 수 있습니다.
jupyter.onboarding.return.to.editor=노트북으로 돌아가겠습니다. {0}을(를) 통해 탭을 전환하거나 많은 파일들을 작업하는 경우, 더 나은 {1}을(를) 누를 수 있습니다.
jupyter.onboarding.second.cell.intro=Python 커널 데이터 프레임을 토대로 일부 matplotlib 그래프를 빌드해보겠습니다. 두 번째 셀에서 파이 차트에 필요한 첫 번째 열의 이름이 누락되었습니다.
jupyter.onboarding.install.matplotlib={0}을(를) 설치해보겠습니다. {1}을(를) 눌러서 컨텍스트 액션을 호출합니다.
jupyter.onboarding.insert.second.cell=이제 두 번째 셀을 추가합니다. {0}을(를) 클릭하거나 {1}을(를) 누릅니다.
jupyter.onboarding.start.completion=플롯에 포함하고자 하는 열의 이름을 빠르게 완료할 수 있습니다. {0} 입력을 시작하면 코드 완성 목록이 나타납니다. 또는 {1}을(를) 누르고 계속 입력하여 목록을 줄일 수도 있습니다.
jupyter.onboarding.finish.completion={0}이(가) 선택되었는지 확인하고 {1}을(를) 누르세요.
jupyter.onboarding.right.click.for.run=두 번째 셀에서 마우스 오른쪽 클릭하여 컨텍스트 메뉴에서 {0}을(를) 선택합니다.
jupyter.onboarding.click.run.and.insert={0} 항목을 클릭하세요.
jupyter.onboarding.right.click.for.save=플롯을 저장하려면 이미지에서 마우스 오른쪽을 클릭하십시오.
jupyter.onboarding.select.save={0}을(를) 선택하세요.
jupyter.onboarding.finish.with.save=계속 진행하려면 {0}을(를) 누르거나 대화상자를 닫으십시오.
jupyter.onboarding.third.cell.intro=이제, 초기 데이터 세트를 수정하고 Python 3.4 및 3.5의 평균 커널 수를 계산해보겠습니다.
jupyter.onboarding.right.click.for.split=함수와 사용 위치를 다양한 셀에 두겠습니다.  마우스 오른쪽을 클릭하고 컨텍스트 메뉴에서 {0}을(를) 선택합니다.
jupyter.onboarding.apply.split={0} 을(를) 클릭하세요.
jupyter.onboarding.invoke.search.everywhere=현재의 셀과 그 아래의 모든 셀을 실행을 할 수 있습니다. {0}을(를) 두 번 눌러서 필요한 IDE 액션을 찾습니다.
jupyter.onboarding.start.typing.run.below={0} 대화상자를 기억하십시오. 코드나 IDE 관련 액션 또는 설정에서 엔티티를 찾는데 도움이 될 수 있습니다. {1} 입력을 시작하십시오.
jupyter.onboarding.press.run.below=필요한 항목을 선택할 때 {0}을(를) 누르십시오. {1} 및 {2}을(를) 포함하고 잇는 몇 개의 다른 액션들이 있습니다.
jupyter.onboarding.debug.introduction=실행 오류에 주의하십시오. 기본적으로 출력 영역의 역추적이 접혀있습니다. 펼쳐서 세부 정보를 미리보기하십시오.
jupyter.onboarding.debugging.workflow.description=함수 정의와 그 호출은 다양한 셀에 위치해 있으니 <strong>주의</strong>하십시오. 이러한 상황에서 디버그를 수행하려면 먼저 모든 셀(이미 완료됨)을 실행해야 합니다. 다음에 정의가 있는 셀 디버그를 시작해야 합니다. 지금 해보겠습니다.
jupyter.onboarding.start.to.debug.call=이제 함수 호출로 셀을 디버그할 수 있습니다.
jupyter.onboarding.fix.problem=감지된 오류를 수정하기 위해 열 이름을 수정해보겠습니다. {0}을(를) (하이픈을 가운데에 맞춤) {1}(으)로 바꾸십시오 (밑줄이 필요함).
jupyter.onboarding.rerun.all=이제 수정된 셀을 다시 실행할 준비가 되었습니다. {0}을(를) 클릭하거나 {1}을(를) 누르십시오.
jupyter.onboarding.congratulations=축하합니다! 수업을 완료하셨습니다.
jupyter.onboarding.finish.dialog={0} 온보딩 투어를 완료되었습니다. 이제 학습 프로젝트{1}를 닫으시면 됩니다.
jupyter.onboarding.confirm.package.installation={0}을(를) 눌러 설치를 호출합니다.
jupyter.onboarding.wait.pandas.installation=패키지가 설치될 때까지 기다리세요.