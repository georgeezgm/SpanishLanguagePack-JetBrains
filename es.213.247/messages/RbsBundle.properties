filetype.rbs.description=RBS

rbs.model.attribute.accessor.shortDescription=속성 접근자 ''{0}''
rbs.model.attribute.accessor.longDescription={1}의 속성 접근자 ‘{0}''
rbs.model.attribute.reader.shortDescription=속성 리더 ''{0}''
rbs.model.attribute.reader.longDescription={1}의 속성 리더 ‘{0}''
rbs.model.attribute.writer.shortDescription=속성 작성자 ''{0}''
rbs.model.attribute.writer.longDescription={1}의 속성 라이터 ''{0}''
rbs.model.class.shortDescription=클래스 ''{0}''
rbs.model.class.longDescription=''{1}'' 내 클래스 ''{0}''
rbs.model.class.variable.shortDescription=클래스 변수 ''{0}''
rbs.model.class.variable.longDescription={1}의 클래스 변수 ‘{0}''
rbs.model.constant.shortDescription=상수 ''{0}''
rbs.model.global.variable.shortDescription=전역 변수 ''{0}''
rbs.model.instance.variable.shortDescription=인스턴스 변수 ''{0}''
rbs.model.instance.variable.longDescription={1}의 인스턴스 변수 ‘{0}''
rbs.model.interface.shortDescription=인터페이스 ''{0}''
rbs.model.interface.longDescription=''{1}'' 내 ''{0}'' 인터페이스 생성
rbs.model.method.shortDescription=메서드 ''{0}''
rbs.model.method.longDescription={1}의 메서드 ‘{0}''
rbs.model.module.shortDescription=모듈 ''{0}''
rbs.model.module.longDescription=''{1}'' 내 모듈 ''{0}''
rbs.model.singleton.shortDescription=싱글턴 ''{0}''
rbs.model.type.alias.shortDescription=타입 별칭 ''{0}''
rbs.model.type.variable.shortDescription=타입 변수 ''{0}''
rbs.model.type.variable.longDescription={1}의 타입 변수 ‘{0}''

rbs.model.descriptions.private.prefix=Private


# inspections
rbs.inspection.group.rbs.probable.bugs.name=발생할 수 있는 버그

# annotations
rbs.annotation.module.included.in.interface=인터페이스에 포함된 클래스/모듈
rbs.annotation.singleton.in.interface=인터페이스 내의 싱글턴 메서드 정의

# Line markers

rbs.lineMarker.partial.declarations=RBS partial 선언
rbs.lineMarker.partial.declarations.title=partial 선언 선택

# actions

rbs.actions.create.file.text=RBS 파일/클래스
rbs.actions.create.file.description=새 RBS 파일/클래스를 생성합니다
rbs.actions.create.file.name=RBS 파일/클래스 {0} 생성
rbs.actions.create.file.title=새 RBS 파일/클래스 이름
rbs.actions.create.dialog.file=파일
rbs.actions.create.dialog.class=클래스
rbs.actions.create.dialog.module=모듈
rbs.actions.create.dialog.interface=인터페이스
rbs.actions.create.error.invalid.name=선택한 타입의 이름이 올바르지 않습니다
rbs.model.keyword.shortDescription=키워드 ''{0}''
rbs.model.parameter.shortDescription=매개변수 ''{0}''
rbs.inspection.duplicate=중복 선언
rbs.inspection.duplicate.type.alias=타입 별칭 선언 중복
rbs.inspection.duplicate.global.variable=전역 변수 선언 중복
rbs.inspection.duplicate.constant=상수 선언 중복
rbs.inspection.duplicate.class.exists=''{0}''이(가) 이미 클래스로 있습니다
rbs.inspection.duplicate.module.exists=''{0}''이(가) 이미 모듈로 있습니다
rbs.inspection.duplicate.different.superclass={0}은(는) 상위 클래스 ''{1}''(으)로 이미 선언됨
rbs.inspection.duplicate.interface=인터페이스 선언 중복
rbs.inspection.duplicate.method=메서드 정의 중복
rbs.inspection.duplicate.includes.method=메서드 ''{0}''에 대해 중복된 정의가 포함되어 있습니다
rbs.inspection.duplicate.interface.include={0}은(는) 이미 포함됨
rbs.inspection.duplicate.parameter=매개변수 중복
rbs.live.template.presentable.name=RBS
rbs.model.constant.longDescription={1} 내 상수 ''{0}''
rbs.model.type.alias.longDescription={1} 내 타입 별칭 ‘{0}''
rbs.actions.run.anything.group.name=RBS
steep.actions.run.anything.group.name=Steep
rbs.actions.run.anything.help.placeholder=RBS <command>
steep.actions.run.anything.help.placeholder=Steep <command>
action.rbs.cli.validate.description=RBS 파일에 타입 이름이 있으며 타입 애플리케이션의 매개변수 개수가 올바른지 검사합니다
action.rbs.cli.prototype.description=프로토타입 RBS 파일을 생성합니다. 지원되는 제너레이터는 rb, rbi, runtime입니다
action.rbs.cli.ancestors.description=지정된 클래스 또는 모듈의 상위 항목을 표시합니다.
action.rbs.cli.ast.description=로드된 환경의 JSON AST를 출력합니다. 선언을 필터링하는 패턴을 파일 이름으로 지정할 수 있습니다
action.rbs.cli.constant.description=RBS 내 지정된 상수를 해결합니다
action.rbs.cli.list.description=선언이 있는 모든 클래스, 모듈, 인터페이스를 나열합니다
action.rbs.cli.method.description='type_name' 및 'method_name'으로 지정된 메서드 정의를 표시합니다
action.rbs.cli.methods.description=지정된 클래스 또는 모듈에서 정의된 모든 메서드를 표시합니다
action.rbs.cli.parse.description=지정된 RBS 파일을 분석하고 모든 구문 오류를 출력합니다
action.rbs.cli.paths.description=RBS 파일을 로드하는 데 사용된 경로를 표시합니다
action.rbs.cli.test.description=지정된 옵션으로 테스트를 실행합니다
action.rbs.cli.vendor.description=프로젝트 디렉터리 내 벤더 시그니처
action.steep.cli.init.description=Steepfile을 생성합니다
action.steep.cli.validate.description=Steep 구성의 유효성을 검사합니다
action.steep.cli.check.description=타입 검사를 실행합니다
action.steep.cli.annotations.description=지정된 소스에서 어노테이션을 검사합니다
action.rbs.generate.from.ruby.description=Ruby 파일의 RBS 시그니처를 생성합니다
rbs.action.output.null=RBS 프로토타입 명령어를 실행할 수 없습니다
rbs.action.non.zero.exit.code=RBS의 종료 코드가 0이 아닙니다. {0}
rbs.action.error.generating.rbs=RBS 생성 중 오류가 발생했습니다. {0}
action.rbs.generate.from.ruby.text=타입 시그니처 생성
rbs.action.generate.title=타입 시그니처 생성 중
action.rbs.cli.validate.text=RBS Validate 실행
action.rbs.cli.prototype.text=RBS Prototype 실행
action.rbs.cli.ancestors.text=RBS Ancestors 실행
action.rbs.cli.ast.text=RBS Ast 실행
action.rbs.cli.constant.text=RBS Constant 실행
action.rbs.cli.list.text=RBS List 실행
action.rbs.cli.method.text=RBS Method 실행
action.rbs.cli.methods.text=RBS Methods 실행
action.rbs.cli.parse.text=RBS Parse 실행
action.rbs.cli.paths.text=RBS Paths 실행
action.rbs.cli.test.text=RBS Test 실행
action.rbs.cli.vendor.text=RBS Vendor 실행
action.steep.cli.init.text=Steep Init 실행
action.steep.cli.validate.text=Steep Validate 실행
action.steep.cli.check.text=Steep Check 실행
action.steep.cli.annotations.text=Steep Annotations 실행
action.steep.cli.project.text=Steep Project 실행
action.steep.cli.watch.text=Steep Watch 실행
action.steep.cli.langserver.text=Steep Langserver 실행
action.steep.cli.stats.text=Steep Stats 실행
action.rbs.generate.from.ruby.popup.text=타입 시그니처
rbs.lineMarker.partial.declarations.tooltip.one=partial 선언 위치
rbs.lineMarker.partial.declarations.tooltip.few=partial 선언 위치
rbs.lineMarker.partial.declarations.tooltip.many=몇몇 파일에 partial 선언이 있습니다
rbs.action.tab.title={0} 실행
rbs.structure.view.qualified.name={1} 내 {0}
rbs.rubysigs.location=라이브러리 루트
rbs.rubysigs.name=rbs ({0}) [bundled]
rbs.rubysigs.name.with.version=rbs (v{0}, {1}) [bundled]
rbs.rubysigs.banner=번들로 제공되는 시그니처 파일(RBS v{0} 및 Ruby v{1}을(를) 사용하여 생성됨)
rbs.lineMarker.overloaded.declarations=RBS 오버로드된 메서드
rbs.lineMarker.overloaded.declarations.title=오버로드된 선언 선택
rbs.lineMarker.overloaded.declarations.tooltip.one=다음에 오버로드된 선언이 있습니다. 
rbs.lineMarker.overloaded.declarations.tooltip.few=다음에 오버로드된 선언이 있습니다. 
rbs.lineMarker.overloaded.declarations.tooltip.many=다수의 파일에 오버로드된 선언이 있습니다
rbs.inspection.group.rbs=RBS
rbs.inspection.group.rbs.code.style.name=코드 스타일 이슈
rbs.inspection.literal.class.referenced.name=리터럴 클래스가 참조됨
rbs.inspection.literal.class.referenced.description=''{1}'' 대신 ''{0}''이(가) 참조됨
rbs.inspection.literal.class.referenced.replace.quickfix.name=''{0}''(으)로 바꾸기
rbs.inspection.literal.class.referenced.replace.quickfix.family.name=각각 리터롤로 바꾸기
rbs.inspection.unnecessary.parentheses.name=불필요한 소괄호
rbs.inspection.unnecessary.parentheses.description=함수 타입에 불필요한 괄호
rbs.inspection.unnecessary.parentheses.remove.quickfix.name=불필요한 소괄호를 제거합니다.
rbs.inspection.incorrect.type.argument.count.name=잘못된 유형 인수 개수
rbs.inspection.incorrect.type.argument.count.add.description={0}은(는) {1, choice, 1#타입 인수|2#{1} 타입 인수}이(가) 필요합니다
rbs.inspection.incorrect.type.argument.count.add.quickfix.name={0, choice, 1#타입 인수|2#{0} 타입 인수} 추가
rbs.inspection.incorrect.type.argument.count.add.quickfix.family.name=누락된 유형 인수 추가
rbs.inspection.incorrect.type.argument.count.remove.description=타입 인수가 너무 많음
rbs.inspection.incorrect.type.argument.count.remove.quickfix.name=불필요한 {0, choice, 1#타입 인수|2#타입 인수} 제거
rbs.inspection.incorrect.type.argument.count.remove.all.quickfix.name={0, choice, 1#타입 인수|2#타입 인수} 제거
rbs.inspection.incorrect.type.argument.count.remove.quickfix.family.name=불필요한 타입 인수 제거
rbs.annotation.type.alias.used.as.self.type=self-type으로 사용되는 타입 별칭
rbs.annotation.type.alias.used.as.self.type.remove.intention.name=''{0}'' 제거
rbs.annotation.type.alias.used.as.self.type.remove.intention.family.name=유효하지 않은 self-type 제거
rbs.inspection.group.rbs.data.flow.name=데이터 흐름
rbs.inspection.unused.type.alias.name=사용되지 않는 타입 별칭
rbs.inspection.unused.type.alias.description={0}이(가) 사용되지 않습니다
rbs.inspection.unused.type.alias.remove.quickfix.name=''{0}'' 제거
rbs.inspection.unused.type.alias.remove.quickfix.family.name=사용되지 않는 타입 별칭 제거
rbs.inspection.unused.interface.name=사용되지 않는 인터페이스
rbs.inspection.unused.interface.description={0}이(가) 사용되지 않습니다
rbs.inspection.unused.interface.remove.quickfix.name=''{0}'' 제거
rbs.inspection.unused.interface.remove.quickfix.family.name=사용되지 않는 인터페이스 제거
rbs.inspection.simplifiable.boolean.union.name=단순화 가능한 부울 공용체
rbs.inspection.simplifiable.boolean.union.description=''{0} | {1}''은(는) 단순화될 수 있습니다
rbs.inspection.simplifiable.boolean.union.replace.quickfix.name=''{0} | {1}''을(를) ''bool''로 바꾸기
rbs.inspection.simplifiable.boolean.union.replace.quickfix.family.name=부울 공용체 단순화
rbs.inspection.dynamic.type.used.in.static.context.name=동적 타입이 정적 컨텍스트에 사용됨
rbs.inspection.dynamic.type.used.in.static.context.description=''{0}''이(가) 정적 컨텍스트에 사용됨
rbs.inspection.dynamic.type.used.in.static.context.replace.quickfix.name=''{0}''(으)로 바꾸기
rbs.inspection.dynamic.type.used.in.static.context.replace.quickfix.family.name=동등한 정적 기능으로 바꾸기
rbs.search.presentation.element.in.container={1} 내 {0}
rbs.search.usageType.alias.group=별칭
rbs.search.usageType.declaration.group=선언
rbs.search.usageType.superclass.clause.group=상위 클래스 절
rbs.search.usageType.self.type.clause.group=자기 타입 절
rbs.search.usageType.extend.include.prepend.call.group=extend/include/prepend 호출 내 사용 위치
rbs.search.usageType.nested.constant.access.group=중첩 상수 액세스
rbs.search.usageType.type.signature.group=타입 시그니처
rbs.inspection.group.rbs.inheritance.name=상속 문제
rbs.inspection.module.used.as.superclass.name=상위 클래스로 사용된 모듈
rbs.inspection.module.used.as.superclass.description={0}이(가) 상위 클래스로 사용됨
rbs.inspection.module.used.as.superclass.remove.quickfix.name=''< {0}'' 제거
rbs.inspection.module.used.as.superclass.remove.quickfix.family.name=유효하지 않은 상위 클래스 제거
rbs.annotation.interface.prepended=인터페이스는 앞에 추가될 수 없습니다
rbs.annotation.interface.prepended.remove.quickfix.name=''prepend {0}'' 제거
rbs.annotation.interface.prepended.remove.quickfix.family.name=앞에 추가된 인터페이스 제거
rbs.inspection.unused.type.variable.name=사용되지 않는 변수
rbs.inspection.unused.type.variable.description={0}이(가) 사용되지 않습니다
rbs.inspection.unused.type.variable.remove.quickfix.name=''{0}'' 제거
rbs.inspection.unused.type.variable.remove.quickfix.family.name=사용되지 않는 타입 변수 제거
rbs.inspection.invalid.method.overload.name=유효하지 않은 메서드 오버로드
rbs.inspection.invalid.method.overload.description={0}에 대한 오버로드되지 않은 선언을 찾을 수 없음
rbs.inspection.invalid.method.overload.remove.quickfix.family.name='...' 제거
rbs.inspection.invalid.method.overload.replace.quickfix.family.name='() -> untyped'로 바꾸기
rbs.inspection.invalid.method.overload.remove.method.quickfix.name=''{0}'' 제거
rbs.inspection.invalid.method.overload.remove.method.quickfix.family.name=메서드 제거
rbs.inspection.unresolved.reference.name=해결되지 않는 참조
rbs.inspection.unresolved.reference.description=''{0}''을(를) 찾을 수 없습니다
rbs.inspection.incorrect.declaration.type.variable.count.name=잘못된 유형 변수 개수
rbs.inspection.incorrect.declaration.type.variable.count.description={0}은(는) 다른 선언과 충돌하는 {1, choice, 0#타입 변수 없ㄷ음|1#1 타입 변수|2#{1} 타입 변수}을(를) 가지고 있습니다
rbs.inspection.incorrect.declaration.type.variable.count.add.quickfix.name={0, choice, 1#타입 변수|2#{0} 타입 변수} 추가
rbs.inspection.incorrect.declaration.type.variable.count.add.quickfix.family.name=누락된 타입 변수 추가
rbs.inspection.incorrect.declaration.type.variable.count.remove.quickfix.name={0, choice, 1#타입 변수|2#{0} 타입 변수} 제거
rbs.inspection.incorrect.declaration.type.variable.count.remove.quickfix.family.name=불필요한 형식 변수 제거
rbs.inspection.incorrect.declaration.type.variable.count.goTo.quickfix.family.name=충돌하는 선언으로 이동
rbs.inspection.incorrect.declaration.type.variable.count.goTo.quickfix.name.popup.title=충돌하는 선언 선택
rbs.inspection.incorrect.inclusion.statement=올바르지 않은 포괄 호출
rbs.inspection.incorrect.inclusion.statement.remove.quickfix.family.name=올바르지 않은 포괄 호출 제거
rbs.inspection.incorrect.inclusion.statement.include.description={0}이(가) ''include'' 호출에 사용됨
rbs.inspection.incorrect.inclusion.statement.include.remove.quickfix.name=''include {0}'' 제거
rbs.inspection.incorrect.inclusion.statement.prepend.description={0}이(가) ''prepend'' 호출에 사용됨
rbs.inspection.incorrect.inclusion.statement.prepend.remove.quickfix.name=''prepend {0}'' 제거
rbs.inspection.incorrect.inclusion.statement.extend.description={0}이(가) ''extend'' 호출에 사용됨
rbs.inspection.incorrect.inclusion.statement.extend.remove.quickfix.name=''extend {0}'' 제거
rbs.annotation.interface.prepended.replace.include.quickfix.name=''prepend {0}''을(를) ''include {0}''(으)로 변경
rbs.annotation.interface.prepended.replace.include.quickfix.family.name=앞에 추가된 인터페이스를 'include'로 변경
rbs.annotation.interface.prepended.replace.extend.quickfix.name=''prepend {0}''을(를) ''extend {0}''(으)로 변경
rbs.annotation.interface.prepended.replace.extend.quickfix.family.name=앞에 추가된 인터페이스를 'extend'로 변경
rbs.annotation.interface.prepended.replace.quickfix.name=''prepend {0}''을(를) ''include {0}''(으)로 변경
rbs.annotation.interface.prepended.replace.quickfix.family.name=앞에 추가된 인터페이스를 'include'로 변경
rbs.annotation.remove.statement.fix=구문 제거
rbs.annotation.singleton.in.interface.remove.quickfix.name=싱글턴 메서드 제거
rbs.annotation.singleton.in.interface.remove.alias.quickfix.name=싱글턴 별칭 제거
rbs.annotation.singleton.method.in.interface.quickfix.name=인스턴스 메서드로 변환
rbs.annotation.singleton.alias.in.interface.quickfix.name=인스턴스 별칭으로 변환
rbs.annotation.remove.include.statement.quickfix.name='include' 구문 제거
rbs.annotation.singleton.method.in.interface.quickfix.family.name=싱글턴 메서드를 인스턴스 메서드로 변환
rbs.annotation.singleton.alias.in.interface.quickfix.family.name=싱글턴 별칭을 인스턴스 별칭으로 변환
rbs.inspection.duplicate.inclusion.call.remove.quickfix.name=''{0}'' 호출 제거
rbs.inspection.duplicate.remove.superclass.quickfix.name=충돌하는 상위 클래스 제거
rbs.inspection.duplicate.remove.quickfix.family.name=중복 선언 제거
rbs.inspection.duplicate.remove.method.quickfix.name=중복 메서드 제거
rbs.inspection.duplicate.remove.interface.quickfix.name=중복 인터페이스 제거
rbs.inspection.duplicate.remove.constant.quickfix.name=중복 상수 제거
rbs.inspection.duplicate.remove.global.variable.quickfix.name=중복 글로벌 변수 제거
rbs.inspection.duplicate.remove.type.alias.quickfix.name=중복 타입 별칭 제거
rbs.inspection.duplicate.go.to.duplicate.quickfix.name=중복 선언으로 이동
rbs.inspection.duplicate.go.to.duplicate.title=중복 선언 선택
rbs.inspection.duplicate.go.to.conflicting.declarations.quickfix.name=충돌하는 선언으로 이동
rbs.inspection.duplicate.go.to.conflicting.declarations.title=충돌하는 선언 선택
rbs.inspection.duplicate.remove.conflicting.class.quickfix.name=충돌하는 클래스 제거
rbs.inspection.duplicate.remove.conflicting.module.quickfix.name=충돌하는 모듈 제거
rbs.inspection.duplicate.go.to.duplicate.included.method.quickfix.name=중복 포함 메서드로 이동
rbs.inspection.duplicate.go.to.duplicate.included.method.title=중복 포함 메서드 선택