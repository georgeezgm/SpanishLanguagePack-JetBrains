action.DlvDebugger.ViewAsGroup.text=mostrar como
action.DlvRewindAction.description=Ejecutar el programa hacia atrás al punto de interrupción anterior
action.DlvRewindAction.text=Revertir
action.DlvToggleThreadsAction.description=Mostrar hilos
action.DlvToggleThreadsAction.text=Mostrar hilos
action.DlvDumpAction.text=Volcar Goroutines
action.MergeIdenticalStacktraces.text=Combinar seguimientos de pila idénticos
action.HideGoroutine=Ocultar Goroutines
action.HideSimilarGoroutines=Ocultar todas las Goroutines con la misma pila
action.ResetHiddenAction.text=Restablecer Goroutines ocultas
action.ResetHiddenAction.description=Restablecer gorutinas ocultas
action.FilterStacktraces.description=Mostrar solo las pilas que contienen la cadena especificada
action.FilterStacktraces.task.name=Pila de filtros
action.Go.NewGoFile.description=Crear un nuevo archivo Go
action.Go.NewGoFile.text=Ir archivo
action.GoAddContentRootFromGopath.description=Agregar directorio seleccionado al proyecto actual
action.GoAddContentRootFromGopath.text=Agregar directorio al proyecto actual
action.GoCallHierarchyPopupMenu.BaseOnThisDeclaration.text=Basado en esta declaración
action.GoCoreDumpAction.text=Volcado de núcleo abierto...
action.GoFmtFileAction.description=ir a formatear el archivo seleccionado con la utilidad fmt
action.GoFmtFileAction.text=Ir a archivo Fmt
action.GoFmtProjectAction.description=go fmt utilidad para formatear el proyecto
action.GoFmtProjectAction.text=Ir al proyecto Fmt
action.GoGenerateConstructorAction.description=Crear función constructora para estructura
action.GoGenerateConstructorAction.text=Constructor
action.GoGenerateStructFieldsFromJsonAction.description=JSON에서 구조체 필드 생성
action.GoGenerateStructFieldsFromJsonAction.text=JSON에서 구조체 필드
action.GoGenerateTypeFromJsonAction.description=JSON에서 타입 생성
action.GoGenerateTypeFromJsonAction.text=JSON의 타입
action.GoGenerateFileAction.description=Ejecutar ir a generar en archivos seleccionados
action.GoGenerateFileAction.text=Ir a generar archivo
action.GoGenerateGetterAction.description=Generar método getter para campo
action.GoGenerateGetterAction.text=Getter
action.GoGenerateGetterSetterAction.description=Generar métodos getter y setter para campos
action.GoGenerateGetterSetterAction.text=Getter y Setter
action.GoGenerateSetterAction.description=Generar método de establecimiento para el campo
action.GoGenerateSetterAction.text=Setter
action.GoIdeNewProjectAction.text=Proyecto...
action.GoImportsFileAction.description=Optimizar la importación de archivos seleccionados con la utilidad goimports
action.GoImportsFileAction.text=Archivo Goimports
action.GoOpenProjectFromGopath.description=Abrir directorio seleccionado como proyecto
action.GoOpenProjectFromGopath.text=Abrir directorio como proyecto
action.GoRemoveContentRootAction.description=Eliminar la raíz del contenido seleccionado del proyecto actual
action.GoRemoveContentRootAction.text=Desconectar directorio...
action.GoReplayTraceAction.text=Depurar seguimiento guardado...
action.GoVetFileAction.description=Lint archivos o directorios seleccionados con la herramienta go vet
action.GoVetFileAction.text=Ir a archivo veterinario
action.Vgo.NewVgoFile.description=Cree un nuevo archivo de módulo Go
action.Vgo.NewVgoFile.text=Ir al archivo del módulo
action.WelcomeScreen.CreateDirectoryProject.text=Nuevo proyecto
action.com.goide.vgo.actions.VgoSyncAction.description=ir a la sincronización del módulo
action.com.goide.vgo.actions.VgoSyncAction.text=Módulo Sync Go
action.com.goide.vgo.actions.VgoTidyAction.description=Ejecute `go mod tidy` en el módulo
action.com.goide.vgo.actions.VgoTidyAction.text=Ir Mod Tidy
action.go.fill.paragraph=Rellenar párrafo
action.GoShareInPlaygroundAction.text=Compartir en el patio de juegos
action.GoShareInPlaygroundAction.description=Compartir el archivo actual en Go Playground
action.GoShareInPlaygroundAction.error=No se pudo compartir el archivo en el patio de juegos. {0}
action.GoShareInPlaygroundAction.empty.id=Playground devuelve una ID vacía
action.GoShareInPlaygroundAction.confirmation=¿Está seguro de que desea subir {0} a Go Playground y hacerlo público?
action.GoShareInPlaygroundAction.notification.text=Archivo compartido en Go Playground\: <a href\="{0}"> {0}</a>
action.GoShareInPlaygroundAction.notification.copyUrl=Copiar URL al portapapeles
action.go.exclude.package.from.import.and.completion=Excluir ''{0}'' de la importación y finalización
action.GoIntroduceTypeAction.text=타입 삽입…
go.app.engine.not.gae.sdk.validation.message=El SDK seleccionado no es adecuado para App Engine. <br> El SDK para App Engine está disponible en el siguiente enlace <a href \="https\://cloud.google.com/appengine/downloads">https\://cloud.google.com/appengine/downloads</a>
go.app.engine.wizard.description=\ Cree un proyecto de Go App Engine para desarrollar aplicaciones de Go que utilicen Google App Engine. <br/> El nuevo módulo contiene la configuración predeterminada y los controladores de Go predeterminados.
go.app.engine.wizard.name=App Engine
go.modules.wizard.name=Go
go.modules.wizard.description=Cree un proyecto de módulo Go para desarrollar aplicaciones y bibliotecas Go que utilicen módulos Go para la gestión de dependencias.
go.wizard.name=Go(GOPATH)
go.wizard.description=Cree un proyecto Go para desarrollar aplicaciones y bibliotecas. <br/> Esta opción crea un proyecto Go vacío.
go.dep.wizard.description=Cree un proyecto Dep para desarrollar aplicaciones Go que utilicen Dep como herramienta de gestión de dependencias.
go.background.task.running.title=Ejecutando...
go.background.task.compiling.title=Compilando...
filetype.go.cgo.description=Cgo 파일
go.checkin.factory.fmt.commit.anyway.question=¿Está seguro de que quiere comprometerse de todos modos?
go.checkin.factory.fmt.failed.message=GoFmt devuelve un código distinto de cero para algunos archivos.
go.checkin.factory.fmt.not.started.message=go fmt. {0} no se puede ejecutar.
go.colors.and.fonts.bad.character=Carácter no válido
go.colors.and.fonts.braces.and.operators.braces=Tirantes
go.colors.and.fonts.braces.and.operators.brackets=Corchetes
go.colors.and.fonts.braces.and.operators.colon=colon
go.colors.and.fonts.braces.and.operators.comma=Coma
go.colors.and.fonts.braces.and.operators.dot=Periodo
go.colors.and.fonts.braces.and.operators.operator=Operadores
go.colors.and.fonts.braces.and.operators.parentheses=parentheses
go.colors.and.fonts.braces.and.operators.semicolon=Punto y coma
go.colors.and.fonts.braces.and.operators=Llaves y operadores
go.colors.and.fonts.comments.block.comment=Bloquear comentarios
go.colors.and.fonts.comments.comment.keyword=Palabra clave de comentario
go.colors.and.fonts.comments.comment.reference=Ver comentarios
go.colors.and.fonts.comments.line.comment=Comentarios de línea
go.colors.and.fonts.comments=Comentarios
go.colors.and.fonts.comments.build.constraints=빌드 제약 조건
go.colors.and.fonts.comments.build.constraints.tag=꼬리표
go.colors.and.fonts.comments.build.constraints.parens=소괄호
go.colors.and.fonts.comments.build.constraints.operators=연산자
go.colors.and.fonts.declarations.constants.builtin.constant=Constantes integradas
go.colors.and.fonts.declarations.constants.local.constant=Constantes locales
go.colors.and.fonts.declarations.constants.package.exported.constant=Constantes expuestas del paquete
go.colors.and.fonts.declarations.constants.package.local.constant=Paquete de constantes locales
go.colors.and.fonts.declarations.constants=Constantes
go.colors.and.fonts.declarations.function.parameter=Parámetros de función
go.colors.and.fonts.declarations.functions.builtin.function=Funciones integradas
go.colors.and.fonts.declarations.functions.exported.function=Funciones expuestas
go.colors.and.fonts.declarations.functions.package.local.function=Funciones locales del paquete
go.colors.and.fonts.declarations.functions=Funciones
go.colors.and.fonts.declarations.label=Etiquetas
go.colors.and.fonts.declarations.method.receiver=Receptor de método
go.colors.and.fonts.declarations.package=Paquete
go.colors.and.fonts.declarations.types.package.exported.interface=Empaquetado de interfaz expuesto
go.colors.and.fonts.declarations.types.package.exported.struct=Paquete de estructura expuesto
go.colors.and.fonts.declarations.types.package.local.interface=Interfaces locales del paquete
go.colors.and.fonts.declarations.types.package.local.struct=Empaquetar estructuras locales
go.colors.and.fonts.declarations.types.type.specification=Especificación de tipo
go.colors.and.fonts.declarations.types=Tipos
go.colors.and.fonts.declarations.variables.builtin.variable=Variables integradas
go.colors.and.fonts.declarations.variables.local.variable=Variables locales
go.colors.and.fonts.declarations.variables.package.exported.variable=Paquete de variables expuestas
go.colors.and.fonts.declarations.variables.package.local.variable=Paquete de variables locales
go.colors.and.fonts.declarations.variables.reassignment.in.short.variable.declaration=Reasignar declaraciones de variables cortas
go.colors.and.fonts.declarations.variables.scope.declared.variable=Especificar el alcance de la variable declarada
go.colors.and.fonts.declarations.variables.shadowing.variable=Variables de sombra
go.colors.and.fonts.declarations.variables.struct.exported.member=Configurar miembros no expuestos
go.colors.and.fonts.declarations.variables.struct.local.member=Configurar miembros locales
go.colors.and.fonts.declarations.variables=Variables
go.colors.and.fonts.declarations=Declaraciones
go.colors.and.fonts.identifier=Identificador
go.colors.and.fonts.keyword=Palabra clave
go.colors.and.fonts.number=Número
go.colors.and.fonts.references.function.calls.builtin.function.call=Llamar a la función incorporada
go.colors.and.fonts.references.function.calls.exported.function.call=Llamar a la función expuesta
go.colors.and.fonts.references.function.calls.local.function.call=Llamar a la función local
go.colors.and.fonts.references.function.calls=Llamadas a funciones
go.colors.and.fonts.references.type.references.builtin.type.reference=Referencia de tipo incorporada
go.colors.and.fonts.references.type.references.package.exported.interface=Empaquetado de interfaz expuesto
go.colors.and.fonts.references.type.references.package.exported.struct=Estructura expuesta del paquete
go.colors.and.fonts.references.type.references.package.local.interface=Interfaz local del paquete
go.colors.and.fonts.references.type.references.package.local.struct=Estructura local del paquete
go.colors.and.fonts.references.type.references.type.specification=Especificación de tipo
go.colors.and.fonts.references.type.references=Referencias de tipo
go.colors.and.fonts.references.variable.calls.exported.variable.call=Llamar a variables expuestas
go.colors.and.fonts.references.variable.calls.local.variable.call=Llamar a variables locales
go.colors.and.fonts.references.variable.calls.package.local.variable.call=Empaquetado de llamadas de variables locales
go.colors.and.fonts.references.variable.calls.struct.exported.member.call=Configurar llamadas de miembros no expuestos
go.colors.and.fonts.references.variable.calls.struct.local.member.call=Configurar llamadas de miembros locales
go.colors.and.fonts.references.variable.calls=Variables de llamada
go.colors.and.fonts.references=Referencias
go.colors.and.fonts.string.invalid.escape=Escape no válido
go.colors.and.fonts.string.text=Texto
go.colors.and.fonts.string.valid.escape=Escapes válidos
go.colors.and.fonts.string=Cadena
go.colors.and.fonts.declarations.struct.tags=구조체 태그
go.colors.and.fonts.declarations.struct.tags.key=키
go.colors.and.fonts.declarations.struct.tags.colon=콜론
go.colors.and.fonts.declarations.struct.tags.value=값
go.colors.and.fonts.declarations.struct.tags.arbitraryText=임의의 텍스트
go.completion.insert.if.not.nil.statement.command.name=' if value \! \=nil {...} '
go.completion.insert.literal.command.name=Insertar literal Go
go.completion.insert.type.name.command.name=Insertar nombre de tipo
go.completion.insert.return.statement.command.name=Insertar declaración de retorno
go.completion.method.like.completion.advertisement=Haga clic en {0} para ver las funciones que aceptan expresiones como primer argumento
go.completion.method.like.completion.command.name=Código de expresión de método completo de la función
go.core.dump.dialog.dump.path.label=& Dump Core\:
go.core.dump.dialog.executable.label=& Ejecutable\:
go.core.dump.dialog.invalid.core.dump.validation.message=Archivo de volcado de núcleo no válido.
go.core.dump.dialog.invalid.executable.validation.message=Este archivo no es ejecutable.
go.core.dump.dialog.specify.core.dump.validation.message=Especificar el volcado del núcleo
go.core.dump.dialog.specify.executable.validation.message=Especificar ejecutable
go.core.dump.failed.to.start.error.message=No se pudo iniciar el volcado del núcleo del depurador {0}\: {1}
go.core.dump.session.name=Volcado de núcleo {0}
go.create.new.file.action.command.name=Crear archivo Go {0}
go.create.new.file.action.name=Ir archivo
go.create.new.file.dialog.title=Nuevo archivo Go
go.create.new.file.empty.file.kind.name=Archivo vacío
go.create.new.file.simple.application.kind.name=Aplicación simple
go.debug.show.goroutines.action.name=Mostrar Goroutines
go.debug.show.threads.action.name=Mostrar hilos
go.declarations.intentions.category=Go/declaraciones
go.dep.checking.dep.projects.task.name=Comprobando proyectos de dep
go.dep.enable.integration.checkbox=Habilitar la integración de dep
go.edit.auto.import.settings.action.name=Editar la configuración de importación automática
go.auto.import.and.completion.title=Importación automática y finalización del código
go.auto.import.and.completion.add.exclude.label=Ingrese la ruta de importación para excluir de la importación automática y la finalización del código.
go.element.is.not.go.expression.error.hint=La selección no contiene una expresión Go.
go.exclude.import.path.dialog.empty.path.validation.message=La ruta de importación no puede estar en blanco.
go.exclude.import.path.dialog.title=Excluir ruta de importación
go.exclude.import.path.from.completion.action.name=\ Exclude ''{0}''
filetype.go.description=Go 파일
go.fix.searching.for.usages.progress.title=Buscando usos...
go.fix.change.parameters.parameter={0, choice, 0\#parameters |1\#parameters|2\#parameters}
go.fix.add.missing.new.line.name=Agregar saltos de línea faltantes
go.fix.add.comma.name=Agregar coma
go.fix.add.whitespace.name=Agregar espacio en blanco
go.fix.add.import.for.side.effects.name=Importar efectos secundarios
go.fix.add.prefix.to.comment.name=Agregar prefijo ''{0}'' al comentario
go.fix.add.return.statement.name=return 문을 추가합니다.
go.fix.change.import.sorting.settings.name=Cambiar la configuración de clasificación de importación
go.fix.change.result.parameters.result.parameter={0, choice, 0\#resultparameters |1\#resultparameters|2\#resultparameter}
go.fix.create.directory.text=Crear directorio {0} en {1}
go.fix.change.parameters.name=Cambiar parámetro
go.fix.change.result.parameters.in.assignment.name=Cambiar los parámetros de resultado en la asignación
go.fix.change.result.parameters.in.call.name=Cambiar los parámetros de resultado en la llamada
go.fix.change.result.parameters.in.return.name=Cambiar los parámetros de resultado a cambio
go.fix.change.result.parameters.in.variable.specification.name=Cambiar el parámetro de resultado en la especificación de la variable
go.fix.change.result.parameters.name=Cambiar parámetros de resultado
go.fix.change.signature.from.function.type.name=Cambiar la firma del tipo de función
go.fix.change.signature.from.usage.text=Cambiar firma de uso
go.fix.change.signature.from.function.type.text=Cambiar firma ''{1}'' de {0} a ({2}) ({3})
go.fix.change.signature.from.usage.add=''{0}'' to {1, number, ordinal} th {2} {3} ''{4}'' agregar a
go.fix.change.signature.from.usage.remove={2} Eliminar {0, number, ordinal} th {1} de ''{3}''
go.fix.change.signature.from.usage.change=\ {2} {0, number, ordinal} {1} in ''{3}'' in ''{4}'' {5} cambiado a ' '
go.fix.change.signature.from.usage.mix={1} Cambiar {0} en ''{2}'' a ({3})
go.fix.convert.to.is.equal.name=Convertir a '' \=\=''
go.fix.delete.name=Eliminar {0}
go.fix.delete.text={0} Eliminar ''{1}''
go.fix.delete.range.name=Eliminar elemento
go.fix.delete.third.index.name=Eliminar tercer índice
go.fix.delete.blank.argument.name=Eliminar argumento vacío
go.fix.export.name=Exportar
go.fix.export.field.name=Campo de exportación
go.fix.replace.tilda.with.hat.name=Reemplazar '' ~ '' con '' ^ ''
go.fix.replace.assign.with.equals.name=':='을 '='로 바꾸기
go.fix.replace.equals.with.assign.name=Reemplazar con ''\: \=''
go.fix.replace.with.nil.with.side.effects.name=reemplazar con nil (cambiar el significado)
go.fix.replace.with.correct.defer.name=Reemplazar con la sintaxis de aplazamiento correcta
go.fix.add.function.call.name=Agregar llamada de función
go.fix.delete.redundant.index.name=Eliminar índice innecesario
go.fix.delete.conversion.name=Eliminar conversión
go.fix.delete.conversion.with.side.effects.name=Eliminar conversión (el significado puede cambiar)
go.fix.disable.vendoring.in.module.text=Deshabilitar el soporte de experimentación de proveedores en el módulo ''{0}''
go.fix.disable.vendoring.in.module.name=Deshabilitar el soporte de experimentación del proveedor en el módulo
go.fix.drop.suffix.text=Eliminar el sufijo específico de la unidad ''{0}''
go.fix.drop.suffix.name=Eliminar el sufijo específico de la unidad
go.fix.multiple.packages.name=Cambiar el nombre del paquete
go.fix.multiple.packages.text=Cambiar el nombre del paquete a {0}
go.fix.choose.package.name=Elija el nombre del paquete
go.fix.simplify.bool.expr.name=Simplificar expresiones
go.fix.failed.to.simplify.if.statement=No se pudo simplificar la declaración '' if ''.
go.fix.view.all.duplicates.name=Ver nombres duplicados
go.fix.view.all.duplicates.text=Ver nombres duplicados de ''{0}''
go.fix.view.all.duplicates.targets.tab.text=''{0}'' Duplicar
go.fix.view.all.duplicates.targets.tool.window.title={0} de {1}
go.fix.view.all.duplicates.targets.code.usages.string=Se encontraron duplicados
go.fix.add.function.block.name=Agregar cuerpo
go.fix.add.keys.to.struct.literal.value.name=Agregar clave y eliminar valor cero
go.fix.add.local.var.for.expression.name=Insertar variable local
go.fix.add.missing.return.value.name=Agregar valor de retorno faltante
go.fix.add.pointer.name=Agregar puntero
go.fix.add.explicit.dereference.name=Agregar desreferencia explícita
go.fix.always.false.if.name=Eliminar rama '' if ''
go.fix.always.true.if.name=Elimina las ramas restantes y simplifica la declaración '' if '' actual
go.fix.convert.int.to.string.using.conversion.call={0} 호출을 사용해 정수를 문자열로 변환
go.fix.convert.string.to.byte.name=Convertir cadena a bytes
go.fix.convert.to.expected.type.name=Convertir a
go.fix.convert.to.expected.type.text='{0}'
go.fix.create.wrapper.type.name=Crear tipo
go.fix.delete.all.unused.parameters.name=Eliminar todos los parámetros no utilizados
go.fix.delete.ampersand.and.type.in.composite.lit.name=Eliminar tipo duplicado
go.fix.delete.extra.expressions.name=Eliminar expresiones adicionales
go.fix.delete.import.name=eliminar declaración de importación
go.fix.delete.parameter.names.name=Eliminar nombres de parámetros
go.fix.delete.unused.parameter.name=Eliminar parámetros no utilizados
go.fix.empty.signature.name=Corregir firma
go.fix.exclude.from.unhandled.inspection.name=No informe este método/función ahora
go.fix.extract.empty.slice.to.var.declaration.name=nil Reemplazar con declaración de segmento (cambiar significado)
go.fix.extract.to.own.declaration.name=Extracto con autodeclaración
go.fix.finish.call.name=Finalizar llamada
go.fix.ignore.explicitly.name=Ignorar explícitamente
go.fix.ignore.explicitly.using.closure.name=클로저를 사용해 명시적으로 무시
go.fix.handle.error.name=오류 처리
go.fix.ignore.unused.call.result.name=Ignorar los resultados de llamadas no utilizadas
go.fix.implement.missing.methods.name=Falta la implementación del método
go.fix.insert.blank.identifiers.name=Inserte un identificador vacío a la izquierda de una declaración de asignación
go.fix.navigate.to.name=Ir a
go.fix.navigate.to.text={0}(으)로 이동
go.fix.optimize.imports.name=optimización de declaración de importación
go.fix.place.build.tag.before.package.name=Coloque la etiqueta de compilación antes del paquete
go.fix.remove.redundant.bool.literal.name=Simplificar a
go.fix.replace.with.name=Reemplazar con
go.fix.replace.with.text=Reemplazar con ''{0}''
go.fix.rename.to.name=Cambiar nombre a
go.fix.rename.to.text=''{0}''(으)로 이름 변경
go.fix.rename.all.receivers.name=Cambiar el nombre de todos los receptores
go.fix.rename.all.receivers.text=Cambiar el nombre de todos los receptores a ''{0}''
go.fix.replace.expression.name=Anteponer '' \\ & ''
go.fix.signature.name=Corregir firma
go.fix.sort.imports=Ordenar importaciones
go.fix.simplify.expression.to.boolean.literal.name=Simplificar condición
go.fix.simplify.to.text=\ Simplificar a ''{0}''
go.fix.simplify.something.to.text='{0}'' simplificado a ''{1}'
go.fix.suppress.inspection.for.text=Suprimir {0}
go.fix.suppress.all.inspections.for.text=Suprime todas las {0} inspecciones
go.fix.unwrap.parens.name=Desenvolver paréntesis
go.fix.convert.to.format.function.name=Cambiar a la función de formato
go.fix.convert.to.format.function.text=Cambiar ''{0}'' con función de formato
go.fix.introduce.local.variable.for.expression=''{0}'' insertar variable local
go.fix.introduce.method.name=Crear método
go.fix.introduce.method.text=Crear método ''{0}''.
go.fix.introduce.function.name=Crear función
go.fix.introduce.function.text=''{0}'' Crear función
go.fix.field.with.the.same.tag='{1}'' Campo con la misma etiqueta ''{0}'
go.fix.field.repeats.tag.with.value=El campo ''{1}'' tiene el valor ''{2}'' en el campo ''{3}'' repite la etiqueta ''
go.fix.convert.int.to.rune=Convertir entero en runa
go.fix.unpack.slice.name=Desembalaje de rodajas
go.fix.enable.gopath.indexing.name=Habilitar la indexación de GOPATH
go.get.package.fix.family.name='go get' 실행
go.use.gopath.from.system.environment.checkbox=Usar GOPATH definido en el entorno del sistema
go.index.entire.gopath.checkbox=Crear índice GOPATH completo
go.index.entire.gopath.tooltip=Cuando está deshabilitado, solo se indexan los proyectos y los paquetes vendidos. <br/> Esto mejora el rendimiento general, pero los paquetes GOPATH no están disponibles.
go.libraries.configurable.path.source.prefix.default=[Predeterminado]
go.libraries.configurable.path.source.prefix.gopath=[GOPATH]
go.inspection.assignment.nil.without.explicit.type.message=No se puede asignar nil sin un tipo explícito
go.inspection.assignment.to.receiver.display.name=Asignar al receptor
go.inspection.bool.condition.display.name=condición bool
go.inspection.comment.has.no.leading.space.display.name=El comentario no tiene espacios iniciales.
go.inspection.comment.of.exported.element.starts.with.incorrect.name.display.name=El comentario del elemento expuesto comienza con un nombre incorrecto.
go.inspection.comment.should.have.package.prefix.message=Los comentarios del paquete deben tener el formato '' Paquete {0}... ''
go.inspection.comment.should.be.without.article.message=El formato del comentario debe/debe ser '' {0}... '' (con editorial opcional)
go.inspection.comment.should.be.meaningful.message=El comentario debe ser significativo o debe eliminarse
go.inspection.defer.go.statement.calls.recover.or.panic.directly.display.name=Defer/go 문은 'recover' 또는 'panic'을 직접 호출합니다
go.inspection.defer.or.go.should.not.call.function.message={0} no se puede llamar a {1} directamente
go.inspection.defer.in.loop.display.name=Aplazar en bucle
go.inspection.deprecated.element.display.name=elementos obsoletos
go.inspection.division.by.zero.display.name=División por 0
go.inspection.empty.declaration.display.name=Declaración vacía
go.inspection.empty.declaration.message=declaración vacía {0}
go.inspection.empty.slice.declared.via.literal.display.name=Rebanada vacía declarada mediante literal
go.inspection.error.string.should.not.be.capitalized.or.end.with.punctuation.display.name=La cadena de error no puede escribirse en mayúscula o terminar con puntuación
go.inspection.exceeded.shift.expression.display.name=Excedió la expresión de cambio
go.inspection.explicit.dereference.calling.method.with.receiver.message=El método de llamada {0} con el receptor {1} (tipo {2}) requiere una desreferencia explícita
go.inspection.explicit.dereference.accessing.field.message={1}(타입 {2})의 필드 {0}에 액세스하려면 명시적 역참조가 필요합니다
go.inspection.exported.element.should.have.comment.display.name=Los elementos expuestos deben contener comentarios.
go.inspection.exported.element.should.have.its.own.declaration.display.name=Los elementos expuestos deben contener sus propias declaraciones.
go.inspection.extended.method.expression.syntax.before.go.1.10.message=Tipo de receptor inesperado, sintaxis de expresión de método extendido disponible a partir de Go 1.10
go.inspection.imported.package.name.as.name.identifier.display.name=Nombre del paquete importado como identificador de nombre
go.inspection.impossible.interface.type.assertion=Aserción de tipo de interfaz imposible
go.inspection.incorrect.strings.replace.count.argument.display.name=Cadenas no válidas Reemplazar argumento de cálculo
go.inspection.incorrect.usage.of.printf.display.name=잘못된 'fmt.Printf' 및 'fmt.Println' 함수 사용
go.inspection.incorrect.usage.of.the.errors.as.function.display.name=errors.Como uso incorrecto de la función
go.inspection.incorrect.usage.of.the.sync.atomic.display.name=잘못된 'sync/atomic' 패키지 사용
go.inspection.locks.mistakenly.passed.by.value=Bloqueos pasados accidentalmente por valor
go.inspection.possible.misuse.of.unsafe.pointer={0} Existe la posibilidad de mal uso
go.inspection.invalid.conversions.of.uintptr.to.unsafe.Pointer=No se pudo convertir uintptr en unsafe.Pointer
go.inspection.infinite.for.loop.display.name=Bucle for infinito
go.inspection.problem.cannot.take.address=No se puede tomar la dirección de {0}
go.inspection.problem.invalid.indirect=Dirección indirecta {0} (tipo {1}) no válida
go.inspection.int.to.string.conversion=Conversión de tipo entero a cadena
go.inspection.lost.cancel=context.CancelFunc no se llama
go.inspection.loop.closure.display.name=Variable de bucle capturada por la función literal
go.inspection.loop.closure.message=Variable de bucle {0} capturada por la función literal {1}
go.inspection.malformed.build.tag.display.name=Etiqueta de compilación no válida
go.inspection.malformed.struct.tag.display.name=Etiqueta de estructura no válida
go.inspection.missing.trailing.comma.before.newline.in.composite.literal.display.name=Falta la coma final antes de la nueva línea en el literal compuesto
go.inspection.name.starts.with.package.name.display.name=El nombre comienza con el nombre del paquete.
go.inspection.nilness.analyzer.display.name=Nilness Analyzer
go.inspection.non-standard.signature.for.well.known.function.names.display.name=Firma no estándar de nombres de funciones conocidos
go.inspection.receiver.has.generic.name.display.name=El receptor contiene un nombre genérico.
go.inspection.redundant.blank.argument.in.range.display.name=Argumento vacío duplicado en el rango
go.inspection.redundant.comma.display.name=Coma duplicada
go.inspection.redundant.import.alias.display.name=Alias de importación duplicado
go.inspection.redundant.parentheses.display.name=Paréntesis duplicados
go.inspection.redundant.second.index.in.slices.display.name=Segundo índice duplicado de la rebanada
go.inspection.redundant.semicolon.display.name=Punto y coma duplicado
go.inspection.redundant.type.conversion.display.name=Convertir tipo duplicado
go.inspection.redundant.types.in.composite.literals.display.name=Tipos duplicados de literales complejos
go.inspection.reserved.word.used.as.name.display.name=Palabra reservada utilizada como nombre
go.inspection.self.assignment.display.name=Autoasignación
go.inspection.shadowing.variable.display.name=Variable de sombra
go.inspection.struct.initialization.without.field.names.display.name=Inicializar estructura sin nombres de campo
go.inspection.struct.initialization.settings.report.for.local.type.checkbox=Informar también las definiciones de tipos locales
go.inspection.struct.initialization.settings.report.for.literals.without.type.checkbox=Informar literales de estructura sin tipo
go.inspection.struct.field.has.tag.but.is.not.exported=El campo de estructura ''{0}'' tiene la etiqueta ''{1}'' pero no se exporta
go.inspection.type.can.be.omitted.display.name=El tipo se puede omitir
go.inspection.type.can.be.omitted.message=El tipo se puede omitir
go.inspection.unexported.return.type.of.exported.function.display.name=Tipo de retorno no expuesto de función expuesta
go.inspection.unhandled.error.display.name=Error no controlado
go.inspection.unit.specific.suffix.for.time.duration.display.name=time.Duration sufijo específico de la unidad
go.inspection.unnecessarily.exported.identifier.display.name=불필요하게 내보낸 식별자
go.inspection.unreachable.code.display.name=Código inalcanzable
go.inspection.unknown.field.message=Campo desconocido {0} en la estructura literal
go.inspection.ambiguous.reference.message=referencia ambigua {0}
go.inspection.unresolved.reference.message=Referencia resuelta {0}
go.inspection.unresolved.type.message=Escriba {0} sin resolver
go.inspection.unresolved.label.message=Etiqueta resuelta {0}
go.inspection.unresolved.disabled.gopath.indexing.display.name=Indexación GOPATH deshabilitada
go.inspection.unresolved.disabled.gopath.indexing.message=La indexación GOPATH deshabilitada puede impedir una resolución de referencia adecuada
go.inspection.unsorted.imports.display.name=Declaración de importación sin clasificar
go.inspection.unused.constant.display.name=Constante no utilizada
go.inspection.unused.constant.message=Constante no utilizada {0}
go.inspection.unused.exported.function.display.name=Exponer función obsoleta
go.inspection.unused.function.message=Función no utilizada {0}
go.inspection.unused.label.message=Etiqueta no utilizada {0}
go.inspection.unused.exported.type.display.name=Tipo de exposición obsoleto
go.inspection.unused.function.display.name=Función obsoleta
go.inspection.unused.function.or.method.call.result.display.name=Función obsoleta o resultado de la llamada al método
go.inspection.unused.global.variable.display.name=Variable global no utilizada
go.inspection.unused.parameter.display.name=Parámetro no utilizado
go.inspection.unused.parameter.message=Parámetro no utilizado {0}
go.inspection.unused.type.display.name=Tipo no utilizado
go.inspection.unused.type.message=Tipo no utilizado {0}
go.inspection.unused.variable.message=사용되지 않는 변수 {0}
go.inspection.usage.of.snake.case.display.name=Snake_Case 표기법 사용
go.inspection.incorrect.call.to.unmarshal.display.name=Unmarshal이 올바르지 않은 인수와 함께 호출되었습니다
go.inspection.struct.tag.value.consists.only.of.spaces=구조체 태그 값이 공백만을 포함합니다
go.inspection.suspicious.space.in.the.beginning.of.the.struct.tag.value=구조체 태그값 시작 부분의 의심스러운 공백
go.inspection.suspicious.space.in.the.end.of.the.struct.tag.value=구조체 태그값 끝 부분의 의심스러운 공백
go.inspection.suspicious.extra.space.in.struct.tag.value=구조체 태그값 내 추가 공백
go.inspection.suspicious.space.in.struct.tag.value=구조체 태그값 내 의심스러운 공백
go.inspection.missing.closing.double.quote.character.in.value=값 내 닫는 큰따옴표 문자 누락
go.inspection.expected.opening.double.quote.character.after.colon=''\:'' 뒤에 여는 큰따옴표 문자 필요
go.inspection.expected.colon.after.key=키 뒤에 ''\:'' 필요
go.inspection.key.is.empty.or.starts.from.incorrect.symbol=키가 비어 있거나 올바르지 않은 심볼에서 시작합니다
go.inspection.key.is.not.separated.by.space.from.previous.pair=키가 이전 쌍과 공백으로 구분되어 있지 않습니다
go.inspection.test.name.display.name=형식이 잘못된 함수 이름
go.inspection.problem.malformed.test.name=형식이 잘못된 테스트 이름\: ''Test'' 뒤 첫 문자는 소문자여야 합니다
go.inspection.problem.malformed.benchmark.name=형식이 잘못된 벤치마크 이름\: Benchmark'' 뒤 첫 문자는 소문자여야 합니다
go.inspection.problem.malformed.example.suffix=형식이 잘못된 예시 이름\: 접미사 {0} 이(가) 소문자로 시작해야 합니다
go.inspection.problem.example.for.unknown.identifier=예시가 알 수 없는 식별자를 참조합니다\: {0}
go.inspection.problem.example.for.unknown.field.or.method=예시가 알 수 없는 필드 또는 메서드를 참조합니다\: {0}.{1}
go.intention.add.comment.name=주석 추가
go.intention.add.declaration.parens.name=선언에 소괄호 추가
go.intention.add.dot.import.alias.name=마침표(.) import 문 별칭 추가
go.intention.add.fmt.string.argument.name=서식 문자열 인수 추가
go.intention.add.import.alias.name=import 문 별칭 추가
go.intention.convert.to.short.var.declaration.name=짧은 var 선언으로 변환
go.intention.convert.to.var.declaration.name=짧은 선언으로 변환
go.intention.create.field.getter.and.setter.name=getter 및 setter 생성
go.intention.create.field.getter.and.setter.command.name=필드 접근자 생성
go.intention.create.field.getter.name=getter 생성
go.intention.create.field.setter.name=setter 생성
go.intention.expand.signature.types.name=시그니처 유형 확장
go.intention.export.name=내보내기
go.intention.fill.all.fields.name=모든 필드 채우기
go.intention.fill.all.fields.recursively.checkbox=재귀적
go.intention.fill.all.fields.enforce.multiline.checkbox=여러 줄 실행
go.intention.fill.all.fields.command.name=구조체 채우기
go.intention.fill.all.fields.recursively.name=재귀적으로 모든 필드 채우기
go.intention.fill.fields.name=필드 채우기...
go.intention.flip.binary.operator.changes.operator.text=Invertir ''{0}'' a ''{1}''
go.intention.flip.binary.operator.changes.semantics.text=Invertir ''{0}''(Cambio semántico)
go.intention.flip.binary.operator.name=이진 연산자 반전
go.intention.flip.binary.operator.text=Invertir ''{0}''
go.intention.fmt.string.argument.bad.position.error.message=잘못된 위치
go.intention.fmt.string.argument.explicit.indices.error.message=문자열에 명시적 색인이 포함됩니다.
go.intention.fmt.string.argument.percent.with.args.error.message=문자열에 인수가 있는 %%이(가) 포함됩니다.
go.intention.fmt.string.argument.syntax.error.message=문제열에 구문 오류가 포함됩니다.
go.intention.fmt.string.argument.too.few.arguments.error.message=문자열에 포함된 인수가 너무 적습니다.
go.intention.fmt.string.argument.variadic.arg.error.message=문자열에...인수가 포함됩니다.
go.intention.fmt.string.title.error.message=Fmt 문자열 인수를 추가할 수 없습니다
go.intention.generate.constructor.name=생성자 생성
go.intention.go.to.implementation.name=구현으로 이동
go.intention.go.to.implementation.text=구현으로 이동...
go.intention.go.to.super.name=인터페이스로 이동
go.intention.go.to.super.text=인터페이스로 이동...
go.intention.implement.interface.name=인터페이스 구현
go.intention.implement.interface.text=인터페이스 구현...
go.intention.invert.if.name=Invertir if
go.intention.merge.all.declarations.name=모든 선언 병합
go.intention.merge.declaration.up.name=선언 병합
go.intention.merge.declarations.by.comma.name=쉼표를 통해 선언 병합
go.intention.move.to.struct.initialization.name=필드 할당을 구조체 초기화로 이동
go.intention.negate.boolean.expression.name.recursively.suffix=재귀적으로
go.intention.negate.boolean.expression.name=표현식 부정
go.intention.negate.boolean.expression.text=Negar ''{0}'' como ''{1}''
go.intention.negate.boolean.topmost.expression.name=최상위 표현식 부정
go.intention.negate.boolean.topmost.expression.text=최상위 ''{0}''을(를) ''{1}''(으)로 부정
go.intention.remove.declaration.parens.name=선언에서 소괄호 제거
go.intention.remove.dot.import.alias.name=마침표(.) import 문 별칭 제거
go.intention.remove.keys.from.struct.literal.value.name=\ struct 리터럴에서 키 제거
go.intention.reuse.signature.types.name=시그니처 유형 재사용
go.intention.run.go.generate.name=주석에서 go 생성 실행
go.intention.run.go.generate.on.file.name=파일에서 go 생성 실행
go.intention.run.go.generate.on.package.name=패키지에서 go 생성 실행
go.intention.run.go.generate.text=''{0}'' Go 생성
go.intention.select.fields.dialog.title=필드 선택
go.intention.specify.type.name=명시적으로 유형 지정
go.intention.split.all.declarations.name=모든 선언 분할
go.intention.split.declarations.by.comma.name=쉼표로 선언 분할
go.intention.split.declarations.name=선언을 두 그룹으로 분할
go.intention.chop.arguments=인수를 별도의 줄에 배치
go.intention.chop.parameters=매개변수를 별도의 줄에 배치
go.intention.chop.composite.literal.elements=별도의 줄에 요소 배치
go.intention.join.arguments=인수를 한 줄에 배치
go.intention.join.parameters=매개변수를 한 줄에 배치
go.intention.join.composite.literal.elements=한 줄에 인수 배치
go.intention.experimental.support.for.type.parameters.family.name=제네릭(유형 매개변수에 대한 실험적 지원)
go.intention.experimental.support.for.type.parameters.enable.name=제네릭 활성화(유형 매개변수에 대한 실험적 지원)
go.intention.experimental.support.for.type.parameters.disable.name=제네릭 비활성화(유형 매개변수에 대한 실험적 지원)
go.intention.add.tag.key=태그에 키 추가
go.intention.change.field.name.style.in.tags=태그의 필드 이름 스타일 변경
go.intention.change.field.name.style.select.style=필드 이름 스타일 선택:
go.intention.change.field.name.style.command=태그의 필드 이름 스타일 변경
go.intention.update.value.in.tags=태그의 키 값 업데이트
go.intention.generate.type.from.json=JSON에서 타입 생성
go.intention.generate.struct.fields.from.json=JSON에서 구조체 필드 생성
go.intention.generate.struct.fields.from.json.error=JSON의 최상위 값은 객체나 객체 배열이어야 합니다
go.intention.download.all.missing.modules.fix.text=모든 모듈을 모듈 캐시에 다운로드
go.intention.download.single.missing.module.fix.family.name=모듈을 모듈 캐시에 다운로드
go.intention.download.single.missing.module.fix.text={0}(을)를 모듈 캐시에 다운로드
go.intention.download.single.missing.module.fix.from.replacement.text={1}에서 {0} (을)를 모듈 캐시에 다운로드
go.generate.type.from.json.dialog.title=JSON에서 Go 타입 생성
go.generate.type.from.json.dialog.json.label=이곳에 JSON 배치:
go.generate.type.from.json.dialog.ok.label=생성
go.generate.type.from.json.error.invalid.json=잘못된 JSON에서 Go 타입을 생성할 수 없습니다
go.generate.type.from.json.error.no.top.value=JSON에는 단일 최상위 값이 필요합니다
go.generate.type.from.json.on.paste.dialog.title=JSON에서 Go 타입 생성
go.generate.type.from.json.on.paste.type.message=삽입된 텍스트는 JSON으로 보입니다. 이 텍스트에서 Go 타입을 생성하시겠어요?
go.generate.type.from.json.properties.on.paste.type.message=삽입된 텍스트는 JSON 프로퍼티 시퀀스처럼 보입니다. 이 텍스트에서 Go 타입을 생성하시겠어요?
go.generate.type.from.json.on.paste.struct.fields.message=삽입된 텍스트는 JSON으로 보입니다. 이 텍스트에서 구조체 필드를 생성하시겠어요?
go.generate.type.from.json.properties.on.paste.struct.fields.message=삽입된 텍스트는 JSON 프로퍼티 시퀀스처럼 보입니다. 이 텍스트에서 구조체 필드를 생성하시겠어요?
go.completion.generate.struct.fields.from.json=JSON에서 구조 필드 생성…
go.completion.add.tag.key.to.all.fields=모든 필드에 태그 키 추가…
go.intentions.category=Go
go.macro.bin.dirs.description=Go 도구가 있는 bin 디렉터리 경로
go.macro.executable.path.description=Go 실행 파일 경로
go.macro.file.import.path.description=Ruta de importación del archivo actual
go.macro.file.go.path.description=GOPATH 값
go.macro.file.go.root.description=프로젝트 SDK 경로
go.mozilla.rr.dialog.specify.trace.directory.validation.message=추적 디렉터리 지정
go.mozilla.rr.dialog.trace.directory.label=추적 디렉터리(&T)\:
go.mozilla.rr.failed.to.start.error.message=rr trace {0} 디버거를 시작하지 못했습니다\: {1}
go.mozilla.rr.session.name={0} 추적
go.navigation.progress.title={0} 검색 중...
go.navigation.shadowed.method.usages.title={0} 의 그림자 메서드
go.navigation.go.to.shadowed.method.popup.title=메서드 {0} 이(가) {1} {1,choice,0\#유형|1\#유형|2\#유형}의 메서드를 가립니다
go.navigation.go.to.shadowed.method=그림자 메서드로 이동
go.navigation.go.to.super.method.popup.title=메서드 {0} 이(가) {1} {1,choice,0\#인터페이스|1\#인터페이스|2\#인터페이스}의 메서드를 구현합니다
go.navigation.go.to.super.method.find.usages.title.kind={0} 의 구현된 메서드 사양
go.navigation.go.to.super.method=메서드 사양으로 이동
go.navigation.go.to.super.popup.title=유형 {0} 이(가) {1} {1,choice,0\#인터페이스|1\#인터페이스|2\#인터페이스}를 구현합니다
go.navigation.go.to.super.find.usages.title={0}의 구현된 인터페이스
go.navigation.go.to.super=인터페이스로 이동
go.navigation.go.to.type.implementation.popup.title=유형 {0} 이(가) {1} {1,choice,0\#유형|1\#유형|2\#유형}에서 구현됨
go.navigation.go.to.method.implementation.popup.title=메서드 {0} 이(가) {1} {1,choice,0\#유형|1\#유형|2\#유형}에서 구현됨
go.navigation.go.to.implementation.find.usages.title={0}의 구현
go.navigation.go.to.implementation=구현으로 이동
go.navigation.go.to.shadowing.method.popup.title=메서드 {0} 이(가) {1} 개 {1,choice,0\#유형|1\#유형|2\#유형}에서 가려짐
go.navigation.go.to.shadowing.method.find.usages.title={0} 의 그림자 메서드
go.navigation.go.to.shadowing.method=그림자 메서드로 이동
go.navigation.recursive.call=재귀적 호출
go.notification.dep.project.out.of.sync.text=Dep 프로젝트 {0} 이(가) 일치하지 않습니다
go.notification.gokpg.toml.modified.text={0} 의 Gopkg.toml이 수정되었습니다.
go.notification.go.edit.project.settings.action.text=Go 프로젝트 설정 편집
go.notification.go.support.is.disabled.in.module.text=모듈 ''{0}'' 에서 Go 지원이 비활성화되어 있습니다
go.notification.go.support.enable.action.text=Go 지원 활성화
go.notification.go.setup.action.text=GOROOT 설정
go.notification.gopath.is.empty.text=GOPATH가 비어 있습니다
go.notification.gopath.configure.action.text=GOPATH 구성
go.notification.gopath.detected.title=GOPATH가 탐지되었습니다
go.notification.gopath.detected.text=GOPATH에서 라이브러리를 탐지했습니다. GOPATH 설정에 추가 라이브러리를 추가하세요.
go.notification.gopath.detected.configure.gopath.action.text=GOPATH 구성
go.notification.vendoring.detected.title=벤더링 사용 위치가 탐지되었습니다
go.notification.vendoring.detected.text=<strong>벤더</strong> 디렉터리는 보통 프로젝트가 Go Vendor Experiment를 사용한다는 것을 의미합니다. 선택한 Go SDK 버전은 벤더링을 지원하지만 디폴트로 비활성화되어 있습니다. 프로젝트 설정에서 명시적으로 Go Vendor Experiment를 활성화하세요.
go.notification.vendoring.detected.configure.go.vendor.experiment.action.text=Go Vendor Experiment 구성
go.notification.go.tool.is.missing.text=실행 파일 ''{0}'' 이(가) GOPATH에서 누락되었습니다. 해당 실행 파일을 설치하시겠어요?
go.notification.go.tool.is.missing.run.go.get.text=GOPATH에서 ''{0}'' 을(를) 찾을 수 없음
go.notification.go.tool.is.missing.run.go.get.invoke.go.get.action.text=''go get {0}'' 호출
go.notification.install.go.tool.action.text=Go 도구 설치
go.notification.add.to.gopath.action.text=GOPATH에 추가
go.notification.add.to.module.action.text=모듈에 추가
go.notification.create.go.mod.file.action.text=go.mod 파일 생성
go.notification.dep.integration.title=Dep 통합
go.notification.dep.init.failed.title=Dep Init 실패
go.notification.dep.init.failed.configure.dep.action.text=Dep 구성
go.notification.disable.go.modules.integration.action.text=Go 모듈 통합 비활성화
go.notification.do.not.show.action.text=o volver a mostrar
go.notification.cgo.optimizations.are.not.disabled=CGO_CFLAGS가 ''-O0 -g''로 설정되지 않았으므로, Cgo 코드가 최적화될 수 있습니다.
go.notification.install.package.action.text={0} 설치
go.notification.modules.file.is.absent.title=go.mod 파일이 없습니다.
go.notification.obsolete.imports.code.style.detected.title=사용되지 않는 import 코드 스타일 설정이 탐지되었습니다.
go.notification.review.code.style.settings.action.text=코드 스타일 설정 검토
go.notification.run.dep.ensure.action.text=dep ensure 실행
go.notification.file.starts.with.underscore.text=''{0}'' 은(는) 이름이 ''{1}'' (으)로 시작하므로 빌드 도구에 의해 무시됩니다
go.notification.file.starts.with.dot.text=''{0}''은(는) 이름이 ''.''로 시작하므로 빌드 도구에서 무시됩니다
go.notification.file.does.not.match.target.system.text=''{0}'' 이(가) 대상 시스템과 일치하지 않습니다. 파일이 빌드 도구에 의해 무시됩니다.
go.notification.file.is.ignored.because.cgo.mismatch.text=''{0}''은(는) cgo 지원 불일치 때문에 빌드 도구에 의해 무시됩니다
go.notification.file.is.ignored.because.os.mismatch.text=''{0}''은(는) OS 불일치 때문에 빌드 도구에 의해 무시됩니다
go.notification.file.is.ignored.because.arch.mismatch.text=''{0}''은(는) 아키텍처 불일치 때문에 빌드 도구에 의해 무시됩니다
go.notification.file.is.ignored.because.compiler.mismatch.text=''{0}''은(는) 컴파일러 불일치 때문에 빌드 도구에 의해 무시됩니다
go.notification.file.is.ignored.because.version.mismatch.text=''{0}''은(는) Go 버전 불일치 때문에 빌드 도구에 의해 무시됩니다
go.notification.file.is.ignored.because.custom.flag.text=''{0}''은(는) 사용자 지정 플래그 때문에 빌드 도구에 의해 무시됩니다
go.notification.file.is.ignored.because.bad.syntax.text=''{0}''은(는) 잘못된 구문 때문에 빌드 도구에 의해 무시됩니다
go.notification.file.is.ignored.because.non.go.file.text=''{0}''은(는) Go 파일이 아니기 때문에 빌드 도구에 의해 무시됩니다
go.notification.enable.cgo.support.action.text=cgo 지원 활성화
go.notification.disable.cgo.support.action.text={0} 지원 비활성화
go.notification.file.ignore.navigate.to.build.constraints.action.text=빌드 제약으로 이동
go.notification.file.ignore.navigate.to.cgo.import.action.text=cgo import 문으로 이동
go.notification.rename.file.action.text=파일 이름 변경
go.notification.inspections.are.disabled.text=파일에서 검사가 비활성화되어 있습니다.
go.notification.inspections.are.disabled.enabled.action.text=검사 활성화
go.notification.code.insight.features.are.disabled.text=코드 분석 기능을 사용할 수 없습니다.
go.notification.file.exceeds.size.limit.text="파일 크기({0})가 구성된 제한({1})을 초과합니다. {2}
go.notification.code.insight.disabled.for.vendored.files.text=라이브러리 내 벤더 파일에서 코드 분석 기능 편집이 비활성되었습니다
go.notification.add.vendored.package.to.project.action.text=프로젝트에 ''{0}'' 추가;
go.notification.package.was.excluded={0}이(가) 가져오기에서 제외되었습니다
go.notification.open.imports.settings=가져오기 설정 열기
go.notification.download.missing.module.successfully.done={0} {0,choice,0#모듈|1#모듈|2#모듈}을 성공적으로 처리했습니다
go.profiler.application.configurable.name=Go 프로파일러
go.profiler.profile.fraction.comment.text=프로파일에 보고된 mutex 경합 이벤트의 프랙션(fraction)을 제어합니다. 평균적으로 1/프랙션 이벤트가 보고됩니다. 디폴트 프랙션 1을 사용하려면 공백으로 남겨 둡니다.
go.profiler.profile.fraction.label.text=프로파일 프랙션\:
go.profiler.profile.rate.cpu.comment.text=프로파일에 보고된 goroutine 차단 이벤트의 프랙션을 제어합니다. 프로파일러는 프로그램이 차단에 소요된 나노초마다 평균 1개의 차단 이벤트를 샘플링하는 것을 목표로 합니다. 프로파일에 모든 차단 이벤트를 포함하려면 속도를 1로 설정합니다. 디폴트 속도 1을 사용하려면 공백으로 남겨 둡니다.
go.profiler.profile.rate.label.text=프로파일 속도\:
go.profiler.profile.illegal.rate.validation.message=잘못된 프로파일 속도\: {0}
go.profiler.profile.illegal.profile.fraction.validation.message=잘못된 프로파일 비율\: {0}
go.profiler.profile.rate.memory.comment.text=프로파일에 기록 및 보고된 메모리 할당을 제어합니다. 프로파일러는 할당된 바이트 속도마다 평균 1개의 할당을 샘플링하는 것을 목표로 합니다. 프로파일에 할당된 모든 차단을 포함하려면 속도를 1로 설정합니다. 디폴트 속도 512Kb를 사용하려면 공백으로 남겨 둡니다.
go.profiler.blocking.profiler.name=프로파일러 차단 중
go.profiler.blocking.profile.prefix=프로파일러 차단 중
go.profiler.cpu.profiler.name=Perfilador de CPU
go.profiler.cpu.profile.prefix=CPU 프로파일
go.profiler.memory.profiler.name=메모리 프로파일러
go.profiler.memory.profile.prefix=메모리 프로파일
go.profiler.mutex.profiler.name=Perfilador de Mutex
go.profiler.mutex.profile.prefix=Mutex 프로파일
go.profiler.not.a.pprof.profile.error=pprof 프로필이 아님
go.profiler.cpu.time.metric.name=CPU 시간
go.profiler.parse.error=프로파일 파싱 도중 오류 발생: {0}
go.profiler.parse.error.eof=예기치 않은 파일의 끝(EOF)
go.profiler.parse.error.empty=프로파일이 비어 있습니다
go.profiler.allocated.objects.metric.name=할당된 객체
go.profiler.allocated.space.metric.name=할당된 공간
go.profiler.in.use.objects.metric.name=사용 중인 객체
go.profiler.in.use.space.metric.name=사용 중인 공백
go.profiler.downloading.profiler.dump.progress.title=프로파일러 덤프 다운로드 중…
go.run.configuration.environment.label=환경(&V)\:
go.run.configuration.go.tool.arguments.label=Go 도구 인수(&G)\:
go.run.configuration.module.label=모듈(&M)\:
go.run.configuration.output.directory.label=출력 디렉터리(&O)\:
go.run.configuration.program.arguments.label=Argumento del &programa\:
go.run.configuration.run.after.build.checkbox=빌드 후 실행(&R)\:
go.run.configuration.build.on.remote.target.checkbox=원격 대상에서 빌드(&B)
go.run.configuration.run.kind.label=실행 종류(&K)\:
go.run.configuration.run.with.sudo.label=sudo로 실행(&I)
go.run.configuration.run.with.sudo.tooltip=상위 사용자 권한으로 구성 실행
go.run.configuration.run.with.sudo.mnemonic=높은 권한으로 실행(&I)
go.run.configuration.add.go.tool.argument.label=Añadir
go.run.configuration.target.directory.label=&Directorio\:
go.run.configuration.target.files.label=파일(&F)\:
go.run.configuration.target.package.label=패키지 경로(&E)\:
go.run.configuration.test.framework=테스트 프레임워크(&R)\:
go.run.configuration.test.kind.label=테스트 종류(&K)\:
go.run.configuration.kind.directory=Directorio
go.run.configuration.kind.package=패키지
go.run.configuration.kind.file=파일
go.run.configuration.test.pattern.label=패턴(&T)\:
go.run.configuration.use.all.custom.build.tags.label=모든 사용자 지정 빌드 태그 사용(&L)
go.run.configuration.use.all.custom.build.tags.tooltip=빌드하는 동안 설정의 모든 사용자 지정 빌드 태그가 추가됩니다.
go.settings.build.tags.arch.label=Arch
go.settings.build.tags.cgo.support.label=CGO 지원
go.settings.build.tags.compiler.label=컴파일러
go.settings.build.tags.custom.tags.hint=공백을 사용하여 태그 분리
go.settings.build.tags.custom.tags.label=사용자 지정 태그
go.settings.build.tags.description=<html>\n  <head>\n    \n</head>\n  <body>\n    <p>\n      다음 옵션은 프로젝트의 대상 시스템을 설명합니다. IDE는 \n      이러한 값을 활용해 유효성 검사 중 무시해야 하는 파일을 결정하며\n      심볼을 해결하고 제안할 수 있습니다. 자세한 내용은<a href\="https\://golang.org/pkg/go/build/\#hdr-Build_Constraints">Go  \n      제약 조건 문서</a>를 참조하세요.\n   </p>\n </body>\n</html>
go.settings.build.tags.display.name=태그 빌드 및 벤더링
go.settings.build.tags.group.name=태그 빌드
go.settings.build.tags.os.label=OS
go.settings.build.tags.version.label=Go 버전
go.settings.build.tags.any.sdk.value=임의
go.settings.invalid.build.tag.error=올바르지 않은 빌드 태그: ''{0}''
go.settings.default.value=Valor por defecto({0})
go.settings.project.sdk.value=프로젝트 SDK({0})
go.settings.default.for.project.sdk.value=SDK ({0}) 디폴트 값
go.settings.enabled=사용
go.settings.disabled=Deshabilitar
go.settings.common.suggest.parameter.names.checkbox=코드 완성 시 매개변수 이름 제안
go.settings.common.show.auto.import.in.completion.popup.checkbox=입력 시 추가 가져오기가 필요한 항목 제안
go.settings.common.indent.on.enter.in.raw.strings.checkbox=원시 문자열에서 Enter 입력 시 들여쓰기
go.settings.common.show.documentation.in.parameter.info.checkbox=매개변수 정보에 문서 표시
go.settings.common.detect.go.packages.from.clipboard.checkbox=클립보드에서 Go 패키지 탐지
go.settings.common.enable.experimental.support.for.type.parameters=제네릭 활성화(유형 매개변수에 대한 실험적 지원)
go.settings.common.enable.experimental.support.for.type.parameters.tooltip=현재 구현은 Ian Lance Taylor와 Robert Griesemer가 2020년 9월 21일에 공개한 Type Parameters - Draft Design을 기반으로 합니다.
go.settings.common.enable.experimental.support.for.type.parameters.link.title=더보기
go.settings.common.confirmation.show.options.option=옵션 보기
go.settings.common.package.rename.rename.directory.option=디렉터리 이름 변경
go.settings.common.package.rename.do.not.rename.directory.option=디렉터리 이름 변경 안 함
go.settings.common.directory.rename.rename.package.option=패키지 이름 변경
go.settings.common.directory.rename.do.not.rename.package.option=패키지 이름 변경 안 함
go.settings.common.test.rename.corresponding.file.option=해당하는 테스트 또는 프로덕션 파일 이름 변경
go.settings.common.test.do.not.rename.corresponding.file.option=해당하는 테스트 또는 프로덕션 파일 이름 변경 안 함
go.settings.common.directory.rename.option=디렉터리 이름이 변경된 경우
go.settings.common.package.rename.option=패키지 이름이 변경된 경우
go.settings.common.test.rename.option=파일 이름이 변경된 경우
go.settings.common.convert.json.on.paste.option=JSON이 붙여넣기된 경우
go.settings.common.convert.json.on.paste.convert.option=Go 타입으로 JSON 변환
go.settings.common.convert.json.on.paste.insert.as.is.option=JSON 그대로 삽입
go.settings.completion.ml.display.name=Go
go.settings.debugger.stack.depth.name=스택 깊이
go.settings.debugger.goroutines.limit.name=Goroutines 제한
go.settings.debugger.rebuild.transitive.packages.checkbox=이행적 패키지 재구성(&R)
go.settings.debugger.rebuild.transitive.packages.description=더 나은 디버그 경험을 위해 Delve에서 $GOROOT/pkg의 최적화된 모듈을 다시 컴파일해야 합니다.
go.settings.imports.display.name=가져오기
go.settings.modules.display.title=Go 모듈
go.settings.sdk.unknown.version.at.path={0} 의 알 수 없는 Go 버전
go.settings.sdk.detected.notification.title=GOROOT가 탐지되었습니다
go.settings.sdk.detected.notification.text=<b>{0}</b> 이(가) 프로젝트 <b>{0}</b>로 자동 설정되었습니다. GOROOT 설정에서 이를 변경할 수 있습니다.
go.settings.sdk.detected.notification.configure.go.sdk.action.text=Go SDK 구성
go.settings.sdk.enable.integration.label=모듈에서 Go 지원 활성화\:
go.settings.sdk.combo.tooltip=SDK 추가...
go.settings.sdk.add.button=SDK 추가...
go.settings.sdk.add.action.name=Local...
go.settings.sdk.add.local.title=Go SDK 홈 디렉터리 선택
go.settings.sdk.add.button.tooltip=SDK({0}) 추가
go.settings.sdk.download.action.name=Descargar...
go.settings.sdk.download.dialog.title=Go SDK 다운로드
go.settings.sdk.download.dialog.version.label=버전\:
go.settings.sdk.download.dialog.location.label=위치\:
go.settings.sdk.download.dialog.reload.versions.action.name=다시 불러오기
go.settings.sdk.download.dialog.progress.versions.status=Go SDK 버전
go.settings.sdk.download.dialog.cannot.load.go.versions.validation.message=Go 버전을 로드할 수 없습니다. {0}
go.settings.sdk.download.dialog.version.is.not.specified.validation.message=버전을 지정하세요.
go.settings.sdk.download.dialog.location.is.not.specified.validation.message=대상 디렉터리를 지정하세요.
go.settings.sdk.download.dialog.cannot.create.directory.validation.message=주어진 경로에 디렉터리를 생성할 수 없습니다.
go.settings.sdk.download.progress.downloading.status=Go {0} 다운로드 중
go.settings.sdk.download.progress.verifying.status=다운로드 아카이브 검사 중...
go.settings.sdk.download.progress.unpacking.status=SDK 패킹 해제 중...
go.settings.sdk.download.progress.copying.status=SDK 복사 중…
go.settings.sdk.download.progress.copying.detailed.status={0} 복사 중…
go.settings.sdk.download.unpacked.sdk.is.corrupted.error=패킹 해제된 SDK가 손상되었습니다
go.settings.sdk.download.checksum.of.downloaded.file.mismatched.error=다운로드한 파일의 검사합이 일치하지 않음
go.settings.sdk.download.could.not.get.checksum.error=검사합을 구하지 못했습니다\: {0}
go.settings.sdk.download.could.not.find.go.directory.in.downloaded.file.error=다운로드한 파일에서 Go 디렉터리를 찾지 못했습니다
go.settings.sdk.download.could.not.unpack.downloaded.file.error=다운로드한 파일을 패킹 해제하지 못했습니다
go.settings.sdk.download.could.not.copy.unpacked.sdk.error=패킹 해제된 SDK를 복사하지 못했습니다
go.settings.sdk.download.installed.notification.title=Go {0} 설치 완료
go.settings.sdk.download.failed.to.download.notification.title=SDK 다운로드 실패
go.settings.modules.enable.integration.checkbox=Go 모듈 통합 비활성화
go.settings.modules.choose.module.dialog.title=Go 모듈 선택
go.settings.modules.choose.module.validation.message=하나 이상의 모듈을 선택해야 합니다.
filetype.go.settings.modules.dependency.description=Go 모듈 종속 요소 파일
go.settings.modules.goproxy.documentation.link.title=모듈 다운로드 및 검증
go.settings.modules.goproxy.tooltip=GOPROXY는 종속성 다운로드 시 go 명령어가 특정 프록시 서버를 사용하도록 지시합니다.
go.settings.modules.environment.label=환경\:
go.settings.modules.environment.context.help=GOPROXY, GOPRIVATE 등
go.settings.modules.sync.dependencies.fix.family.name=종속성 동기화
go.settings.modules.sync.dependencies.fix.text={0}의 종속성 동기화
go.settings.modules.vendoring.checkbox=벤더링 지원 지동 활성화
go.settings.modules.vendoring.checkbox.tooltip=Go 1.14 이후 무시됨.<br>Go 1.14 이전 버전에서는 공급업체 디렉터리가 모듈에 포함될 때마다 벤더링 지원이 활성화됩니다. 특히 IDE는 -mod\=vendor 플래그로 go 도구를 실행합니다.
go.settings.modules.vendoring.documentation.link.title=모듈과 함께 벤더링을 사용하는 방법
go.settings.run.configuration.invalid.env.name=환경 변수의 비정규 이름\: ''{0}''
go.settings.run.configuration.invalid.env.value=환경 변수 값 ''{0}''의 비정규 값\: ''{1}''
go.settings.modules.explain.environment.variable=변수 설명
go.settings.modules.add.other.environment.variable=Otros
go.settings.modules.gosumdb.description=GOSUMDB는 검사합 데이터베이스 이름을 나타냅니다. Go 명령어가 다운로드된 종속성의 검사합이 변경된 것을 확인하기 위해 이 값을 사용합니다.
go.settings.modules.gosumdb.documentation.link.title=모듈 인증 실패
go.settings.modules.goprivate.description=GOPRIVATE는 private으로 간주되는 패키지를 나열합니다. 이 패키지를 다운로드하거나 유효성 검사를 실행하는 도중에는 Go 명령어가 프록시나 검사합 데이터베이스를 사용하지 않습니다.
go.settings.modules.goprivate.documentation.link.title=비 public 모듈에 대한 모듈 구성
go.settings.modules.gonoproxy.description=GONOPROXY는 private으로 간주되는 패키지를 나열합니다. 이 패키지를 다운로드하는 도중에는 Go 명령어가 프록시를 사용하지 않습니다. GOPRIVATE을 재정의합니다.
go.settings.modules.gonosumdb.description=GONOSUMDB는 private으로 간주되는 패키지를 나열합니다. 이 패키지에 대해 유효성 검사를 실행하는 도중에는 Go 명령어가 검사합 데이터베이스를 사용하지 않습니다. GOPRIVATE을 재정의합니다.
go.settings.modules.gomodcache.description=GOMODCACHE은 모듈 캐시 위치를 설정합니다.
go.settings.modules.gomodcache.documentation.link.title=Go 1.15 릴리스 노트
go.settings.postfix.enter.type.import.path.label=가져오기 경로(&I)\:
go.settings.postfix.enter.type.name.label=유형 이름(&T)\:
go.settings.postfix.enter.type.empty.type.validation.message=유형 이름을 지정하세요
go.settings.postfix.enter.type.action.name=유형 이름 입력...
go.settings.postfix.choose.type.action.name=유형 선택...
go.settings.postfix.choose.type.prompt.text=유형 선택
go.settings.vendoring.cannot.be.disabled.error.message=Go {0}에서는 벤더 실험 비활성화가 지원되지 않습니다.
go.settings.vendoring.description=<html>\n  <head>\n    \n</head>\n  <body>\n    <p>\n      이 옵션을 사용하면 활성화된 IDE에서 다음 문서에 따라 심볼을 해결하고 \n      완성합니다. <a href\="https\://golang.org/s/go15vendor">Go 벤더링 실험 \n      제안</a>.\n   </p>\n    <p>\n      또한 이에 상응하는 <strong>GO15VENDORExperiment</strong>\n      환경 변수 값은 IDE의 모든 go 실행에 맞춰 설정됩니다.\n   </p>\n </body>\n</html>
go.settings.vendoring.enable.vendoring.checkbox=벤더링 활성화
go.settings.vendoring.group.name=벤더 실험
go.settings.vendoring.is.not.supported.error.message=Go {0}에서는 벤더 실험이 지원되지 않습니다.
go.template.intention.add.type.hint.name=마침표 유형 지정
go.template.intention.associate.file.extension.with.go.template=Go 템플릿과 파일 확장자 연결
go.template.intention.extension.associated.with.template=''{0}'' 확장이 Go 템플릿과 연결되었습니다
go.template.intention.open.file.type.settings=Go 템플릿 파일 유형 설정 열기
go.template.intention.undo=실행 취소
go.unknown.type.information.hint=<알 수 없음>
group.GoTools.description=Herramientas externas Go
group.GoTools.text=Go 도구
go.call.hierarchy.respect.interface.calls.action.name=인터페이스 호출에 따름
go.call.hierarchy.respect.interface.calls.description=인터페이스 호출에 따름
go.settings.formatter.no.exceptions.empty.text=예외 없음
go.settings.formatter.comment.prefix.dialog.title=주석 접두사
go.settings.formatter.wrap.call.arguments=함수 호출 인수
go.settings.formatter.wrap.comp.lit=복합 리터럴
go.settings.formatter.wrap.func.params=함수 매개변수
go.settings.formatter.wrap.func.result=함수 결과 매개변수
go.settings.diff.ignore.imports.and.formatting.description=import 문 및 서식 지정 무시
go.settings.debugger.default.integer.format.label=디폴트 정수 형식\:
go.executable.file.chooser.title={0} 선택
go.executable.file.process.icon.tooltip={0} 발견
go.executable.file.invalid.path.text=경로가 올바르지 않습니다
go.executable.file.cannot.retrieve.version=버전을 가져올 수 없음
go.executable.file.empty.value=<Empty>
go.fmt.add.leading.space.to.comments=주석에 선행 공간 추가
go.fmt.add.parentheses.for.single.import=단일 import 문에 소괄호 추가
go.fmt.group.stdlib.imports=stdlib import 문 그룹 지정
go.fmt.imports.tab.title=가져오기
go.fmt.move.all.imports.in.single.declaration=단일 선언의 모든 import 문 이동
go.fmt.move.all.stdlib.imports.in.single.group=단일 그룹의 모든 stdlib import 문 이동
go.fmt.remove.redundant.import.aliases=중복된 import 별칭 제거
go.fmt.import.sorting.type=정렬 유형
go.fmt.use.back.quotes.for.imports=import 문에 역따옴표 사용
go.fmt.fill.paragraph.width.label=단락 너비 채우기\:
go.fmt.create.local.group.label=그룹
go.fmt.for.current.project.packages=현재 프로젝트 패키지
go.fmt.for.imports.starting.with.prefix=다음으로 시작하는 import 문:
go.fmt.for.imports.starting.with.prefix.comment='goimports -local'과 동일한 접두사를 쉼표로 구분한 목록
go.fmt.imports.prefix.error.title=잘못된 import 문 접두사
go.fmt.imports.prefix.error.empty.message=import 문 접두사는 공백일 수 없습니다
go.fmt.run.gofmt.panel.border.title=gofmt 실행
go.fmt.run.gofmt.on.code.reformat.label=코드 서식 다시 지정 시(&R)
go.debugger.disconnected.unexpectedly=디버거 연결이 예기치 않게 해제됨
go.debugger.failed.to.compute.node.presentation=노드 프레젠테이션 계산 실패
go.debugger.connection.failed.generic.message={0}에 연결 실패
go.debugger.connecting.to.address.message={0} 연결 중...
go.debugger.connecting.to.unknown.address.message=원격 주소 연결 중...
go.debugger.cannot.retrieve.go.processes=Go 프로세스를 검색할 수 없습니다.
go.debugger.install.gops.to.attach.to.go.processes={0} 설치하여 Go 프로세스에 연결
go.debugger.local.attach.group.name=Go
go.debugger.breakpoint.title=Go 중단점
go.debugger.error.breakpoint.title=Go 오류 중단점
go.debugger.error.breakpoint.display.text=치명적인 오류
go.debugger.missing.function.name=<missed>
go.debugger.record.and.debug.action.name=기록 및 디버그
go.debugger.record.and.debug.description=기록 및 디버그
go.debugger.record.and.debug.start.action.text=기록 및 디버그
go.debugger.record.and.debug.cannot.find.rr.message=<html><a href\="https\://rr-project.org">mozilla rr</a> 실행 파일을 찾을 수 없습니다. 해당 파일을 설치하고 경로에 추가하세요.</html>
go.debugger.internal.messaging.error=내부 메시징 오류
go.debugger.cannot.connect.twice=Delve 프로세스는 두 번 연결될 수 없습니다.
go.debugger.cannot.connect.non.remote=원격 연결이 아닌 것을 사용하기 때문에 Delve 프로세스 연결이 불가합니다.
go.debugger.cannot.evaluate.expression=\ ''{0}'' 표현식을 평가할 수 없습니다\: {1}
go.debugger.cannot.get.current.goroutine=현재 goroutine을 받을 수 없습니다.
go.debugger.go.version.is.not.officially.supported=Go {0} 버전에는 공식적인 디버거 지원이 없으며 일부 기능에서 오류가 발생할 수 있습니다. go {1} 또는 최신 버전으로 업데이트하세요.
go.debugger.go.version.is.not.supported=Go {0} 버전에는 공식적인 디버거 지원이 없습니다. go {1} 또는 최신 버전으로 업데이트하세요.
go.debugger.no.debug.information.for.file=실행 파일은 {0}에 대한 디버그 정보를 포함하지 않습니다.
go.debugger.cannot.find.debugger.path={0} 디버거 경로를 찾을 수 없습니다
go.debugger.cannot.pause=일시 중단 불가
go.debugger.recording.in.progress=프로그램 실행을 기록합니다. 기록을 디버그하려면 프로그램 종료를 기다리거나 <a href\=''{0}''>기록을 중단</a>하세요.
go.debugger.failed.to.stop.mozilla.rr.recording=mozilla rr 기록 중지 실패
go.debugger.failed.to.stop.mozilla.rr.recording.details=mozilla rr 기록 중지 실패\: {0}
go.debugger.cannot.evaluate.call=호출 평가 불가\: {0}
go.debugger.non.top.frame.selected=최상위가 아닌 프레임이 선택되었습니다.
go.debugger.missing.current.function=현재 함수 누락
go.debugger.unused.functions.are.not.included.message= (사용하지 않는 기능은 실행 파일에 포함되지 않습니다)
go.debugger.unused.methods.are.not.included.message= (사용하지 않는 메서드는 실행 파일에 포함되지 않습니다)
go.debugger.smart.step.into.failed=스마트 스텝인투 실패\: {0}
go.debugger.expression.is.not.a.function=''{0}''은(는) 기능이 아닙니다.
go.debugger.expression.is.nil=''{0}''은(는) nil입니다.
go.debugger.cannot.retrieve.interface.value.type=인터페이스 값의 형식을 검색할 수 없습니다.
go.debugger.cannot.get.current.stack=현재 스택을 받을 수 없습니다.
go.debugger.smart.step.into.popup.title=스텝인투 기능
go.debugger.renderers.binary.name=2진
go.debugger.renderers.decimal.name=10진수
go.debugger.renderers.hex.name=16진수
go.debugger.renderers.default.renderer.name=디폴트 렌더러
go.debugger.computing.full.value.of.call.results.is.not.supported=호출 결과의 전체 값 계산이 지원되지 않습니다.
go.debugger.cannot.calculate.value=값을 계산할 수 없습니다.
go.debugger.obsolete.value=<obsolete>
go.debugger.cannot.calculate.string.presentation=문자열 프리젠테이션 계산불가\: {0}
go.debugger.unsupported.type=<unsupported type\: {0}>
go.debugger.cannot.load.remaining.call.result.children=남은 호출 결과의 하위 항목을 로드할 수 없습니다.
go.debugger.unreadable.error=\ 가독성 저하\: {0}
go.debugger.fmt.sprintf.unsupported.format=(지원되지 않는 형식)
go.debugger.fmt.sprintf.unsupported.verb=(지원되지 않는 동사)
go.debugger.fmt.sprintf.cannot.format.value=(값 서식 지정 불가)
go.debugger.async.stacktrace.caption=비동기 스택 추적
go.debugger.thread=스레드
go.debugger.goroutine=Goroutine
go.debugger.unsupported.architecture.error=디버그는 64비트 시스템 및 32비트 리눅스에서만 지원됩니다
go.debugger.unsupported.go.version.on.darwin.arm64.error=darwin/arm64에서 디버그하려면 go{0} 이(가) 필요합니다
go.debugger.unsupported.go.arch.on.darwin.arm64.error={0}(으)로 컴파일된 프로그램의 디버그는 지원되지 않습니다. darwin/arm64에서는 go sdk를 사용하세요.
go.debugger.only.first.goroutines.are.shown=첫 번째 {0} goroutines만 표시됩니다
go.debugger.thread.dump.error=스레드 덤프 가져오기 실패\: {0}
go.debugger.thread.dump.display.name={0} 덤프
go.debugger.thread.dump.incomplete.display.name=불완전한 덤프 {0}
go.debugger.cannot.find.file=파일 {0} 을(를) 찾을 수 없음
go.debugger.unknown.function.name=<unknown>
go.debugger.create.dump.background.task.title=스택 덤프 중...
go.debugger.create.dump.background.task.progress.text=스택 ({0}) 덤프 중...
go.debugger.thread.dump.n.goroutines={0} {0,choice,0\#goroutine|1\#goroutine|2\#goroutine}
go.debugger.thread.dump.n.unique.stacks={0} 고유한 {0,choice,0\#스택|1\#스택|2\#스택}
go.debugger.thread.dump.n.hidden.goroutines={0} 숨겨진 {0,choice,0\#goroutine|1\#goroutine|2\#goroutine}
go.debugger.thread.dump.n.goroutines.matched.by.filter=필터와 일치하는 {0} {0,choice,0\#goroutine|1\#goroutine|2\#goroutine}
go.debugger.another.command.is.in.progress=다른 명령어가 진행 중입니다
go.debugger.thread.dump.is.in.progress=스레드 덤프가 진행 중입니다
go.debugger.and.n.more={0} 개 이상 추가
go.debugger.hidden.group.name=숨겨진 ({0})
go.debugger.stop.remote.delve.title=원격 Delve 중지
go.debugger.stop.remote.delve.message=원격 Delve 인스턴스를 중지하시겠어요?
go.debugger.process.terminated.stop.remote.delve.message=원격 프로세스가 종료되었습니다. 원격 Delve 인스턴스도 중지하시겠어요?
go.debugger.kill.existing.process.title=원격 프로세스 강제 종료
go.debugger.kill.existing.process.message=디버거가 연결되어 있던 원격 프로세스를 강제 종료하시겠어요?
go.debugger.custom.delve.notification=사용자 지정 Delve로 디버그 중입니다. {0}
go.debugger.custom.delve.extended.notification=사용자 지정 Delve로 디버그 중입니다. {0}. 번들로 포함된 Delve를 사용하려면 dlv.path <a href=''customProperties''>사용자 지정 프로퍼티</a>를 삭제하고 IDE를 다시 시작하세요.
go.remote.debug.disconnect.delve.label=연결 해제 시\:
go.remote.debug.disconnect.delve.option.ask=확인하기
go.remote.debug.disconnect.delve.option.leave=계속 실행하기
go.remote.debug.disconnect.delve.option.stop=원격 Delve 프로세스 중지
go.settings.debugger.general.section.name=Go
go.settings.debugger.dataViews.section.name=Go
go.execution.package.is.not.specified.error=패키지가 지정되지 않습니다.
go.execution.directory.is.not.specified.error=디렉터리가 지정되지 않았습니다
go.execution.file.is.not.specified.error=파일이 지정되지 않았습니다
go.execution.cannot.find.package.error=<code>{0}</code> 패키지를 찾을 수 없습니다.
go.execution.package.contains.several.mains.error=<code>{0}</code> 패키지에는 하나 이상의 <code>메인</code>기능이 포함됩니다.<br>대신 파일 종류를 사용하시길 권장해 드립니다.
go.execution.cannot.find.directory.error=<code>{0}</code> 디렉터리를 찾을 수 없습니다.
go.execution.run.after.build.is.not.possible.incompatible.os.error=빌드 후 실행이 불가합니다.<br>결과 바이너리가 OS와 호환되지 않을 것입니다.
go.execution.run.after.build.is.not.possible.main.not.found.single.file.error=빌드 후 실행이 불가합니다.<br>메인 파일에 메인이 아닌 패키지가 포함되거나 메인 기능이 포함되지 않습니다.
go.execution.run.after.build.is.not.possible.main.not.found.many.files.error=빌드 후 실행이 불가합니다.<br>선택한 파일 중 어디에도 기본 패키지와 메인 기능이 포함되지 않습니다.
go.execution.file.not.found.error=파일을 찾을 수 없습니다\: <code>{0}</code>
go.execution.files.must.be.in.one.directory.error=이름이 지정된 파일은 모두 하나의 디렉터리에 있어야 합니다.
go.execution.not.go.file.error=파일이 Go 파일이 아닙니다\: {0}
go.execution.application.run.configuration.display.name=Go 빌드
go.execution.application.run.configuration.description=Go 빌드 실행 구성
go.execution.before.run.task.name=Go 명령어 실행
go.execution.before.run.task.description=''{0}'' 실행
go.execution.before.run.task.supports.only.go.run.configurations.error=Go 명령어 작업은 Go 실행 구성만 지원합니다
go.execution.before.run.task.supports.only.go.modules.error=Go 명령어 작업은 활성화된 Go 통합이 있는 모듈만 지원합니다
go.execution.before.run.task.executing.presentable.name=`{0}` 실행 중
go.execution.before.run.task.error.dialog.title=Go 명령어 작업
go.execution.before.run.task.edit.go.command.dialog.title=Go 명령어 작업 편집
go.execution.before.run.task.empty.command.error=빈 Go 명령어는 허용되지 않습니다.
go.execution.before.run.task.command.should.not.start.with.go.error=Go 명령어는 ''go''로 시작되면 안 됩니다.
go.execution.coverage.percent.statements=% 구문
go.execution.coverage.percent.files=% 파일
go.execution.coverage.covered=지원됨
go.execution.coverage.engine.name=Go 커버리지
go.execution.coverage.cannot.run.coverage.on.directory.kind.run.configurations.error=디렉터리 종류 실행 구성에서 커버리지를 실행할 수 없습니다.
go.execution.coverage.loading.coverage.data=커버리지 데이터 로드 중...
go.execution.coverage.runner.name=Go
go.execution.coverage.downloading.coverage.report.progress.title=커버리지 보고서 다운로드 중…
go.execution.test.collecting.build.tags.progress.title=빌드 태그 수집 중…
go.test.creator.empty.test.file.name=빈 테스트 파일
go.test.creator.test.for.function.name=함수 테스트
go.test.creator.test.for.file.name=파일 테스트
go.test.creator.test.for.package.name=패키지 테스트
go.test.creator.test.for.selection.name=선택 항목 테스트
go.test.creator.gotests.generation.name=테스트 생성
go.test.creator.gotests.no.tests.generated=생성된 테스트가 없습니다.
go.test.creator.gotests.failed.to.create.test.file=테스트 파일 ''{0}''을(를) 생성하지 못했습니다.
go.test.creator.gotests.generation.failed.notification.title=테스트 생성 실패
go.test.creator.cannot.find.test.package.name=테스트 패키지 이름을 찾을 수 없습니다.
go.test.creator.cannot.find.test.import.path=테스트 가져오기 경로를 찾을 수 없습니다.
go.test.creator.cannot.find.function.signature=함수 시그니처를 찾을 수 없습니다.
go.test.creator.cannot.find.method.receiver={0}에 대한 메서드 리시버를 찾을 수 없습니다.
go.test.creator.cannot.find.method.receiver.type={0}에 대한 메서드 리시버 유형을 찾을 수 없습니다.
go.test.creator.cannot.find.field.type={0}에 대한 필드 유형을 찾을 수 없습니다.
go.test.generate.table.benchmark.text=테이블 벤치마크
go.test.generate.table.benchmark.description=테이블 벤치마크 함수 생성
go.test.generate.table.test.text=테이블 테스트
go.test.generate.table.test.description=테이블 테스트 함수 생성
go.test.generate.function.description={0} 함수 생성
go.test.generate.test.text=테스트
go.test.generate.test.main.text=Test_main
go.test.generate.benchmark.text=벤치마크
go.test.generate.example.text=예
go.test.testify.run.configuration.name={1}의 {0}
go.test.testify.unknown.target.name=알 수 없음
go.test.framework.not.available.in.module.error=<code>{0}</code> 프레임워크는 선택한 모듈에서 지원되지 않습니다.
go.test.working.directory.should.be.ancestor.of.testing.directory.error=작업 디렉터리는 테스트 디렉터리의 상위 디렉터리여야 합니다.
go.test.testing.directory.does.not.exist.error=테스트 디렉터리가 없습니다.
go.test.non.a.package.error=<code>{0}</code>은(는) 패키지가 아닙니다.<br>디렉터리 종류 실행 구성을 사용하여 디렉터리에서 재귀적으로 테스트가 실행됩니다.
go.test.cannot.find.files.compatible.with.framework.error=<code>{0}</code>에서 <code>{1}</code> 프레임워크와 호환 가능한 Go 테스트 파일을 찾을 수 없습니다.
go.test.file.does.not.exist.error=파일이 없습니다\: {0}
go.test.not.go.file.error=''{0}'' 파일은 Go 파일이 아닙니다.
go.test.framework.is.not.available.on.files.error=<code>{0}</code> 프레임워크는 모든 <code>{1}</code> 파일에서 지원되지 않습니다.
go.test.suggested.run.configuration.name={1}의 {0}
go.test.run.configuration.name=Go 테스트
go.test.run.configuration.description=Go 테스트 실행 구성
go.test.template.run.configuration.name=Go 테스트
go.test.run.test.tooltip=테스트 실행
go.test.no.tests.were.run=실행된 테스트가 없습니다.
go.test.cannot.run.compiling.on.directory.kind.run.configurations.error=디렉터리 종류 실행 구성에서 컴파일을  실행할 수 없습니다.
go.execution.cannot.find.target.to.compile.error=컴파일 대상을 찾을 수 없습니다.
go.execution.cannot.create.temp.output.file.error=임시 출력 파일을 생성할 수 없습니다.
go.execution.cannot.create.output.file.error={0} 출력 파일을 생성할 수 없습니다.
go.execution.cannot.create.output.file.in.error={0}에서 출력 파일을 생성할 수 없습니다.
go.execution.cannot.make.temporary.file.executable.error={0} 임시 실행 파일을 생성할 수 없습니다.
go.execution.could.not.bind.remote.debugging.port.error=원격 디버그 포트를 바인딩할 수 없음
go.execution.cannot.find.target.error=대상 {0} 을(를) 찾을 수 없음
go.execution.sdk.not.set.or.sdk.home.path.empty.for.module.error=모듈에 대해 SDK가 설정되어 있지 않거나 SDK 홈 경로가 비어 있습니다
go.execution.can.not.run.go.local.process.error=로컬 프로세스를 실행할 수 없음
go.execution.failed.to.prepare.remote.environment.error=원격 환경을 준비하지 못했습니다. {0}
go.execution.outdated.go.notification.title=Go 버전이 오래되었습니다
go.execution.outdated.go.notification.text=모든 디버그 기능을 완벽하게 지원하려면 Go 버전을 업데이트하세요.
go.execution.change.goroot.action.name=GOROOT 변경
go.execution.compilation.finished.with.exit.code=$EXIT_CODE$ 종료 코드로 완료된 컴파일
go.execution.compiled.binary.cannot.be.executed=컴파일된 바이너리를 실행할 수 없습니다.
go.execution.compilation.failed.notification.title=컴파일 실패
go.execution.install.lldb.notification.text=xcode-select --install을 활용하여 lldb 설치
go.execution.go.setup.folding.placeholder=<{0} go 설정 {0,choice,1\#호출|2\#호출}>
go.execution.remote.run.configuration.display.name=Go Remote
go.execution.remote.run.configuration.description=Go Remote
go.execution.remote.run.configuration.start.delve.text=이 구성을 실행하기 전에 아래 설명대로 애플리케이션 및 Delve를 시작하세요.<br><br>Delve가 애플리케이션을 컴파일하도록 하세요\:<br><pre>dlv debug --headless --listen\=\:{0} --api-version\=2 --accept-multiclient</pre><br>아니면 Go {3} 이상을 사용하여 애플리케이션를 컴파일하세요\:\:<br><pre>go build -gcflags \"all\=-N -l\" github.com/app/demo</pre><br>그리고 다음 Delve 명령를 통해 애플리케이션을 실행하세요\:<br><pre>dlv --listen\=\:{1} --headless\=true --api-version\=2 --accept-multiclient exec ./{2}</pre>
go.execution.remote.run.configuration.host.label=Nombre del &servidor\:
go.execution.remote.run.configuration.port.label=&Puerto\:
go.execution.sdk.is.not.specified.error=<code>{0}</code>모듈에 Go SDK가 지정되지 않았습니다.
go.execution.module.does.not.exist.error=프로젝트에 <code>{0}</code> 모듈이 없습니다.
go.execution.working.directory.is.not.specified.error=작업 디렉터리가 지정되지 않았습니다.
go.execution.cannot.find.working.directory.error=<code>{0}</code> 작업 디렉터리를 찾을 수 없습니다.
go.execution.input.file.is.not.specified.error=입력 파일이 지정되지 않았습니다
go.execution.cannot.find.input.file.error=입력 파일 <code>{0}</code>을(를) 찾을 수 없습니다
go.execution.go.is.not.configured.error=실행 구성에서 Go는 구성되지 않았습니다\: {0}
go.execution.run.application.tooltip=애플리케이션 실행
go.execution.process.finished.with.exit.code={1} 종료 코드로 완료된 {0}
go.execution.application.process.name=프로세스
go.execution.debugger.process.name=디버거
go.execution.unknown.target.delve.socket.error=Delve를 실행할 수 없습니다. 대상 소켓을 알 수 없습니다. RunState\: {0}
go.execution.process.interrupted=중단됨
go.execution.process.cancelled=Cancelado
go.execution.go.sdk.is.not.downloaded.yet=Go SDK가 아직 다운로드되지 않았습니다
go.execution.process.finished.successfully=성공적으로 완료함
go.execution.process.failed.to.run=실행 실패
go.execution.unknown.error=알 수 없는 오류, 세부 사항 로그 보기
go.execution.enter.sudo=sudo 비밀번호를 입력하세요\:
go.import.optimizer.removed.imports={0} 개의 {0,choice,1\#import 문|2\#import 문}이 제거되었습니다
go.import.optimizer.removed.aliases={0} 개의 {0,choice,1\#별칭|2\#별칭}이 제거되었습니다
go.import.optimizer.removed.imports.and.aliases={0} 개의 {0,choice,1\#import 문|2\#import 문} 및 {1} 개의 {0,choice,1\#별칭|2\#별칭}이 제거되었습니다
go.import.package.fix.family.name=패키지 가져오기
go.import.package.fix.text=패키지 가져오기
go.import.package.fix.text.no.variants=패키지 가져오기?
go.import.package.fix.text.single.variant={0} 가져오기?
go.import.package.fix.text.many.variants={0} 가져오기?(다중 선택...)
go.import.package.popup.title=가져올 패키지
go.import.package.cannot.invoke.fix.with.ambiguous.imports.error={0}에디터에서 모호한 import 문으로 수정을 호출할 수 없습니다. 패키지\: {1}
go.create.intermediate.variable.declaration.fix.name=중간 변수 생성
go.add.import.command.name=가져오기 추가
go.add.import.with.alias.presentation=\ {1} (으)로서의 {0}
go.error.parser.expected=''{0}'' 필요
go.error.parser.expected.got=''{0}'' 이(가) 필요하나 ''{1}'' 발견
go.error.parser.expected.or.got=''{0}'' 또는 ''{1}''이(가) 필요하나 ''{2}''이(가) 있습니다
go.error.parser.unexpected=예기치 않은 ''{0}''
go.error.annotator.invalid.package.name=잘못된 패키지 이름
go.error.annotator.continue.statement.not.inside.a.for.loop=for 루프에 포함되지 않는 continue 문
go.error.annotator.break.statement.not.inside.a.for.loop.select.or.switch=for 루프 내부에 없는 break 문, 선택 또는 전환
go.error.annotator.unexported.reference.usage=비노출 {0} ''{1}'' 사용 위치
go.error.annotator.type.is.not.an.expression=유형 ''{0}'' 은(는) 표현식이 아닙니다
go.error.annotator.unexported.type.usage=비노출 유형 ''{0}'' 사용 위치
go.error.annotator.reference.is.not.a.type={0} 은(는) 유형이 아닙니다.
go.error.annotator.missing.key.in.map.literal=map 리터럴의 누락된 키
go.error.annotator.use.of.type.outside.type.switch=유형 전환 외부의 .(type) 사용
go.error.annotator.invalid.type.assertion=잘못된 유형 어설션\: {0} (왼쪽의 비 인터페이스 유형 {1})
go.error.annotator.invalid.type.switch.guard=잘못된 유형 전환 보호\: {0} (왼쪽의 비 인터페이스 유형 {1})
go.error.annotator.map.key.type.is.not.comparable=잘못된 map 키 유형\: 비교 연산자 \=\= 및 \!\=의 경우 키 유형으로 완전히 정의되어야 합니다.
go.error.annotator.call.used.as.value.but.it.returns.nothing={0} 은(는) 값으로 사용되지만 아무것도 반환하지 않습니다.
go.error.annotator.multiple.value.in.single.value.context=단일 값 컨텍스트의 다중 값 {0}
go.error.annotator.type.aliases.are.available.since.go.1.9=유형 선언의 예기치 않은 \=. 유형 별칭은 Go 1.9부터 지원됩니다.
go.error.annotator.missing.function.body=누락된 {0} 본문
go.error.annotator.main.or.init.has.invalid.signature={0} 함수에는 인수와 반환 값이 포함될 수 없습니다.
go.error.annotator.invalid.index.or.slice.operation=잘못된 연산 {0}(문자열의 3-색인 슬라이스)
go.error.annotator.unexpected.end.of.statement=구문 오류\: 예기치 않은 구문 끝,\:\=, \= 또는 쉼표 기대
go.error.annotator.unexpected.newline.after.if=예기치 않은 줄 바꿈, ''if'' 절 뒤에 ''{'' 기대
go.error.annotator.missing.condition.in.if.statement=''if'' 문의 누락된 조건
go.error.annotator.semicolon.is.missing=; 누락
go.error.annotator.fallthrough.statement.out.of.place=부적절한 폴스루 구문
go.error.annotator.cannot.fallthrough.final.case.in.switch=switch 문에서 마지막 case를 폴스루 할 수 없습니다
go.error.annotator.cannot.fallthrough.in.type.switch=유형 스위치에서 폴스루가 허용되지 않습니다
go.error.annotator.end.of.file.in.comment=주석에 포함된 파일의 끝
go.error.annotator.array.bound.must.be.a.constant.expression=잘못된 배열 바운드 ''{0}'', 상수식이어야 합니다.
go.error.annotator.array.bound.must.be.non.negative=잘못된 배열 바운드 ''{0}'', 음수 값은 허용되지 않습니다.
go.error.annotator.array.bound.must.be.representable.by.int.type=잘못된 배열 바운드 ''{0}'', 값은 ''int'' 유형으로 표시될 수 있어야 합니다.
go.error.annotator.invalid.argument.for.len=잘못된 len 인수
go.error.annotator.invalid.argument.for.cap=잘못된 cap 인수
go.error.annotator.cannot.declare.init.must.be.a.function=init을 선언이 불가하며 함수여야 합니다.
go.error.annotator.too.many.arguments.to.new=새로운 인수가 너무 많음
go.error.annotator.cannot.make.type={0} 생성 불가
go.error.annotator.argument.is.not.a.type={0} 은(는) 유형이 아닙니다.
go.error.annotator.missing.argument.to.make=생성할 인수 누락
go.error.annotator.non.integer.size.argument.to.make=생성할 정수가 아닌 크기 인수
go.error.annotator.non.integer.capacity.argument.to.make=생성할 정수가 아닌 용량 인수
go.error.annotator.missing.len.argument.to.make=생성할 len 인수 누락
go.error.annotator.too.many.arguments.to.make=생성할 인수가 너무 많음
go.error.annotator.cyclic.definition.detected=탐지된 순환 정의
go.error.annotator.use.of.package.without.selector=선택자 없는 패키지 ''{0}'' 사용
go.error.annotator.unexpected.assign.operator=예기치 않은 {0},\:\=, \= 또는 쉼표 예상
go.error.annotator.invalid.constant.type=잘못된 상수 유형
go.error.annotator.const.initializer.is.not.a.constant=const 이니셜라이저 ''{0}''은(는) 상수가 아닙니다.
go.error.annotator.missing.value.in.const.declaration=const 선언에서 누락된 값
go.error.annotator.extra.expression.in.const.declaration=const 선언의 추가 표현식
go.error.annotator.conversion.in.defer.or.go={0} 에는 변환이 아닌 함수 호출이 필요합니다
go.error.annotator.function.not.permitted.in.defer.or.go=이 함수는 {0} 구문에서 호출될 수 없습니다.
go.error.annotator.parenthesized.expression.in.defer.or.go={0} 표현식은 소괄호 안에 포함되어야 합니다.
go.error.annotator.defer.or.go.requires.function.call={0} 표현식은 함수 호출이어야 합니다.
go.error.annotator.evaluated.but.not.used=평가되었지만 사용되지 않는 {0}
go.error.annotator.cannot.declare.in.post.statement.of.for.loop=for 루프의 후행 문에서 선언할 수 없습니다.
go.error.annotator.too.many.variables.in.range=범위 안에 변수가 너무 많습니다.
go.error.annotator.named.and.unnamed.parameters={0} 이(가) 이름이 지정된 매개변수 ''{1}'' 및 이름 없는 매개변수 ''{1}'' 모두 포함합니다.
go.error.annotator.named.and.unnamed.return.parameters={0} 이(가) 이름이 지정된 매개변수 ''{1}'' 및 이름 없는 반환 매개변수 ''{1}'' 모두 포함합니다.
go.error.annotator.can.only.use.triple.dot.as.final.argument=목록에서 마지막 인수로 ''...'' 만 사용 가능합니다
go.error.annotator.cannot.use.triple.dot.for.output.arguments=출력 인수 목록에서 ''...''는 사용 불가합니다.
go.error.annotator.method.name.in.interface.cannot.be.blank=인터페이스의 메서드 이름을 공백으로 둘 수 없습니다.
go.error.annotator.digit.separator.is.not.supported=자릿수 분리자는 Go {0}부터 지원됩니다.
go.error.annotator.binary.digits.are.not.supported=2진수는 Go {0}부터 지원됩니다.
go.error.annotator.octal.prefix.is.not.supported=8진수 접두사는 Go {0}부터 지원됩니다.
go.error.annotator.hex.floats.are.not.supported=16진수 부동소수점은 Go {0}부터 지원됩니다.
go.error.annotator.closing.single.quote.expected=닫기 '' 기대
go.error.annotator.empty.rune.literal=빈 rune 리터럴
go.error.annotator.too.many.characters.in.rune.literal=rune 리터럴에 문자가 너무 많습니다
go.error.annotator.invalid.select.assignment=선택 할당은 오른쪽에서 수신해야 합니다.
go.error.annotator.invalid.select.case=선택 case 문은 receive 문이거나 receive 문을 전송 또는 할당해야 합니다.
go.error.annotator.cannot.reassign.a.constant=상수를 다시 할당할 수 없습니다.
go.error.annotator.no.new.variables=\:\= 왼쪽에 새 변수가 없습니다.
go.error.annotator.assignment.count.mismatch=할당 count 문 불일치\: {0} \={1}
go.error.annotator.cannot.assign.to.expression={0}에 할당할 수 없습니다.
go.error.annotator.multiple.defaults={0}의 여러 디폴트 값
go.error.annotator.new.line.in.string=문자열의 새 줄
go.error.annotator.bad.octal.escape=8진 이스케이프 세 개의 8진수를 포함해야 하며 첫 번째 8진수는 3 이하의 값이어야 합니다.
go.error.annotator.invalid.hex.escape.sequence.syntax=\\x 다음에 16진수 2개가 있어야 합니다.
go.error.annotator.invalid.unicode.escape.sequence.syntax=\\u 다음에 16진수 4개가 있어야 합니다.
go.error.annotator.invalid.long.unicode.escape.sequence.syntax=\\U 다음에 16진수 8개가 있어야 합니다.
go.error.annotator.invalid.escape.sequence=잘못된 이스케이프 시퀀스
go.error.annotator.invalid.unicode.code.point=잘못된 유니코드 코드포인트
go.error.annotator.invalid.embedded.type=잘못된 유형 {0}\: typeName 또는 *typeName이어야 합니다.
go.error.annotator.embedded.type.cannot.be.a.pointer=임베디드 유형은 포인터가 될 수 없습니다.
go.error.annotator.embedded.type.cannot.be.a.pointer.to.interface=임베디드 유형은 인터페이스의 포인터가 될 수 없습니다.
go.error.annotator.cannot.call.pointer.method=''{0}'' 에서 포인터 메서드를 호출할 수 없음
go.error.annotator.type.parameters.are.not.supported=제네릭(유형 매개변수에 대한 실험적 지원)이 비활성화되었습니다
go.go.mod.error.annotator.no.module.statement=파일에 모듈 구문이 없습니다.
go.go.mod.error.annotator.multiple.module.statements=파일의 여러 모듈 구문
go.go.mod.error.annotator.multiple.version.statements=파일의 여러 go 버전 구문
go.go.mod.error.annotator.missing.dependency=종속성 누락
go.go.mod.error.annotator.unresolved.dependency=해결되지 않는 종속성
go.go.mod.error.module.version.expected=모듈 버전이 필요합니다
go.terms.duplicate=중복
go.terms.duplicated.case=case 중복
go.terms.duplicated.default=default 중복
go.terms.version.statement=버전 구문
go.terms.module.statement=모듈 구문
go.terms.empty.declaration=빈 선언
go.terms.shadowed.declaration=가려진 선언
go.terms.comment=Comentario
go.terms.variable=변수
go.terms.method=메서드
go.terms.closure=클로저
go.terms.import=가져오기
go.terms.parameter=매개 변수
go.terms.receiver=리시버
go.terms.import.alias=import 문 별칭
go.terms.label=라벨
go.terms.package=패키지
go.terms.package.statement=패키지 구문
go.terms.package.capitalized=패키지
go.terms.map=맵
go.terms.chan=chan
go.terms.string=문자열
go.terms.array=배열
go.terms.declaration=선언
go.terms.statement=구문
go.terms.semicolon=세미콜론
go.terms.comma=쉼표
go.terms.go.statement=go 구문
go.terms.case=케이스
go.terms.slice=슬라이스
go.terms.pointer=포인터
go.terms.struct=struct
go.terms.anonymous.field=익명 필드
go.terms.type.alias=유형 별칭
go.terms.global.variable=전역 변수
go.terms.constant=상수
go.terms.global.constant=전역 상수
go.terms.field=필드
go.terms.type=유형
go.terms.type.pluralized=유형
go.terms.interface=인터페이스
go.terms.function=함수
go.terms.method.specification=메서드 사양
go.refactoring.implement.methods.command={0} 구현
go.refactoring.implement.methods.prompt=구현할 인터페이스 선택\:
go.refactoring.implement.methods.checkbox=비-&&프로젝트(&N)
go.refactoring.implement.methods.dummy.background.updater.task.title=작업 중...
go.refactoring.implement.methods.create.type.name=유형 생성...
go.refactoring.declarations.separator=선언
go.refactoring.exported.column.name=내보냄
go.refactoring.extract.interface.caret.should.be.inside.type.error.message=캐럿이 리팩터링할 유형 내부에 있어야 합니다.
go.refactoring.unexported.validation.message=더 이상 {1}에서 비노출 {0}(으)로 액세스할 수 없습니다.
go.refactoring.redeclare.validation.message={0}에서 동일한 이름의 {1}을(를) 다시 선언합니다.
go.refactoring.less.than.one.declaration.validation.message=하나 이상의 선언을 선택해야 합니다.
go.refactoring.empty.target.directory.path.validation.message=대상 디렉터리 경로는 공백으로 둘 수 없습니다.
go.refactoring.empty.target.file.name.validation.message=대상 파일 이름은 공백으로 둘 수 없습니다.
go.refactoring.incorrect.file.name.validation.message=대상 파일 이름이 올바르지 않습니다.
go.refactoring.empty.target.package.validation.message=대상 패키지 이름은 공백으로 둘 수 없습니다.
go.refactoring.incorrect.package.name.validation.message=대상 패키지 이름이 올바르지 않습니다.
go.refactoring.non.writable.directory.validation.message=대상 디렉터리는 쓰기 가능하지 않습니다.
go.refactoring.non.writeable.file.validation.message=대상 파일은 쓰기 가능한 파일이 아닙니다.
go.refactoring.different.package.name.validation.message=패키지 이름은 기존 파일과 다를 수 없습니다.
go.refactoring.non.go.file.validation.message=대상 파일은 Go 파일이어야 합니다.
go.refactoring.file.chooser.dialog.title=대상 디렉터리 또는 파일 선택
go.refactoring.file.label=파일로\:
go.refactoring.failed.to.create.directory.error.message=''{0}'' 디렉터리를 찾거나 생성할 수 없습니다.
go.refactoring.failed.to.create.file.for.package.error.message=\ ''{1}'' 패키지용 ''{0}'' 파일을 찾거나 생성할 수 없습니다.
go.refactoring.refactor.action=리팩터링
go.refactoring.rename.action=이름 바꾸기
go.refactoring.inline.defined.in.goroot.error.message=GOROOT에 정의된 변수 {0}
go.refactoring.inline.no.initializer.error.message={0} {1}에 이니셜라이저가 없습니다
go.refactoring.inline.no.parameter.value.error.message=매개변수 {0}의 값을 찾을 수 없습니다
go.refactoring.inline.defined.in.multi.value.context.error.message=다중 값 컨텍스트로 정의된 {0} {1}
go.refactoring.inline.reassigned.error.message={0}이(가) 다시 대입되었습니다
go.refactoring.inline.found.usages.in.goroot.message=GOROOT에서 ''{1}''의 {0, choice,1\#1개 사용 위치|2\#{0}개 사용 위치} 발견.
go.refactoring.inline.kept.definition.and.inlined.message=정의를 유지했습니다{0, choice, 0\#|1\# 그리고 프로젝트와 GOPATH에서 1개의 사용위치를 인라인했습니다|2\# 그리고 프로젝트와 GOPATH에서 {0}개의 사용 위치를 인라인했습니다.}
go.refactoring.inline.cannot.inline.variadic.parameter=varargs 매개변수의 인라인화는 지원되지 않습니다
go.refactoring.change.signature.reuse.types.checkbox=재사용 유형
go.refactoring.change.signature.result.parameters.tab.title=결과 매개변수
go.refactoring.change.signature.not.legal.identifier.validation.message=''{0}''은(는) 정규 식별자가 아닙니다.
go.refactoring.change.signature.named.and.unnamed.parameters.validation.message=이름이 지정된 매개변수와 이름 없는 매개변수는 동시에 허용되지 않습니다.
go.refactoring.change.signature.parameter.without.type.validation.message={0,number,ordinal} 매개변수에는 유형이 포함되어야 합니다.
go.refactoring.change.signature.used.multiple.times.validation.message=''{0}''이(가) 여러 번 사용됩니다.
go.refactoring.change.signature.variadic.parameter.in.result.validation.message=가변 매개변수는 결과에 허용되지 않습니다.
go.refactoring.change.signature.variadic.is.not.last.validation.message=가변 매개변수는 항상 마지막이어야 합니다.
go.refactoring.change.signature.method.specification.and.implementations.option=메서드 사양 및 모든 구현 {0}
go.refactoring.change.signature.current.method.option=현재 메서드만 {0}
go.refactoring.change.signature.target.not.found.error.message=캐럿이 리팩터링할 함수 또는 메서드 이름의 위치에 있어야 합니다.
go.refactoring.change.signature.function.will.not.start.application.validation.message=이제 {0} 함수는 애플리케이션을 시작하지 않습니다.
go.refactoring.change.signature.function.will.not.perform.initialization.validation.message=이제 {0} 함수는 초기화를 수행하지 않습니다.
go.refactoring.change.signature.renamed.parameter.validation.message.part=이름이 변경된 매개변수
go.refactoring.change.signature.new.parameter.validation.message.part=새 매개변수
go.refactoring.extract.interface.rename.type.and.use.interface.radio.button=원본 유형 이름 변경 및 가능한 경우 인터페이스 사용(&E)
go.refactoring.extract.interface.rename.type.spec.label=유형 사양의 이름을 다음으로 변경\:
go.refactoring.extract.interface.unexported.method.specification.validation.message={0} {1} 은(는) 비노출 메서드 사양을 구현하지 않습니다.
go.refactoring.extract.interface.unexported.not.be.accessible.validation.message={1}에서 비노출 {0}(으)로 액세스할 수 없습니다.
go.refactoring.extract.interface.empty.type.name.validation.message=유형 이름은 공백으로 둘 수 없습니다.
go.refactoring.extract.interface.incorrect.type.name.validation.message=유형 이름이 올바르지 않습니다.
go.refactoring.introduce.extract.title=추출
go.refactoring.introduce.extract.function.title=함수 추출
go.refactoring.introduce.extract.function.command=함수 추출
go.refactoring.introduce.extract.method.command=메서드 추출
go.refactoring.introduce.extract.variable.command=변수 추출
go.refactoring.introduce.extract.method.or.function.title=메서드 또는 함수 추출
go.refactoring.introduce.write.command=함수 추출 중 명령어 작성
go.refactoring.introduce.range.contains.defer.message=선택한 범위에는 추출 중 순서가 다시 정렬될 수 있는 ''defer'' 문이 포함되어 있습니다.
go.refactoring.introduce.receiver.without.name.error.message=리시버에는 이름이 있어야 합니다.
go.refactoring.introduce.continue.statement.interrupts.execution.flow.error.message=continue 구문이 실행 흐름을 방해할 때  리팩터링이 지원되지 않습니다.
go.refactoring.introduce.label.reference.interrupts.execution.flow.error.message=라벨 참조가 실행 흐름을 방해할 때  리팩터링이 지원되지 않습니다.
go.refactoring.introduce.label.definition.selected.with.all.references.error.message=라벨 정의가 모든 참조와 함께 선택된 경우에만 리팩터링이 지원됩니다.
go.refactoring.introduce.does.not.return.value.error.message={0} 표현식은 값을 반환하지 않습니다.
go.refactoring.introduce.not.constant.value.error.message=표현식 {0} 이(가) 상수 값이 아닙니다.
go.refactoring.introduce.method.with.receiver.renderer={0} receiver가 있는 메서드
go.refactoring.introduce.type.dialog.title=타입 삽입
go.refactoring.introduce.type.command=타입 삽입
go.refactoring.introduce.type.chooser.title=타입 선택
go.refactoring.move.affect.initialization.order.validation.message={0} 함수 이동이 애플리케이션 초기화 순서에 영향을 줄 수 있습니다.
go.refactoring.move.break.initialization.validation.message={0} 변수 이동은 {1} 변수 초기화를 중단합니다.
go.refactoring.move.value.will.change.validation.message={1}을(를) 통해 선언될 때 {0} 상수 값이 변경됩니다.
go.refactoring.move.function.will.not.start.application.validation.message=이제 {1} 패키지 외부의 {0} 함수는 애플리케이션을 시작하지 않습니다.
go.refactoring.move.type.will.not.implement.interface.validation.message=이제 {0} 유형은 {1} 인터페이스를 구현하지 않습니다.
go.refactoring.move.exported.function.will.not.start.application.validation.message=이제 비노출 함수 {0} 은(는) 애플리케이션을 시작하지 않습니다.
go.refactoring.move.exported.function.will.not.perform.initialization.validation.message=이제 노출 함수 {0} 은(는) 초기화를 수행하지 않습니다.
go.refactoring.move.type.will.become.non.local.for.method.validation.message={0} 유형이 {1} 메서드에 대한 비 로컬 유형이 됩니다.
go.refactoring.move.required.by.validation.message={0}에 필요
go.refactoring.move.file.should.differ.validation.message=대상 파일은 소스 파일과 다를 수 있습니다.
go.refactoring.rename.looking.for.anonymous.field.usages.progress.title=익명 필드의 사용 위치 검색 중
go.refactoring.rename.looking.for.method.usages.progress.title=메서드 사용 위치 검색 중
go.refactoring.rename.package.title=패키지 이름도 ''{0}''에서 ''{1}''(으)로 변경하시겠어요?
go.refactoring.rename.test.file.title=테스트 파일 ''{0}'' 의 이름도 변경하시겠어요?
go.refactoring.rename.production.file.title=프로덕션 파일 ''{0}'' 의 이름도 변경하시겠어요?
go.refactoring.rename.directory.message=패키지 디렉터리 ''{0}'' 이름도 변경하시겠어요?
go.refactoring.rename.current.receiver.option=현재 리시버 이름만 변경
go.refactoring.rename.all.receivers.option=모든 리시버 이름 변경
go.find.usages.of.interface.methods.dialog.base.methods.checkbox=기본 메서드(&B)
go.find.usages.of.interface.methods.dialog.title=인터페이스 메서드의 사용 위치를 검색하시겠어요?
go.find.usages.of.interface.methods.dialog.message=''{0}'' 유형은 인터페이스를 구현하며 ''{1}'' 메서드는 메서드를 재정의합니다. 인터페이스 메서드의 사용 위치를 검색하시겠어요?
go.find.usages.of.interface.methods.notification.title=인터페이스 메서드의 사용 위치를 검색 중
go.find.usages.of.interface.methods.notification.show.options.text={0} 옵션 표시
go.find.usages.show.usages.in.comments.text=주석 내 사용 위치 표시
go.find.usages.show.usages.in.comments.description=주석 내 요소의 사용 위치 표시
go.code.smells.commit.local.paths=로컬 경로 커밋은 이식이 불가능할 수도 있습니다.
go.init.with.zero.value=제로 값으로 초기화
go.usage.type.return.type=반환 유형
go.usage.type.parameter.declaration=매개변수 선언
go.usage.type.struct.initialization=구조체 초기화
go.usage.type.import=가져오기
go.usage.type.variable.declaration=변수 선언
go.usage.type.field.declaration=필드 선언
go.usage.type.const.declaration=상수 선언
go.usage.type.receiver=리시버
go.usage.type.type.assertion=유형 어설션
go.usage.type.type.alias=유형 별칭
go.usage.type.type.conversion=유형 변환
go.inspection.problem.unmarshal.argument.must.be.a.pointer=이 인수에 포인터 유형이 있어야 합니다
go.enable.template.plugin.notification.text=html/templates 패키지에서 강조 표시, 코드 완성 기능, 탐색 기능을 향상시키려면 Go 템플릿을 활성화하세요
go.enable.template.plugin.action.text=플러그인 활성화
go.install.template.plugin.notification.text=html/templates 패키지에서 강조 표시, 코드 완성 기능, 탐색 기능을 향상시키려면 Go 템플릿을 설치하세요
go.install.template.plugin.action.text=플러그인 설치
go.ignore.template.plugin.action.text=이 프로젝트에서 플러그인 무시
go.inspection.problem.range.var.copies.lock=범위 변수 {0} 이(가) 잠금을 복사합니다\: {1}
go.inspection.problem.function.passes.lock.by.value={0} 이(가) 값으로 잠금을 전달합니다\: {1}
go.inspection.problem.return.copies.lock.value=반환이 lock 값을 복사합니다\: {0}
go.inspection.problem.call.copies.lock.value={0} 호출이 lock 값을 복사합니다\: {1}
go.inspection.problem.literal.copies.lock.value=리터럴이 lock 값을 {0} 에 복사합니다\: {1}
go.inspection.problem.assignment.copies.lock.value=대입이 lock 값을 {0} 에 복사합니다\: {1}
go.inspection.problem.variable.declaration.copies.lock.value=변수 선언이 lock 값을 {0} 에 복사합니다\: {1}
go.inspection.problem.invalid.second.argument.to.errors.as={0} 의 두 번째 인수가 인터페이스 또는 오류를 구현하는 유형을 가르키는 포인터여야 합니다
go.inspection.problem.expression.is.too.small.for.shift={0}({1} 비트) 이(가) {2} 시프트로 너무 작음
go.inspection.problem.method.has.non.standard.signature=메서드 {0} 에 시그니처 {1} 이(가) 있어야 합니다
go.inspection.problem.direct.assignment.to.atomic.value=atomic 값에 직접 대입
go.inspection.problem.cannot.take.address.of.non.addressable.operand=주소를 갖지 않는 피연산자의 주소를 취할 수 없음
go.inspection.problem.assignment.to.method.receiver.propagates.only.to.callees=메서드 리시버 대입은 호출자가 아닌 피호출자에만 전달됩니다
go.inspection.problem.assignment.to.method.receiver.doesnt.propagate=메서드 리시버 대입은 다른 호출로 전달되지 않습니다
go.inspection.problem.expression.can.be.simplified.to.other={0} 을(를) {1} (으)로 단순화할 수 있습니다
go.inspection.problem.condition.is.always.true.or.false=조건 {0} 이(가) 항상 {1} 입니다
go.inspection.problem.conversion.from.int.to.string={0} 을(를) {1} (으)로 변환하면 정수 값을 코드 포인트로 해석합니다
go.inspection.problem.expression.is.always.true.or.false=표현식 {0} 이(가) 항상 {1} 입니다
go.inspection.problem.expression.can.be.simplified=표현식을 단순화할 수 있습니다.
go.inspection.problem.possible.malformed.build.comment=+build 주석의 형식이 잘못되었을 가능성이 있습니다
go.inspection.problem.wrong.location.of.build.comment=빌드 주석은 패키지 절 전에 위치해야 하며 다음에 빈 줄이 있어야 합니다
go.inspection.problem.usage.of.cgo.in.tests=테스트에서 cgo 사용이 지원되지 않습니다.
go.inspection.problem.comment.should.start.with.whitespace=주석은 공백으로 시작해야 합니다
go.inspection.problem.defer.is.called.in.a.for.loop=리소스 누수가 있을 가능성이 있습니다, {0} 이(가) {1} 루프에서 호출되었습니다
go.inspection.problem.deprecated.is.still.used=더 이상 사용되지 않는 {0} 이(가) 아직도 사용되었습니다
go.inspection.problem.reference.is.deprecated={0} 은(는) 더 이상 사용되지 않습니다
go.inspection.problem.division.by.zero=0으로 나누기
go.inspection.problem.duplicate.case=case {0} 중복
go.inspection.problem.variable.repeated.on.left.side={0} 이(가)\:\= 왼쪽에 반복됩니다
go.inspection.problem.name.redeclared.as.imported.package={0} 이(가) 가져온 패키지 이름으로 다시 선언됨
go.inspection.problem.name.collides.with.name.declared.in.this.package={0} 이(가) 이 패키지에 선언된 이름과 충돌합니다
go.inspection.problem.label.already.defined=라벨 {0} 이(가) 이미 정의되어 있습니다
go.inspection.problem.duplicate.argument=인수 {0} 중복
go.inspection.problem.name.redeclared.in.this.function={0} 이(가) 이 함수에서 다시 선언되었습니다
go.inspection.problem.duplicate.field=필드 {0} 중복
go.inspection.problem.type.has.same.named.field.and.method=유형 {0} 에 이름이 {1} 인 필드 및 메서드 둘 다 있습니다
go.inspection.problem.method.redeclared=메서드가 {0} 을(를) 다시 선언합니다
go.inspection.problem.type.has.both.field.and.method.with.name=유형 {0} 에 이름이 {1} 인 필드 및 메서드 둘 다 있습니다
go.inspection.problem.duplicate.method=메서드 {0} 중복
go.inspection.problem.name.redeclared.in.this.package={0} 이(가) 이 패키지에서 다시 선언됨
go.inspection.problem.name.redeclared.in.this.block={0} 이(가) 이 블록에서 다시 선언됨
go.inspection.problem.bad.error.string=오류 문자열은 대문자로 처리되거나 문장 부호로 끝날 수 없습니다
go.inspection.problem.exported.element.should.have.comment=노출 {0} {1} 에 주석이 있어야 하거나 비노출이어야 합니다
go.inspection.problem.exported.function.with.unexported.return.type=비노출 반환 유형이 있는 노출 {0}
go.inspection.problem.exported.var.should.have.its.own.declaration=노출 변수 {0} 에 자체 선언이 있어야 합니다
go.inspection.problem.exported.const.should.have.its.own.declaration=노출 상수 {0} 에 자체 선언이 있어야 합니다
go.inspection.problem.missing.argument.to.conversion={0} (으)로의 변환 인수 누락\: {1}
go.inspection.problem.too.many.arguments.to.conversion={0} (으)로의 변환에 인수가 너무 많음\: {1}
go.inspection.problem.too.many.arguments.in.call={0} 호출에 인수가 너무 많음
go.inspection.problem.not.enough.arguments.in.call={0} 호출에 인수가 부족함
go.inspection.problem.name.collides.with.imported.package={0} {1} 이(가) 가져온 패키지 이름과 충돌합니다
go.inspection.problem.impossible.type.assertion=불가능한 유형 어설션\: {0} 이(가) {1} 을(를) 구현하지 않습니다
go.inspection.problem.impossible.interface.assertion={0} 에서 {1} (으)로의 인터페이스 어설션은 불가능합니다. 모호함\: {2}
go.inspection.problem.impossible.type.switch.case=불가능한 유형 switch case\: {0} 이(가) {1} 을(를) 구현하지 않습니다
go.inspection.problem.infinite.for.loop=무한 {0} 루프
go.inspection.problem.cannot.convert.expression=유형 {0} 표현식을 유형 {1} (으)로 변경할 수 없음
go.inspection.problem.cannot.convert.nil=''nil''을 타입 {0}(으)로 변환할 수 없습니다
go.inspection.problem.invalid.conversion=유효하지 않은 변환
go.inspection.problem.cannot.slice={0}(유형 {1}) 을(를) 슬라이스할 수 없음
go.inspection.problem.type.does.not.support.indexing=유효하지 않은 연산\: {0} (유형 {1} 이(가) 색인화를 지원하지 않습니다)
go.inspection.problem.invalid.low.high.indices=유효하지 않은 색인 값, low <\= high여야 함
go.inspection.problem.invalid.low.high.max.indices=유효하지 않은 색인 값, ow <\= high <\= max여야 함
go.inspection.problem.invalid.slice.index=유효하지 슬라이스 색인 {0}({1})
go.inspection.problem.invalid.iterable.index=잘못된 {0} 색인 {1}({2})
go.inspection.problem.must.be.representable.by.int=값을 'int' 타입으로 표시할 수 있어야 합니다
go.inspection.problem.must.be.of.integer.type=정수 타입이어야 합니다
go.inspection.problem.must.be.non.negative=음수가 아니어야 합니다
go.inspection.problem.out.of.bounds.for.string={0}바이트 문자열 범위를 벗어납니다
go.inspection.problem.out.of.bounds.for.array={0}요소 배열 범위를 벗어납니다
go.inspection.problem.invalid.receiver.type=유효하지 않은 리시버 유형 {0} ({1} 은(는) {2} 입니다)
go.inspection.problem.invalid.receiver.unnamed.type=이름 없는 유형
go.inspection.problem.invalid.receiver.interface.type=인터페이스 유형
go.inspection.problem.invalid.receiver.pointer.type=포인터 유형
go.inspection.problem.cannot.define.new.methods.on.non.local.type=비 로컬 유형 {0} 에서 새 메서드를 정의할 수 없음
go.inspection.problem.use.of.internal.package.is.not.allowed=내부 패키지 사용은 허용되지 않습니다
go.inspection.problem.use.of.vendored.package.is.not.allowed=벤더 패키지 사용이 허용되지 않습니다
go.inspection.problem.must.be.imported.as={0} (으)로 가져와야 함
go.inspection.problem.at.is.not.allowed.in.import.paths=@은 가져오기 경로에서 허용되지 않습니다
go.inspection.problem.cannot.import.absolute.path=절대 경로를 가져올 수 없음
go.inspection.problem.cannot.import.builtin.package=''builtin'' 패키지를 가져올 수 없음
go.inspection.problem.non.canonical.import.path=비표준 가져오기 경로\: {0} 은(는) {1} 이어야/여야 합니다
go.inspection.problem.build.constraints.exclude.all.go.files=빌드 제약이 {0} 내 모든 Go 파일을 제외합니다
go.inspection.problem.path.is.a.program.not.an.importable.package={0} 은(는) 프로그램으로 가져올 수 있는 패키지가 아닙니다
go.inspection.problem.found.several.packages={1} 에서 여러 패키지 [{0}] 발견
go.inspection.problem.no.non.test.go.files={0} 내 비 테스트 Go 파일 없음
go.inspection.problem.cannot.import={0} 을(를) 가져올 수 없음
go.inspection.problem.cannot.rename.import.c=import ''C''의 이름을 변경할 수 없음
go.inspection.problem.path.imports.package.with.invalid.import.comment={0} 이(가) 유효하지 않은 가져오기 주석이 있는 패키지를 가져옵니다
go.inspection.problem.path.imports.package.that.expects.canonical.import={0} 이(가) import "{1}" 을(를) 요구하는 패키지를 가져옵니다
go.inspection.problem.invalid.composite.literal.type=유효하지 않은 복합 리터럴 유형\: {0}
go.inspection.problem.too.few.values=값이 너무 적습니다
go.inspection.problem.too.many.values=값이 너무 많음
go.inspection.problem.cannot.assign.value.to.blank.field=값을 빈 필드로 필드로 할당할 수 없음
go.inspection.problem.cannot.assign.value.to.unexported.field=값을 비노출 필드 {0} (으)로 할당할 수 없음
go.inspection.problem.missing.type.in.composite.literal=복합 리터럴 내 유형 누락
go.inspection.problem.mixture.of.field=필드 혼합\: 값 및 값 이니셜라이저
go.inspection.problem.invalid.field.name=유효하지 않은 필드 이름
go.inspection.problem.missing.expression=표현 누락
go.inspection.problem.missing.key.in.map.literal=map 리터럴의 누락된 키
go.inspection.problem.duplicate.key.in.map.literal=맵 리터럴 내 키 {0} 중복
go.inspection.problem.cannot.convert.known.value.to.type={0} 을(를) {1} (으)로 변환할 수 없음
go.inspection.problem.cannot.convert.value.to.type=값을 {0} (으)로 변환할 수 없음
go.inspection.problem.index.must.be.a.non.negative.integer.constant=색인 {0} 이(가) 양수 integer 상수여야 합니다
go.inspection.problem.negative.index=음수 색인\: {0}
go.inspection.problem.index.out.of.bounds=색인이 범위를 벗어남\: {0}
go.inspection.problem.duplicate.index=색인 중복\: {0}
go.inspection.problem.reference.jumps.over.declaration={0} 이(가) {1} 선언을 건너뜁니다
go.inspection.problem.missing.return=함수 끝에 반환 누락
go.inspection.problem.need.trailing.comma.in.composite.literal=복합 리터널에는 줄 바꿈 전 후행 쉼표가 필요합니다
go.inspection.problem.need.trailing.comma.in.parameter.list=매개변수 목록에는 줄 바꿈 전 후행 쉼표가 필요합니다
go.inspection.problem.need.trailing.comma.in.argument.list=인수 목록에는 줄 바꿈 전 후행 쉼표가 필요합니다
go.inspection.problem.multiple.packages.in.directory=디렉터리 내 여러 패키지\: {0}
go.inspection.problem.name.starts.with.package.name=이름은 패키지 이름으로 시작됩니다.
go.inspection.problem.cannot.call.non.function=함수가 아닌 {0}(유형 {1}) 을(를) 호출할 수 없음
go.inspection.problem.empty.slice.declaration.via.literal=리터럴을 통한 빈 슬라이스 선언
go.inspection.problem.function.does.not.take.writer=함수는 {0} 을(를) 취할 수 없으나 첫 번째 인수가 {1} 입니다
go.inspection.problem.possible.formatting.directive={0} 에 서식 지정 지시문이 있을 가능성이 있습니다
go.inspection.problem.last.argument.ends.with.redundant.newline={0} 의 마지막 인수가 불필요한 줄 바꿈으로 끝납니다
go.inspection.problem.return.value.has.a.function.type={0} 의 반환 값에 함수 유형이 있습니다
go.inspection.problem.argument.is.not.a.function.call=인수 {0} 이(가) 함수 호출이 아닙니다
go.inspection.problem.argument.causes.recursive.call.to.string.method=인수 {0} 이(가) {1} 메서드 재귀 호출을 일으킵니다
go.inspection.problem.receiver.has.generic.name=리시버에 제네릭 이름이 포함됩니다.
go.inspection.problem.receiver.names.are.different=리시버 이름이 다릅니다
go.inspection.problem.invalid.recursive.type=유효하지 않은 재귀 {0} {1}{2}
go.inspection.problem.redundant.blank.expression=불필요한 {0} 표현식
go.inspection.problem.redundant.comma=중복된 쉼표
go.inspection.problem.possibly.redundant.type.conversion=불필요한 유형 변환이 있을 가능성이 있습니다
go.inspection.problem.redundant.type.conversion=중복 형식 변환
go.inspection.problem.redundant.alias=불필요한 별칭
go.inspection.problem.redundant.parentheses=불필요한 소괄호
go.inspection.problem.redundant.index=불필요한 색인 {0}
go.inspection.problem.redundant.semicolon=중복 세미콜론
go.inspection.problem.redundant.type=불필요한 유형
go.inspection.problem.name.collides.with.builtin={0} {1} 이(가) 기본 제공 {2} 와(과) 충돌합니다
go.inspection.problem.value.is.assigned.to.itself={0} 값이 자체 할당됩니다
go.inspection.problem.self.import.is.not.allowed=자체 가져오기가 허용되지 않습니다
go.inspection.problem.declaration.shadows.declaration={0} 선언이 선언을 가립니다
go.inspection.problem.declaration.shadows.declaration.at={0} 선언이 {1} 의 선언을 가립니다
go.inspection.problem.eliminate.snake.case=스네이크 표기법 제거
go.inspection.problem.use.camelcase.instead.of.snake.case=스네이크 표기법 대신 낙타 표기법 사용
go.inspection.problem.mismatched.types.byte.and.string=일치하지 않는 유형\: 바이트 및 문자열
go.inspection.problem.bad.count.argument.of.strings.replace={0} 의 Count 인수는 {1} 일 수 없습니다
go.inspection.problem.fields.are.assigned.without.explicit.names=필드가 명시적 이름 없이 할당되었습니다
go.inspection.problem.wrong.example.signature=잘못된 예시 시그니처
go.inspection.problem.wrong.test.signature=잘못된 테스트 시그니처
go.inspection.problem.cannot.use.underscore.as.value={0} 을(를) 값으로 사용할 수 없음
go.inspection.problem.unhandled.error=처리되지 않는 오류
go.inspection.problem.unit.specific.suffix=유닛 중심 접미사 {0}
go.inspection.problem.unnecessarily.exported.element=불필요하게 노출된 {0} {1}
go.inspection.problem.unreachable.code=도달할 수 없는 코드
go.inspection.problem.imports.are.not.sorted=import 문이 정렬되지 않았습니다
go.inspection.problem.unused.result=사용되지 않는 결과\: {0}
go.inspection.problem.unused.import=사용하지 않는 import
go.inspection.problem.assignment.used.as.value={0} 이(가) 가밧으로 사용됨
go.inspection.problem.no.placeholders.in.format.string=서식 문자열에 자리표시자가 없음
go.inspection.problem.too.many.arguments.for.format.string=서식 문자열에 대한 인수가 너무 많음\: 필요 \={0}, 실제 \={1}
go.inspection.problem.verb.will.ignore.flag=동사가 {0} 플래그{1} 을(를)무시합니다
go.inspection.problem.verb.will.ignore.flags=동사가 {0} 플래그{1} 을(를) 무시합니다
go.inspection.problem.placeholder.syntax.error=자리표시자 구문 오류{0}
go.inspection.problem.this.verb.can.be.used.only.in.fmt.errorf=이 동사는 {0} 호출{1} 에서 사용될 수 있습니다
go.inspection.problem.this.verb.can.be.used.only.once.in.a.format.string=이 동사는 서식 문자열{0} 에서 한 번만 사용될 수 있습니다
go.inspection.problem.fmt.parameter.with.non.integer.expression={0,choice,0\#너비|1\#정확성|2\#동사}이(가) 정수가 아닌 표현식 {1}{2} (으)로 지정되었습니다
go.inspection.problem.no.argument.for.placeholder.part={0,choice,0\#너비|1\#정확성|2\#동사}에 대한 인수 없음\: 인수 색인 \={1}, 인수 개수 \={2}{3}
go.inspection.problem.unknown.verb=알 수 없는 동사 {0}{1}
go.inspection.problem.return.value.of.placeholder.argument.has.a.function.type=자리표시자 인수 반환 값에 함수 유형{0}이 있습니다
go.inspection.problem.placeholder.argument.is.not.a.function.call=자리표시자 인수가 함수 호출{0} 이(가) 아닙니다
go.inspection.problem.placeholder.argument.has.wrong.type=자리표시자 인수 {0} 에 잘못된 유형 {1}{2} 이(가) 있습니다
go.inspection.problem.placeholder.argument.causes.recursive.call.to.string=자리표시자 인수가 {0} 메서드{1} 재귀 호출을 일으킵니다
go.inspection.problem.index.zero.is.illegal=색인 값 [0] 이(가) 잘못되었습니다{0}
go.inspection.problem.invalid.use.of.triple.dot=유효하지 않은... 사용, 해당하는 매개변수가 비가변적임니다
go.inspection.problem.too.many.arguments.to.return=반환할 인수가 너무 많음
go.inspection.problem.not.enough.arguments.to.return=반환할 인수가 충분하지 않음
go.inspection.problem.invalid.argument.must.be.complex.type=유효하지 않은 인수 {0}(유형 {1})\: 복합 유형이어야 함
go.inspection.problem.expression.with.type={0}(유형 {1})
go.inspection.problem.non.bool.used.as.condition=bool이 아닌 {0} 이(가) 조건으로 사용됨
go.inspection.problem.cannot.range=범위가 {0} 을(를) 초과할 수 없음
go.inspection.problem.type.or.type={0} 또는 {1}
go.inspection.problem.nil.is.not.allowed={0} 은(는) 허용되지 않습니다. {1} 이어야/여야 함
go.inspection.problem.incompatible.types={0} 을(를) 유형 {1} (으)로 사용할 수 없음
go.inspection.problem.incompatible.types.in.switch=switch{1} 내 유효하지 않은 case {0}
go.inspection.problem.incompatible.types.in.switch.on.expression={1}{2} 의 switch 내 유효하지 않은 case {0}
go.inspection.problem.mismatched.types=\ (일치하지 않는 유형 {0} 및 {1})
go.inspection.problem.incompatible.types.some.methods.are.missing=일부 메서드가 누락되었기 때문에 유형이 {0} {1} 을(를) 구현하지 않습니다\: {2}{3}
go.inspection.problem.incompatible.types.ambiguous.methods={1}{2} 이(가) 모호하기 때문에 유형이 {0} 을(를) 구현하지 않습니다 {3}
go.inspection.problem.incompatible.method.has.pointer.receiver={1}{2} 메서드가 포인터 리시버이기 때문에 유형이 {0} 을(를) 구현하지 않습니다 {3}
go.inspection.problem.incompatible.need.method.have.method=유형이 {0}{1} 을(를) 구현하지 않습니다\: 메서드 {2} 필요\: 메서드 {3}{4} 있음
go.inspection.problem.incompatible.unexported.method=유형{1}이 내보내기되지 않은 메서드를 포함하며 다른 패키지{2}에 정의되어 있기때문에 {0} 을(를) 구현할 수 없습니다
go.inspection.problem.invalid.inc.dec.operation=유효하지 않은 연산\: {0} (비 숫자 유형 {1})
go.inspection.problem.cannot.assign.in.multiple.assignment=여러 대입에서 {0} 을(를) {1} 에 할당할 수 없음
go.inspection.problem.cannot.convert.nil.to.type={0} 을(를) 유형 {1} (으)로 변환할 수 없음
go.inspection.problem.invalid.unary.operation=유효하지 않은 연산\: {0}
go.inspection.problem.cannot.convert.constant=유효하지 않은 연산\: {0} (상수 {1} 을(를) 유형 {2} (으)로 변환할 수 없음)
go.inspection.problem.operator.not.defined=유효하지 않은 연산\: {0} ({2} 에 연산자 {1} 이(가) 정의되지 않았습니다)
go.inspection.problem.receive.from.send.only.type=유효하지 않은 연산\: {0} (전송 전용 유형 {1} 으로부터 수신)
go.inspection.problem.receive.from.non.chan.type=유효하지 않은 연산\: {0} (비 chan 유형 {1} 으로부터 수신)
go.inspection.problem.send.to.non.chan.type=유효하지 않은 연산\: {0} (비 chan 유형 {1} (으)로 전송)
go.inspection.problem.send.to.receive.only.type=유효하지 않은 연산\: {0} (수신 전용 유형 {1} (으)로 전송)
go.inspection.problem.invalid.operation.mismatched.types=유효하지 않은 연산\: {0} (일치하지 않는 유형 {1} 와(과) {2})
go.inspection.problem.shift.count.must.be.unsigned.integer=유효하지 않은 연산\: {0} (시프트 개수 유형 {1} 이(가) 부호 없는 정수여야 함)
go.inspection.problem.shift.count.must.be.integer=유효하지 않은 연산\: {0} (시프트 개수 유형 {1} 이(가) 정수여야 함)
go.inspection.problem.negative.shift.count=유효하지 않은 연산\: {0} (음수 시프트 개수)
go.inspection.problem.receiver.may.be.nil.in.call=리시버 {0} 이(가) 호출 내 {1} 일 수 있습니다
go.inspection.problem.method.call.may.lead.to.nil.pointer.dereference=메서드 호출 {0} 이(가) nil 포인터 역참조를 일으킬 수 있습니다
go.inspection.problem.function.call.may.lead.to.nil.pointer.dereference=함수 호출 {0} 이(가) nil 포인터 역참조를 일으킬 수 있습니다
go.inspection.problem.accessing.field.may.lead.to.nil.pointer.dereference=필드 {0} 액세스가 nil 포인터 역참조를 일으킬 수 있습니다
go.inspection.problem.send.may.block.because.of.nil.channel={0} 채널로 인해 접속이 차단될 수 있습니다
go.inspection.problem.receive.may.block.because.of.nil.channel={0} 채널로 인해 수신이 차단될 수 있습니다
go.inspection.problem.potential.nil.pointer.dereference=잠재적 nil 포인터 역참조
go.inspection.problem.assignment.to.entry.may.panic.because.of.nil.map={0} 맵으로 인해 항목에 대입하면 패닉이 발생할 수 있습니다
go.inspection.problem.indexing.may.panic.because.of.nil.slice={0} 슬라이스로 인해 색인화 시 패닉이 발생할 수 있습니다
go.inspection.problem.nil.loop.is.always.skipped={0} 이(가) 항상 {1} 이기 때문에 루프를 항상 건너뜁니다
go.inspection.problem.corresponding.error.may.be.not.nil=해당 오류 변수가 {2} 이(가) 아닐 수 있으므로 {0} 에 {1} 또는 다른 예기치 않은 값이 있을 수 있습니다
go.inspection.problem.condition.is.always.true.or.false.because.of.nil={1} 이(가) 항상 {2} 이기 때문에 조건이 항상 {0} 입니다
go.inspection.problem.condition.is.always.true.or.false.because.of.not.nil={1} 이(가) 항상 {2} 이(가) 아니기 때문에 조건이 항상 {0} 입니다
go.inspection.problem.unused.dependency=사용되지 않는 종속성
go.inspection.problem.contains=포함
go.inspection.problem.type.which.is.sync.locker=<code>sync.Locker</code> 유형 %s
go.inspection.problem.type.is.sync.locker=유형 %s 이(가) <code>sync.Locker</code> 입니다
go.module=모듈
go.modules.scratch.file.notification.text=모듈 컨텍스트 사용 중
go.run.target.executable.path.label=Go 실행 파일\:
go.run.target.gopath.label=GOPATH\:
go.run.target.version.label=버전\:
go.run.target.configure.label=Go 구성
go.run.target.run.label=Go 애플리케이션 실행
go.attach.directory.action.text=디렉터리 "{0}" 연결
go.detach.directory.action.text=디렉터리 "{0}" 연결 해제
go.remove.else=else 제거
go.unwrap.else=else 줄 바꿈 해제
go.unwrap.for=줄 바꿈 해제
go.unwrap.argument=인수 줄 바꿈 해제
go.unwrap.argument.description={0} 래핑 해제
go.unwrap.if=if 줄 바꿈 해제
go.settings.global.gopath.group.name=전역 GOPATH
go.settings.project.gopath.group.name=프로젝트 GOPATH
go.settings.module.gopath.group.name=모듈 GOPATH
go.dep.executable.path.label=Dep 실행 파일
go.quick.doc.package.label=패키지\:
go.quick.doc.resolved.value.label=해결된 값\:
go.quick.doc.methods.label=메서드\:
go.settings.folding.one.line.return.checkbox=한 줄 반환
go.settings.folding.one.line.panics.checkbox=한 줄 패닉
go.settings.folding.format.strings.checkbox=서식 문자열
go.settings.formatter.add.space.except.for.comments.label=다음으로 시작하는 주석 제외\:
go.settings.formatter.comment.prefix.cannot.be.empty.validation.message=주석 접두사가 공백일 수 없습니다
go.notification.go.root.is.not.defined.text=GOROOT가 정의되지 않았습니다
go.notification.go.root.is.incorrect.text=GOROOT가 올바르지 않습니다
go.refactoring.split.declarations.action.text=선언 분할
go.refactoring.split.declarations.with.iota.warning=선언 이니셜라이저는 `iota` 때문에 분할 후 다른 값이 됩니다.
go.refactoring.merge.declarations.action.text=병합 선언
go.refactoring.merge.declarations.with.iota.warning=선언 이니셜라이저는 `iota` 때문에 병합 후 다른 값이 됩니다.
go.inlays.show.unnamed.fields.in.structure.values.option=구조 값 내 이름 없는 필드 표시
go.inlays.show.return.parameters.option=반환 매개변수 표시
go.quick.settings.file.watchers.text=액션 저장 시...
go.quick.settings.file.watchers.description=go fmt, goimports 및 다른 명령 줄 도구 편집
go.file.watcher.go.imports.description=Go 파일에서 `goimports` 실행
go.file.watcher.go.fmt.description=Go 파일에서 `go fmt` 실행
go.file.watcher.golangci.description=Go 파일 디렉터리에서 `golangci-lint` 실행
go.before.check.in.show.fmt.error.button=세부사항(&D)...
go.completion.fill.all.fields.lookup.string=모든 필드 채우기...
go.completion.fill.selected.fields.lookup.string=선택한 필드 채우기...
go.modules.dependency.diagram=Go 모듈 종송성 다이어그램
go.converter.build.run.configuration.description=`Go Build` 실행 구성이 변경되었습니다. 기존 구성은 변환되어야 합니다.
go.converter.single.file.run.configuration.description=Go `Run single file` 실행 구성이 제거되었습니다. 기존 구성은 변환되어야 합니다.
go.converter.build.tags.description=Go 프로젝트 설정 저장 메커니즘이 변경되었으므로 프로젝트와 모듈이 업데이트되어야 합니다.
go.converter.sdk.description=Go 프로젝트 모델이 변경되었으므로 프로젝트와 모듈이 업데이트되어야 합니다
go.converter.project.model.description=Go 프로젝트 모델이 변경되었으므로 프로젝트와 모듈이 업데이트되어야 합니다
go.inspection.options.panel.import.path=가져오기 경로
go.inspection.options.panel.function.name=함수 이름
go.inspection.options.panel.string.methods=문자열 메서드
go.inspection.options.panel.reported.functions=보고된 함수/메서드\:
go.inspection.options.panel.receiver=리시버
go.inspection.options.panel.method.name=메서드 이름
go.inspection.options.panel.exclude=제외\:
go.structure.view.show.package.structure.action.text=패키지 구조 표시
go.structure.view.private.members.filter.text=private 멤버 표시
go.structure.view.exportability.sorter.text=내보내기 가능 여부로 정렬
go.structure.view.method.location={0}
go.sum.generated.sources.filter.notification.text=해당 파일은 Go 도구에서만 사용하도록 되어 있으므로 편집해서는 안됩니다. 변경하면 빌드 프로세스가 중단될 수 있습니다.
go.modules.background.task.updating.dependencies.title=Go 모듈 종속성 업데이트 중
go.modules.background.task.updating.dependencies.text=''go.mod'' {0,choice,0\#files|1\#file|2\#files}에서 {0} ''go list'' 실행 중
go.modules.unknown.dependencies.notification.text=모듈 종속성 전체 집합을 알 수 없음, 일부 Go 모듈 특정 기능이 제공되지 않을 수 있습니다.
go.modules.unknown.dependencies.notification.tooltip=네트워크 연결 이슈 또는 명시적 GOPROXY\=off로 인해 발생했을 수 있습니다
go.modules.unknown.dependencies.notification.retry=''{0}'' 다시 실행
go.modules.tree.structure.replaced=(대체됨)
go.modules.tree.structure.replacement=대체\: {0}
go.live.template.context.type.file.presentable.name=파일
go.live.template.context.type.type.presentable.name=유형
go.live.template.context.type.block.presentable.name=블록
go.live.template.context.type.expression.presentable.name=표현식
go.live.template.context.type.tag.presentable.name=태그
go.live.template.context.type.tag.literal.presentable.name=태그 리터럴
go.live.template.context.type.statement.presentable.name=구문
go.sdk.no.version.text=<no version>
go.edit.settings.action.description=Go 전용 {0} 편집
go.new.project.step.web.group.name=웹
go.new.project.step.other.group.name=Otros
project.files.and.vendor.scope.name=프로젝트 파일 및 벤더
go.project.configurable.name=Go
go.inspection.discarded.context.cancel.function=컨텍스트 누수를 피하기 위해 파기 함수가 아닌 취소 함수를 호출해야 합니다
go.inspection.function.returns.without.calling.context.cancel.function=이 취소 함수를 호출하지 않는 실행 경로가 있으며, 이는 컨텍스트 누수를 초래합니다
go.inspection.execution.ends.without.context.cancel.function.after.instruction=''{0}'' 함수를 호출하지 않고 이 지침 이후 실행이 종료될 수 있으며, 이는 컨텍스트 누수를 초래합니다
go.inspection.execution.ends.without.context.cancel.function.after.statement=''{1}'' 함수를 호출하지 않고 이 ''{0}'' 지침 이후 실행이 종료될 수 있으며, 이는 컨텍스트 누수를 초래합니다
go.inspection.problematic.execution.path.end=문제가 있는 실행 경로의 끝
postfix.template.provider.name=Go
postfix.template.condition.error.name=오류
postfix.template.condition.error.expr.result.name=오류 결과를 포함하는 표현식
postfix.template.condition.array.name=배열
postfix.template.condition.slice.name=슬라이스
postfix.template.condition.assignable.slice.name=할당 가능한 슬라이스
postfix.template.condition.map.name=맵
postfix.template.condition.channel.name=채널
postfix.template.condition.builtin.len.applicable.name=기본 제공 len 적용 가능
postfix.template.condition.builtin.cap.applicable.name=기본 제공 cap 적용 가능
postfix.template.condition.builtin.append.applicable.name=기본 제공 append 적용 가능
postfix.template.condition.non.void.name=void가 아님
postfix.template.condition.comparable.to.nil.name=nil과 비교 가능
postfix.template.condition.number.name=숫자
postfix.template.condition.boolean.name=부울
postfix.template.condition.string.name=문자열
postfix.template.condition.floats.slice.name=float64의 슬라이스
postfix.template.condition.ints.slice.name=int의 슬라이스
postfix.template.condition.strings.slice.name=문자열의 슬라이스
postfix.template.condition.interface.impls.slice.name=정렬 인터페이스 구현의 슬라이스
postfix.template.condition.expr.in.if.with.missing.block.name=블록이 누락된 if 조건 내 표현식
postfix.template.condition.slice.with.no.sort.name=전용 정렬 기능이 없는 슬라이스
filetype.go.time.description=Go 시간
filetype.go.tag.description=Go 태그
go.cannot.be.represented.by.type={0}은(는) 타입 {1}(으)로 나타낼 수 없습니다
go.value.cannot.be.represented.by.type={0}의 값은 타입 {1}(으)로 나타낼 수 없습니다
go.go.mod.retract.not.supported='retract'는 Go 1.16부터 지원됩니다
go.error.go.embed.not.supported=go:embed는 Go 1.16 이후 버전에서 지원됩니다
go.error.go.embed.invalid.syntax.of.paths=경로 패턴의 잘못된 구문
go.error.go.embed.must.be.above.var.declaration=go:embed는 단일 전역 변수의 선언 위에 배치해야 합니다
go.error.go.embed.var.has.wrong.type=go:embed 변수는 'string', '[]byte' 또는 'embed.FS' 타입이어야 합니다
go.error.go.embed.invalid.path.elements=경로는 '.' 또는 '..' 경로 요소를 포함하거나 선행 슬래시로 시작할 수 없습니다
go.error.go.embed.unresolved.path=해결되지 않은 경로
go.error.go.embed.empty.directory=빈 디렉터리를 포함할 수 없습니다
go.error.go.embed.single.path.expected=타입 'string' 및 '[]byte'의 변수는 단일 경로 패턴만 가질 수 있습니다
go.error.go.embed.path.must.resolve.to.file=타입 'string' 및 '[]byte'의 변수는 단일 파일만 포함할 수 있습니다
go.error.go.embed.no.path.arguments=go:embed 뒤에 경로 패턴이 필요합니다
go.error.go.embed.file.must.import.embed=go:embed를 포함한 Go 파일은 "embed" 패키지를 가져와야 합니다
go.error.go.embed.invalid.path.pattern=잘못된 파일 패턴
go.fix.import.embed.package="embed" 가져오기
go.fix.wrap.error.handling.in.closure=클로저 안에 오류 처리 래핑
go.fix.failed.to.handle.error=오류를 처리하지 못했습니다
go.fix.failed.to.introduce.variables.from.call=호출의 변수를 삽입하지 못했습니다
go.fix.failed.to.resolve.called.function.signature=호출의 시그니처를 해결하지 못했습니다
go.fix.call.receiver.is.not.an.expression=예기치 않은 호출 리시버. 표현식이 아님
go.inspection.fail.now.in.non.test.goroutine=비 테스트 고루틴 내 'FailNow'
go.inspection.fail.now.called.from.non.test.goroutine=이 메서드는 테스트나 벤치마크를 실행하는 고루틴에서 호출되어야 합니다
go.fix.replace.and.return=''{0}'' 및 ''return''으로 바꾸기
filetype.go.plus.build.description=Go +build 제약
filetype.go.build.description=Go:build 제약
go.error.go.build.after.package=go:build 지시문은 패키지 절 앞에 와야 합니다
go.error.go.build.non.first.element=go:build 지시문은 줄의 첫 번째 요소여야 합니다
go.error.go.build.without.plus.build=//+build 주석 없는 //go:build 주석
go.error.go.build.and.plus.build.lines.dont.match=//+build 줄이 //go:build 조건과 일치하지 않습니다
go.error.go.build.only.one.allowed=파일당 한 개의 //go:build 지시문만 허용됩니다
go.error.go.build.expression.is.too.complex=//+build 줄에 대한 표현식이 너무 복잡합니다
go.error.go.plus.build.can.be.removed=//+build 주석을 제거할 수 있습니다
go.error.go.plus.build.can.be.converted.to.go.build=//+build 주석을 //go:build 지시문으로 변환할 수 있습니다
go.error.invalid.double.negation=잘못된 이중 부정
go.error.invalid.non.alphanumeric.character=영숫자가 아닌 잘못된 문자
go.fix.place.go.build.before.package=패키지 앞에 go:build 배치
go.fix.add.plus.build.comments=//+build 주석 추가
go.fix.update.plus.build.comments=//+build 주석 업데이트
go.fix.remove.plus.build.comments=//+build 주석 제거
go.fix.convert.plus.build.comments.to.go.build.directive=//+build 주석을 //go:build 지시문으로 변환
go.fmt.formatting.service.error.title={0}에서 gofmt를 실행할 수 없습니다
vgo.intention.add.or.update.go.version.fix.text=''go.mod''의 Go 버전을 {0}(으)로 설정
vgo.intention.add.or.update.go.version.fix.family.name='go.mod'의 Go 버전을 추가 또는 업데이트
go.external.system.auto.import.is.disabled=레지스트리 키 'external.system.auto.import.disabled'가 설정되어 있습니다. IDE는 이 키와 올바르게 작동하지 않습니다. 이 설정을 비활성화하고 IDE를 다시 시작하세요.
go.inspection.problem.possibly.unused.dependency=Possibly unused dependency
go.refactoring.introduce.generating.code.template=Generating code template…
