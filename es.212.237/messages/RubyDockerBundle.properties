ruby.docker.compose.sdk.bundle.install.quick.fix.title=''docker-compose build'' 실행
ruby.docker.sdk.bundle.install.quickfix.title=''docker build .'' 실행
ruby.sdk.bundle.install.quick.display.name=Docker 이미지 다시 빌드
ruby.sdk.bundle.install.and.docker.build.quick.display.name=실행 중인 컨테이너에서 ''bundle install''를 실행하고 Docker 이미지 다시 빌드.
ruby.docker.compose.sdk.precheck.message=docker-compose 서비스 검사 중
ruby.docker.no.execution.result=실행 구성을 실행할 수 없음
ruby.docker.sdk.downloading=다운로드 중\: {0}
ruby.docker.run.configuration.settings.pane.title=Docker
ruby.docker.compose.up.project=docker-compose up
ruby.docker.compose.command.type.run.name=docker-compose run
ruby.docker.compose.command.type.up.name=docker-compose up
ruby.docker.compose.command.type.exec.name=docker-compose exec
configurable.name=Ruby Docker 통합
configurable.internal.command.mode.caption=다음을 통해 Docker 내부에서 Ruby 환경과 상호작용\:
configurable.internal.command.mode.description=Docker에서 분석 시 which ruby'', ''gem env'' 및 ''rbconfig'' 등의 실행 명령어가 필요합니다.
configurable.internal.command.mode.mixed=프로젝트가 상위에 있을 시에는 ''docker-compose exec'', 그 외에는 ''docker-compose run''
configurable.internal.command.mode.run=docker-compose run
configurable.internal.command.mode.sdk.container=SDK 컨테이너의 ''docker exec'', 필요한 경우 SDK 컨테이너 생성
configurable.internal.command.mode.exec=''docker-compose exec'', 필요한 경우 `docker-compose up`로 프로젝트 실행
configurable.gems.copy.mode.caption=다음을 통해 Ruby SDK 및 Gem을 로컬 캐시에 복사\:
configurable.gems.copy.docker.dp.mode.caption=Docker cp
configurable.gems.copy.docker.api.caption=Docker 플러그인 API
border.title.docker.compose=docker-compose
dialog.message.command.docker.compose.up.failed=명령어 docker-compose up 실행에 실패했습니다. 자세한 정보를 보려면 `docker logs`를 확인하세요
dialog.message.can.t.up.docker.compose=docker-compose up 실패
dialog.message.cancelled=취소됨
