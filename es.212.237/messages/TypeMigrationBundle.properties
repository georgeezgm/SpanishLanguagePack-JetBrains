change.class.parameter.incorrect.type.error.hint=Tipo incorrecto
change.class.type.parameter.family.name=Cambiar parámetros de tipo clase
checkbox.statically.import.matcher.methods=Importando la mayoría de los métodos estáticos.
convert.to.atomic.family.name=Convertir a atomic
convert.to.longadder.family.name=Convertir a LongAdder
convert.to.threadlocal.family.name=Convertir a ThreadLocal
guava.functional.primitives.can.be.replaced.by.java.api.problem.description=Puede cambiar la base de funciones de Guava a la API de Java.
inspection.guava.erase.option=Borrar @javax.annotations.Nullable en la función convertida
inspection.guava.method.chains.option=Informe de la cadena de métodos
inspection.guava.return.types.option=Tipo de devolución de informes
inspection.guava.variables.option=Variables de reporte
inspection.migrate.assert.to.matcher.description=La expresión de afirmación <code>\#ref</code> se puede reemplazar con una llamada a ''{0}'' \#loc
migrate.fix.text=Migrar tipo {0} a ''{1}''
migrate.guava.to.java.family.name=Migrando tipos de Guava a Java
migrate.method.chain.fix.text=Migrar el tipo de cadena de método a ''{0}''
inspection.guava.name=Los valores predeterminados de la función de Guava se pueden cambiar a Java.
inspection.assertion.name=Puede reemplazar la expresión de aserción con una llamada al método ''assertThat''.
